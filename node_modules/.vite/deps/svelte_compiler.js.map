{
  "version": 3,
  "sources": ["../../svelte/src/compiler/phases/patterns.js", "../../svelte/src/compiler/phases/1-parse/utils/fuzzymatch.js", "../../svelte/src/compiler/state.js", "../../svelte/src/compiler/utils/compile_diagnostic.js", "../../svelte/src/compiler/warnings.js", "../../svelte/src/compiler/utils/extract_svelte_ignore.js", "../../svelte/src/compiler/legacy.js", "../../svelte/src/compiler/phases/1-parse/acorn.js", "../../svelte/src/compiler/errors.js", "../../svelte/src/compiler/phases/1-parse/utils/bracket.js", "../../svelte/src/compiler/phases/1-parse/read/expression.js", "../../svelte/src/compiler/utils/sanitize_template_string.js", "../../svelte/src/compiler/utils/builders.js", "../../svelte/src/compiler/utils/ast.js", "../../svelte/src/compiler/phases/1-parse/read/script.js", "../../svelte/src/compiler/phases/1-parse/read/style.js", "../../svelte/src/compiler/phases/1-parse/utils/entities.js", "../../svelte/src/compiler/phases/1-parse/utils/html.js", "../../svelte/src/compiler/phases/1-parse/utils/create.js", "../../svelte/src/compiler/phases/nodes.js", "../../svelte/src/html-tree-validation.js", "../../svelte/src/compiler/utils/string.js", "../../svelte/src/compiler/phases/1-parse/state/element.js", "../../svelte/src/compiler/phases/1-parse/read/context.js", "../../svelte/src/compiler/phases/1-parse/state/tag.js", "../../svelte/src/compiler/phases/1-parse/state/text.js", "../../svelte/src/compiler/phases/1-parse/state/fragment.js", "../../svelte/src/compiler/phases/1-parse/read/options.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/special-element.js", "../../svelte/src/compiler/phases/1-parse/index.js", "../../svelte/src/compiler/phases/1-parse/remove_typescript_nodes.js", "../../svelte/src/compiler/utils/slot.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/utils.js", "../../svelte/src/compiler/phases/scope.js", "../../svelte/src/compiler/phases/2-analyze/utils/check_graph_for_cycles.js", "../../svelte/src/compiler/phases/css.js", "../../svelte/src/compiler/phases/2-analyze/css/utils.js", "../../svelte/src/compiler/phases/2-analyze/css/css-analyze.js", "../../svelte/src/compiler/phases/2-analyze/css/css-prune.js", "../../svelte/src/compiler/phases/2-analyze/css/css-warn.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/function.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ArrowFunctionExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/AssignmentExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/fragment.js", "../../svelte/src/compiler/phases/2-analyze/visitors/Attribute.js", "../../svelte/src/compiler/phases/2-analyze/visitors/AwaitBlock.js", "../../svelte/src/compiler/phases/bindings.js", "../../svelte/src/compiler/phases/2-analyze/visitors/BindDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/CallExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ClassBody.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ClassDeclaration.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ClassDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/attribute.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/snippets.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/component.js", "../../svelte/src/compiler/phases/2-analyze/visitors/Component.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ConstTag.js", "../../svelte/src/compiler/phases/2-analyze/visitors/DebugTag.js", "../../svelte/src/compiler/phases/2-analyze/visitors/EachBlock.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ExportDefaultDeclaration.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ExportNamedDeclaration.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ExportSpecifier.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ExpressionStatement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ExpressionTag.js", "../../svelte/src/compiler/phases/2-analyze/visitors/FunctionDeclaration.js", "../../svelte/src/compiler/phases/2-analyze/visitors/FunctionExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/HtmlTag.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/utils.js", "../../svelte/src/compiler/phases/3-transform/client/utils.js", "../../svelte/src/compiler/phases/2-analyze/visitors/Identifier.js", "../../svelte/src/compiler/phases/2-analyze/visitors/IfBlock.js", "../../svelte/src/compiler/phases/2-analyze/visitors/ImportDeclaration.js", "../../svelte/src/compiler/phases/2-analyze/visitors/KeyBlock.js", "../../svelte/src/compiler/phases/2-analyze/visitors/LabeledStatement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/LetDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/Literal.js", "../../svelte/src/compiler/phases/2-analyze/visitors/MemberExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/NewExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/OnDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/a11y.js", "../../svelte/src/compiler/phases/2-analyze/visitors/shared/element.js", "../../svelte/src/compiler/phases/2-analyze/visitors/RegularElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/RenderTag.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SlotElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SnippetBlock.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SpreadAttribute.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SpreadElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/StyleDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteBody.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteComponent.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteDocument.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteFragment.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteHead.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteSelf.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteWindow.js", "../../svelte/src/compiler/phases/2-analyze/visitors/SvelteBoundary.js", "../../svelte/src/compiler/phases/2-analyze/visitors/TaggedTemplateExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/TemplateElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/Text.js", "../../svelte/src/compiler/phases/2-analyze/visitors/TitleElement.js", "../../svelte/src/compiler/phases/2-analyze/visitors/TransitionDirective.js", "../../svelte/src/compiler/phases/2-analyze/visitors/UpdateExpression.js", "../../svelte/src/compiler/phases/2-analyze/visitors/UseDirective.js", "../../svelte/src/compiler/utils/assert.js", "../../svelte/src/compiler/phases/2-analyze/visitors/VariableDeclarator.js", "../../svelte/src/compiler/phases/2-analyze/index.js", "../../svelte/src/compiler/utils/mapped_code.js", "../../svelte/src/compiler/utils/push_array.js", "../../svelte/src/compiler/phases/3-transform/css/index.js", "../../svelte/src/compiler/phases/3-transform/shared/assignments.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/AssignmentExpression.js", "../../svelte/src/internal/server/hydration.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/shared/utils.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/AwaitBlock.js", "../../svelte/src/compiler/phases/3-transform/utils.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/CallExpression.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/ClassBody.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/shared/component.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/Component.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/ConstTag.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/DebugTag.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/EachBlock.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/ExpressionStatement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/Fragment.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/HtmlTag.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/Identifier.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/IfBlock.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/KeyBlock.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/LabeledStatement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/MemberExpression.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/PropertyDefinition.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/shared/element.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/RegularElement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/RenderTag.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SlotElement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SnippetBlock.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SpreadAttribute.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteComponent.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteElement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteFragment.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteHead.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteSelf.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/TitleElement.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/UpdateExpression.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/VariableDeclaration.js", "../../svelte/src/compiler/phases/3-transform/server/visitors/SvelteBoundary.js", "../../svelte/src/compiler/phases/3-transform/server/transform-server.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/AnimateDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/function.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ArrowFunctionExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/AssignmentExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/events.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Attribute.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/declarations.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/AwaitBlock.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/BinaryExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/fragment.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/RegularElement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/element.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/BindDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/BlockStatement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/BreakStatement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/CallExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ClassBody.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Comment.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/component.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Component.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ConstTag.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/DebugTag.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/EachBlock.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ExportNamedDeclaration.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ExpressionStatement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Fragment.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/FunctionDeclaration.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/FunctionExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/HtmlTag.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Identifier.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/IfBlock.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/ImportDeclaration.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/KeyBlock.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/LabeledStatement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/LetDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/MemberExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/OnDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/Program.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/RenderTag.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SlotElement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SnippetBlock.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SpreadAttribute.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/shared/special_element.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteBody.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteComponent.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteDocument.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteElement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteFragment.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteBoundary.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteHead.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteSelf.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/SvelteWindow.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/TitleElement.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/TransitionDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/UpdateExpression.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/UseDirective.js", "../../svelte/src/compiler/phases/3-transform/client/visitors/VariableDeclaration.js", "../../svelte/src/compiler/phases/3-transform/client/transform-client.js", "../../svelte/src/compiler/phases/3-transform/index.js", "../../svelte/src/compiler/validate-options.js", "../../svelte/src/compiler/preprocess/decode_sourcemap.js", "../../svelte/src/compiler/preprocess/replace_in_code.js", "../../svelte/src/compiler/preprocess/index.js", "../../svelte/src/compiler/migrate/index.js", "../../svelte/src/compiler/index.js"],
  "sourcesContent": ["export const regex_whitespace = /\\s/;\nexport const regex_whitespaces = /\\s+/;\nexport const regex_starts_with_newline = /^\\r?\\n/;\nexport const regex_starts_with_whitespace = /^\\s/;\nexport const regex_starts_with_whitespaces = /^[ \\t\\r\\n]+/;\nexport const regex_ends_with_whitespace = /\\s$/;\nexport const regex_ends_with_whitespaces = /[ \\t\\r\\n]+$/;\n/** Not \\S because that also removes explicit whitespace defined through things like `&nbsp;` */\nexport const regex_not_whitespace = /[^ \\t\\r\\n]/;\n/** Not \\s+ because that also includes explicit whitespace defined through things like `&nbsp;` */\nexport const regex_whitespaces_strict = /[ \\t\\n\\r\\f]+/g;\n\nexport const regex_only_whitespaces = /^[ \\t\\n\\r\\f]+$/;\n\nexport const regex_not_newline_characters = /[^\\n]/g;\n\nexport const regex_is_valid_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n// used in replace all to remove all invalid chars from a literal identifier\nexport const regex_invalid_identifier_chars = /(^[^a-zA-Z_$]|[^a-zA-Z0-9_$])/g;\n\nexport const regex_starts_with_vowel = /^[aeiou]/;\nexport const regex_heading_tags = /^h[1-6]$/;\nexport const regex_illegal_attribute_character = /(^[0-9-.])|[\\^$@%&#?!|()[\\]{}^*+~;]/;\nexport const regex_bidirectional_control_characters =\n\t/[\\u202a\\u202b\\u202c\\u202d\\u202e\\u2066\\u2067\\u2068\\u2069]+/g;\n", "/**\n * @param {string} name\n * @param {string[]} names\n * @returns {string | null}\n */\nexport default function fuzzymatch(name, names) {\n\tif (names.length === 0) return null;\n\n\tconst set = new FuzzySet(names);\n\tconst matches = set.get(name);\n\n\treturn matches && matches[0][0] > 0.7 ? matches[0][1] : null;\n}\n\n// adapted from https://github.com/Glench/fuzzyset.js/blob/master/lib/fuzzyset.js in 2016\n// BSD Licensed (see https://github.com/Glench/fuzzyset.js/issues/10)\n\nconst GRAM_SIZE_LOWER = 2;\nconst GRAM_SIZE_UPPER = 3;\n\n// return an edit distance from 0 to 1\n\n/**\n * @param {string} str1\n * @param {string} str2\n */\nfunction _distance(str1, str2) {\n\tif (str1 === null && str2 === null) {\n\t\tthrow 'Trying to compare two null values';\n\t}\n\tif (str1 === null || str2 === null) return 0;\n\tstr1 = String(str1);\n\tstr2 = String(str2);\n\n\tconst distance = levenshtein(str1, str2);\n\treturn 1 - distance / Math.max(str1.length, str2.length);\n}\n\n// helper functions\n\n/**\n * @param {string} str1\n * @param {string} str2\n */\nfunction levenshtein(str1, str2) {\n\t/** @type {number[]} */\n\tconst current = [];\n\tlet prev = 0;\n\tlet value = 0;\n\n\tfor (let i = 0; i <= str2.length; i++) {\n\t\tfor (let j = 0; j <= str1.length; j++) {\n\t\t\tif (i && j) {\n\t\t\t\tif (str1.charAt(j - 1) === str2.charAt(i - 1)) {\n\t\t\t\t\tvalue = prev;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Math.min(current[j], current[j - 1], prev) + 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue = i + j;\n\t\t\t}\n\n\t\t\tprev = current[j];\n\t\t\tcurrent[j] = value;\n\t\t}\n\t}\n\n\treturn /** @type {number} */ (current.pop());\n}\n\nconst non_word_regex = /[^\\w, ]+/;\n\n/**\n * @param {string} value\n * @param {any} gram_size\n */\nfunction iterate_grams(value, gram_size = 2) {\n\tconst simplified = '-' + value.toLowerCase().replace(non_word_regex, '') + '-';\n\tconst len_diff = gram_size - simplified.length;\n\tconst results = [];\n\n\tif (len_diff > 0) {\n\t\tfor (let i = 0; i < len_diff; ++i) {\n\t\t\tvalue += '-';\n\t\t}\n\t}\n\tfor (let i = 0; i < simplified.length - gram_size + 1; ++i) {\n\t\tresults.push(simplified.slice(i, i + gram_size));\n\t}\n\treturn results;\n}\n\n/**\n * @param {string} value\n * @param {any} gram_size\n */\nfunction gram_counter(value, gram_size = 2) {\n\t// return an object where key=gram, value=number of occurrences\n\n\t/** @type {Record<string, number>} */\n\tconst result = {};\n\tconst grams = iterate_grams(value, gram_size);\n\tlet i = 0;\n\n\tfor (i; i < grams.length; ++i) {\n\t\tif (grams[i] in result) {\n\t\t\tresult[grams[i]] += 1;\n\t\t} else {\n\t\t\tresult[grams[i]] = 1;\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @param {MatchTuple} a\n * @param {MatchTuple} b\n */\nfunction sort_descending(a, b) {\n\treturn b[0] - a[0];\n}\n\nclass FuzzySet {\n\t/** @type {Record<string, string>} */\n\texact_set = {};\n\n\t/** @type {Record<string, [number, number][]>} */\n\tmatch_dict = {};\n\n\t/** @type {Record<string, number[]>} */\n\titems = {};\n\n\t/** @param {string[]} arr */\n\tconstructor(arr) {\n\t\t// initialisation\n\t\tfor (let i = GRAM_SIZE_LOWER; i < GRAM_SIZE_UPPER + 1; ++i) {\n\t\t\tthis.items[i] = [];\n\t\t}\n\n\t\t// add all the items to the set\n\t\tfor (let i = 0; i < arr.length; ++i) {\n\t\t\tthis.add(arr[i]);\n\t\t}\n\t}\n\n\t/** @param {string} value */\n\tadd(value) {\n\t\tconst normalized_value = value.toLowerCase();\n\t\tif (normalized_value in this.exact_set) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet i = GRAM_SIZE_LOWER;\n\t\tfor (i; i < GRAM_SIZE_UPPER + 1; ++i) {\n\t\t\tthis._add(value, i);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} value\n\t * @param {number} gram_size\n\t */\n\t_add(value, gram_size) {\n\t\tconst normalized_value = value.toLowerCase();\n\t\tconst items = this.items[gram_size] || [];\n\t\tconst index = items.length;\n\n\t\titems.push(0);\n\t\tconst gram_counts = gram_counter(normalized_value, gram_size);\n\t\tlet sum_of_square_gram_counts = 0;\n\t\tlet gram;\n\t\tlet gram_count;\n\n\t\tfor (gram in gram_counts) {\n\t\t\tgram_count = gram_counts[gram];\n\t\t\tsum_of_square_gram_counts += Math.pow(gram_count, 2);\n\t\t\tif (gram in this.match_dict) {\n\t\t\t\tthis.match_dict[gram].push([index, gram_count]);\n\t\t\t} else {\n\t\t\t\tthis.match_dict[gram] = [[index, gram_count]];\n\t\t\t}\n\t\t}\n\t\tconst vector_normal = Math.sqrt(sum_of_square_gram_counts);\n\t\t// @ts-ignore no idea what this code is doing\n\t\titems[index] = [vector_normal, normalized_value];\n\t\tthis.items[gram_size] = items;\n\t\tthis.exact_set[normalized_value] = value;\n\t}\n\n\t/** @param {string} value */\n\tget(value) {\n\t\tconst normalized_value = value.toLowerCase();\n\t\tconst result = this.exact_set[normalized_value];\n\n\t\tif (result) {\n\t\t\treturn /** @type {MatchTuple[]} */ ([[1, result]]);\n\t\t}\n\n\t\t// start with high gram size and if there are no results, go to lower gram sizes\n\t\tfor (let gram_size = GRAM_SIZE_UPPER; gram_size >= GRAM_SIZE_LOWER; --gram_size) {\n\t\t\tconst results = this.__get(value, gram_size);\n\t\t\tif (results.length > 0) return results;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {string} value\n\t * @param {number} gram_size\n\t * @returns {MatchTuple[]}\n\t */\n\t__get(value, gram_size) {\n\t\tconst normalized_value = value.toLowerCase();\n\n\t\t/** @type {Record<string, number>} */\n\t\tconst matches = {};\n\t\tconst gram_counts = gram_counter(normalized_value, gram_size);\n\t\tconst items = this.items[gram_size];\n\t\tlet sum_of_square_gram_counts = 0;\n\t\tlet gram;\n\t\tlet gram_count;\n\t\tlet i;\n\t\tlet index;\n\t\tlet other_gram_count;\n\n\t\tfor (gram in gram_counts) {\n\t\t\tgram_count = gram_counts[gram];\n\t\t\tsum_of_square_gram_counts += Math.pow(gram_count, 2);\n\t\t\tif (gram in this.match_dict) {\n\t\t\t\tfor (i = 0; i < this.match_dict[gram].length; ++i) {\n\t\t\t\t\tindex = this.match_dict[gram][i][0];\n\t\t\t\t\tother_gram_count = this.match_dict[gram][i][1];\n\t\t\t\t\tif (index in matches) {\n\t\t\t\t\t\tmatches[index] += gram_count * other_gram_count;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatches[index] = gram_count * other_gram_count;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst vector_normal = Math.sqrt(sum_of_square_gram_counts);\n\n\t\t/** @type {MatchTuple[]} */\n\t\tlet results = [];\n\t\tlet match_score;\n\n\t\t// build a results list of [score, str]\n\t\tfor (const match_index in matches) {\n\t\t\tmatch_score = matches[match_index];\n\t\t\t// @ts-ignore no idea what this code is doing\n\t\t\tresults.push([match_score / (vector_normal * items[match_index][0]), items[match_index][1]]);\n\t\t}\n\n\t\tresults.sort(sort_descending);\n\n\t\t/** @type {MatchTuple[]} */\n\t\tlet new_results = [];\n\t\tconst end_index = Math.min(50, results.length);\n\t\t// truncate somewhat arbitrarily to 50\n\t\tfor (let i = 0; i < end_index; ++i) {\n\t\t\t// @ts-ignore no idea what this code is doing\n\t\t\tnew_results.push([_distance(results[i][1], normalized_value), results[i][1]]);\n\t\t}\n\t\tresults = new_results;\n\t\tresults.sort(sort_descending);\n\n\t\tnew_results = [];\n\t\tfor (let i = 0; i < results.length; ++i) {\n\t\t\tif (results[i][0] === results[0][0]) {\n\t\t\t\t// @ts-ignore no idea what this code is doing\n\t\t\t\tnew_results.push([results[i][0], this.exact_set[results[i][1]]]);\n\t\t\t}\n\t\t}\n\n\t\treturn new_results;\n\t}\n}\n\n/** @typedef {[score: number, match: string]} MatchTuple */\n", "/** @import { Location } from 'locate-character' */\n/** @import { CompileOptions } from './types' */\n/** @import { AST, Warning } from '#compiler' */\nimport { getLocator } from 'locate-character';\nimport { sanitize_location } from '../utils.js';\n\n/** @typedef {{ start?: number, end?: number }} NodeLike */\n\n/** @type {Warning[]} */\nexport let warnings = [];\n\n/**\n * The filename relative to the rootDir (if specified).\n * This should not be used in the compiler output except in dev mode\n * @type {string}\n */\nexport let filename;\n\n/**\n * The original source code\n * @type {string}\n */\nexport let source;\n\n/**\n * True if compiling with `dev: true`\n * @type {boolean}\n */\nexport let dev;\n\nexport let locator = getLocator('', { offsetLine: 1 });\n\n/**\n * @param {AST.SvelteNode & { start?: number | undefined }} node\n */\nexport function locate_node(node) {\n\tconst loc = /** @type {Location} */ (locator(/** @type {number} */ (node.start)));\n\treturn `${sanitize_location(filename)}:${loc?.line}:${loc.column}`;\n}\n\n/** @type {NonNullable<CompileOptions['warningFilter']>} */\nexport let warning_filter;\n\n/**\n * The current stack of ignored warnings\n * @type {Set<string>[]}\n */\nexport let ignore_stack = [];\n\n/**\n * For each node the list of warnings that should be ignored for that node.\n * Exists in addition to `ignore_stack` because not all warnings are emitted\n * while the stack is being built.\n * @type {Map<AST.SvelteNode | NodeLike, Set<string>[]>}\n */\nexport let ignore_map = new Map();\n\n/**\n * @param {string[]} ignores\n */\nexport function push_ignore(ignores) {\n\tconst next = new Set([...(ignore_stack.at(-1) || []), ...ignores]);\n\tignore_stack.push(next);\n}\n\nexport function pop_ignore() {\n\tignore_stack.pop();\n}\n\n/**\n *\n * @param {(warning: Warning) => boolean} fn\n */\nexport function reset_warning_filter(fn = () => true) {\n\twarning_filter = fn;\n}\n\n/**\n * @param {AST.SvelteNode | NodeLike} node\n * @param {import('../constants.js').IGNORABLE_RUNTIME_WARNINGS[number]} code\n * @returns\n */\nexport function is_ignored(node, code) {\n\treturn dev && !!ignore_map.get(node)?.some((codes) => codes.has(code));\n}\n\n/**\n * @param {string} _source\n * @param {{ dev?: boolean; filename: string; rootDir?: string }} options\n */\nexport function reset(_source, options) {\n\tsource = _source;\n\tconst root_dir = options.rootDir?.replace(/\\\\/g, '/');\n\tfilename = options.filename.replace(/\\\\/g, '/');\n\n\tdev = !!options.dev;\n\n\tif (typeof root_dir === 'string' && filename.startsWith(root_dir)) {\n\t\t// make filename relative to rootDir\n\t\tfilename = filename.replace(root_dir, '').replace(/^[/\\\\]/, '');\n\t}\n\n\tlocator = getLocator(source, { offsetLine: 1 });\n\twarnings = [];\n\tignore_stack = [];\n\tignore_map.clear();\n}\n", "/** @import { Location } from 'locate-character' */\nimport * as state from '../state.js';\n\nconst regex_tabs = /^\\t+/;\n\n/**\n * @param {string} str\n */\nfunction tabs_to_spaces(str) {\n\treturn str.replace(regex_tabs, (match) => match.split('\\t').join('  '));\n}\n\n/**\n * @param {string} source\n * @param {number} line\n * @param {number} column\n */\nfunction get_code_frame(source, line, column) {\n\tconst lines = source.split('\\n');\n\tconst frame_start = Math.max(0, line - 2);\n\tconst frame_end = Math.min(line + 3, lines.length);\n\tconst digits = String(frame_end + 1).length;\n\treturn lines\n\t\t.slice(frame_start, frame_end)\n\t\t.map((str, i) => {\n\t\t\tconst is_error_line = frame_start + i === line;\n\t\t\tconst line_num = String(i + frame_start + 1).padStart(digits, ' ');\n\t\t\tif (is_error_line) {\n\t\t\t\tconst indicator =\n\t\t\t\t\t' '.repeat(digits + 2 + tabs_to_spaces(str.slice(0, column)).length) + '^';\n\t\t\t\treturn `${line_num}: ${tabs_to_spaces(str)}\\n${indicator}`;\n\t\t\t}\n\t\t\treturn `${line_num}: ${tabs_to_spaces(str)}`;\n\t\t})\n\t\t.join('\\n');\n}\n\n/**\n * @typedef {{\n * \tcode: string;\n * \tmessage: string;\n *  stack?: string;\n * \tfilename?: string;\n * \tstart?: Location;\n * \tend?: Location;\n * \tposition?: [number, number];\n * \tframe?: string;\n * }} ICompileDiagnostic\n */\n\n/** @implements {ICompileDiagnostic} */\nexport class CompileDiagnostic {\n\tname = 'CompileDiagnostic';\n\n\t/**\n\t * @param {string} code\n\t * @param {string} message\n\t * @param {[number, number] | undefined} position\n\t */\n\tconstructor(code, message, position) {\n\t\tthis.code = code;\n\t\tthis.message = message;\n\n\t\tif (state.filename) {\n\t\t\tthis.filename = state.filename;\n\t\t}\n\n\t\tif (position) {\n\t\t\tthis.position = position;\n\t\t\tthis.start = state.locator(position[0]);\n\t\t\tthis.end = state.locator(position[1]);\n\t\t\tif (this.start && this.end) {\n\t\t\t\tthis.frame = get_code_frame(state.source, this.start.line - 1, this.end.column);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString() {\n\t\tlet out = `${this.code}: ${this.message}`;\n\n\t\tif (this.filename) {\n\t\t\tout += `\\n${this.filename}`;\n\n\t\t\tif (this.start) {\n\t\t\t\tout += `:${this.start.line}:${this.start.column}`;\n\t\t\t}\n\t\t}\n\n\t\tif (this.frame) {\n\t\t\tout += `\\n${this.frame}`;\n\t\t}\n\n\t\treturn out;\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tcode: this.code,\n\t\t\tmessage: this.message,\n\t\t\tfilename: this.filename,\n\t\t\tstart: this.start,\n\t\t\tend: this.end,\n\t\t\tposition: this.position,\n\t\t\tframe: this.frame\n\t\t};\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport {\n\twarnings,\n\tignore_stack,\n\tignore_map,\n\twarning_filter\n} from './state.js';\n\nimport { CompileDiagnostic } from './utils/compile_diagnostic.js';\n\n/** @typedef {{ start?: number, end?: number }} NodeLike */\nclass InternalCompileWarning extends CompileDiagnostic {\n\tname = 'CompileWarning';\n\n\t/**\n\t * @param {string} code\n\t * @param {string} message\n\t * @param {[number, number] | undefined} position\n\t */\n\tconstructor(code, message, position) {\n\t\tsuper(code, message, position);\n\t}\n}\n\n/**\n * @param {null | NodeLike} node\n * @param {string} code\n * @param {string} message\n */\nfunction w(node, code, message) {\n\tlet stack = ignore_stack;\n\n\tif (node) {\n\t\tstack = ignore_map.get(node) ?? ignore_stack;\n\t}\n\n\tif (stack && stack.at(-1)?.has(code)) return;\n\n\tconst warning = new InternalCompileWarning(code, message, node && node.start !== undefined ? [node.start, node.end ?? node.start] : undefined);\n\n\tif (!warning_filter(warning)) return;\n\twarnings.push(warning);\n}\n\nexport const codes = [\n\t'a11y_accesskey',\n\t'a11y_aria_activedescendant_has_tabindex',\n\t'a11y_aria_attributes',\n\t'a11y_autocomplete_valid',\n\t'a11y_autofocus',\n\t'a11y_click_events_have_key_events',\n\t'a11y_consider_explicit_label',\n\t'a11y_distracting_elements',\n\t'a11y_figcaption_index',\n\t'a11y_figcaption_parent',\n\t'a11y_hidden',\n\t'a11y_img_redundant_alt',\n\t'a11y_incorrect_aria_attribute_type',\n\t'a11y_incorrect_aria_attribute_type_boolean',\n\t'a11y_incorrect_aria_attribute_type_id',\n\t'a11y_incorrect_aria_attribute_type_idlist',\n\t'a11y_incorrect_aria_attribute_type_integer',\n\t'a11y_incorrect_aria_attribute_type_token',\n\t'a11y_incorrect_aria_attribute_type_tokenlist',\n\t'a11y_incorrect_aria_attribute_type_tristate',\n\t'a11y_interactive_supports_focus',\n\t'a11y_invalid_attribute',\n\t'a11y_label_has_associated_control',\n\t'a11y_media_has_caption',\n\t'a11y_misplaced_role',\n\t'a11y_misplaced_scope',\n\t'a11y_missing_attribute',\n\t'a11y_missing_content',\n\t'a11y_mouse_events_have_key_events',\n\t'a11y_no_abstract_role',\n\t'a11y_no_interactive_element_to_noninteractive_role',\n\t'a11y_no_noninteractive_element_interactions',\n\t'a11y_no_noninteractive_element_to_interactive_role',\n\t'a11y_no_noninteractive_tabindex',\n\t'a11y_no_redundant_roles',\n\t'a11y_no_static_element_interactions',\n\t'a11y_positive_tabindex',\n\t'a11y_role_has_required_aria_props',\n\t'a11y_role_supports_aria_props',\n\t'a11y_role_supports_aria_props_implicit',\n\t'a11y_unknown_aria_attribute',\n\t'a11y_unknown_role',\n\t'bidirectional_control_characters',\n\t'legacy_code',\n\t'unknown_code',\n\t'options_deprecated_accessors',\n\t'options_deprecated_immutable',\n\t'options_missing_custom_element',\n\t'options_removed_enable_sourcemap',\n\t'options_removed_hydratable',\n\t'options_removed_loop_guard_timeout',\n\t'options_renamed_ssr_dom',\n\t'export_let_unused',\n\t'legacy_component_creation',\n\t'non_reactive_update',\n\t'perf_avoid_inline_class',\n\t'perf_avoid_nested_class',\n\t'reactive_declaration_invalid_placement',\n\t'reactive_declaration_module_script_dependency',\n\t'state_referenced_locally',\n\t'store_rune_conflict',\n\t'css_unused_selector',\n\t'attribute_avoid_is',\n\t'attribute_global_event_reference',\n\t'attribute_illegal_colon',\n\t'attribute_invalid_property_name',\n\t'attribute_quoted',\n\t'bind_invalid_each_rest',\n\t'block_empty',\n\t'component_name_lowercase',\n\t'element_invalid_self_closing_tag',\n\t'event_directive_deprecated',\n\t'node_invalid_placement_ssr',\n\t'script_context_deprecated',\n\t'script_unknown_attribute',\n\t'slot_element_deprecated',\n\t'svelte_component_deprecated',\n\t'svelte_element_invalid_this',\n\t'svelte_self_deprecated'\n];\n\n/**\n * Avoid using accesskey\n * @param {null | NodeLike} node\n */\nexport function a11y_accesskey(node) {\n\tw(node, 'a11y_accesskey', `Avoid using accesskey\\nhttps://svelte.dev/e/a11y_accesskey`);\n}\n\n/**\n * An element with an aria-activedescendant attribute should have a tabindex value\n * @param {null | NodeLike} node\n */\nexport function a11y_aria_activedescendant_has_tabindex(node) {\n\tw(node, 'a11y_aria_activedescendant_has_tabindex', `An element with an aria-activedescendant attribute should have a tabindex value\\nhttps://svelte.dev/e/a11y_aria_activedescendant_has_tabindex`);\n}\n\n/**\n * `<%name%>` should not have aria-* attributes\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function a11y_aria_attributes(node, name) {\n\tw(node, 'a11y_aria_attributes', `\\`<${name}>\\` should not have aria-* attributes\\nhttps://svelte.dev/e/a11y_aria_attributes`);\n}\n\n/**\n * '%value%' is an invalid value for 'autocomplete' on `<input type=\"%type%\">`\n * @param {null | NodeLike} node\n * @param {string} value\n * @param {string} type\n */\nexport function a11y_autocomplete_valid(node, value, type) {\n\tw(node, 'a11y_autocomplete_valid', `'${value}' is an invalid value for 'autocomplete' on \\`<input type=\"${type}\">\\`\\nhttps://svelte.dev/e/a11y_autocomplete_valid`);\n}\n\n/**\n * Avoid using autofocus\n * @param {null | NodeLike} node\n */\nexport function a11y_autofocus(node) {\n\tw(node, 'a11y_autofocus', `Avoid using autofocus\\nhttps://svelte.dev/e/a11y_autofocus`);\n}\n\n/**\n * Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type=\"button\">` or `<a>` might be more appropriate\n * @param {null | NodeLike} node\n */\nexport function a11y_click_events_have_key_events(node) {\n\tw(node, 'a11y_click_events_have_key_events', `Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as \\`<button type=\"button\">\\` or \\`<a>\\` might be more appropriate\\nhttps://svelte.dev/e/a11y_click_events_have_key_events`);\n}\n\n/**\n * Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute\n * @param {null | NodeLike} node\n */\nexport function a11y_consider_explicit_label(node) {\n\tw(node, 'a11y_consider_explicit_label', `Buttons and links should either contain text or have an \\`aria-label\\` or \\`aria-labelledby\\` attribute\\nhttps://svelte.dev/e/a11y_consider_explicit_label`);\n}\n\n/**\n * Avoid `<%name%>` elements\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function a11y_distracting_elements(node, name) {\n\tw(node, 'a11y_distracting_elements', `Avoid \\`<${name}>\\` elements\\nhttps://svelte.dev/e/a11y_distracting_elements`);\n}\n\n/**\n * `<figcaption>` must be first or last child of `<figure>`\n * @param {null | NodeLike} node\n */\nexport function a11y_figcaption_index(node) {\n\tw(node, 'a11y_figcaption_index', `\\`<figcaption>\\` must be first or last child of \\`<figure>\\`\\nhttps://svelte.dev/e/a11y_figcaption_index`);\n}\n\n/**\n * `<figcaption>` must be an immediate child of `<figure>`\n * @param {null | NodeLike} node\n */\nexport function a11y_figcaption_parent(node) {\n\tw(node, 'a11y_figcaption_parent', `\\`<figcaption>\\` must be an immediate child of \\`<figure>\\`\\nhttps://svelte.dev/e/a11y_figcaption_parent`);\n}\n\n/**\n * `<%name%>` element should not be hidden\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function a11y_hidden(node, name) {\n\tw(node, 'a11y_hidden', `\\`<${name}>\\` element should not be hidden\\nhttps://svelte.dev/e/a11y_hidden`);\n}\n\n/**\n * Screenreaders already announce `<img>` elements as an image\n * @param {null | NodeLike} node\n */\nexport function a11y_img_redundant_alt(node) {\n\tw(node, 'a11y_img_redundant_alt', `Screenreaders already announce \\`<img>\\` elements as an image\\nhttps://svelte.dev/e/a11y_img_redundant_alt`);\n}\n\n/**\n * The value of '%attribute%' must be a %type%\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string} type\n */\nexport function a11y_incorrect_aria_attribute_type(node, attribute, type) {\n\tw(node, 'a11y_incorrect_aria_attribute_type', `The value of '${attribute}' must be a ${type}\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type`);\n}\n\n/**\n * The value of '%attribute%' must be either 'true' or 'false'. It cannot be empty\n * @param {null | NodeLike} node\n * @param {string} attribute\n */\nexport function a11y_incorrect_aria_attribute_type_boolean(node, attribute) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_boolean', `The value of '${attribute}' must be either 'true' or 'false'. It cannot be empty\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_boolean`);\n}\n\n/**\n * The value of '%attribute%' must be a string that represents a DOM element ID\n * @param {null | NodeLike} node\n * @param {string} attribute\n */\nexport function a11y_incorrect_aria_attribute_type_id(node, attribute) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_id', `The value of '${attribute}' must be a string that represents a DOM element ID\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_id`);\n}\n\n/**\n * The value of '%attribute%' must be a space-separated list of strings that represent DOM element IDs\n * @param {null | NodeLike} node\n * @param {string} attribute\n */\nexport function a11y_incorrect_aria_attribute_type_idlist(node, attribute) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_idlist', `The value of '${attribute}' must be a space-separated list of strings that represent DOM element IDs\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_idlist`);\n}\n\n/**\n * The value of '%attribute%' must be an integer\n * @param {null | NodeLike} node\n * @param {string} attribute\n */\nexport function a11y_incorrect_aria_attribute_type_integer(node, attribute) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_integer', `The value of '${attribute}' must be an integer\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_integer`);\n}\n\n/**\n * The value of '%attribute%' must be exactly one of %values%\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string} values\n */\nexport function a11y_incorrect_aria_attribute_type_token(node, attribute, values) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_token', `The value of '${attribute}' must be exactly one of ${values}\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_token`);\n}\n\n/**\n * The value of '%attribute%' must be a space-separated list of one or more of %values%\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string} values\n */\nexport function a11y_incorrect_aria_attribute_type_tokenlist(node, attribute, values) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_tokenlist', `The value of '${attribute}' must be a space-separated list of one or more of ${values}\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_tokenlist`);\n}\n\n/**\n * The value of '%attribute%' must be exactly one of true, false, or mixed\n * @param {null | NodeLike} node\n * @param {string} attribute\n */\nexport function a11y_incorrect_aria_attribute_type_tristate(node, attribute) {\n\tw(node, 'a11y_incorrect_aria_attribute_type_tristate', `The value of '${attribute}' must be exactly one of true, false, or mixed\\nhttps://svelte.dev/e/a11y_incorrect_aria_attribute_type_tristate`);\n}\n\n/**\n * Elements with the '%role%' interactive role must have a tabindex value\n * @param {null | NodeLike} node\n * @param {string} role\n */\nexport function a11y_interactive_supports_focus(node, role) {\n\tw(node, 'a11y_interactive_supports_focus', `Elements with the '${role}' interactive role must have a tabindex value\\nhttps://svelte.dev/e/a11y_interactive_supports_focus`);\n}\n\n/**\n * '%href_value%' is not a valid %href_attribute% attribute\n * @param {null | NodeLike} node\n * @param {string} href_value\n * @param {string} href_attribute\n */\nexport function a11y_invalid_attribute(node, href_value, href_attribute) {\n\tw(node, 'a11y_invalid_attribute', `'${href_value}' is not a valid ${href_attribute} attribute\\nhttps://svelte.dev/e/a11y_invalid_attribute`);\n}\n\n/**\n * A form label must be associated with a control\n * @param {null | NodeLike} node\n */\nexport function a11y_label_has_associated_control(node) {\n\tw(node, 'a11y_label_has_associated_control', `A form label must be associated with a control\\nhttps://svelte.dev/e/a11y_label_has_associated_control`);\n}\n\n/**\n * `<video>` elements must have a `<track kind=\"captions\">`\n * @param {null | NodeLike} node\n */\nexport function a11y_media_has_caption(node) {\n\tw(node, 'a11y_media_has_caption', `\\`<video>\\` elements must have a \\`<track kind=\"captions\">\\`\\nhttps://svelte.dev/e/a11y_media_has_caption`);\n}\n\n/**\n * `<%name%>` should not have role attribute\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function a11y_misplaced_role(node, name) {\n\tw(node, 'a11y_misplaced_role', `\\`<${name}>\\` should not have role attribute\\nhttps://svelte.dev/e/a11y_misplaced_role`);\n}\n\n/**\n * The scope attribute should only be used with `<th>` elements\n * @param {null | NodeLike} node\n */\nexport function a11y_misplaced_scope(node) {\n\tw(node, 'a11y_misplaced_scope', `The scope attribute should only be used with \\`<th>\\` elements\\nhttps://svelte.dev/e/a11y_misplaced_scope`);\n}\n\n/**\n * `<%name%>` element should have %article% %sequence% attribute\n * @param {null | NodeLike} node\n * @param {string} name\n * @param {string} article\n * @param {string} sequence\n */\nexport function a11y_missing_attribute(node, name, article, sequence) {\n\tw(node, 'a11y_missing_attribute', `\\`<${name}>\\` element should have ${article} ${sequence} attribute\\nhttps://svelte.dev/e/a11y_missing_attribute`);\n}\n\n/**\n * `<%name%>` element should contain text\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function a11y_missing_content(node, name) {\n\tw(node, 'a11y_missing_content', `\\`<${name}>\\` element should contain text\\nhttps://svelte.dev/e/a11y_missing_content`);\n}\n\n/**\n * '%event%' event must be accompanied by '%accompanied_by%' event\n * @param {null | NodeLike} node\n * @param {string} event\n * @param {string} accompanied_by\n */\nexport function a11y_mouse_events_have_key_events(node, event, accompanied_by) {\n\tw(node, 'a11y_mouse_events_have_key_events', `'${event}' event must be accompanied by '${accompanied_by}' event\\nhttps://svelte.dev/e/a11y_mouse_events_have_key_events`);\n}\n\n/**\n * Abstract role '%role%' is forbidden\n * @param {null | NodeLike} node\n * @param {string} role\n */\nexport function a11y_no_abstract_role(node, role) {\n\tw(node, 'a11y_no_abstract_role', `Abstract role '${role}' is forbidden\\nhttps://svelte.dev/e/a11y_no_abstract_role`);\n}\n\n/**\n * `<%element%>` cannot have role '%role%'\n * @param {null | NodeLike} node\n * @param {string} element\n * @param {string} role\n */\nexport function a11y_no_interactive_element_to_noninteractive_role(node, element, role) {\n\tw(node, 'a11y_no_interactive_element_to_noninteractive_role', `\\`<${element}>\\` cannot have role '${role}'\\nhttps://svelte.dev/e/a11y_no_interactive_element_to_noninteractive_role`);\n}\n\n/**\n * Non-interactive element `<%element%>` should not be assigned mouse or keyboard event listeners\n * @param {null | NodeLike} node\n * @param {string} element\n */\nexport function a11y_no_noninteractive_element_interactions(node, element) {\n\tw(node, 'a11y_no_noninteractive_element_interactions', `Non-interactive element \\`<${element}>\\` should not be assigned mouse or keyboard event listeners\\nhttps://svelte.dev/e/a11y_no_noninteractive_element_interactions`);\n}\n\n/**\n * Non-interactive element `<%element%>` cannot have interactive role '%role%'\n * @param {null | NodeLike} node\n * @param {string} element\n * @param {string} role\n */\nexport function a11y_no_noninteractive_element_to_interactive_role(node, element, role) {\n\tw(node, 'a11y_no_noninteractive_element_to_interactive_role', `Non-interactive element \\`<${element}>\\` cannot have interactive role '${role}'\\nhttps://svelte.dev/e/a11y_no_noninteractive_element_to_interactive_role`);\n}\n\n/**\n * noninteractive element cannot have nonnegative tabIndex value\n * @param {null | NodeLike} node\n */\nexport function a11y_no_noninteractive_tabindex(node) {\n\tw(node, 'a11y_no_noninteractive_tabindex', `noninteractive element cannot have nonnegative tabIndex value\\nhttps://svelte.dev/e/a11y_no_noninteractive_tabindex`);\n}\n\n/**\n * Redundant role '%role%'\n * @param {null | NodeLike} node\n * @param {string} role\n */\nexport function a11y_no_redundant_roles(node, role) {\n\tw(node, 'a11y_no_redundant_roles', `Redundant role '${role}'\\nhttps://svelte.dev/e/a11y_no_redundant_roles`);\n}\n\n/**\n * `<%element%>` with a %handler% handler must have an ARIA role\n * @param {null | NodeLike} node\n * @param {string} element\n * @param {string} handler\n */\nexport function a11y_no_static_element_interactions(node, element, handler) {\n\tw(node, 'a11y_no_static_element_interactions', `\\`<${element}>\\` with a ${handler} handler must have an ARIA role\\nhttps://svelte.dev/e/a11y_no_static_element_interactions`);\n}\n\n/**\n * Avoid tabindex values above zero\n * @param {null | NodeLike} node\n */\nexport function a11y_positive_tabindex(node) {\n\tw(node, 'a11y_positive_tabindex', `Avoid tabindex values above zero\\nhttps://svelte.dev/e/a11y_positive_tabindex`);\n}\n\n/**\n * Elements with the ARIA role \"%role%\" must have the following attributes defined: %props%\n * @param {null | NodeLike} node\n * @param {string} role\n * @param {string} props\n */\nexport function a11y_role_has_required_aria_props(node, role, props) {\n\tw(node, 'a11y_role_has_required_aria_props', `Elements with the ARIA role \"${role}\" must have the following attributes defined: ${props}\\nhttps://svelte.dev/e/a11y_role_has_required_aria_props`);\n}\n\n/**\n * The attribute '%attribute%' is not supported by the role '%role%'\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string} role\n */\nexport function a11y_role_supports_aria_props(node, attribute, role) {\n\tw(node, 'a11y_role_supports_aria_props', `The attribute '${attribute}' is not supported by the role '${role}'\\nhttps://svelte.dev/e/a11y_role_supports_aria_props`);\n}\n\n/**\n * The attribute '%attribute%' is not supported by the role '%role%'. This role is implicit on the element `<%name%>`\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string} role\n * @param {string} name\n */\nexport function a11y_role_supports_aria_props_implicit(node, attribute, role, name) {\n\tw(node, 'a11y_role_supports_aria_props_implicit', `The attribute '${attribute}' is not supported by the role '${role}'. This role is implicit on the element \\`<${name}>\\`\\nhttps://svelte.dev/e/a11y_role_supports_aria_props_implicit`);\n}\n\n/**\n * Unknown aria attribute 'aria-%attribute%'. Did you mean '%suggestion%'?\n * @param {null | NodeLike} node\n * @param {string} attribute\n * @param {string | undefined | null} [suggestion]\n */\nexport function a11y_unknown_aria_attribute(node, attribute, suggestion) {\n\tw(node, 'a11y_unknown_aria_attribute', `${suggestion ? `Unknown aria attribute 'aria-${attribute}'. Did you mean '${suggestion}'?` : `Unknown aria attribute 'aria-${attribute}'`}\\nhttps://svelte.dev/e/a11y_unknown_aria_attribute`);\n}\n\n/**\n * Unknown role '%role%'. Did you mean '%suggestion%'?\n * @param {null | NodeLike} node\n * @param {string} role\n * @param {string | undefined | null} [suggestion]\n */\nexport function a11y_unknown_role(node, role, suggestion) {\n\tw(node, 'a11y_unknown_role', `${suggestion ? `Unknown role '${role}'. Did you mean '${suggestion}'?` : `Unknown role '${role}'`}\\nhttps://svelte.dev/e/a11y_unknown_role`);\n}\n\n/**\n * A bidirectional control character was detected in your code. These characters can be used to alter the visual direction of your code and could have unintended consequences\n * @param {null | NodeLike} node\n */\nexport function bidirectional_control_characters(node) {\n\tw(node, 'bidirectional_control_characters', `A bidirectional control character was detected in your code. These characters can be used to alter the visual direction of your code and could have unintended consequences\\nhttps://svelte.dev/e/bidirectional_control_characters`);\n}\n\n/**\n * `%code%` is no longer valid — please use `%suggestion%` instead\n * @param {null | NodeLike} node\n * @param {string} code\n * @param {string} suggestion\n */\nexport function legacy_code(node, code, suggestion) {\n\tw(node, 'legacy_code', `\\`${code}\\` is no longer valid — please use \\`${suggestion}\\` instead\\nhttps://svelte.dev/e/legacy_code`);\n}\n\n/**\n * `%code%` is not a recognised code (did you mean `%suggestion%`?)\n * @param {null | NodeLike} node\n * @param {string} code\n * @param {string | undefined | null} [suggestion]\n */\nexport function unknown_code(node, code, suggestion) {\n\tw(node, 'unknown_code', `${suggestion ? `\\`${code}\\` is not a recognised code (did you mean \\`${suggestion}\\`?)` : `\\`${code}\\` is not a recognised code`}\\nhttps://svelte.dev/e/unknown_code`);\n}\n\n/**\n * The `accessors` option has been deprecated. It will have no effect in runes mode\n * @param {null | NodeLike} node\n */\nexport function options_deprecated_accessors(node) {\n\tw(node, 'options_deprecated_accessors', `The \\`accessors\\` option has been deprecated. It will have no effect in runes mode\\nhttps://svelte.dev/e/options_deprecated_accessors`);\n}\n\n/**\n * The `immutable` option has been deprecated. It will have no effect in runes mode\n * @param {null | NodeLike} node\n */\nexport function options_deprecated_immutable(node) {\n\tw(node, 'options_deprecated_immutable', `The \\`immutable\\` option has been deprecated. It will have no effect in runes mode\\nhttps://svelte.dev/e/options_deprecated_immutable`);\n}\n\n/**\n * The `customElement` option is used when generating a custom element. Did you forget the `customElement: true` compile option?\n * @param {null | NodeLike} node\n */\nexport function options_missing_custom_element(node) {\n\tw(node, 'options_missing_custom_element', `The \\`customElement\\` option is used when generating a custom element. Did you forget the \\`customElement: true\\` compile option?\\nhttps://svelte.dev/e/options_missing_custom_element`);\n}\n\n/**\n * The `enableSourcemap` option has been removed. Source maps are always generated now, and tooling can choose to ignore them\n * @param {null | NodeLike} node\n */\nexport function options_removed_enable_sourcemap(node) {\n\tw(node, 'options_removed_enable_sourcemap', `The \\`enableSourcemap\\` option has been removed. Source maps are always generated now, and tooling can choose to ignore them\\nhttps://svelte.dev/e/options_removed_enable_sourcemap`);\n}\n\n/**\n * The `hydratable` option has been removed. Svelte components are always hydratable now\n * @param {null | NodeLike} node\n */\nexport function options_removed_hydratable(node) {\n\tw(node, 'options_removed_hydratable', `The \\`hydratable\\` option has been removed. Svelte components are always hydratable now\\nhttps://svelte.dev/e/options_removed_hydratable`);\n}\n\n/**\n * The `loopGuardTimeout` option has been removed\n * @param {null | NodeLike} node\n */\nexport function options_removed_loop_guard_timeout(node) {\n\tw(node, 'options_removed_loop_guard_timeout', `The \\`loopGuardTimeout\\` option has been removed\\nhttps://svelte.dev/e/options_removed_loop_guard_timeout`);\n}\n\n/**\n * `generate: \"dom\"` and `generate: \"ssr\"` options have been renamed to \"client\" and \"server\" respectively\n * @param {null | NodeLike} node\n */\nexport function options_renamed_ssr_dom(node) {\n\tw(node, 'options_renamed_ssr_dom', `\\`generate: \"dom\"\\` and \\`generate: \"ssr\"\\` options have been renamed to \"client\" and \"server\" respectively\\nhttps://svelte.dev/e/options_renamed_ssr_dom`);\n}\n\n/**\n * Component has unused export property '%name%'. If it is for external reference only, please consider using `export const %name%`\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function export_let_unused(node, name) {\n\tw(node, 'export_let_unused', `Component has unused export property '${name}'. If it is for external reference only, please consider using \\`export const ${name}\\`\\nhttps://svelte.dev/e/export_let_unused`);\n}\n\n/**\n * Svelte 5 components are no longer classes. Instantiate them using `mount` or `hydrate` (imported from 'svelte') instead.\n * @param {null | NodeLike} node\n */\nexport function legacy_component_creation(node) {\n\tw(node, 'legacy_component_creation', `Svelte 5 components are no longer classes. Instantiate them using \\`mount\\` or \\`hydrate\\` (imported from 'svelte') instead.\\nhttps://svelte.dev/e/legacy_component_creation`);\n}\n\n/**\n * `%name%` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function non_reactive_update(node, name) {\n\tw(node, 'non_reactive_update', `\\`${name}\\` is updated, but is not declared with \\`$state(...)\\`. Changing its value will not correctly trigger updates\\nhttps://svelte.dev/e/non_reactive_update`);\n}\n\n/**\n * Avoid 'new class' — instead, declare the class at the top level scope\n * @param {null | NodeLike} node\n */\nexport function perf_avoid_inline_class(node) {\n\tw(node, 'perf_avoid_inline_class', `Avoid 'new class' — instead, declare the class at the top level scope\\nhttps://svelte.dev/e/perf_avoid_inline_class`);\n}\n\n/**\n * Avoid declaring classes below the top level scope\n * @param {null | NodeLike} node\n */\nexport function perf_avoid_nested_class(node) {\n\tw(node, 'perf_avoid_nested_class', `Avoid declaring classes below the top level scope\\nhttps://svelte.dev/e/perf_avoid_nested_class`);\n}\n\n/**\n * Reactive declarations only exist at the top level of the instance script\n * @param {null | NodeLike} node\n */\nexport function reactive_declaration_invalid_placement(node) {\n\tw(node, 'reactive_declaration_invalid_placement', `Reactive declarations only exist at the top level of the instance script\\nhttps://svelte.dev/e/reactive_declaration_invalid_placement`);\n}\n\n/**\n * Reassignments of module-level declarations will not cause reactive statements to update\n * @param {null | NodeLike} node\n */\nexport function reactive_declaration_module_script_dependency(node) {\n\tw(node, 'reactive_declaration_module_script_dependency', `Reassignments of module-level declarations will not cause reactive statements to update\\nhttps://svelte.dev/e/reactive_declaration_module_script_dependency`);\n}\n\n/**\n * This reference only captures the initial value of `%name%`. Did you mean to reference it inside a %type% instead?\n * @param {null | NodeLike} node\n * @param {string} name\n * @param {string} type\n */\nexport function state_referenced_locally(node, name, type) {\n\tw(node, 'state_referenced_locally', `This reference only captures the initial value of \\`${name}\\`. Did you mean to reference it inside a ${type} instead?\\nhttps://svelte.dev/e/state_referenced_locally`);\n}\n\n/**\n * It looks like you're using the `$%name%` rune, but there is a local binding called `%name%`. Referencing a local variable with a `$` prefix will create a store subscription. Please rename `%name%` to avoid the ambiguity\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function store_rune_conflict(node, name) {\n\tw(node, 'store_rune_conflict', `It looks like you're using the \\`$${name}\\` rune, but there is a local binding called \\`${name}\\`. Referencing a local variable with a \\`$\\` prefix will create a store subscription. Please rename \\`${name}\\` to avoid the ambiguity\\nhttps://svelte.dev/e/store_rune_conflict`);\n}\n\n/**\n * Unused CSS selector \"%name%\"\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function css_unused_selector(node, name) {\n\tw(node, 'css_unused_selector', `Unused CSS selector \"${name}\"\\nhttps://svelte.dev/e/css_unused_selector`);\n}\n\n/**\n * The \"is\" attribute is not supported cross-browser and should be avoided\n * @param {null | NodeLike} node\n */\nexport function attribute_avoid_is(node) {\n\tw(node, 'attribute_avoid_is', `The \"is\" attribute is not supported cross-browser and should be avoided\\nhttps://svelte.dev/e/attribute_avoid_is`);\n}\n\n/**\n * You are referencing `globalThis.%name%`. Did you forget to declare a variable with that name?\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function attribute_global_event_reference(node, name) {\n\tw(node, 'attribute_global_event_reference', `You are referencing \\`globalThis.${name}\\`. Did you forget to declare a variable with that name?\\nhttps://svelte.dev/e/attribute_global_event_reference`);\n}\n\n/**\n * Attributes should not contain ':' characters to prevent ambiguity with Svelte directives\n * @param {null | NodeLike} node\n */\nexport function attribute_illegal_colon(node) {\n\tw(node, 'attribute_illegal_colon', `Attributes should not contain ':' characters to prevent ambiguity with Svelte directives\\nhttps://svelte.dev/e/attribute_illegal_colon`);\n}\n\n/**\n * '%wrong%' is not a valid HTML attribute. Did you mean '%right%'?\n * @param {null | NodeLike} node\n * @param {string} wrong\n * @param {string} right\n */\nexport function attribute_invalid_property_name(node, wrong, right) {\n\tw(node, 'attribute_invalid_property_name', `'${wrong}' is not a valid HTML attribute. Did you mean '${right}'?\\nhttps://svelte.dev/e/attribute_invalid_property_name`);\n}\n\n/**\n * Quoted attributes on components and custom elements will be stringified in a future version of Svelte. If this isn't what you want, remove the quotes\n * @param {null | NodeLike} node\n */\nexport function attribute_quoted(node) {\n\tw(node, 'attribute_quoted', `Quoted attributes on components and custom elements will be stringified in a future version of Svelte. If this isn't what you want, remove the quotes\\nhttps://svelte.dev/e/attribute_quoted`);\n}\n\n/**\n * The rest operator (...) will create a new object and binding '%name%' with the original object will not work\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function bind_invalid_each_rest(node, name) {\n\tw(node, 'bind_invalid_each_rest', `The rest operator (...) will create a new object and binding '${name}' with the original object will not work\\nhttps://svelte.dev/e/bind_invalid_each_rest`);\n}\n\n/**\n * Empty block\n * @param {null | NodeLike} node\n */\nexport function block_empty(node) {\n\tw(node, 'block_empty', `Empty block\\nhttps://svelte.dev/e/block_empty`);\n}\n\n/**\n * `<%name%>` will be treated as an HTML element unless it begins with a capital letter\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function component_name_lowercase(node, name) {\n\tw(node, 'component_name_lowercase', `\\`<${name}>\\` will be treated as an HTML element unless it begins with a capital letter\\nhttps://svelte.dev/e/component_name_lowercase`);\n}\n\n/**\n * Self-closing HTML tags for non-void elements are ambiguous — use `<%name% ...></%name%>` rather than `<%name% ... />`\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function element_invalid_self_closing_tag(node, name) {\n\tw(node, 'element_invalid_self_closing_tag', `Self-closing HTML tags for non-void elements are ambiguous — use \\`<${name} ...></${name}>\\` rather than \\`<${name} ... />\\`\\nhttps://svelte.dev/e/element_invalid_self_closing_tag`);\n}\n\n/**\n * Using `on:%name%` to listen to the %name% event is deprecated. Use the event attribute `on%name%` instead\n * @param {null | NodeLike} node\n * @param {string} name\n */\nexport function event_directive_deprecated(node, name) {\n\tw(node, 'event_directive_deprecated', `Using \\`on:${name}\\` to listen to the ${name} event is deprecated. Use the event attribute \\`on${name}\\` instead\\nhttps://svelte.dev/e/event_directive_deprecated`);\n}\n\n/**\n * %message%. When rendering this component on the server, the resulting HTML will be modified by the browser (by moving, removing, or inserting elements), likely resulting in a `hydration_mismatch` warning\n * @param {null | NodeLike} node\n * @param {string} message\n */\nexport function node_invalid_placement_ssr(node, message) {\n\tw(node, 'node_invalid_placement_ssr', `${message}. When rendering this component on the server, the resulting HTML will be modified by the browser (by moving, removing, or inserting elements), likely resulting in a \\`hydration_mismatch\\` warning\\nhttps://svelte.dev/e/node_invalid_placement_ssr`);\n}\n\n/**\n * `context=\"module\"` is deprecated, use the `module` attribute instead\n * @param {null | NodeLike} node\n */\nexport function script_context_deprecated(node) {\n\tw(node, 'script_context_deprecated', `\\`context=\"module\"\\` is deprecated, use the \\`module\\` attribute instead\\nhttps://svelte.dev/e/script_context_deprecated`);\n}\n\n/**\n * Unrecognized attribute — should be one of `generics`, `lang` or `module`. If this exists for a preprocessor, ensure that the preprocessor removes it\n * @param {null | NodeLike} node\n */\nexport function script_unknown_attribute(node) {\n\tw(node, 'script_unknown_attribute', `Unrecognized attribute — should be one of \\`generics\\`, \\`lang\\` or \\`module\\`. If this exists for a preprocessor, ensure that the preprocessor removes it\\nhttps://svelte.dev/e/script_unknown_attribute`);\n}\n\n/**\n * Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead\n * @param {null | NodeLike} node\n */\nexport function slot_element_deprecated(node) {\n\tw(node, 'slot_element_deprecated', `Using \\`<slot>\\` to render parent content is deprecated. Use \\`{@render ...}\\` tags instead\\nhttps://svelte.dev/e/slot_element_deprecated`);\n}\n\n/**\n * `<svelte:component>` is deprecated in runes mode — components are dynamic by default\n * @param {null | NodeLike} node\n */\nexport function svelte_component_deprecated(node) {\n\tw(node, 'svelte_component_deprecated', `\\`<svelte:component>\\` is deprecated in runes mode — components are dynamic by default\\nhttps://svelte.dev/e/svelte_component_deprecated`);\n}\n\n/**\n * `this` should be an `{expression}`. Using a string attribute value will cause an error in future versions of Svelte\n * @param {null | NodeLike} node\n */\nexport function svelte_element_invalid_this(node) {\n\tw(node, 'svelte_element_invalid_this', `\\`this\\` should be an \\`{expression}\\`. Using a string attribute value will cause an error in future versions of Svelte\\nhttps://svelte.dev/e/svelte_element_invalid_this`);\n}\n\n/**\n * `<svelte:self>` is deprecated — use self-imports (e.g. `import %name% from './%basename%'`) instead\n * @param {null | NodeLike} node\n * @param {string} name\n * @param {string} basename\n */\nexport function svelte_self_deprecated(node, name, basename) {\n\tw(node, 'svelte_self_deprecated', `\\`<svelte:self>\\` is deprecated — use self-imports (e.g. \\`import ${name} from './${basename}'\\`) instead\\nhttps://svelte.dev/e/svelte_self_deprecated`);\n}", "import { IGNORABLE_RUNTIME_WARNINGS } from '../../constants.js';\nimport fuzzymatch from '../phases/1-parse/utils/fuzzymatch.js';\nimport * as w from '../warnings.js';\n\nconst regex_svelte_ignore = /^\\s*svelte-ignore\\s/;\n\n/** @type {Record<string, string>} Map of legacy code -> new code */\nconst replacements = {\n\t'non-top-level-reactive-declaration': 'reactive_declaration_invalid_placement',\n\t'module-script-reactive-declaration': 'reactive_declaration_module_script',\n\t'empty-block': 'block_empty',\n\t'avoid-is': 'attribute_avoid_is',\n\t'invalid-html-attribute': 'attribute_invalid_property_name',\n\t'a11y-structure': 'a11y_figcaption_parent',\n\t'illegal-attribute-character': 'attribute_illegal_colon',\n\t'invalid-rest-eachblock-binding': 'bind_invalid_each_rest',\n\t'unused-export-let': 'export_let_unused'\n};\n\nconst codes = w.codes.concat(IGNORABLE_RUNTIME_WARNINGS);\n\n/**\n * @param {number} offset\n * @param {string} text\n * @param {boolean} runes\n * @returns {string[]}\n */\nexport function extract_svelte_ignore(offset, text, runes) {\n\tconst match = regex_svelte_ignore.exec(text);\n\tif (!match) return [];\n\n\tlet length = match[0].length;\n\toffset += length;\n\n\t/** @type {string[]} */\n\tconst ignores = [];\n\n\tif (runes) {\n\t\t// Warnings have to be separated by commas, everything after is interpreted as prose\n\t\tfor (const match of text.slice(length).matchAll(/([\\w$-]+)(,)?/gm)) {\n\t\t\tconst code = match[1];\n\n\t\t\tif (codes.includes(code)) {\n\t\t\t\tignores.push(code);\n\t\t\t} else {\n\t\t\t\tconst replacement = replacements[code] ?? code.replace(/-/g, '_');\n\n\t\t\t\t// The type cast is for some reason necessary to pass the type check in CI\n\t\t\t\tconst start = offset + /** @type {number} */ (match.index);\n\t\t\t\tconst end = start + code.length;\n\n\t\t\t\tif (codes.includes(replacement)) {\n\t\t\t\t\tw.legacy_code({ start, end }, code, replacement);\n\t\t\t\t} else {\n\t\t\t\t\tconst suggestion = fuzzymatch(code, codes);\n\t\t\t\t\tw.unknown_code({ start, end }, code, suggestion);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!match[2]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Non-runes mode: lax parsing, backwards compat with old codes\n\t\tfor (const match of text.slice(length).matchAll(/[\\w$-]+/gm)) {\n\t\t\tconst code = match[0];\n\n\t\t\tignores.push(code);\n\n\t\t\tif (!codes.includes(code)) {\n\t\t\t\tconst replacement = replacements[code] ?? code.replace(/-/g, '_');\n\n\t\t\t\tif (codes.includes(replacement)) {\n\t\t\t\t\tignores.push(replacement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ignores;\n}\n\n/**\n * Replaces legacy svelte-ignore codes with new codes.\n * @param {string} text\n * @returns {string}\n */\nexport function migrate_svelte_ignore(text) {\n\tconst match = regex_svelte_ignore.exec(text);\n\tif (!match) return text;\n\n\tconst length = match[0].length;\n\treturn (\n\t\ttext.substring(0, length) +\n\t\ttext.substring(length).replace(/\\w+-\\w+(-\\w+)*/g, (code, _, idx) => {\n\t\t\tlet replacement = replacements[code] ?? code.replace(/-/g, '_');\n\t\t\tif (/\\w+-\\w+/.test(text.substring(length + idx + code.length))) {\n\t\t\t\treplacement += ',';\n\t\t\t}\n\t\t\treturn replacement;\n\t\t})\n\t);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import * as Legacy from './types/legacy-nodes.js' */\nimport { walk } from 'zimmerframe';\nimport {\n\tregex_ends_with_whitespaces,\n\tregex_not_whitespace,\n\tregex_starts_with_whitespaces\n} from './phases/patterns.js';\nimport { extract_svelte_ignore } from './utils/extract_svelte_ignore.js';\n\n/**\n * Some of the legacy Svelte AST nodes remove whitespace from the start and end of their children.\n * @param {AST.TemplateNode[]} nodes\n */\nfunction remove_surrounding_whitespace_nodes(nodes) {\n\tconst first = nodes.at(0);\n\tconst last = nodes.at(-1);\n\n\tif (first?.type === 'Text') {\n\t\tif (!regex_not_whitespace.test(first.data)) {\n\t\t\tnodes.shift();\n\t\t} else {\n\t\t\tfirst.data = first.data.replace(regex_starts_with_whitespaces, '');\n\t\t}\n\t}\n\tif (last?.type === 'Text') {\n\t\tif (!regex_not_whitespace.test(last.data)) {\n\t\t\tnodes.pop();\n\t\t} else {\n\t\t\tlast.data = last.data.replace(regex_ends_with_whitespaces, '');\n\t\t}\n\t}\n}\n\n/**\n * Transform our nice modern AST into the monstrosity emitted by Svelte 4\n * @param {string} source\n * @param {AST.Root} ast\n * @returns {Legacy.LegacyRoot}\n */\nexport function convert(source, ast) {\n\tconst root = /** @type {AST.SvelteNode | Legacy.LegacySvelteNode} */ (ast);\n\n\treturn /** @type {Legacy.LegacyRoot} */ (\n\t\twalk(root, null, {\n\t\t\t_(node, { next }) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tdelete node.metadata;\n\t\t\t\tnext();\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tRoot(node, { visit }) {\n\t\t\t\tconst { instance, module, options } = node;\n\n\t\t\t\t// Insert svelte:options back into the root nodes\n\t\t\t\tif (/** @type {any} */ (options)?.__raw__) {\n\t\t\t\t\tlet idx = node.fragment.nodes.findIndex((node) => options.end <= node.start);\n\t\t\t\t\tif (idx === -1) {\n\t\t\t\t\t\tidx = node.fragment.nodes.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.fragment.nodes.splice(idx, 0, /** @type {any} */ (options).__raw__);\n\t\t\t\t}\n\n\t\t\t\t/** @type {number | null} */\n\t\t\t\tlet start = null;\n\n\t\t\t\t/** @type {number | null} */\n\t\t\t\tlet end = null;\n\n\t\t\t\tif (node.fragment.nodes.length > 0) {\n\t\t\t\t\tconst first = /** @type {AST.BaseNode} */ (node.fragment.nodes.at(0));\n\t\t\t\t\tconst last = /** @type {AST.BaseNode} */ (node.fragment.nodes.at(-1));\n\n\t\t\t\t\tstart = first.start;\n\t\t\t\t\tend = last.end;\n\n\t\t\t\t\twhile (/\\s/.test(source[start])) start += 1;\n\t\t\t\t\twhile (/\\s/.test(source[end - 1])) end -= 1;\n\t\t\t\t}\n\n\t\t\t\tif (instance) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdelete instance.attributes;\n\t\t\t\t}\n\n\t\t\t\tif (module) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdelete module.attributes;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\thtml: {\n\t\t\t\t\t\ttype: 'Fragment',\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend,\n\t\t\t\t\t\tchildren: node.fragment.nodes.map((child) => visit(child))\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tmodule,\n\t\t\t\t\tcss: ast.css ? visit(ast.css) : undefined\n\t\t\t\t};\n\t\t\t},\n\t\t\tAnimateDirective(node) {\n\t\t\t\treturn { ...node, type: 'Animation' };\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tAwaitBlock(node, { visit }) {\n\t\t\t\tlet pendingblock = {\n\t\t\t\t\ttype: 'PendingBlock',\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tstart: null,\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tend: null,\n\t\t\t\t\tchildren: node.pending?.nodes.map((child) => visit(child)) ?? [],\n\t\t\t\t\tskip: true\n\t\t\t\t};\n\n\t\t\t\tlet thenblock = {\n\t\t\t\t\ttype: 'ThenBlock',\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tstart: null,\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tend: null,\n\t\t\t\t\tchildren: node.then?.nodes.map((child) => visit(child)) ?? [],\n\t\t\t\t\tskip: true\n\t\t\t\t};\n\n\t\t\t\tlet catchblock = {\n\t\t\t\t\ttype: 'CatchBlock',\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tstart: null,\n\t\t\t\t\t/** @type {number | null} */\n\t\t\t\t\tend: null,\n\t\t\t\t\tchildren: node.catch?.nodes.map((child) => visit(child)) ?? [],\n\t\t\t\t\tskip: true\n\t\t\t\t};\n\n\t\t\t\tif (node.pending) {\n\t\t\t\t\tconst first = node.pending.nodes.at(0);\n\t\t\t\t\tconst last = node.pending.nodes.at(-1);\n\n\t\t\t\t\tpendingblock.start = first?.start ?? source.indexOf('}', node.expression.end) + 1;\n\t\t\t\t\tpendingblock.end = last?.end ?? pendingblock.start;\n\t\t\t\t\tpendingblock.skip = false;\n\t\t\t\t}\n\n\t\t\t\tif (node.then) {\n\t\t\t\t\tconst first = node.then.nodes.at(0);\n\t\t\t\t\tconst last = node.then.nodes.at(-1);\n\n\t\t\t\t\tthenblock.start =\n\t\t\t\t\t\tpendingblock.end ?? first?.start ?? source.indexOf('}', node.expression.end) + 1;\n\t\t\t\t\tthenblock.end =\n\t\t\t\t\t\tlast?.end ?? source.lastIndexOf('}', pendingblock.end ?? node.expression.end) + 1;\n\t\t\t\t\tthenblock.skip = false;\n\t\t\t\t}\n\n\t\t\t\tif (node.catch) {\n\t\t\t\t\tconst first = node.catch.nodes.at(0);\n\t\t\t\t\tconst last = node.catch.nodes.at(-1);\n\n\t\t\t\t\tcatchblock.start =\n\t\t\t\t\t\tthenblock.end ??\n\t\t\t\t\t\tpendingblock.end ??\n\t\t\t\t\t\tfirst?.start ??\n\t\t\t\t\t\tsource.indexOf('}', node.expression.end) + 1;\n\t\t\t\t\tcatchblock.end =\n\t\t\t\t\t\tlast?.end ??\n\t\t\t\t\t\tsource.lastIndexOf('}', thenblock.end ?? pendingblock.end ?? node.expression.end) + 1;\n\t\t\t\t\tcatchblock.skip = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'AwaitBlock',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.expression,\n\t\t\t\t\tvalue: node.value,\n\t\t\t\t\terror: node.error,\n\t\t\t\t\tpending: pendingblock,\n\t\t\t\t\tthen: thenblock,\n\t\t\t\t\tcatch: catchblock\n\t\t\t\t};\n\t\t\t},\n\t\t\tBindDirective(node) {\n\t\t\t\treturn { ...node, type: 'Binding' };\n\t\t\t},\n\t\t\tClassDirective(node) {\n\t\t\t\treturn { ...node, type: 'Class' };\n\t\t\t},\n\t\t\tComment(node) {\n\t\t\t\treturn {\n\t\t\t\t\t...node,\n\t\t\t\t\tignores: extract_svelte_ignore(node.start, node.data, false)\n\t\t\t\t};\n\t\t\t},\n\t\t\tComplexSelector(node, { next }) {\n\t\t\t\tnext(); // delete inner metadata/parent properties\n\n\t\t\t\tconst children = [];\n\n\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\tif (child.combinator) {\n\t\t\t\t\t\tchildren.push(child.combinator);\n\t\t\t\t\t}\n\n\t\t\t\t\tchildren.push(...child.selectors);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Selector',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tchildren\n\t\t\t\t};\n\t\t\t},\n\t\t\tComponent(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'InlineComponent',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tConstTag(node) {\n\t\t\t\tif (/** @type {Legacy.LegacyConstTag} */ (node).expression !== undefined) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\n\t\t\t\tconst modern_node = /** @type {AST.ConstTag} */ (node);\n\t\t\t\tconst { id: left } = { ...modern_node.declaration.declarations[0] };\n\t\t\t\t// @ts-ignore\n\t\t\t\tdelete left.typeAnnotation;\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'ConstTag',\n\t\t\t\t\tstart: modern_node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: {\n\t\t\t\t\t\ttype: 'AssignmentExpression',\n\t\t\t\t\t\tstart: (modern_node.declaration.start ?? 0) + 'const '.length,\n\t\t\t\t\t\tend: modern_node.declaration.end ?? 0,\n\t\t\t\t\t\toperator: '=',\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\tright: modern_node.declaration.declarations[0].init\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tKeyBlock(node, { visit }) {\n\t\t\t\tremove_surrounding_whitespace_nodes(node.fragment.nodes);\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'KeyBlock',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.expression,\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tEachBlock(node, { visit }) {\n\t\t\t\tlet elseblock = undefined;\n\n\t\t\t\tif (node.fallback) {\n\t\t\t\t\tconst first = node.fallback.nodes.at(0);\n\t\t\t\t\tconst end = source.lastIndexOf('{', /** @type {number} */ (node.end) - 1);\n\t\t\t\t\tconst start = first?.start ?? end;\n\n\t\t\t\t\tremove_surrounding_whitespace_nodes(node.fallback.nodes);\n\n\t\t\t\t\telseblock = {\n\t\t\t\t\t\ttype: 'ElseBlock',\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend,\n\t\t\t\t\t\tchildren: node.fallback.nodes.map((child) => visit(child))\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tremove_surrounding_whitespace_nodes(node.body.nodes);\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'EachBlock',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tchildren: node.body.nodes.map((child) => visit(child)),\n\t\t\t\t\tcontext: node.context,\n\t\t\t\t\texpression: node.expression,\n\t\t\t\t\tindex: node.index,\n\t\t\t\t\tkey: node.key,\n\t\t\t\t\telse: elseblock\n\t\t\t\t};\n\t\t\t},\n\t\t\tExpressionTag(node, { path }) {\n\t\t\t\tconst parent = path.at(-1);\n\t\t\t\tif (parent?.type === 'Attribute') {\n\t\t\t\t\tif (source[parent.start] === '{') {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'AttributeShorthand',\n\t\t\t\t\t\t\tstart: node.start,\n\t\t\t\t\t\t\tend: node.end,\n\t\t\t\t\t\t\texpression: node.expression\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'MustacheTag',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.expression\n\t\t\t\t};\n\t\t\t},\n\t\t\tHtmlTag(node) {\n\t\t\t\treturn { ...node, type: 'RawMustacheTag' };\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\tIfBlock(node, { visit }) {\n\t\t\t\tlet elseblock = undefined;\n\t\t\t\tif (node.alternate) {\n\t\t\t\t\tlet nodes = node.alternate.nodes;\n\t\t\t\t\tif (nodes.length === 1 && nodes[0].type === 'IfBlock' && nodes[0].elseif) {\n\t\t\t\t\t\tnodes = nodes[0].consequent.nodes;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = source.lastIndexOf('{', /** @type {number} */ (node.end) - 1);\n\t\t\t\t\tconst start = nodes.at(0)?.start ?? end;\n\n\t\t\t\t\tremove_surrounding_whitespace_nodes(node.alternate.nodes);\n\n\t\t\t\t\telseblock = {\n\t\t\t\t\t\ttype: 'ElseBlock',\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend: end,\n\t\t\t\t\t\tchildren: node.alternate.nodes.map(\n\t\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t\t)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst start = node.elseif\n\t\t\t\t\t? node.consequent.nodes[0]?.start ??\n\t\t\t\t\t\tsource.lastIndexOf('{', /** @type {number} */ (node.end) - 1)\n\t\t\t\t\t: node.start;\n\n\t\t\t\tremove_surrounding_whitespace_nodes(node.consequent.nodes);\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'IfBlock',\n\t\t\t\t\tstart,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.test,\n\t\t\t\t\tchildren: node.consequent.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\telse: elseblock,\n\t\t\t\t\telseif: node.elseif ? true : undefined\n\t\t\t\t};\n\t\t\t},\n\t\t\tOnDirective(node) {\n\t\t\t\treturn { ...node, type: 'EventHandler' };\n\t\t\t},\n\t\t\t// @ts-expect-error\n\t\t\tSnippetBlock(node, { visit }) {\n\t\t\t\tremove_surrounding_whitespace_nodes(node.body.nodes);\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'SnippetBlock',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.expression,\n\t\t\t\t\tparameters: node.parameters,\n\t\t\t\t\tchildren: node.body.nodes.map((child) => visit(child))\n\t\t\t\t};\n\t\t\t},\n\t\t\t// @ts-expect-error\n\t\t\tSvelteBoundary(node, { visit }) {\n\t\t\t\tremove_surrounding_whitespace_nodes(node.fragment.nodes);\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'SvelteBoundary',\n\t\t\t\t\tname: 'svelte:boundary',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map((child) => visit(child))\n\t\t\t\t};\n\t\t\t},\n\t\t\tRegularElement(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Element',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tattributes: node.attributes.map((child) => visit(child)),\n\t\t\t\t\tchildren: node.fragment.nodes.map((child) => visit(child))\n\t\t\t\t};\n\t\t\t},\n\t\t\tSlotElement(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Slot',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tAttribute(node, { visit, next, path }) {\n\t\t\t\tif (node.value !== true && !Array.isArray(node.value)) {\n\t\t\t\t\tpath.push(node);\n\t\t\t\t\tconst value = /** @type {Legacy.LegacyAttribute['value']} */ ([visit(node.value)]);\n\t\t\t\t\tpath.pop();\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t},\n\t\t\tStyleDirective(node, { visit, next, path }) {\n\t\t\t\tif (node.value !== true && !Array.isArray(node.value)) {\n\t\t\t\t\tpath.push(node);\n\t\t\t\t\tconst value = /** @type {Legacy.LegacyStyleDirective['value']} */ ([visit(node.value)]);\n\t\t\t\t\tpath.pop();\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t},\n\t\t\tSpreadAttribute(node) {\n\t\t\t\treturn { ...node, type: 'Spread' };\n\t\t\t},\n\t\t\tStyleSheet(node, context) {\n\t\t\t\treturn {\n\t\t\t\t\t...node,\n\t\t\t\t\t...context.next(),\n\t\t\t\t\ttype: 'Style'\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteBody(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Body',\n\t\t\t\t\tname: 'svelte:body',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteComponent(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'InlineComponent',\n\t\t\t\t\tname: 'svelte:component',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\texpression: node.expression,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteDocument(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Document',\n\t\t\t\t\tname: 'svelte:document',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteElement(node, { visit }) {\n\t\t\t\t/** @type {Expression | string} */\n\t\t\t\tlet tag = node.tag;\n\t\t\t\tif (\n\t\t\t\t\ttag.type === 'Literal' &&\n\t\t\t\t\ttypeof tag.value === 'string' &&\n\t\t\t\t\tsource[/** @type {number} */ (node.tag.start) - 1] !== '{'\n\t\t\t\t) {\n\t\t\t\t\ttag = tag.value;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Element',\n\t\t\t\t\tname: 'svelte:element',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\ttag,\n\t\t\t\t\tattributes: node.attributes.map((child) => visit(child)),\n\t\t\t\t\tchildren: node.fragment.nodes.map((child) => visit(child))\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteFragment(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'SlotTemplate',\n\t\t\t\t\tname: 'svelte:fragment',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(a) => /** @type {Legacy.LegacyAttributeLike} */ (visit(a))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteHead(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Head',\n\t\t\t\t\tname: 'svelte:head',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteOptions(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Options',\n\t\t\t\t\tname: 'svelte:options',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteSelf(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'InlineComponent',\n\t\t\t\t\tname: 'svelte:self',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tSvelteWindow(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Window',\n\t\t\t\t\tname: 'svelte:window',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tText(node, { path }) {\n\t\t\t\tconst parent = path.at(-1);\n\t\t\t\tif (parent?.type === 'RegularElement' && parent.name === 'style') {\n\t\t\t\t\t// these text nodes are missing `raw` for some dumb reason\n\t\t\t\t\treturn /** @type {AST.Text} */ ({\n\t\t\t\t\t\ttype: 'Text',\n\t\t\t\t\t\tstart: node.start,\n\t\t\t\t\t\tend: node.end,\n\t\t\t\t\t\tdata: node.data\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tTitleElement(node, { visit }) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Title',\n\t\t\t\t\tname: 'title',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end,\n\t\t\t\t\tattributes: node.attributes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyAttributeLike} */ (visit(child))\n\t\t\t\t\t),\n\t\t\t\t\tchildren: node.fragment.nodes.map(\n\t\t\t\t\t\t(child) => /** @type {Legacy.LegacyElementLike} */ (visit(child))\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\tTransitionDirective(node) {\n\t\t\t\treturn { ...node, type: 'Transition' };\n\t\t\t},\n\t\t\tUseDirective(node) {\n\t\t\t\treturn { ...node, type: 'Action' };\n\t\t\t},\n\t\t\tLetDirective(node) {\n\t\t\t\treturn { ...node, type: 'Let' };\n\t\t\t}\n\t\t})\n\t);\n}\n", "/** @import { Comment, Program } from 'estree' */\nimport * as acorn from 'acorn';\nimport { walk } from 'zimmerframe';\nimport { tsPlugin } from '@sveltejs/acorn-typescript';\n\nconst ParserWithTS = acorn.Parser.extend(tsPlugin());\n\n/**\n * @param {string} source\n * @param {boolean} typescript\n * @param {boolean} [is_script]\n */\nexport function parse(source, typescript, is_script) {\n\tconst parser = typescript ? ParserWithTS : acorn.Parser;\n\tconst { onComment, add_comments } = get_comment_handlers(source);\n\t// @ts-ignore\n\tconst parse_statement = parser.prototype.parseStatement;\n\n\t// If we're dealing with a <script> then it might contain an export\n\t// for something that doesn't exist directly inside but is inside the\n\t// component instead, so we need to ensure that Acorn doesn't throw\n\t// an error in these cases\n\tif (is_script) {\n\t\t// @ts-ignore\n\t\tparser.prototype.parseStatement = function (...args) {\n\t\t\tconst v = parse_statement.call(this, ...args);\n\t\t\t// @ts-ignore\n\t\t\tthis.undefinedExports = {};\n\t\t\treturn v;\n\t\t};\n\t}\n\n\tlet ast;\n\n\ttry {\n\t\tast = parser.parse(source, {\n\t\t\tonComment,\n\t\t\tsourceType: 'module',\n\t\t\tecmaVersion: 13,\n\t\t\tlocations: true\n\t\t});\n\t} finally {\n\t\tif (is_script) {\n\t\t\t// @ts-ignore\n\t\t\tparser.prototype.parseStatement = parse_statement;\n\t\t}\n\t}\n\n\tadd_comments(ast);\n\n\treturn /** @type {Program} */ (ast);\n}\n\n/**\n * @param {string} source\n * @param {boolean} typescript\n * @param {number} index\n * @returns {acorn.Expression & { leadingComments?: CommentWithLocation[]; trailingComments?: CommentWithLocation[]; }}\n */\nexport function parse_expression_at(source, typescript, index) {\n\tconst parser = typescript ? ParserWithTS : acorn.Parser;\n\tconst { onComment, add_comments } = get_comment_handlers(source);\n\n\tconst ast = parser.parseExpressionAt(source, index, {\n\t\tonComment,\n\t\tsourceType: 'module',\n\t\tecmaVersion: 13,\n\t\tlocations: true\n\t});\n\n\tadd_comments(ast);\n\n\treturn ast;\n}\n\n/**\n * Acorn doesn't add comments to the AST by itself. This factory returns the capabilities\n * to add them after the fact. They are needed in order to support `svelte-ignore` comments\n * in JS code and so that `prettier-plugin-svelte` doesn't remove all comments when formatting.\n * @param {string} source\n */\nfunction get_comment_handlers(source) {\n\t/**\n\t * @typedef {Comment & {\n\t *   start: number;\n\t *   end: number;\n\t * }} CommentWithLocation\n\t */\n\n\t/** @type {CommentWithLocation[]} */\n\tconst comments = [];\n\n\treturn {\n\t\t/**\n\t\t * @param {boolean} block\n\t\t * @param {string} value\n\t\t * @param {number} start\n\t\t * @param {number} end\n\t\t */\n\t\tonComment: (block, value, start, end) => {\n\t\t\tif (block && /\\n/.test(value)) {\n\t\t\t\tlet a = start;\n\t\t\t\twhile (a > 0 && source[a - 1] !== '\\n') a -= 1;\n\n\t\t\t\tlet b = a;\n\t\t\t\twhile (/[ \\t]/.test(source[b])) b += 1;\n\n\t\t\t\tconst indentation = source.slice(a, b);\n\t\t\t\tvalue = value.replace(new RegExp(`^${indentation}`, 'gm'), '');\n\t\t\t}\n\n\t\t\tcomments.push({ type: block ? 'Block' : 'Line', value, start, end });\n\t\t},\n\n\t\t/** @param {acorn.Node & { leadingComments?: CommentWithLocation[]; trailingComments?: CommentWithLocation[]; }} ast */\n\t\tadd_comments(ast) {\n\t\t\tif (comments.length === 0) return;\n\n\t\t\twalk(ast, null, {\n\t\t\t\t_(node, { next, path }) {\n\t\t\t\t\tlet comment;\n\n\t\t\t\t\twhile (comments[0] && comments[0].start < node.start) {\n\t\t\t\t\t\tcomment = /** @type {CommentWithLocation} */ (comments.shift());\n\t\t\t\t\t\t(node.leadingComments ||= []).push(comment);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext();\n\n\t\t\t\t\tif (comments[0]) {\n\t\t\t\t\t\tconst parent = /** @type {any} */ (path.at(-1));\n\n\t\t\t\t\t\tif (parent === undefined || node.end !== parent.end) {\n\t\t\t\t\t\t\tconst slice = source.slice(node.end, comments[0].start);\n\t\t\t\t\t\t\tconst is_last_in_body =\n\t\t\t\t\t\t\t\t((parent?.type === 'BlockStatement' || parent?.type === 'Program') &&\n\t\t\t\t\t\t\t\t\tparent.body.indexOf(node) === parent.body.length - 1) ||\n\t\t\t\t\t\t\t\t(parent?.type === 'ArrayExpression' &&\n\t\t\t\t\t\t\t\t\tparent.elements.indexOf(node) === parent.elements.length - 1) ||\n\t\t\t\t\t\t\t\t(parent?.type === 'ObjectExpression' &&\n\t\t\t\t\t\t\t\t\tparent.properties.indexOf(node) === parent.properties.length - 1);\n\n\t\t\t\t\t\t\tif (is_last_in_body) {\n\t\t\t\t\t\t\t\t// Special case: There can be multiple trailing comments after the last node in a block,\n\t\t\t\t\t\t\t\t// and they can be separated by newlines\n\t\t\t\t\t\t\t\tlet end = node.end;\n\n\t\t\t\t\t\t\t\twhile (comments.length) {\n\t\t\t\t\t\t\t\t\tconst comment = comments[0];\n\t\t\t\t\t\t\t\t\tif (parent && comment.start >= parent.end) break;\n\n\t\t\t\t\t\t\t\t\t(node.trailingComments ||= []).push(comment);\n\t\t\t\t\t\t\t\t\tcomments.shift();\n\t\t\t\t\t\t\t\t\tend = comment.end;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (node.end <= comments[0].start && /^[,) \\t]*$/.test(slice)) {\n\t\t\t\t\t\t\t\tnode.trailingComments = [/** @type {CommentWithLocation} */ (comments.shift())];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Special case: Trailing comments after the root node (which can only happen for expression tags or for Program nodes).\n\t\t\t// Adding them ensures that we can later detect the end of the expression tag correctly.\n\t\t\tif (comments.length > 0 && (comments[0].start >= ast.end || ast.type === 'Program')) {\n\t\t\t\t(ast.trailingComments ||= []).push(...comments.splice(0));\n\t\t\t}\n\t\t}\n\t};\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { CompileDiagnostic } from './utils/compile_diagnostic.js';\n\n/** @typedef {{ start?: number, end?: number }} NodeLike */\nclass InternalCompileError extends Error {\n\tmessage = ''; // ensure this property is enumerable\n\t#diagnostic;\n\n\t/**\n\t * @param {string} code\n\t * @param {string} message\n\t * @param {[number, number] | undefined} position\n\t */\n\tconstructor(code, message, position) {\n\t\tsuper(message);\n\t\tthis.stack = ''; // avoid unnecessary noise; don't set it as a class property or it becomes enumerable\n\t\t// We want to extend from Error so that various bundler plugins properly handle it.\n\t\t// But we also want to share the same object shape with that of warnings, therefore\n\t\t// we create an instance of the shared class an copy over its properties.\n\t\tthis.#diagnostic = new CompileDiagnostic(code, message, position);\n\t\tObject.assign(this, this.#diagnostic);\n\t\tthis.name = 'CompileError';\n\t}\n\n\ttoString() {\n\t\treturn this.#diagnostic.toString();\n\t}\n\n\ttoJSON() {\n\t\treturn this.#diagnostic.toJSON();\n\t}\n}\n\n/**\n * @param {null | number | NodeLike} node\n * @param {string} code\n * @param {string} message\n * @returns {never}\n */\nfunction e(node, code, message) {\n\tconst start = typeof node === 'number' ? node : node?.start;\n\tconst end = typeof node === 'number' ? node : node?.end;\n\n\tthrow new InternalCompileError(code, message, start !== undefined ? [start, end ?? start] : undefined);\n}\n\n/**\n * Invalid compiler option: %details%\n * @param {null | number | NodeLike} node\n * @param {string} details\n * @returns {never}\n */\nexport function options_invalid_value(node, details) {\n\te(node, 'options_invalid_value', `Invalid compiler option: ${details}\\nhttps://svelte.dev/e/options_invalid_value`);\n}\n\n/**\n * Invalid compiler option: %details%\n * @param {null | number | NodeLike} node\n * @param {string} details\n * @returns {never}\n */\nexport function options_removed(node, details) {\n\te(node, 'options_removed', `Invalid compiler option: ${details}\\nhttps://svelte.dev/e/options_removed`);\n}\n\n/**\n * Unrecognised compiler option %keypath%\n * @param {null | number | NodeLike} node\n * @param {string} keypath\n * @returns {never}\n */\nexport function options_unrecognised(node, keypath) {\n\te(node, 'options_unrecognised', `Unrecognised compiler option ${keypath}\\nhttps://svelte.dev/e/options_unrecognised`);\n}\n\n/**\n * `$bindable()` can only be used inside a `$props()` declaration\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function bindable_invalid_location(node) {\n\te(node, 'bindable_invalid_location', `\\`$bindable()\\` can only be used inside a \\`$props()\\` declaration\\nhttps://svelte.dev/e/bindable_invalid_location`);\n}\n\n/**\n * Cannot assign to %thing%\n * @param {null | number | NodeLike} node\n * @param {string} thing\n * @returns {never}\n */\nexport function constant_assignment(node, thing) {\n\te(node, 'constant_assignment', `Cannot assign to ${thing}\\nhttps://svelte.dev/e/constant_assignment`);\n}\n\n/**\n * Cannot bind to %thing%\n * @param {null | number | NodeLike} node\n * @param {string} thing\n * @returns {never}\n */\nexport function constant_binding(node, thing) {\n\te(node, 'constant_binding', `Cannot bind to ${thing}\\nhttps://svelte.dev/e/constant_binding`);\n}\n\n/**\n * `%name%` has already been declared\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function declaration_duplicate(node, name) {\n\te(node, 'declaration_duplicate', `\\`${name}\\` has already been declared\\nhttps://svelte.dev/e/declaration_duplicate`);\n}\n\n/**\n * Cannot declare a variable with the same name as an import inside `<script module>`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function declaration_duplicate_module_import(node) {\n\te(node, 'declaration_duplicate_module_import', `Cannot declare a variable with the same name as an import inside \\`<script module>\\`\\nhttps://svelte.dev/e/declaration_duplicate_module_import`);\n}\n\n/**\n * Cannot export derived state from a module. To expose the current derived value, export a function returning its value\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function derived_invalid_export(node) {\n\te(node, 'derived_invalid_export', `Cannot export derived state from a module. To expose the current derived value, export a function returning its value\\nhttps://svelte.dev/e/derived_invalid_export`);\n}\n\n/**\n * The $ name is reserved, and cannot be used for variables and imports\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function dollar_binding_invalid(node) {\n\te(node, 'dollar_binding_invalid', `The $ name is reserved, and cannot be used for variables and imports\\nhttps://svelte.dev/e/dollar_binding_invalid`);\n}\n\n/**\n * The $ prefix is reserved, and cannot be used for variables and imports\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function dollar_prefix_invalid(node) {\n\te(node, 'dollar_prefix_invalid', `The $ prefix is reserved, and cannot be used for variables and imports\\nhttps://svelte.dev/e/dollar_prefix_invalid`);\n}\n\n/**\n * Cannot reassign or bind to each block argument in runes mode. Use the array and index variables instead (e.g. `array[i] = value` instead of `entry = value`, or `bind:value={array[i]}` instead of `bind:value={entry}`)\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function each_item_invalid_assignment(node) {\n\te(node, 'each_item_invalid_assignment', `Cannot reassign or bind to each block argument in runes mode. Use the array and index variables instead (e.g. \\`array[i] = value\\` instead of \\`entry = value\\`, or \\`bind:value={array[i]}\\` instead of \\`bind:value={entry}\\`)\\nhttps://svelte.dev/e/each_item_invalid_assignment`);\n}\n\n/**\n * `$effect()` can only be used as an expression statement\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function effect_invalid_placement(node) {\n\te(node, 'effect_invalid_placement', `\\`$effect()\\` can only be used as an expression statement\\nhttps://svelte.dev/e/effect_invalid_placement`);\n}\n\n/**\n * `%name%` is not defined\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function export_undefined(node, name) {\n\te(node, 'export_undefined', `\\`${name}\\` is not defined\\nhttps://svelte.dev/e/export_undefined`);\n}\n\n/**\n * `%name%` is an illegal variable name. To reference a global variable called `%name%`, use `globalThis.%name%`\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function global_reference_invalid(node, name) {\n\te(node, 'global_reference_invalid', `\\`${name}\\` is an illegal variable name. To reference a global variable called \\`${name}\\`, use \\`globalThis.${name}\\`\\nhttps://svelte.dev/e/global_reference_invalid`);\n}\n\n/**\n * `$host()` can only be used inside custom element component instances\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function host_invalid_placement(node) {\n\te(node, 'host_invalid_placement', `\\`$host()\\` can only be used inside custom element component instances\\nhttps://svelte.dev/e/host_invalid_placement`);\n}\n\n/**\n * Imports of `svelte/internal/*` are forbidden. It contains private runtime code which is subject to change without notice. If you're importing from `svelte/internal/*` to work around a limitation of Svelte, please open an issue at https://github.com/sveltejs/svelte and explain your use case\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function import_svelte_internal_forbidden(node) {\n\te(node, 'import_svelte_internal_forbidden', `Imports of \\`svelte/internal/*\\` are forbidden. It contains private runtime code which is subject to change without notice. If you're importing from \\`svelte/internal/*\\` to work around a limitation of Svelte, please open an issue at https://github.com/sveltejs/svelte and explain your use case\\nhttps://svelte.dev/e/import_svelte_internal_forbidden`);\n}\n\n/**\n * `$inspect.trace(...)` cannot be used inside a generator function\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function inspect_trace_generator(node) {\n\te(node, 'inspect_trace_generator', `\\`$inspect.trace(...)\\` cannot be used inside a generator function\\nhttps://svelte.dev/e/inspect_trace_generator`);\n}\n\n/**\n * `$inspect.trace(...)` must be the first statement of a function body\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function inspect_trace_invalid_placement(node) {\n\te(node, 'inspect_trace_invalid_placement', `\\`$inspect.trace(...)\\` must be the first statement of a function body\\nhttps://svelte.dev/e/inspect_trace_invalid_placement`);\n}\n\n/**\n * The arguments keyword cannot be used within the template or at the top level of a component\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function invalid_arguments_usage(node) {\n\te(node, 'invalid_arguments_usage', `The arguments keyword cannot be used within the template or at the top level of a component\\nhttps://svelte.dev/e/invalid_arguments_usage`);\n}\n\n/**\n * Cannot use `export let` in runes mode — use `$props()` instead\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function legacy_export_invalid(node) {\n\te(node, 'legacy_export_invalid', `Cannot use \\`export let\\` in runes mode — use \\`$props()\\` instead\\nhttps://svelte.dev/e/legacy_export_invalid`);\n}\n\n/**\n * Cannot use `$$props` in runes mode\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function legacy_props_invalid(node) {\n\te(node, 'legacy_props_invalid', `Cannot use \\`$$props\\` in runes mode\\nhttps://svelte.dev/e/legacy_props_invalid`);\n}\n\n/**\n * `$:` is not allowed in runes mode, use `$derived` or `$effect` instead\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function legacy_reactive_statement_invalid(node) {\n\te(node, 'legacy_reactive_statement_invalid', `\\`$:\\` is not allowed in runes mode, use \\`$derived\\` or \\`$effect\\` instead\\nhttps://svelte.dev/e/legacy_reactive_statement_invalid`);\n}\n\n/**\n * Cannot use `$$restProps` in runes mode\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function legacy_rest_props_invalid(node) {\n\te(node, 'legacy_rest_props_invalid', `Cannot use \\`$$restProps\\` in runes mode\\nhttps://svelte.dev/e/legacy_rest_props_invalid`);\n}\n\n/**\n * A component cannot have a default export\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function module_illegal_default_export(node) {\n\te(node, 'module_illegal_default_export', `A component cannot have a default export\\nhttps://svelte.dev/e/module_illegal_default_export`);\n}\n\n/**\n * Cannot use `%rune%()` more than once\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @returns {never}\n */\nexport function props_duplicate(node, rune) {\n\te(node, 'props_duplicate', `Cannot use \\`${rune}()\\` more than once\\nhttps://svelte.dev/e/props_duplicate`);\n}\n\n/**\n * `$props.id()` can only be used at the top level of components as a variable declaration initializer\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function props_id_invalid_placement(node) {\n\te(node, 'props_id_invalid_placement', `\\`$props.id()\\` can only be used at the top level of components as a variable declaration initializer\\nhttps://svelte.dev/e/props_id_invalid_placement`);\n}\n\n/**\n * Declaring or accessing a prop starting with `$$` is illegal (they are reserved for Svelte internals)\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function props_illegal_name(node) {\n\te(node, 'props_illegal_name', `Declaring or accessing a prop starting with \\`$$\\` is illegal (they are reserved for Svelte internals)\\nhttps://svelte.dev/e/props_illegal_name`);\n}\n\n/**\n * `$props()` can only be used with an object destructuring pattern\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function props_invalid_identifier(node) {\n\te(node, 'props_invalid_identifier', `\\`$props()\\` can only be used with an object destructuring pattern\\nhttps://svelte.dev/e/props_invalid_identifier`);\n}\n\n/**\n * `$props()` assignment must not contain nested properties or computed keys\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function props_invalid_pattern(node) {\n\te(node, 'props_invalid_pattern', `\\`$props()\\` assignment must not contain nested properties or computed keys\\nhttps://svelte.dev/e/props_invalid_pattern`);\n}\n\n/**\n * `$props()` can only be used at the top level of components as a variable declaration initializer\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function props_invalid_placement(node) {\n\te(node, 'props_invalid_placement', `\\`$props()\\` can only be used at the top level of components as a variable declaration initializer\\nhttps://svelte.dev/e/props_invalid_placement`);\n}\n\n/**\n * Cyclical dependency detected: %cycle%\n * @param {null | number | NodeLike} node\n * @param {string} cycle\n * @returns {never}\n */\nexport function reactive_declaration_cycle(node, cycle) {\n\te(node, 'reactive_declaration_cycle', `Cyclical dependency detected: ${cycle}\\nhttps://svelte.dev/e/reactive_declaration_cycle`);\n}\n\n/**\n * `%rune%` cannot be called with arguments\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_invalid_arguments(node, rune) {\n\te(node, 'rune_invalid_arguments', `\\`${rune}\\` cannot be called with arguments\\nhttps://svelte.dev/e/rune_invalid_arguments`);\n}\n\n/**\n * `%rune%` must be called with %args%\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @param {string} args\n * @returns {never}\n */\nexport function rune_invalid_arguments_length(node, rune, args) {\n\te(node, 'rune_invalid_arguments_length', `\\`${rune}\\` must be called with ${args}\\nhttps://svelte.dev/e/rune_invalid_arguments_length`);\n}\n\n/**\n * Cannot access a computed property of a rune\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function rune_invalid_computed_property(node) {\n\te(node, 'rune_invalid_computed_property', `Cannot access a computed property of a rune\\nhttps://svelte.dev/e/rune_invalid_computed_property`);\n}\n\n/**\n * `%name%` is not a valid rune\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function rune_invalid_name(node, name) {\n\te(node, 'rune_invalid_name', `\\`${name}\\` is not a valid rune\\nhttps://svelte.dev/e/rune_invalid_name`);\n}\n\n/**\n * `%rune%` cannot be called with a spread argument\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_invalid_spread(node, rune) {\n\te(node, 'rune_invalid_spread', `\\`${rune}\\` cannot be called with a spread argument\\nhttps://svelte.dev/e/rune_invalid_spread`);\n}\n\n/**\n * Cannot use `%rune%` rune in non-runes mode\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_invalid_usage(node, rune) {\n\te(node, 'rune_invalid_usage', `Cannot use \\`${rune}\\` rune in non-runes mode\\nhttps://svelte.dev/e/rune_invalid_usage`);\n}\n\n/**\n * Cannot use rune without parentheses\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function rune_missing_parentheses(node) {\n\te(node, 'rune_missing_parentheses', `Cannot use rune without parentheses\\nhttps://svelte.dev/e/rune_missing_parentheses`);\n}\n\n/**\n * The `%name%` rune has been removed\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function rune_removed(node, name) {\n\te(node, 'rune_removed', `The \\`${name}\\` rune has been removed\\nhttps://svelte.dev/e/rune_removed`);\n}\n\n/**\n * `%name%` is now `%replacement%`\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} replacement\n * @returns {never}\n */\nexport function rune_renamed(node, name, replacement) {\n\te(node, 'rune_renamed', `\\`${name}\\` is now \\`${replacement}\\`\\nhttps://svelte.dev/e/rune_renamed`);\n}\n\n/**\n * %name% cannot be used in runes mode\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function runes_mode_invalid_import(node, name) {\n\te(node, 'runes_mode_invalid_import', `${name} cannot be used in runes mode\\nhttps://svelte.dev/e/runes_mode_invalid_import`);\n}\n\n/**\n * An exported snippet can only reference things declared in a `<script module>`, or other exportable snippets\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function snippet_invalid_export(node) {\n\te(node, 'snippet_invalid_export', `An exported snippet can only reference things declared in a \\`<script module>\\`, or other exportable snippets\\nhttps://svelte.dev/e/snippet_invalid_export`);\n}\n\n/**\n * Cannot reassign or bind to snippet parameter\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function snippet_parameter_assignment(node) {\n\te(node, 'snippet_parameter_assignment', `Cannot reassign or bind to snippet parameter\\nhttps://svelte.dev/e/snippet_parameter_assignment`);\n}\n\n/**\n * Cannot export state from a module if it is reassigned. Either export a function returning the state value or only mutate the state value's properties\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function state_invalid_export(node) {\n\te(node, 'state_invalid_export', `Cannot export state from a module if it is reassigned. Either export a function returning the state value or only mutate the state value's properties\\nhttps://svelte.dev/e/state_invalid_export`);\n}\n\n/**\n * `%rune%(...)` can only be used as a variable declaration initializer or a class field\n * @param {null | number | NodeLike} node\n * @param {string} rune\n * @returns {never}\n */\nexport function state_invalid_placement(node, rune) {\n\te(node, 'state_invalid_placement', `\\`${rune}(...)\\` can only be used as a variable declaration initializer or a class field\\nhttps://svelte.dev/e/state_invalid_placement`);\n}\n\n/**\n * Cannot subscribe to stores that are not declared at the top level of the component\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function store_invalid_scoped_subscription(node) {\n\te(node, 'store_invalid_scoped_subscription', `Cannot subscribe to stores that are not declared at the top level of the component\\nhttps://svelte.dev/e/store_invalid_scoped_subscription`);\n}\n\n/**\n * Cannot reference store value inside `<script module>`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function store_invalid_subscription(node) {\n\te(node, 'store_invalid_subscription', `Cannot reference store value inside \\`<script module>\\`\\nhttps://svelte.dev/e/store_invalid_subscription`);\n}\n\n/**\n * Cannot reference store value outside a `.svelte` file\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function store_invalid_subscription_module(node) {\n\te(node, 'store_invalid_subscription_module', `Cannot reference store value outside a \\`.svelte\\` file\\nhttps://svelte.dev/e/store_invalid_subscription_module`);\n}\n\n/**\n * TypeScript language features like %feature% are not natively supported, and their use is generally discouraged. Outside of `<script>` tags, these features are not supported. For use within `<script>` tags, you will need to use a preprocessor to convert it to JavaScript before it gets passed to the Svelte compiler. If you are using `vitePreprocess`, make sure to specifically enable preprocessing script tags (`vitePreprocess({ script: true })`)\n * @param {null | number | NodeLike} node\n * @param {string} feature\n * @returns {never}\n */\nexport function typescript_invalid_feature(node, feature) {\n\te(node, 'typescript_invalid_feature', `TypeScript language features like ${feature} are not natively supported, and their use is generally discouraged. Outside of \\`<script>\\` tags, these features are not supported. For use within \\`<script>\\` tags, you will need to use a preprocessor to convert it to JavaScript before it gets passed to the Svelte compiler. If you are using \\`vitePreprocess\\`, make sure to specifically enable preprocessing script tags (\\`vitePreprocess({ script: true })\\`)\\nhttps://svelte.dev/e/typescript_invalid_feature`);\n}\n\n/**\n * Declaration cannot be empty\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_empty_declaration(node) {\n\te(node, 'css_empty_declaration', `Declaration cannot be empty\\nhttps://svelte.dev/e/css_empty_declaration`);\n}\n\n/**\n * Expected a valid CSS identifier\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_expected_identifier(node) {\n\te(node, 'css_expected_identifier', `Expected a valid CSS identifier\\nhttps://svelte.dev/e/css_expected_identifier`);\n}\n\n/**\n * A `:global` selector cannot follow a `%name%` combinator\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function css_global_block_invalid_combinator(node, name) {\n\te(node, 'css_global_block_invalid_combinator', `A \\`:global\\` selector cannot follow a \\`${name}\\` combinator\\nhttps://svelte.dev/e/css_global_block_invalid_combinator`);\n}\n\n/**\n * A top-level `:global {...}` block can only contain rules, not declarations\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_block_invalid_declaration(node) {\n\te(node, 'css_global_block_invalid_declaration', `A top-level \\`:global {...}\\` block can only contain rules, not declarations\\nhttps://svelte.dev/e/css_global_block_invalid_declaration`);\n}\n\n/**\n * A `:global` selector cannot be part of a selector list with entries that don't contain `:global`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_block_invalid_list(node) {\n\te(node, 'css_global_block_invalid_list', `A \\`:global\\` selector cannot be part of a selector list with entries that don't contain \\`:global\\`\\nhttps://svelte.dev/e/css_global_block_invalid_list`);\n}\n\n/**\n * A `:global` selector cannot modify an existing selector\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_block_invalid_modifier(node) {\n\te(node, 'css_global_block_invalid_modifier', `A \\`:global\\` selector cannot modify an existing selector\\nhttps://svelte.dev/e/css_global_block_invalid_modifier`);\n}\n\n/**\n * A `:global` selector can only be modified if it is a descendant of other selectors\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_block_invalid_modifier_start(node) {\n\te(node, 'css_global_block_invalid_modifier_start', `A \\`:global\\` selector can only be modified if it is a descendant of other selectors\\nhttps://svelte.dev/e/css_global_block_invalid_modifier_start`);\n}\n\n/**\n * A `:global` selector cannot be inside a pseudoclass\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_block_invalid_placement(node) {\n\te(node, 'css_global_block_invalid_placement', `A \\`:global\\` selector cannot be inside a pseudoclass\\nhttps://svelte.dev/e/css_global_block_invalid_placement`);\n}\n\n/**\n * `:global(...)` can be at the start or end of a selector sequence, but not in the middle\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_invalid_placement(node) {\n\te(node, 'css_global_invalid_placement', `\\`:global(...)\\` can be at the start or end of a selector sequence, but not in the middle\\nhttps://svelte.dev/e/css_global_invalid_placement`);\n}\n\n/**\n * `:global(...)` must contain exactly one selector\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_invalid_selector(node) {\n\te(node, 'css_global_invalid_selector', `\\`:global(...)\\` must contain exactly one selector\\nhttps://svelte.dev/e/css_global_invalid_selector`);\n}\n\n/**\n * `:global(...)` must not contain type or universal selectors when used in a compound selector\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_global_invalid_selector_list(node) {\n\te(node, 'css_global_invalid_selector_list', `\\`:global(...)\\` must not contain type or universal selectors when used in a compound selector\\nhttps://svelte.dev/e/css_global_invalid_selector_list`);\n}\n\n/**\n * Nesting selectors can only be used inside a rule or as the first selector inside a lone `:global(...)`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_nesting_selector_invalid_placement(node) {\n\te(node, 'css_nesting_selector_invalid_placement', `Nesting selectors can only be used inside a rule or as the first selector inside a lone \\`:global(...)\\`\\nhttps://svelte.dev/e/css_nesting_selector_invalid_placement`);\n}\n\n/**\n * Invalid selector\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_selector_invalid(node) {\n\te(node, 'css_selector_invalid', `Invalid selector\\nhttps://svelte.dev/e/css_selector_invalid`);\n}\n\n/**\n * `:global(...)` must not be followed by a type selector\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function css_type_selector_invalid_placement(node) {\n\te(node, 'css_type_selector_invalid_placement', `\\`:global(...)\\` must not be followed by a type selector\\nhttps://svelte.dev/e/css_type_selector_invalid_placement`);\n}\n\n/**\n * An element can only have one 'animate' directive\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function animation_duplicate(node) {\n\te(node, 'animation_duplicate', `An element can only have one 'animate' directive\\nhttps://svelte.dev/e/animation_duplicate`);\n}\n\n/**\n * An element that uses the `animate:` directive must be the only child of a keyed `{#each ...}` block\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function animation_invalid_placement(node) {\n\te(node, 'animation_invalid_placement', `An element that uses the \\`animate:\\` directive must be the only child of a keyed \\`{#each ...}\\` block\\nhttps://svelte.dev/e/animation_invalid_placement`);\n}\n\n/**\n * An element that uses the `animate:` directive must be the only child of a keyed `{#each ...}` block. Did you forget to add a key to your each block?\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function animation_missing_key(node) {\n\te(node, 'animation_missing_key', `An element that uses the \\`animate:\\` directive must be the only child of a keyed \\`{#each ...}\\` block. Did you forget to add a key to your each block?\\nhttps://svelte.dev/e/animation_missing_key`);\n}\n\n/**\n * 'contenteditable' attribute cannot be dynamic if element uses two-way binding\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_contenteditable_dynamic(node) {\n\te(node, 'attribute_contenteditable_dynamic', `'contenteditable' attribute cannot be dynamic if element uses two-way binding\\nhttps://svelte.dev/e/attribute_contenteditable_dynamic`);\n}\n\n/**\n * 'contenteditable' attribute is required for textContent, innerHTML and innerText two-way bindings\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_contenteditable_missing(node) {\n\te(node, 'attribute_contenteditable_missing', `'contenteditable' attribute is required for textContent, innerHTML and innerText two-way bindings\\nhttps://svelte.dev/e/attribute_contenteditable_missing`);\n}\n\n/**\n * Attributes need to be unique\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_duplicate(node) {\n\te(node, 'attribute_duplicate', `Attributes need to be unique\\nhttps://svelte.dev/e/attribute_duplicate`);\n}\n\n/**\n * Attribute shorthand cannot be empty\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_empty_shorthand(node) {\n\te(node, 'attribute_empty_shorthand', `Attribute shorthand cannot be empty\\nhttps://svelte.dev/e/attribute_empty_shorthand`);\n}\n\n/**\n * Event attribute must be a JavaScript expression, not a string\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_invalid_event_handler(node) {\n\te(node, 'attribute_invalid_event_handler', `Event attribute must be a JavaScript expression, not a string\\nhttps://svelte.dev/e/attribute_invalid_event_handler`);\n}\n\n/**\n * 'multiple' attribute must be static if select uses two-way binding\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_invalid_multiple(node) {\n\te(node, 'attribute_invalid_multiple', `'multiple' attribute must be static if select uses two-way binding\\nhttps://svelte.dev/e/attribute_invalid_multiple`);\n}\n\n/**\n * '%name%' is not a valid attribute name\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function attribute_invalid_name(node, name) {\n\te(node, 'attribute_invalid_name', `'${name}' is not a valid attribute name\\nhttps://svelte.dev/e/attribute_invalid_name`);\n}\n\n/**\n * Sequence expressions are not allowed as attribute/directive values in runes mode, unless wrapped in parentheses\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_invalid_sequence_expression(node) {\n\te(node, 'attribute_invalid_sequence_expression', `Sequence expressions are not allowed as attribute/directive values in runes mode, unless wrapped in parentheses\\nhttps://svelte.dev/e/attribute_invalid_sequence_expression`);\n}\n\n/**\n * 'type' attribute must be a static text value if input uses two-way binding\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_invalid_type(node) {\n\te(node, 'attribute_invalid_type', `'type' attribute must be a static text value if input uses two-way binding\\nhttps://svelte.dev/e/attribute_invalid_type`);\n}\n\n/**\n * Attribute values containing `{...}` must be enclosed in quote marks, unless the value only contains the expression\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function attribute_unquoted_sequence(node) {\n\te(node, 'attribute_unquoted_sequence', `Attribute values containing \\`{...}\\` must be enclosed in quote marks, unless the value only contains the expression\\nhttps://svelte.dev/e/attribute_unquoted_sequence`);\n}\n\n/**\n * `bind:group` can only bind to an Identifier or MemberExpression\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function bind_group_invalid_expression(node) {\n\te(node, 'bind_group_invalid_expression', `\\`bind:group\\` can only bind to an Identifier or MemberExpression\\nhttps://svelte.dev/e/bind_group_invalid_expression`);\n}\n\n/**\n * Cannot `bind:group` to a snippet parameter\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function bind_group_invalid_snippet_parameter(node) {\n\te(node, 'bind_group_invalid_snippet_parameter', `Cannot \\`bind:group\\` to a snippet parameter\\nhttps://svelte.dev/e/bind_group_invalid_snippet_parameter`);\n}\n\n/**\n * Can only bind to an Identifier or MemberExpression or a `{get, set}` pair\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function bind_invalid_expression(node) {\n\te(node, 'bind_invalid_expression', `Can only bind to an Identifier or MemberExpression or a \\`{get, set}\\` pair\\nhttps://svelte.dev/e/bind_invalid_expression`);\n}\n\n/**\n * `bind:%name%` is not a valid binding. %explanation%\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string | undefined | null} [explanation]\n * @returns {never}\n */\nexport function bind_invalid_name(node, name, explanation) {\n\te(node, 'bind_invalid_name', `${explanation ? `\\`bind:${name}\\` is not a valid binding. ${explanation}` : `\\`bind:${name}\\` is not a valid binding`}\\nhttps://svelte.dev/e/bind_invalid_name`);\n}\n\n/**\n * `bind:%name%={get, set}` must not have surrounding parentheses\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_parens(node, name) {\n\te(node, 'bind_invalid_parens', `\\`bind:${name}={get, set}\\` must not have surrounding parentheses\\nhttps://svelte.dev/e/bind_invalid_parens`);\n}\n\n/**\n * `bind:%name%` can only be used with %elements%\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} elements\n * @returns {never}\n */\nexport function bind_invalid_target(node, name, elements) {\n\te(node, 'bind_invalid_target', `\\`bind:${name}\\` can only be used with ${elements}\\nhttps://svelte.dev/e/bind_invalid_target`);\n}\n\n/**\n * Can only bind to state or props\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function bind_invalid_value(node) {\n\te(node, 'bind_invalid_value', `Can only bind to state or props\\nhttps://svelte.dev/e/bind_invalid_value`);\n}\n\n/**\n * %name% cannot appear more than once within a block\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function block_duplicate_clause(node, name) {\n\te(node, 'block_duplicate_clause', `${name} cannot appear more than once within a block\\nhttps://svelte.dev/e/block_duplicate_clause`);\n}\n\n/**\n * {:...} block is invalid at this position (did you forget to close the preceding element or block?)\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function block_invalid_continuation_placement(node) {\n\te(node, 'block_invalid_continuation_placement', `{:...} block is invalid at this position (did you forget to close the preceding element or block?)\\nhttps://svelte.dev/e/block_invalid_continuation_placement`);\n}\n\n/**\n * 'elseif' should be 'else if'\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function block_invalid_elseif(node) {\n\te(node, 'block_invalid_elseif', `'elseif' should be 'else if'\\nhttps://svelte.dev/e/block_invalid_elseif`);\n}\n\n/**\n * {#%name% ...} block cannot be %location%\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} location\n * @returns {never}\n */\nexport function block_invalid_placement(node, name, location) {\n\te(node, 'block_invalid_placement', `{#${name} ...} block cannot be ${location}\\nhttps://svelte.dev/e/block_invalid_placement`);\n}\n\n/**\n * Block was left open\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function block_unclosed(node) {\n\te(node, 'block_unclosed', `Block was left open\\nhttps://svelte.dev/e/block_unclosed`);\n}\n\n/**\n * Expected a `%character%` character immediately following the opening bracket\n * @param {null | number | NodeLike} node\n * @param {string} character\n * @returns {never}\n */\nexport function block_unexpected_character(node, character) {\n\te(node, 'block_unexpected_character', `Expected a \\`${character}\\` character immediately following the opening bracket\\nhttps://svelte.dev/e/block_unexpected_character`);\n}\n\n/**\n * Unexpected block closing tag\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function block_unexpected_close(node) {\n\te(node, 'block_unexpected_close', `Unexpected block closing tag\\nhttps://svelte.dev/e/block_unexpected_close`);\n}\n\n/**\n * This type of directive is not valid on components\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function component_invalid_directive(node) {\n\te(node, 'component_invalid_directive', `This type of directive is not valid on components\\nhttps://svelte.dev/e/component_invalid_directive`);\n}\n\n/**\n * Cyclical dependency detected: %cycle%\n * @param {null | number | NodeLike} node\n * @param {string} cycle\n * @returns {never}\n */\nexport function const_tag_cycle(node, cycle) {\n\te(node, 'const_tag_cycle', `Cyclical dependency detected: ${cycle}\\nhttps://svelte.dev/e/const_tag_cycle`);\n}\n\n/**\n * {@const ...} must consist of a single variable declaration\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function const_tag_invalid_expression(node) {\n\te(node, 'const_tag_invalid_expression', `{@const ...} must consist of a single variable declaration\\nhttps://svelte.dev/e/const_tag_invalid_expression`);\n}\n\n/**\n * `{@const}` must be the immediate child of `{#snippet}`, `{#if}`, `{:else if}`, `{:else}`, `{#each}`, `{:then}`, `{:catch}`, `<svelte:fragment>`, `<svelte:boundary` or `<Component>`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function const_tag_invalid_placement(node) {\n\te(node, 'const_tag_invalid_placement', `\\`{@const}\\` must be the immediate child of \\`{#snippet}\\`, \\`{#if}\\`, \\`{:else if}\\`, \\`{:else}\\`, \\`{#each}\\`, \\`{:then}\\`, \\`{:catch}\\`, \\`<svelte:fragment>\\`, \\`<svelte:boundary\\` or \\`<Component>\\`\\nhttps://svelte.dev/e/const_tag_invalid_placement`);\n}\n\n/**\n * {@debug ...} arguments must be identifiers, not arbitrary expressions\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function debug_tag_invalid_arguments(node) {\n\te(node, 'debug_tag_invalid_arguments', `{@debug ...} arguments must be identifiers, not arbitrary expressions\\nhttps://svelte.dev/e/debug_tag_invalid_arguments`);\n}\n\n/**\n * Directive value must be a JavaScript expression enclosed in curly braces\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function directive_invalid_value(node) {\n\te(node, 'directive_invalid_value', `Directive value must be a JavaScript expression enclosed in curly braces\\nhttps://svelte.dev/e/directive_invalid_value`);\n}\n\n/**\n * `%type%` name cannot be empty\n * @param {null | number | NodeLike} node\n * @param {string} type\n * @returns {never}\n */\nexport function directive_missing_name(node, type) {\n\te(node, 'directive_missing_name', `\\`${type}\\` name cannot be empty\\nhttps://svelte.dev/e/directive_missing_name`);\n}\n\n/**\n * `</%name%>` attempted to close an element that was not open\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function element_invalid_closing_tag(node, name) {\n\te(node, 'element_invalid_closing_tag', `\\`</${name}>\\` attempted to close an element that was not open\\nhttps://svelte.dev/e/element_invalid_closing_tag`);\n}\n\n/**\n * `</%name%>` attempted to close element that was already automatically closed by `<%reason%>` (cannot nest `<%reason%>` inside `<%name%>`)\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} reason\n * @returns {never}\n */\nexport function element_invalid_closing_tag_autoclosed(node, name, reason) {\n\te(node, 'element_invalid_closing_tag_autoclosed', `\\`</${name}>\\` attempted to close element that was already automatically closed by \\`<${reason}>\\` (cannot nest \\`<${reason}>\\` inside \\`<${name}>\\`)\\nhttps://svelte.dev/e/element_invalid_closing_tag_autoclosed`);\n}\n\n/**\n * `<%name%>` was left open\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function element_unclosed(node, name) {\n\te(node, 'element_unclosed', `\\`<${name}>\\` was left open\\nhttps://svelte.dev/e/element_unclosed`);\n}\n\n/**\n * Event modifiers other than 'once' can only be used on DOM elements\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function event_handler_invalid_component_modifier(node) {\n\te(node, 'event_handler_invalid_component_modifier', `Event modifiers other than 'once' can only be used on DOM elements\\nhttps://svelte.dev/e/event_handler_invalid_component_modifier`);\n}\n\n/**\n * Valid event modifiers are %list%\n * @param {null | number | NodeLike} node\n * @param {string} list\n * @returns {never}\n */\nexport function event_handler_invalid_modifier(node, list) {\n\te(node, 'event_handler_invalid_modifier', `Valid event modifiers are ${list}\\nhttps://svelte.dev/e/event_handler_invalid_modifier`);\n}\n\n/**\n * The '%modifier1%' and '%modifier2%' modifiers cannot be used together\n * @param {null | number | NodeLike} node\n * @param {string} modifier1\n * @param {string} modifier2\n * @returns {never}\n */\nexport function event_handler_invalid_modifier_combination(node, modifier1, modifier2) {\n\te(node, 'event_handler_invalid_modifier_combination', `The '${modifier1}' and '${modifier2}' modifiers cannot be used together\\nhttps://svelte.dev/e/event_handler_invalid_modifier_combination`);\n}\n\n/**\n * Expected attribute value\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function expected_attribute_value(node) {\n\te(node, 'expected_attribute_value', `Expected attribute value\\nhttps://svelte.dev/e/expected_attribute_value`);\n}\n\n/**\n * Expected 'if', 'each', 'await', 'key' or 'snippet'\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function expected_block_type(node) {\n\te(node, 'expected_block_type', `Expected 'if', 'each', 'await', 'key' or 'snippet'\\nhttps://svelte.dev/e/expected_block_type`);\n}\n\n/**\n * Expected an identifier\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function expected_identifier(node) {\n\te(node, 'expected_identifier', `Expected an identifier\\nhttps://svelte.dev/e/expected_identifier`);\n}\n\n/**\n * Expected identifier or destructure pattern\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function expected_pattern(node) {\n\te(node, 'expected_pattern', `Expected identifier or destructure pattern\\nhttps://svelte.dev/e/expected_pattern`);\n}\n\n/**\n * Expected token %token%\n * @param {null | number | NodeLike} node\n * @param {string} token\n * @returns {never}\n */\nexport function expected_token(node, token) {\n\te(node, 'expected_token', `Expected token ${token}\\nhttps://svelte.dev/e/expected_token`);\n}\n\n/**\n * Expected whitespace\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function expected_whitespace(node) {\n\te(node, 'expected_whitespace', `Expected whitespace\\nhttps://svelte.dev/e/expected_whitespace`);\n}\n\n/**\n * `<%name%>` does not support non-event attributes or spread attributes\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function illegal_element_attribute(node, name) {\n\te(node, 'illegal_element_attribute', `\\`<${name}>\\` does not support non-event attributes or spread attributes\\nhttps://svelte.dev/e/illegal_element_attribute`);\n}\n\n/**\n * %message%\n * @param {null | number | NodeLike} node\n * @param {string} message\n * @returns {never}\n */\nexport function js_parse_error(node, message) {\n\te(node, 'js_parse_error', `${message}\\nhttps://svelte.dev/e/js_parse_error`);\n}\n\n/**\n * `let:` directive at invalid position\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function let_directive_invalid_placement(node) {\n\te(node, 'let_directive_invalid_placement', `\\`let:\\` directive at invalid position\\nhttps://svelte.dev/e/let_directive_invalid_placement`);\n}\n\n/**\n * Mixing old (on:%name%) and new syntaxes for event handling is not allowed. Use only the on%name% syntax\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function mixed_event_handler_syntaxes(node, name) {\n\te(node, 'mixed_event_handler_syntaxes', `Mixing old (on:${name}) and new syntaxes for event handling is not allowed. Use only the on${name} syntax\\nhttps://svelte.dev/e/mixed_event_handler_syntaxes`);\n}\n\n/**\n * %message%. The browser will 'repair' the HTML (by moving, removing, or inserting elements) which breaks Svelte's assumptions about the structure of your components.\n * @param {null | number | NodeLike} node\n * @param {string} message\n * @returns {never}\n */\nexport function node_invalid_placement(node, message) {\n\te(node, 'node_invalid_placement', `${message}. The browser will 'repair' the HTML (by moving, removing, or inserting elements) which breaks Svelte's assumptions about the structure of your components.\\nhttps://svelte.dev/e/node_invalid_placement`);\n}\n\n/**\n * Calling a snippet function using apply, bind or call is not allowed\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function render_tag_invalid_call_expression(node) {\n\te(node, 'render_tag_invalid_call_expression', `Calling a snippet function using apply, bind or call is not allowed\\nhttps://svelte.dev/e/render_tag_invalid_call_expression`);\n}\n\n/**\n * `{@render ...}` tags can only contain call expressions\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function render_tag_invalid_expression(node) {\n\te(node, 'render_tag_invalid_expression', `\\`{@render ...}\\` tags can only contain call expressions\\nhttps://svelte.dev/e/render_tag_invalid_expression`);\n}\n\n/**\n * cannot use spread arguments in `{@render ...}` tags\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function render_tag_invalid_spread_argument(node) {\n\te(node, 'render_tag_invalid_spread_argument', `cannot use spread arguments in \\`{@render ...}\\` tags\\nhttps://svelte.dev/e/render_tag_invalid_spread_argument`);\n}\n\n/**\n * A component can have a single top-level `<script>` element and/or a single top-level `<script module>` element\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function script_duplicate(node) {\n\te(node, 'script_duplicate', `A component can have a single top-level \\`<script>\\` element and/or a single top-level \\`<script module>\\` element\\nhttps://svelte.dev/e/script_duplicate`);\n}\n\n/**\n * If the `%name%` attribute is supplied, it must be a boolean attribute\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function script_invalid_attribute_value(node, name) {\n\te(node, 'script_invalid_attribute_value', `If the \\`${name}\\` attribute is supplied, it must be a boolean attribute\\nhttps://svelte.dev/e/script_invalid_attribute_value`);\n}\n\n/**\n * If the context attribute is supplied, its value must be \"module\"\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function script_invalid_context(node) {\n\te(node, 'script_invalid_context', `If the context attribute is supplied, its value must be \"module\"\\nhttps://svelte.dev/e/script_invalid_context`);\n}\n\n/**\n * The `%name%` attribute is reserved and cannot be used\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function script_reserved_attribute(node, name) {\n\te(node, 'script_reserved_attribute', `The \\`${name}\\` attribute is reserved and cannot be used\\nhttps://svelte.dev/e/script_reserved_attribute`);\n}\n\n/**\n * Duplicate slot name '%name%' in <%component%>\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} component\n * @returns {never}\n */\nexport function slot_attribute_duplicate(node, name, component) {\n\te(node, 'slot_attribute_duplicate', `Duplicate slot name '${name}' in <${component}>\\nhttps://svelte.dev/e/slot_attribute_duplicate`);\n}\n\n/**\n * slot attribute must be a static value\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_attribute_invalid(node) {\n\te(node, 'slot_attribute_invalid', `slot attribute must be a static value\\nhttps://svelte.dev/e/slot_attribute_invalid`);\n}\n\n/**\n * Element with a slot='...' attribute must be a child of a component or a descendant of a custom element\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_attribute_invalid_placement(node) {\n\te(node, 'slot_attribute_invalid_placement', `Element with a slot='...' attribute must be a child of a component or a descendant of a custom element\\nhttps://svelte.dev/e/slot_attribute_invalid_placement`);\n}\n\n/**\n * Found default slot content alongside an explicit slot=\"default\"\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_default_duplicate(node) {\n\te(node, 'slot_default_duplicate', `Found default slot content alongside an explicit slot=\"default\"\\nhttps://svelte.dev/e/slot_default_duplicate`);\n}\n\n/**\n * `<slot>` can only receive attributes and (optionally) let directives\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_element_invalid_attribute(node) {\n\te(node, 'slot_element_invalid_attribute', `\\`<slot>\\` can only receive attributes and (optionally) let directives\\nhttps://svelte.dev/e/slot_element_invalid_attribute`);\n}\n\n/**\n * slot attribute must be a static value\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_element_invalid_name(node) {\n\te(node, 'slot_element_invalid_name', `slot attribute must be a static value\\nhttps://svelte.dev/e/slot_element_invalid_name`);\n}\n\n/**\n * `default` is a reserved word — it cannot be used as a slot name\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_element_invalid_name_default(node) {\n\te(node, 'slot_element_invalid_name_default', `\\`default\\` is a reserved word — it cannot be used as a slot name\\nhttps://svelte.dev/e/slot_element_invalid_name_default`);\n}\n\n/**\n * Cannot use `<slot>` syntax and `{@render ...}` tags in the same component. Migrate towards `{@render ...}` tags completely\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function slot_snippet_conflict(node) {\n\te(node, 'slot_snippet_conflict', `Cannot use \\`<slot>\\` syntax and \\`{@render ...}\\` tags in the same component. Migrate towards \\`{@render ...}\\` tags completely\\nhttps://svelte.dev/e/slot_snippet_conflict`);\n}\n\n/**\n * Cannot use explicit children snippet at the same time as implicit children content. Remove either the non-whitespace content or the children snippet block\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function snippet_conflict(node) {\n\te(node, 'snippet_conflict', `Cannot use explicit children snippet at the same time as implicit children content. Remove either the non-whitespace content or the children snippet block\\nhttps://svelte.dev/e/snippet_conflict`);\n}\n\n/**\n * Snippets do not support rest parameters; use an array instead\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function snippet_invalid_rest_parameter(node) {\n\te(node, 'snippet_invalid_rest_parameter', `Snippets do not support rest parameters; use an array instead\\nhttps://svelte.dev/e/snippet_invalid_rest_parameter`);\n}\n\n/**\n * This snippet is shadowing the prop `%prop%` with the same name\n * @param {null | number | NodeLike} node\n * @param {string} prop\n * @returns {never}\n */\nexport function snippet_shadowing_prop(node, prop) {\n\te(node, 'snippet_shadowing_prop', `This snippet is shadowing the prop \\`${prop}\\` with the same name\\nhttps://svelte.dev/e/snippet_shadowing_prop`);\n}\n\n/**\n * `style:` directive can only use the `important` modifier\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function style_directive_invalid_modifier(node) {\n\te(node, 'style_directive_invalid_modifier', `\\`style:\\` directive can only use the \\`important\\` modifier\\nhttps://svelte.dev/e/style_directive_invalid_modifier`);\n}\n\n/**\n * A component can have a single top-level `<style>` element\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function style_duplicate(node) {\n\te(node, 'style_duplicate', `A component can have a single top-level \\`<style>\\` element\\nhttps://svelte.dev/e/style_duplicate`);\n}\n\n/**\n * `<svelte:body>` does not support non-event attributes or spread attributes\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_body_illegal_attribute(node) {\n\te(node, 'svelte_body_illegal_attribute', `\\`<svelte:body>\\` does not support non-event attributes or spread attributes\\nhttps://svelte.dev/e/svelte_body_illegal_attribute`);\n}\n\n/**\n * Valid attributes on `<svelte:boundary>` are `onerror` and `failed`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_boundary_invalid_attribute(node) {\n\te(node, 'svelte_boundary_invalid_attribute', `Valid attributes on \\`<svelte:boundary>\\` are \\`onerror\\` and \\`failed\\`\\nhttps://svelte.dev/e/svelte_boundary_invalid_attribute`);\n}\n\n/**\n * Attribute value must be a non-string expression\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_boundary_invalid_attribute_value(node) {\n\te(node, 'svelte_boundary_invalid_attribute_value', `Attribute value must be a non-string expression\\nhttps://svelte.dev/e/svelte_boundary_invalid_attribute_value`);\n}\n\n/**\n * Invalid component definition — must be an `{expression}`\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_component_invalid_this(node) {\n\te(node, 'svelte_component_invalid_this', `Invalid component definition — must be an \\`{expression}\\`\\nhttps://svelte.dev/e/svelte_component_invalid_this`);\n}\n\n/**\n * `<svelte:component>` must have a 'this' attribute\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_component_missing_this(node) {\n\te(node, 'svelte_component_missing_this', `\\`<svelte:component>\\` must have a 'this' attribute\\nhttps://svelte.dev/e/svelte_component_missing_this`);\n}\n\n/**\n * `<svelte:element>` must have a 'this' attribute with a value\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_element_missing_this(node) {\n\te(node, 'svelte_element_missing_this', `\\`<svelte:element>\\` must have a 'this' attribute with a value\\nhttps://svelte.dev/e/svelte_element_missing_this`);\n}\n\n/**\n * `<svelte:fragment>` can only have a slot attribute and (optionally) a let: directive\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_fragment_invalid_attribute(node) {\n\te(node, 'svelte_fragment_invalid_attribute', `\\`<svelte:fragment>\\` can only have a slot attribute and (optionally) a let: directive\\nhttps://svelte.dev/e/svelte_fragment_invalid_attribute`);\n}\n\n/**\n * `<svelte:fragment>` must be the direct child of a component\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_fragment_invalid_placement(node) {\n\te(node, 'svelte_fragment_invalid_placement', `\\`<svelte:fragment>\\` must be the direct child of a component\\nhttps://svelte.dev/e/svelte_fragment_invalid_placement`);\n}\n\n/**\n * `<svelte:head>` cannot have attributes nor directives\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_head_illegal_attribute(node) {\n\te(node, 'svelte_head_illegal_attribute', `\\`<svelte:head>\\` cannot have attributes nor directives\\nhttps://svelte.dev/e/svelte_head_illegal_attribute`);\n}\n\n/**\n * A component can only have one `<%name%>` element\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function svelte_meta_duplicate(node, name) {\n\te(node, 'svelte_meta_duplicate', `A component can only have one \\`<${name}>\\` element\\nhttps://svelte.dev/e/svelte_meta_duplicate`);\n}\n\n/**\n * <%name%> cannot have children\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function svelte_meta_invalid_content(node, name) {\n\te(node, 'svelte_meta_invalid_content', `<${name}> cannot have children\\nhttps://svelte.dev/e/svelte_meta_invalid_content`);\n}\n\n/**\n * `<%name%>` tags cannot be inside elements or blocks\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function svelte_meta_invalid_placement(node, name) {\n\te(node, 'svelte_meta_invalid_placement', `\\`<${name}>\\` tags cannot be inside elements or blocks\\nhttps://svelte.dev/e/svelte_meta_invalid_placement`);\n}\n\n/**\n * Valid `<svelte:...>` tag names are %list%\n * @param {null | number | NodeLike} node\n * @param {string} list\n * @returns {never}\n */\nexport function svelte_meta_invalid_tag(node, list) {\n\te(node, 'svelte_meta_invalid_tag', `Valid \\`<svelte:...>\\` tag names are ${list}\\nhttps://svelte.dev/e/svelte_meta_invalid_tag`);\n}\n\n/**\n * \"tag\" option is deprecated — use \"customElement\" instead\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_deprecated_tag(node) {\n\te(node, 'svelte_options_deprecated_tag', `\"tag\" option is deprecated — use \"customElement\" instead\\nhttps://svelte.dev/e/svelte_options_deprecated_tag`);\n}\n\n/**\n * `<svelte:options>` can only receive static attributes\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_invalid_attribute(node) {\n\te(node, 'svelte_options_invalid_attribute', `\\`<svelte:options>\\` can only receive static attributes\\nhttps://svelte.dev/e/svelte_options_invalid_attribute`);\n}\n\n/**\n * Value must be %list%, if specified\n * @param {null | number | NodeLike} node\n * @param {string} list\n * @returns {never}\n */\nexport function svelte_options_invalid_attribute_value(node, list) {\n\te(node, 'svelte_options_invalid_attribute_value', `Value must be ${list}, if specified\\nhttps://svelte.dev/e/svelte_options_invalid_attribute_value`);\n}\n\n/**\n * \"customElement\" must be a string literal defining a valid custom element name or an object of the form { tag?: string; shadow?: \"open\" | \"none\"; props?: { [key: string]: { attribute?: string; reflect?: boolean; type: .. } } }\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_invalid_customelement(node) {\n\te(node, 'svelte_options_invalid_customelement', `\"customElement\" must be a string literal defining a valid custom element name or an object of the form { tag?: string; shadow?: \"open\" | \"none\"; props?: { [key: string]: { attribute?: string; reflect?: boolean; type: .. } } }\\nhttps://svelte.dev/e/svelte_options_invalid_customelement`);\n}\n\n/**\n * \"props\" must be a statically analyzable object literal of the form \"{ [key: string]: { attribute?: string; reflect?: boolean; type?: \"String\" | \"Boolean\" | \"Number\" | \"Array\" | \"Object\" }\"\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_invalid_customelement_props(node) {\n\te(node, 'svelte_options_invalid_customelement_props', `\"props\" must be a statically analyzable object literal of the form \"{ [key: string]: { attribute?: string; reflect?: boolean; type?: \"String\" | \"Boolean\" | \"Number\" | \"Array\" | \"Object\" }\"\\nhttps://svelte.dev/e/svelte_options_invalid_customelement_props`);\n}\n\n/**\n * \"shadow\" must be either \"open\" or \"none\"\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_invalid_customelement_shadow(node) {\n\te(node, 'svelte_options_invalid_customelement_shadow', `\"shadow\" must be either \"open\" or \"none\"\\nhttps://svelte.dev/e/svelte_options_invalid_customelement_shadow`);\n}\n\n/**\n * Tag name must be lowercase and hyphenated\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_invalid_tagname(node) {\n\te(node, 'svelte_options_invalid_tagname', `Tag name must be lowercase and hyphenated\\nhttps://svelte.dev/e/svelte_options_invalid_tagname`);\n}\n\n/**\n * Tag name is reserved\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_options_reserved_tagname(node) {\n\te(node, 'svelte_options_reserved_tagname', `Tag name is reserved\\nhttps://svelte.dev/e/svelte_options_reserved_tagname`);\n}\n\n/**\n * `<svelte:options>` unknown attribute '%name%'\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @returns {never}\n */\nexport function svelte_options_unknown_attribute(node, name) {\n\te(node, 'svelte_options_unknown_attribute', `\\`<svelte:options>\\` unknown attribute '${name}'\\nhttps://svelte.dev/e/svelte_options_unknown_attribute`);\n}\n\n/**\n * `<svelte:self>` components can only exist inside `{#if}` blocks, `{#each}` blocks, `{#snippet}` blocks or slots passed to components\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function svelte_self_invalid_placement(node) {\n\te(node, 'svelte_self_invalid_placement', `\\`<svelte:self>\\` components can only exist inside \\`{#if}\\` blocks, \\`{#each}\\` blocks, \\`{#snippet}\\` blocks or slots passed to components\\nhttps://svelte.dev/e/svelte_self_invalid_placement`);\n}\n\n/**\n * Expected a valid element or component name. Components must have a valid variable name or dot notation expression\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function tag_invalid_name(node) {\n\te(node, 'tag_invalid_name', `Expected a valid element or component name. Components must have a valid variable name or dot notation expression\\nhttps://svelte.dev/e/tag_invalid_name`);\n}\n\n/**\n * {@%name% ...} tag cannot be %location%\n * @param {null | number | NodeLike} node\n * @param {string} name\n * @param {string} location\n * @returns {never}\n */\nexport function tag_invalid_placement(node, name, location) {\n\te(node, 'tag_invalid_placement', `{@${name} ...} tag cannot be ${location}\\nhttps://svelte.dev/e/tag_invalid_placement`);\n}\n\n/**\n * A `<textarea>` can have either a value attribute or (equivalently) child content, but not both\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function textarea_invalid_content(node) {\n\te(node, 'textarea_invalid_content', `A \\`<textarea>\\` can have either a value attribute or (equivalently) child content, but not both\\nhttps://svelte.dev/e/textarea_invalid_content`);\n}\n\n/**\n * `<title>` cannot have attributes nor directives\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function title_illegal_attribute(node) {\n\te(node, 'title_illegal_attribute', `\\`<title>\\` cannot have attributes nor directives\\nhttps://svelte.dev/e/title_illegal_attribute`);\n}\n\n/**\n * `<title>` can only contain text and {tags}\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function title_invalid_content(node) {\n\te(node, 'title_invalid_content', `\\`<title>\\` can only contain text and {tags}\\nhttps://svelte.dev/e/title_invalid_content`);\n}\n\n/**\n * Cannot use `%type%:` alongside existing `%existing%:` directive\n * @param {null | number | NodeLike} node\n * @param {string} type\n * @param {string} existing\n * @returns {never}\n */\nexport function transition_conflict(node, type, existing) {\n\te(node, 'transition_conflict', `Cannot use \\`${type}:\\` alongside existing \\`${existing}:\\` directive\\nhttps://svelte.dev/e/transition_conflict`);\n}\n\n/**\n * Cannot use multiple `%type%:` directives on a single element\n * @param {null | number | NodeLike} node\n * @param {string} type\n * @returns {never}\n */\nexport function transition_duplicate(node, type) {\n\te(node, 'transition_duplicate', `Cannot use multiple \\`${type}:\\` directives on a single element\\nhttps://svelte.dev/e/transition_duplicate`);\n}\n\n/**\n * Unexpected end of input\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function unexpected_eof(node) {\n\te(node, 'unexpected_eof', `Unexpected end of input\\nhttps://svelte.dev/e/unexpected_eof`);\n}\n\n/**\n * '%word%' is a reserved word in JavaScript and cannot be used here\n * @param {null | number | NodeLike} node\n * @param {string} word\n * @returns {never}\n */\nexport function unexpected_reserved_word(node, word) {\n\te(node, 'unexpected_reserved_word', `'${word}' is a reserved word in JavaScript and cannot be used here\\nhttps://svelte.dev/e/unexpected_reserved_word`);\n}\n\n/**\n * Unterminated string constant\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function unterminated_string_constant(node) {\n\te(node, 'unterminated_string_constant', `Unterminated string constant\\nhttps://svelte.dev/e/unterminated_string_constant`);\n}\n\n/**\n * Void elements cannot have children or closing tags\n * @param {null | number | NodeLike} node\n * @returns {never}\n */\nexport function void_element_invalid_content(node) {\n\te(node, 'void_element_invalid_content', `Void elements cannot have children or closing tags\\nhttps://svelte.dev/e/void_element_invalid_content`);\n}", "const SQUARE_BRACKET_OPEN = '[';\nconst SQUARE_BRACKET_CLOSE = ']';\nconst CURLY_BRACKET_OPEN = '{';\nconst CURLY_BRACKET_CLOSE = '}';\nconst PARENTHESES_OPEN = '(';\nconst PARENTHESES_CLOSE = ')';\n\n/** @param {string} char */\nexport function is_bracket_open(char) {\n\treturn char === SQUARE_BRACKET_OPEN || char === CURLY_BRACKET_OPEN;\n}\n\n/** @param {string} char */\nexport function is_bracket_close(char) {\n\treturn char === SQUARE_BRACKET_CLOSE || char === CURLY_BRACKET_CLOSE;\n}\n\n/** @param {string} open */\nexport function get_bracket_close(open) {\n\tif (open === SQUARE_BRACKET_OPEN) {\n\t\treturn SQUARE_BRACKET_CLOSE;\n\t}\n\n\tif (open === CURLY_BRACKET_OPEN) {\n\t\treturn CURLY_BRACKET_CLOSE;\n\t}\n\n\tif (open === PARENTHESES_OPEN) {\n\t\treturn PARENTHESES_CLOSE;\n\t}\n}\n\n/**\n * @param {number} num\n * @returns {number} Infinity if {@link num} is negative, else {@link num}.\n */\nfunction infinity_if_negative(num) {\n\tif (num < 0) {\n\t\treturn Infinity;\n\t}\n\treturn num;\n}\n\n/**\n * @param {string} string The string to search.\n * @param {number} search_start_index The index to start searching at.\n * @param {\"'\" | '\"' | '`'} string_start_char The character that started this string.\n * @returns {number} The index of the end of this string expression, or `Infinity` if not found.\n */\nfunction find_string_end(string, search_start_index, string_start_char) {\n\tlet string_to_search;\n\tif (string_start_char === '`') {\n\t\tstring_to_search = string;\n\t} else {\n\t\t// we could slice at the search start index, but this way the index remains valid\n\t\tstring_to_search = string.slice(\n\t\t\t0,\n\t\t\tinfinity_if_negative(string.indexOf('\\n', search_start_index))\n\t\t);\n\t}\n\n\treturn find_unescaped_char(string_to_search, search_start_index, string_start_char);\n}\n\n/**\n * @param {string} string The string to search.\n * @param {number} search_start_index The index to start searching at.\n * @returns {number} The index of the end of this regex expression, or `Infinity` if not found.\n */\nfunction find_regex_end(string, search_start_index) {\n\treturn find_unescaped_char(string, search_start_index, '/');\n}\n\n/**\n *\n * @param {string} string The string to search.\n * @param {number} search_start_index The index to begin the search at.\n * @param {string} char The character to search for.\n * @returns {number} The index of the first unescaped instance of {@link char}, or `Infinity` if not found.\n */\nfunction find_unescaped_char(string, search_start_index, char) {\n\tlet i = search_start_index;\n\twhile (true) {\n\t\tconst found_index = string.indexOf(char, i);\n\t\tif (found_index === -1) {\n\t\t\treturn Infinity;\n\t\t}\n\t\tif (count_leading_backslashes(string, found_index - 1) % 2 === 0) {\n\t\t\treturn found_index;\n\t\t}\n\t\ti = found_index + 1;\n\t}\n}\n\n/**\n * Count consecutive leading backslashes before {@link search_start_index}.\n *\n * @example\n * ```js\n * count_leading_backslashes('\\\\\\\\\\\\foo', 2); // 3 (the backslashes have to be escaped in the string literal, there are three in reality)\n * ```\n *\n * @param {string} string The string to search.\n * @param {number} search_start_index The index to begin the search at.\n */\nfunction count_leading_backslashes(string, search_start_index) {\n\tlet i = search_start_index;\n\tlet count = 0;\n\twhile (string[i] === '\\\\') {\n\t\tcount++;\n\t\ti--;\n\t}\n\treturn count;\n}\n\n/**\n * Finds the corresponding closing bracket, ignoring brackets found inside comments, strings, or regex expressions.\n * @param {string} template The string to search.\n * @param {number} index The index to begin the search at.\n * @param {string} open The opening bracket (ex: `'{'` will search for `'}'`).\n * @returns {number | undefined} The index of the closing bracket, or undefined if not found.\n */\nexport function find_matching_bracket(template, index, open) {\n\tconst close = get_bracket_close(open);\n\tlet brackets = 1;\n\tlet i = index;\n\twhile (brackets > 0 && i < template.length) {\n\t\tconst char = template[i];\n\t\tswitch (char) {\n\t\t\tcase \"'\":\n\t\t\tcase '\"':\n\t\t\tcase '`':\n\t\t\t\ti = find_string_end(template, i + 1, char) + 1;\n\t\t\t\tcontinue;\n\t\t\tcase '/': {\n\t\t\t\tconst next_char = template[i + 1];\n\t\t\t\tif (!next_char) continue;\n\t\t\t\tif (next_char === '/') {\n\t\t\t\t\ti = infinity_if_negative(template.indexOf('\\n', i + 1)) + '\\n'.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (next_char === '*') {\n\t\t\t\t\ti = infinity_if_negative(template.indexOf('*/', i + 1)) + '*/'.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ti = find_regex_end(template, i + 1) + '/'.length;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst char = template[i];\n\t\t\t\tif (char === open) {\n\t\t\t\t\tbrackets++;\n\t\t\t\t} else if (char === close) {\n\t\t\t\t\tbrackets--;\n\t\t\t\t}\n\t\t\t\tif (brackets === 0) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { Parser } from '../index.js' */\nimport { parse_expression_at } from '../acorn.js';\nimport { regex_whitespace } from '../../patterns.js';\nimport * as e from '../../../errors.js';\nimport { find_matching_bracket } from '../utils/bracket.js';\n\n/**\n * @param {Parser} parser\n * @param {string} [opening_token]\n * @returns {Expression | undefined}\n */\nexport function get_loose_identifier(parser, opening_token) {\n\t// Find the next } and treat it as the end of the expression\n\tconst end = find_matching_bracket(parser.template, parser.index, opening_token ?? '{');\n\tif (end) {\n\t\tconst start = parser.index;\n\t\tparser.index = end;\n\t\t// We don't know what the expression is and signal this by returning an empty identifier\n\t\treturn {\n\t\t\ttype: 'Identifier',\n\t\t\tstart,\n\t\t\tend,\n\t\t\tname: ''\n\t\t};\n\t}\n}\n\n/**\n * @param {Parser} parser\n * @param {string} [opening_token]\n * @param {boolean} [disallow_loose]\n * @returns {Expression}\n */\nexport default function read_expression(parser, opening_token, disallow_loose) {\n\ttry {\n\t\tconst node = parse_expression_at(parser.template, parser.ts, parser.index);\n\n\t\tlet num_parens = 0;\n\n\t\tif (node.leadingComments !== undefined && node.leadingComments.length > 0) {\n\t\t\tparser.index = node.leadingComments.at(-1).end;\n\t\t}\n\n\t\tfor (let i = parser.index; i < /** @type {number} */ (node.start); i += 1) {\n\t\t\tif (parser.template[i] === '(') num_parens += 1;\n\t\t}\n\n\t\tlet index = /** @type {number} */ (node.end);\n\t\tif (node.trailingComments !== undefined && node.trailingComments.length > 0) {\n\t\t\tindex = node.trailingComments.at(-1).end;\n\t\t}\n\n\t\twhile (num_parens > 0) {\n\t\t\tconst char = parser.template[index];\n\n\t\t\tif (char === ')') {\n\t\t\t\tnum_parens -= 1;\n\t\t\t} else if (!regex_whitespace.test(char)) {\n\t\t\t\te.expected_token(index, ')');\n\t\t\t}\n\n\t\t\tindex += 1;\n\t\t}\n\n\t\tparser.index = index;\n\n\t\treturn /** @type {Expression} */ (node);\n\t} catch (err) {\n\t\t// If we are in an each loop we need the error to be thrown in cases like\n\t\t// `as { y = z }` so we still throw and handle the error there\n\t\tif (parser.loose && !disallow_loose) {\n\t\t\tconst expression = get_loose_identifier(parser, opening_token);\n\t\t\tif (expression) {\n\t\t\t\treturn expression;\n\t\t\t}\n\t\t}\n\n\t\tparser.acorn_error(err);\n\t}\n}\n", "/**\n * @param {string} str\n * @returns {string}\n */\nexport function sanitize_template_string(str) {\n\treturn str.replace(/(`|\\${|\\\\)/g, '\\\\$1');\n}\n", "/** @import * as ESTree from 'estree' */\nimport { regex_is_valid_identifier } from '../phases/patterns.js';\nimport { sanitize_template_string } from './sanitize_template_string.js';\n\n/**\n * @param {Array<ESTree.Expression | ESTree.SpreadElement | null>} elements\n * @returns {ESTree.ArrayExpression}\n */\nexport function array(elements = []) {\n\treturn { type: 'ArrayExpression', elements };\n}\n\n/**\n * @param {Array<ESTree.Pattern | null>} elements\n * @returns {ESTree.ArrayPattern}\n */\nexport function array_pattern(elements) {\n\treturn { type: 'ArrayPattern', elements };\n}\n\n/**\n * @param {ESTree.Pattern} left\n * @param {ESTree.Expression} right\n * @returns {ESTree.AssignmentPattern}\n */\nexport function assignment_pattern(left, right) {\n\treturn { type: 'AssignmentPattern', left, right };\n}\n\n/**\n * @param {Array<ESTree.Pattern>} params\n * @param {ESTree.BlockStatement | ESTree.Expression} body\n * @returns {ESTree.ArrowFunctionExpression}\n */\nexport function arrow(params, body) {\n\treturn {\n\t\ttype: 'ArrowFunctionExpression',\n\t\tparams,\n\t\tbody,\n\t\texpression: body.type !== 'BlockStatement',\n\t\tgenerator: false,\n\t\tasync: false,\n\t\tmetadata: /** @type {any} */ (null) // should not be used by codegen\n\t};\n}\n\n/**\n * @param {ESTree.AssignmentOperator} operator\n * @param {ESTree.Pattern} left\n * @param {ESTree.Expression} right\n * @returns {ESTree.AssignmentExpression}\n */\nexport function assignment(operator, left, right) {\n\treturn { type: 'AssignmentExpression', operator, left, right };\n}\n\n/**\n * @template T\n * @param {T & ESTree.BaseFunction} func\n * @returns {T & ESTree.BaseFunction}\n */\nexport function async(func) {\n\treturn { ...func, async: true };\n}\n\n/**\n * @param {ESTree.Expression} argument\n * @returns {ESTree.AwaitExpression}\n */\nfunction await_builder(argument) {\n\treturn { type: 'AwaitExpression', argument };\n}\n\n/**\n * @param {ESTree.BinaryOperator} operator\n * @param {ESTree.Expression} left\n * @param {ESTree.Expression} right\n * @returns {ESTree.BinaryExpression}\n */\nexport function binary(operator, left, right) {\n\treturn { type: 'BinaryExpression', operator, left, right };\n}\n\n/**\n * @param {ESTree.Statement[]} body\n * @returns {ESTree.BlockStatement}\n */\nexport function block(body) {\n\treturn { type: 'BlockStatement', body };\n}\n\n/**\n * @param {string} name\n * @param {ESTree.Statement} body\n * @returns {ESTree.LabeledStatement}\n */\nexport function labeled(name, body) {\n\treturn { type: 'LabeledStatement', label: id(name), body };\n}\n\n/**\n * @param {string | ESTree.Expression} callee\n * @param {...(ESTree.Expression | ESTree.SpreadElement | false | undefined)} args\n * @returns {ESTree.CallExpression}\n */\nexport function call(callee, ...args) {\n\tif (typeof callee === 'string') callee = id(callee);\n\targs = args.slice();\n\n\t// replacing missing arguments with `undefined`, unless they're at the end in which case remove them\n\tlet i = args.length;\n\tlet popping = true;\n\twhile (i--) {\n\t\tif (!args[i]) {\n\t\t\tif (popping) {\n\t\t\t\targs.pop();\n\t\t\t} else {\n\t\t\t\targs[i] = id('undefined');\n\t\t\t}\n\t\t} else {\n\t\t\tpopping = false;\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: 'CallExpression',\n\t\tcallee,\n\t\targuments: /** @type {Array<ESTree.Expression | ESTree.SpreadElement>} */ (args),\n\t\toptional: false\n\t};\n}\n\n/**\n * @param {string | ESTree.Expression} callee\n * @param {...ESTree.Expression} args\n * @returns {ESTree.ChainExpression}\n */\nexport function maybe_call(callee, ...args) {\n\tconst expression = /** @type {ESTree.SimpleCallExpression} */ (call(callee, ...args));\n\texpression.optional = true;\n\n\treturn {\n\t\ttype: 'ChainExpression',\n\t\texpression\n\t};\n}\n\n/**\n * @param {ESTree.UnaryOperator} operator\n * @param {ESTree.Expression} argument\n * @returns {ESTree.UnaryExpression}\n */\nexport function unary(operator, argument) {\n\treturn { type: 'UnaryExpression', argument, operator, prefix: true };\n}\n\nexport const void0 = unary('void', literal(0));\n\n/**\n * @param {ESTree.Expression} test\n * @param {ESTree.Expression} consequent\n * @param {ESTree.Expression} alternate\n * @returns {ESTree.ConditionalExpression}\n */\nexport function conditional(test, consequent, alternate) {\n\treturn { type: 'ConditionalExpression', test, consequent, alternate };\n}\n\n/**\n * @param {ESTree.LogicalOperator} operator\n * @param {ESTree.Expression} left\n * @param {ESTree.Expression} right\n * @returns {ESTree.LogicalExpression}\n */\nexport function logical(operator, left, right) {\n\treturn { type: 'LogicalExpression', operator, left, right };\n}\n\n/**\n * @param {'const' | 'let' | 'var'} kind\n * @param {ESTree.VariableDeclarator[]} declarations\n * @returns {ESTree.VariableDeclaration}\n */\nexport function declaration(kind, declarations) {\n\treturn {\n\t\ttype: 'VariableDeclaration',\n\t\tkind,\n\t\tdeclarations\n\t};\n}\n\n/**\n * @param {ESTree.Pattern | string} pattern\n * @param {ESTree.Expression} [init]\n * @returns {ESTree.VariableDeclarator}\n */\nexport function declarator(pattern, init) {\n\tif (typeof pattern === 'string') pattern = id(pattern);\n\treturn { type: 'VariableDeclarator', id: pattern, init };\n}\n\n/** @type {ESTree.EmptyStatement} */\nexport const empty = {\n\ttype: 'EmptyStatement'\n};\n\n/**\n * @param {ESTree.Expression | ESTree.MaybeNamedClassDeclaration | ESTree.MaybeNamedFunctionDeclaration} declaration\n * @returns {ESTree.ExportDefaultDeclaration}\n */\nexport function export_default(declaration) {\n\treturn { type: 'ExportDefaultDeclaration', declaration };\n}\n\n/**\n * @param {ESTree.Identifier} id\n * @param {ESTree.Pattern[]} params\n * @param {ESTree.BlockStatement} body\n * @returns {ESTree.FunctionDeclaration}\n */\nexport function function_declaration(id, params, body) {\n\treturn {\n\t\ttype: 'FunctionDeclaration',\n\t\tid,\n\t\tparams,\n\t\tbody,\n\t\tgenerator: false,\n\t\tasync: false,\n\t\tmetadata: /** @type {any} */ (null) // should not be used by codegen\n\t};\n}\n\n/**\n * @param {string} name\n * @param {ESTree.Statement[]} body\n * @returns {ESTree.Property & { value: ESTree.FunctionExpression}}}\n */\nexport function get(name, body) {\n\treturn prop('get', key(name), function_builder(null, [], block(body)));\n}\n\n/**\n * @param {string} name\n * @returns {ESTree.Identifier}\n */\nexport function id(name) {\n\treturn { type: 'Identifier', name };\n}\n\n/**\n * @param {string} name\n * @returns {ESTree.PrivateIdentifier}\n */\nexport function private_id(name) {\n\treturn { type: 'PrivateIdentifier', name };\n}\n\n/**\n * @param {string} local\n * @returns {ESTree.ImportNamespaceSpecifier}\n */\nfunction import_namespace(local) {\n\treturn {\n\t\ttype: 'ImportNamespaceSpecifier',\n\t\tlocal: id(local)\n\t};\n}\n\n/**\n * @param {string} name\n * @param {ESTree.Expression} value\n * @returns {ESTree.Property}\n */\nexport function init(name, value) {\n\treturn prop('init', key(name), value);\n}\n\n/**\n * @param {string | boolean | null | number | RegExp} value\n * @returns {ESTree.Literal}\n */\nexport function literal(value) {\n\t// @ts-expect-error we don't want to muck around with bigint here\n\treturn { type: 'Literal', value };\n}\n\n/**\n * @param {ESTree.Expression | ESTree.Super} object\n * @param {string | ESTree.Expression | ESTree.PrivateIdentifier} property\n * @param {boolean} computed\n * @param {boolean} optional\n * @returns {ESTree.MemberExpression}\n */\nexport function member(object, property, computed = false, optional = false) {\n\tif (typeof property === 'string') {\n\t\tproperty = id(property);\n\t}\n\n\treturn { type: 'MemberExpression', object, property, computed, optional };\n}\n\n/**\n * @param {string} path\n * @returns {ESTree.Identifier | ESTree.MemberExpression}\n */\nexport function member_id(path) {\n\tconst parts = path.split('.');\n\n\t/** @type {ESTree.Identifier | ESTree.MemberExpression} */\n\tlet expression = id(parts[0]);\n\n\tfor (let i = 1; i < parts.length; i += 1) {\n\t\texpression = member(expression, id(parts[i]));\n\t}\n\treturn expression;\n}\n\n/**\n * @param {Array<ESTree.Property | ESTree.SpreadElement>} properties\n * @returns {ESTree.ObjectExpression}\n */\nexport function object(properties) {\n\treturn { type: 'ObjectExpression', properties };\n}\n\n/**\n * @param {Array<ESTree.RestElement | ESTree.AssignmentProperty | ESTree.Property>} properties\n * @returns {ESTree.ObjectPattern}\n */\nexport function object_pattern(properties) {\n\t// @ts-expect-error the types appear to be wrong\n\treturn { type: 'ObjectPattern', properties };\n}\n\n/**\n * @template {ESTree.Expression} Value\n * @param {'init' | 'get' | 'set'} kind\n * @param {ESTree.Expression} key\n * @param {Value} value\n * @param {boolean} computed\n * @returns {ESTree.Property & { value: Value }}\n */\nexport function prop(kind, key, value, computed = false) {\n\treturn { type: 'Property', kind, key, value, method: false, shorthand: false, computed };\n}\n\n/**\n * @param {ESTree.Expression | ESTree.PrivateIdentifier} key\n * @param {ESTree.Expression | null | undefined} value\n * @param {boolean} computed\n * @param {boolean} is_static\n * @returns {ESTree.PropertyDefinition}\n */\nexport function prop_def(key, value, computed = false, is_static = false) {\n\treturn { type: 'PropertyDefinition', key, value, computed, static: is_static };\n}\n\n/**\n * @param {string} cooked\n * @param {boolean} tail\n * @returns {ESTree.TemplateElement}\n */\nexport function quasi(cooked, tail = false) {\n\tconst raw = sanitize_template_string(cooked);\n\treturn { type: 'TemplateElement', value: { raw, cooked }, tail };\n}\n\n/**\n * @param {ESTree.Pattern} argument\n * @returns {ESTree.RestElement}\n */\nexport function rest(argument) {\n\treturn { type: 'RestElement', argument };\n}\n\n/**\n * @param {ESTree.Expression[]} expressions\n * @returns {ESTree.SequenceExpression}\n */\nexport function sequence(expressions) {\n\treturn { type: 'SequenceExpression', expressions };\n}\n\n/**\n * @param {string} name\n * @param {ESTree.Statement[]} body\n * @returns {ESTree.Property & { value: ESTree.FunctionExpression}}\n */\nexport function set(name, body) {\n\treturn prop('set', key(name), function_builder(null, [id('$$value')], block(body)));\n}\n\n/**\n * @param {ESTree.Expression} argument\n * @returns {ESTree.SpreadElement}\n */\nexport function spread(argument) {\n\treturn { type: 'SpreadElement', argument };\n}\n\n/**\n * @param {ESTree.Expression} expression\n * @returns {ESTree.ExpressionStatement}\n */\nexport function stmt(expression) {\n\treturn { type: 'ExpressionStatement', expression };\n}\n\n/**\n * @param {ESTree.TemplateElement[]} elements\n * @param {ESTree.Expression[]} expressions\n * @returns {ESTree.TemplateLiteral}\n */\nexport function template(elements, expressions) {\n\treturn { type: 'TemplateLiteral', quasis: elements, expressions };\n}\n\n/**\n * @param {ESTree.Expression | ESTree.BlockStatement} expression\n * @param {boolean} [async]\n * @returns {ESTree.Expression}\n */\nexport function thunk(expression, async = false) {\n\tconst fn = arrow([], expression);\n\tif (async) fn.async = true;\n\treturn unthunk(fn);\n}\n\n/**\n * Replace \"(arg) => func(arg)\" to \"func\"\n * @param {ESTree.Expression} expression\n * @returns {ESTree.Expression}\n */\nexport function unthunk(expression) {\n\tif (\n\t\texpression.type === 'ArrowFunctionExpression' &&\n\t\texpression.async === false &&\n\t\texpression.body.type === 'CallExpression' &&\n\t\texpression.body.callee.type === 'Identifier' &&\n\t\texpression.params.length === expression.body.arguments.length &&\n\t\texpression.params.every((param, index) => {\n\t\t\tconst arg = /** @type {ESTree.SimpleCallExpression} */ (expression.body).arguments[index];\n\t\t\treturn param.type === 'Identifier' && arg.type === 'Identifier' && param.name === arg.name;\n\t\t})\n\t) {\n\t\treturn expression.body.callee;\n\t}\n\treturn expression;\n}\n\n/**\n *\n * @param {string | ESTree.Expression} expression\n * @param  {...ESTree.Expression} args\n * @returns {ESTree.NewExpression}\n */\nfunction new_builder(expression, ...args) {\n\tif (typeof expression === 'string') expression = id(expression);\n\n\treturn {\n\t\tcallee: expression,\n\t\targuments: args,\n\t\ttype: 'NewExpression'\n\t};\n}\n\n/**\n * @param {ESTree.UpdateOperator} operator\n * @param {ESTree.Expression} argument\n * @param {boolean} prefix\n * @returns {ESTree.UpdateExpression}\n */\nexport function update(operator, argument, prefix = false) {\n\treturn { type: 'UpdateExpression', operator, argument, prefix };\n}\n\n/**\n * @param {ESTree.Expression} test\n * @param {ESTree.Statement} body\n * @returns {ESTree.DoWhileStatement}\n */\nexport function do_while(test, body) {\n\treturn { type: 'DoWhileStatement', test, body };\n}\n\nconst true_instance = literal(true);\nconst false_instance = literal(false);\nconst null_instance = literal(null);\n\n/** @type {ESTree.DebuggerStatement} */\nconst debugger_builder = {\n\ttype: 'DebuggerStatement'\n};\n\n/** @type {ESTree.ThisExpression} */\nconst this_instance = {\n\ttype: 'ThisExpression'\n};\n\n/**\n * @param {string | ESTree.Pattern} pattern\n * @param { ESTree.Expression} [init]\n * @returns {ESTree.VariableDeclaration}\n */\nfunction let_builder(pattern, init) {\n\treturn declaration('let', [declarator(pattern, init)]);\n}\n\n/**\n * @param {string | ESTree.Pattern} pattern\n * @param { ESTree.Expression} init\n * @returns {ESTree.VariableDeclaration}\n */\nfunction const_builder(pattern, init) {\n\treturn declaration('const', [declarator(pattern, init)]);\n}\n\n/**\n * @param {string | ESTree.Pattern} pattern\n * @param { ESTree.Expression} [init]\n * @returns {ESTree.VariableDeclaration}\n */\nfunction var_builder(pattern, init) {\n\treturn declaration('var', [declarator(pattern, init)]);\n}\n\n/**\n *\n * @param {ESTree.VariableDeclaration | ESTree.Expression | null} init\n * @param {ESTree.Expression} test\n * @param {ESTree.Expression} update\n * @param {ESTree.Statement} body\n * @returns {ESTree.ForStatement}\n */\nfunction for_builder(init, test, update, body) {\n\treturn { type: 'ForStatement', init, test, update, body };\n}\n\n/**\n *\n * @param {'constructor' | 'method' | 'get' | 'set'} kind\n * @param {ESTree.Expression | ESTree.PrivateIdentifier} key\n * @param {ESTree.Pattern[]} params\n * @param {ESTree.Statement[]} body\n * @param {boolean} computed\n * @param {boolean} is_static\n * @returns {ESTree.MethodDefinition}\n */\nexport function method(kind, key, params, body, computed = false, is_static = false) {\n\treturn {\n\t\ttype: 'MethodDefinition',\n\t\tkey,\n\t\tkind,\n\t\tvalue: function_builder(null, params, block(body)),\n\t\tcomputed,\n\t\tstatic: is_static\n\t};\n}\n\n/**\n *\n * @param {ESTree.Identifier | null} id\n * @param {ESTree.Pattern[]} params\n * @param {ESTree.BlockStatement} body\n * @returns {ESTree.FunctionExpression}\n */\nfunction function_builder(id, params, body) {\n\treturn {\n\t\ttype: 'FunctionExpression',\n\t\tid,\n\t\tparams,\n\t\tbody,\n\t\tgenerator: false,\n\t\tasync: false,\n\t\tmetadata: /** @type {any} */ (null) // should not be used by codegen\n\t};\n}\n\n/**\n * @param {ESTree.Expression} test\n * @param {ESTree.Statement} consequent\n * @param {ESTree.Statement} [alternate]\n * @returns {ESTree.IfStatement}\n */\nfunction if_builder(test, consequent, alternate) {\n\treturn { type: 'IfStatement', test, consequent, alternate };\n}\n\n/**\n * @param {string} as\n * @param {string} source\n * @returns {ESTree.ImportDeclaration}\n */\nexport function import_all(as, source) {\n\treturn {\n\t\ttype: 'ImportDeclaration',\n\t\tsource: literal(source),\n\t\tspecifiers: [import_namespace(as)]\n\t};\n}\n\n/**\n * @param {Array<[string, string]>} parts\n * @param {string} source\n * @returns {ESTree.ImportDeclaration}\n */\nexport function imports(parts, source) {\n\treturn {\n\t\ttype: 'ImportDeclaration',\n\t\tsource: literal(source),\n\t\tspecifiers: parts.map((p) => ({\n\t\t\ttype: 'ImportSpecifier',\n\t\t\timported: id(p[0]),\n\t\t\tlocal: id(p[1])\n\t\t}))\n\t};\n}\n\n/**\n * @param {ESTree.Expression | null} argument\n * @returns {ESTree.ReturnStatement}\n */\nfunction return_builder(argument = null) {\n\treturn { type: 'ReturnStatement', argument };\n}\n\n/**\n * @param {string} str\n * @returns {ESTree.ThrowStatement}\n */\nexport function throw_error(str) {\n\treturn {\n\t\ttype: 'ThrowStatement',\n\t\targument: new_builder('Error', literal(str))\n\t};\n}\n\nexport {\n\tawait_builder as await,\n\tlet_builder as let,\n\tconst_builder as const,\n\tvar_builder as var,\n\ttrue_instance as true,\n\tfalse_instance as false,\n\tfor_builder as for,\n\tfunction_builder as function,\n\treturn_builder as return,\n\tif_builder as if,\n\tthis_instance as this,\n\tnull_instance as null,\n\tdebugger_builder as debugger\n};\n\n/**\n * @param {string} name\n * @returns {ESTree.Expression}\n */\nexport function key(name) {\n\treturn regex_is_valid_identifier.test(name) ? id(name) : literal(name);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import * as ESTree from 'estree' */\nimport { walk } from 'zimmerframe';\nimport * as b from '#compiler/builders';\n\n/**\n * Gets the left-most identifier of a member expression or identifier.\n * @param {ESTree.MemberExpression | ESTree.Identifier} expression\n * @returns {ESTree.Identifier | null}\n */\nexport function object(expression) {\n\twhile (expression.type === 'MemberExpression') {\n\t\texpression = /** @type {ESTree.MemberExpression | ESTree.Identifier} */ (expression.object);\n\t}\n\n\tif (expression.type !== 'Identifier') {\n\t\treturn null;\n\t}\n\n\treturn expression;\n}\n\n/**\n * Returns true if the attribute contains a single static text node.\n * @param {AST.Attribute} attribute\n * @returns {attribute is AST.Attribute & { value: [AST.Text] }}\n */\nexport function is_text_attribute(attribute) {\n\treturn (\n\t\tArray.isArray(attribute.value) &&\n\t\tattribute.value.length === 1 &&\n\t\tattribute.value[0].type === 'Text'\n\t);\n}\n\n/**\n * Returns true if the attribute contains a single expression node.\n * In Svelte 5, this also includes a single expression node wrapped in an array.\n * TODO change that in a future version\n * @param {AST.Attribute} attribute\n * @returns {attribute is AST.Attribute & { value: [AST.ExpressionTag] | AST.ExpressionTag }}\n */\nexport function is_expression_attribute(attribute) {\n\treturn (\n\t\t(attribute.value !== true && !Array.isArray(attribute.value)) ||\n\t\t(Array.isArray(attribute.value) &&\n\t\t\tattribute.value.length === 1 &&\n\t\t\tattribute.value[0].type === 'ExpressionTag')\n\t);\n}\n\n/**\n * Returns the single attribute expression node.\n * In Svelte 5, this also includes a single expression node wrapped in an array.\n * TODO change that in a future version\n * @param { AST.Attribute & { value: [AST.ExpressionTag] | AST.ExpressionTag }} attribute\n * @returns {ESTree.Expression}\n */\nexport function get_attribute_expression(attribute) {\n\treturn Array.isArray(attribute.value)\n\t\t? /** @type {AST.ExpressionTag} */ (attribute.value[0]).expression\n\t\t: attribute.value.expression;\n}\n\n/**\n * Returns the expression chunks of an attribute value\n * @param {AST.Attribute['value']} value\n * @returns {Array<AST.Text | AST.ExpressionTag>}\n */\nexport function get_attribute_chunks(value) {\n\treturn Array.isArray(value) ? value : typeof value === 'boolean' ? [] : [value];\n}\n\n/**\n * Returns true if the attribute starts with `on` and contains a single expression node.\n * @param {AST.Attribute} attribute\n * @returns {attribute is AST.Attribute & { value: [AST.ExpressionTag] | AST.ExpressionTag }}\n */\nexport function is_event_attribute(attribute) {\n\treturn is_expression_attribute(attribute) && attribute.name.startsWith('on');\n}\n\n/**\n * Extracts all identifiers and member expressions from a pattern.\n * @param {ESTree.Pattern} pattern\n * @param {Array<ESTree.Identifier | ESTree.MemberExpression>} [nodes]\n * @returns {Array<ESTree.Identifier | ESTree.MemberExpression>}\n */\nexport function unwrap_pattern(pattern, nodes = []) {\n\tswitch (pattern.type) {\n\t\tcase 'Identifier':\n\t\t\tnodes.push(pattern);\n\t\t\tbreak;\n\n\t\tcase 'MemberExpression':\n\t\t\t// member expressions can be part of an assignment pattern, but not a binding pattern\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#binding_and_assignment\n\t\t\tnodes.push(pattern);\n\t\t\tbreak;\n\n\t\tcase 'ObjectPattern':\n\t\t\tfor (const prop of pattern.properties) {\n\t\t\t\tif (prop.type === 'RestElement') {\n\t\t\t\t\tunwrap_pattern(prop.argument, nodes);\n\t\t\t\t} else {\n\t\t\t\t\tunwrap_pattern(prop.value, nodes);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'ArrayPattern':\n\t\t\tfor (const element of pattern.elements) {\n\t\t\t\tif (element) unwrap_pattern(element, nodes);\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'RestElement':\n\t\t\tunwrap_pattern(pattern.argument, nodes);\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern':\n\t\t\tunwrap_pattern(pattern.left, nodes);\n\t\t\tbreak;\n\t}\n\n\treturn nodes;\n}\n\n/**\n * Extracts all identifiers from a pattern.\n * @param {ESTree.Pattern} pattern\n * @returns {ESTree.Identifier[]}\n */\nexport function extract_identifiers(pattern) {\n\treturn unwrap_pattern(pattern, []).filter((node) => node.type === 'Identifier');\n}\n\n/**\n * Extracts all identifiers and a stringified keypath from an expression.\n * TODO replace this with `expression.dependencies`\n * @param {ESTree.Expression} expr\n * @returns {[keypath: string, ids: ESTree.Identifier[]]}\n */\nexport function extract_all_identifiers_from_expression(expr) {\n\t/** @type {ESTree.Identifier[]} */\n\tlet nodes = [];\n\t/** @type {string[]} */\n\tlet keypath = [];\n\n\twalk(\n\t\texpr,\n\t\t{},\n\t\t{\n\t\t\tIdentifier(node, { path }) {\n\t\t\t\tconst parent = path.at(-1);\n\t\t\t\tif (parent?.type !== 'MemberExpression' || parent.property !== node || parent.computed) {\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t}\n\n\t\t\t\tif (parent?.type === 'MemberExpression' && parent.computed && parent.property === node) {\n\t\t\t\t\tkeypath.push(`[${node.name}]`);\n\t\t\t\t} else {\n\t\t\t\t\tkeypath.push(node.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\tLiteral(node, { path }) {\n\t\t\t\tconst value = typeof node.value === 'string' ? `\"${node.value}\"` : String(node.value);\n\t\t\t\tconst parent = path.at(-1);\n\t\t\t\tif (parent?.type === 'MemberExpression' && parent.computed && parent.property === node) {\n\t\t\t\t\tkeypath.push(`[${value}]`);\n\t\t\t\t} else {\n\t\t\t\t\tkeypath.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tThisExpression(_, { next }) {\n\t\t\t\tkeypath.push('this');\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\t);\n\n\treturn [keypath.join('.'), nodes];\n}\n\n/**\n * Extracts all leaf identifiers from a destructuring expression.\n * @param {ESTree.Identifier | ESTree.ObjectExpression | ESTree.ArrayExpression} node\n * @param {ESTree.Identifier[]} [nodes]\n * @returns\n */\nexport function extract_identifiers_from_destructuring(node, nodes = []) {\n\t// TODO This isn't complete, but it should be enough for our purposes\n\tswitch (node.type) {\n\t\tcase 'Identifier':\n\t\t\tnodes.push(node);\n\t\t\tbreak;\n\n\t\tcase 'ObjectExpression':\n\t\t\tfor (const prop of node.properties) {\n\t\t\t\tif (prop.type === 'Property') {\n\t\t\t\t\textract_identifiers_from_destructuring(/** @type {any} */ (prop.value), nodes);\n\t\t\t\t} else {\n\t\t\t\t\textract_identifiers_from_destructuring(/** @type {any} */ (prop.argument), nodes);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'ArrayExpression':\n\t\t\tfor (const element of node.elements) {\n\t\t\t\tif (element) extract_identifiers_from_destructuring(/** @type {any} */ (element), nodes);\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\treturn nodes;\n}\n\n/**\n * Represents the path of a destructured assignment from either a declaration\n * or assignment expression. For example, given `const { foo: { bar: baz } } = quux`,\n * the path of `baz` is `foo.bar`\n * @typedef {Object} DestructuredAssignment\n * @property {ESTree.Identifier | ESTree.MemberExpression} node The node the destructuring path end in. Can be a member expression only for assignment expressions\n * @property {boolean} is_rest `true` if this is a `...rest` destructuring\n * @property {boolean} has_default_value `true` if this has a fallback value like `const { foo = 'bar } = ..`\n * @property {(expression: ESTree.Expression) => ESTree.Identifier | ESTree.MemberExpression | ESTree.CallExpression | ESTree.AwaitExpression} expression Returns an expression which walks the path starting at the given expression.\n * This will be a call expression if a rest element or default is involved — e.g. `const { foo: { bar: baz = 42 }, ...rest } = quux` — since we can't represent `baz` or `rest` purely as a path\n * Will be an await expression in case of an async default value (`const { foo = await bar } = ...`)\n * @property {(expression: ESTree.Expression) => ESTree.Identifier | ESTree.MemberExpression | ESTree.CallExpression | ESTree.AwaitExpression} update_expression Like `expression` but without default values.\n */\n\n/**\n * Extracts all destructured assignments from a pattern.\n * @param {ESTree.Node} param\n * @returns {DestructuredAssignment[]}\n */\nexport function extract_paths(param) {\n\treturn _extract_paths(\n\t\t[],\n\t\tparam,\n\t\t(node) => /** @type {ESTree.Identifier | ESTree.MemberExpression} */ (node),\n\t\t(node) => /** @type {ESTree.Identifier | ESTree.MemberExpression} */ (node),\n\t\tfalse\n\t);\n}\n\n/**\n * @param {DestructuredAssignment[]} assignments\n * @param {ESTree.Node} param\n * @param {DestructuredAssignment['expression']} expression\n * @param {DestructuredAssignment['update_expression']} update_expression\n * @param {boolean} has_default_value\n * @returns {DestructuredAssignment[]}\n */\nfunction _extract_paths(assignments = [], param, expression, update_expression, has_default_value) {\n\tswitch (param.type) {\n\t\tcase 'Identifier':\n\t\tcase 'MemberExpression':\n\t\t\tassignments.push({\n\t\t\t\tnode: param,\n\t\t\t\tis_rest: false,\n\t\t\t\thas_default_value,\n\t\t\t\texpression,\n\t\t\t\tupdate_expression\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase 'ObjectPattern':\n\t\t\tfor (const prop of param.properties) {\n\t\t\t\tif (prop.type === 'RestElement') {\n\t\t\t\t\t/** @type {DestructuredAssignment['expression']} */\n\t\t\t\t\tconst rest_expression = (object) => {\n\t\t\t\t\t\t/** @type {ESTree.Expression[]} */\n\t\t\t\t\t\tconst props = [];\n\n\t\t\t\t\t\tfor (const p of param.properties) {\n\t\t\t\t\t\t\tif (p.type === 'Property' && p.key.type !== 'PrivateIdentifier') {\n\t\t\t\t\t\t\t\tif (p.key.type === 'Identifier' && !p.computed) {\n\t\t\t\t\t\t\t\t\tprops.push(b.literal(p.key.name));\n\t\t\t\t\t\t\t\t} else if (p.key.type === 'Literal') {\n\t\t\t\t\t\t\t\t\tprops.push(b.literal(String(p.key.value)));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprops.push(b.call('String', p.key));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn b.call('$.exclude_from_object', expression(object), b.array(props));\n\t\t\t\t\t};\n\n\t\t\t\t\tif (prop.argument.type === 'Identifier') {\n\t\t\t\t\t\tassignments.push({\n\t\t\t\t\t\t\tnode: prop.argument,\n\t\t\t\t\t\t\tis_rest: true,\n\t\t\t\t\t\t\thas_default_value,\n\t\t\t\t\t\t\texpression: rest_expression,\n\t\t\t\t\t\t\tupdate_expression: rest_expression\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_extract_paths(\n\t\t\t\t\t\t\tassignments,\n\t\t\t\t\t\t\tprop.argument,\n\t\t\t\t\t\t\trest_expression,\n\t\t\t\t\t\t\trest_expression,\n\t\t\t\t\t\t\thas_default_value\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/** @type {DestructuredAssignment['expression']} */\n\t\t\t\t\tconst object_expression = (object) =>\n\t\t\t\t\t\tb.member(expression(object), prop.key, prop.computed || prop.key.type !== 'Identifier');\n\t\t\t\t\t_extract_paths(\n\t\t\t\t\t\tassignments,\n\t\t\t\t\t\tprop.value,\n\t\t\t\t\t\tobject_expression,\n\t\t\t\t\t\tobject_expression,\n\t\t\t\t\t\thas_default_value\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'ArrayPattern':\n\t\t\tfor (let i = 0; i < param.elements.length; i += 1) {\n\t\t\t\tconst element = param.elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tif (element.type === 'RestElement') {\n\t\t\t\t\t\t/** @type {DestructuredAssignment['expression']} */\n\t\t\t\t\t\tconst rest_expression = (object) =>\n\t\t\t\t\t\t\tb.call(b.member(expression(object), 'slice'), b.literal(i));\n\t\t\t\t\t\tif (element.argument.type === 'Identifier') {\n\t\t\t\t\t\t\tassignments.push({\n\t\t\t\t\t\t\t\tnode: element.argument,\n\t\t\t\t\t\t\t\tis_rest: true,\n\t\t\t\t\t\t\t\thas_default_value,\n\t\t\t\t\t\t\t\texpression: rest_expression,\n\t\t\t\t\t\t\t\tupdate_expression: rest_expression\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_extract_paths(\n\t\t\t\t\t\t\t\tassignments,\n\t\t\t\t\t\t\t\telement.argument,\n\t\t\t\t\t\t\t\trest_expression,\n\t\t\t\t\t\t\t\trest_expression,\n\t\t\t\t\t\t\t\thas_default_value\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/** @type {DestructuredAssignment['expression']} */\n\t\t\t\t\t\tconst array_expression = (object) => b.member(expression(object), b.literal(i), true);\n\t\t\t\t\t\t_extract_paths(\n\t\t\t\t\t\t\tassignments,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\tarray_expression,\n\t\t\t\t\t\t\tarray_expression,\n\t\t\t\t\t\t\thas_default_value\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern': {\n\t\t\t/** @type {DestructuredAssignment['expression']} */\n\t\t\tconst fallback_expression = (object) => build_fallback(expression(object), param.right);\n\n\t\t\tif (param.left.type === 'Identifier') {\n\t\t\t\tassignments.push({\n\t\t\t\t\tnode: param.left,\n\t\t\t\t\tis_rest: false,\n\t\t\t\t\thas_default_value: true,\n\t\t\t\t\texpression: fallback_expression,\n\t\t\t\t\tupdate_expression\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t_extract_paths(assignments, param.left, fallback_expression, update_expression, true);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn assignments;\n}\n\n/**\n * Like `path.at(x)`, but skips over `TSNonNullExpression` and `TSAsExpression` nodes and eases assertions a bit\n * by removing the `| undefined` from the resulting type.\n *\n * @template {AST.SvelteNode} T\n * @param {T[]} path\n * @param {number} at\n */\nexport function get_parent(path, at) {\n\tlet node = path.at(at);\n\t// @ts-expect-error\n\tif (node.type === 'TSNonNullExpression' || node.type === 'TSAsExpression') {\n\t\treturn /** @type {T} */ (path.at(at < 0 ? at - 1 : at + 1));\n\t}\n\treturn /** @type {T} */ (node);\n}\n\n/**\n * Returns `true` if the expression is an identifier, a literal, a function expression,\n * or a logical expression that only contains simple expressions. Used to determine whether\n * something needs to be treated as though accessing it could have side-effects (i.e.\n * reading signals prematurely)\n * @param {ESTree.Expression} node\n * @returns {boolean}\n */\nexport function is_simple_expression(node) {\n\tif (\n\t\tnode.type === 'Literal' ||\n\t\tnode.type === 'Identifier' ||\n\t\tnode.type === 'ArrowFunctionExpression' ||\n\t\tnode.type === 'FunctionExpression'\n\t) {\n\t\treturn true;\n\t}\n\n\tif (node.type === 'ConditionalExpression') {\n\t\treturn (\n\t\t\tis_simple_expression(node.test) &&\n\t\t\tis_simple_expression(node.consequent) &&\n\t\t\tis_simple_expression(node.alternate)\n\t\t);\n\t}\n\n\tif (node.type === 'BinaryExpression' || node.type === 'LogicalExpression') {\n\t\treturn (\n\t\t\tnode.left.type !== 'PrivateIdentifier' &&\n\t\t\tis_simple_expression(node.left) &&\n\t\t\tis_simple_expression(node.right)\n\t\t);\n\t}\n\n\treturn false;\n}\n\n/**\n * @template {ESTree.SimpleCallExpression | ESTree.MemberExpression} T\n * @param {ESTree.ChainExpression & { expression : T } | T} node\n * @returns {T}\n */\nexport function unwrap_optional(node) {\n\treturn node.type === 'ChainExpression' ? node.expression : node;\n}\n\n/**\n * @param {ESTree.Expression | ESTree.Pattern} expression\n * @returns {boolean}\n */\nexport function is_expression_async(expression) {\n\tswitch (expression.type) {\n\t\tcase 'AwaitExpression': {\n\t\t\treturn true;\n\t\t}\n\t\tcase 'ArrayPattern': {\n\t\t\treturn expression.elements.some((element) => element && is_expression_async(element));\n\t\t}\n\t\tcase 'ArrayExpression': {\n\t\t\treturn expression.elements.some((element) => {\n\t\t\t\tif (!element) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (element.type === 'SpreadElement') {\n\t\t\t\t\treturn is_expression_async(element.argument);\n\t\t\t\t} else {\n\t\t\t\t\treturn is_expression_async(element);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcase 'AssignmentPattern':\n\t\tcase 'AssignmentExpression':\n\t\tcase 'BinaryExpression':\n\t\tcase 'LogicalExpression': {\n\t\t\treturn (\n\t\t\t\t(expression.left.type !== 'PrivateIdentifier' && is_expression_async(expression.left)) ||\n\t\t\t\tis_expression_async(expression.right)\n\t\t\t);\n\t\t}\n\t\tcase 'CallExpression':\n\t\tcase 'NewExpression': {\n\t\t\treturn (\n\t\t\t\t(expression.callee.type !== 'Super' && is_expression_async(expression.callee)) ||\n\t\t\t\texpression.arguments.some((element) => {\n\t\t\t\t\tif (element.type === 'SpreadElement') {\n\t\t\t\t\t\treturn is_expression_async(element.argument);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn is_expression_async(element);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tcase 'ChainExpression': {\n\t\t\treturn is_expression_async(expression.expression);\n\t\t}\n\t\tcase 'ConditionalExpression': {\n\t\t\treturn (\n\t\t\t\tis_expression_async(expression.test) ||\n\t\t\t\tis_expression_async(expression.alternate) ||\n\t\t\t\tis_expression_async(expression.consequent)\n\t\t\t);\n\t\t}\n\t\tcase 'ImportExpression': {\n\t\t\treturn is_expression_async(expression.source);\n\t\t}\n\t\tcase 'MemberExpression': {\n\t\t\treturn (\n\t\t\t\t(expression.object.type !== 'Super' && is_expression_async(expression.object)) ||\n\t\t\t\t(expression.property.type !== 'PrivateIdentifier' &&\n\t\t\t\t\tis_expression_async(expression.property))\n\t\t\t);\n\t\t}\n\t\tcase 'ObjectPattern':\n\t\tcase 'ObjectExpression': {\n\t\t\treturn expression.properties.some((property) => {\n\t\t\t\tif (property.type === 'SpreadElement') {\n\t\t\t\t\treturn is_expression_async(property.argument);\n\t\t\t\t} else if (property.type === 'Property') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(property.key.type !== 'PrivateIdentifier' && is_expression_async(property.key)) ||\n\t\t\t\t\t\tis_expression_async(property.value)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcase 'RestElement': {\n\t\t\treturn is_expression_async(expression.argument);\n\t\t}\n\t\tcase 'SequenceExpression':\n\t\tcase 'TemplateLiteral': {\n\t\t\treturn expression.expressions.some((subexpression) => is_expression_async(subexpression));\n\t\t}\n\t\tcase 'TaggedTemplateExpression': {\n\t\t\treturn is_expression_async(expression.tag) || is_expression_async(expression.quasi);\n\t\t}\n\t\tcase 'UnaryExpression':\n\t\tcase 'UpdateExpression': {\n\t\t\treturn is_expression_async(expression.argument);\n\t\t}\n\t\tcase 'YieldExpression': {\n\t\t\treturn expression.argument ? is_expression_async(expression.argument) : false;\n\t\t}\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\n/**\n *\n * @param {ESTree.Expression} expression\n * @param {ESTree.Expression} fallback\n */\nexport function build_fallback(expression, fallback) {\n\tif (is_simple_expression(fallback)) {\n\t\treturn b.call('$.fallback', expression, fallback);\n\t}\n\n\tif (fallback.type === 'AwaitExpression' && is_simple_expression(fallback.argument)) {\n\t\treturn b.await(b.call('$.fallback', expression, fallback.argument));\n\t}\n\n\treturn is_expression_async(fallback)\n\t\t? b.await(b.call('$.fallback', expression, b.thunk(fallback, true), b.true))\n\t\t: b.call('$.fallback', expression, b.thunk(fallback), b.true);\n}\n\n/**\n * @param {ESTree.AssignmentOperator} operator\n * @param {ESTree.Identifier | ESTree.MemberExpression} left\n * @param {ESTree.Expression} right\n */\nexport function build_assignment_value(operator, left, right) {\n\treturn operator === '='\n\t\t? right\n\t\t: // turn something like x += 1 into x = x + 1\n\t\t\t['||=', '&&=', '??='].includes(operator)\n\t\t\t? b.logical(/** @type {ESTree.LogicalOperator} */ (operator.slice(0, -1)), left, right)\n\t\t\t: b.binary(/** @type {ESTree.BinaryOperator} */ (operator.slice(0, -1)), left, right);\n}\n", "/** @import { Program } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Parser } from '../index.js' */\nimport * as acorn from '../acorn.js';\nimport { regex_not_newline_characters } from '../../patterns.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { is_text_attribute } from '../../../utils/ast.js';\n\nconst regex_closing_script_tag = /<\\/script\\s*>/;\nconst regex_starts_with_closing_script_tag = /^<\\/script\\s*>/;\n\nconst RESERVED_ATTRIBUTES = ['server', 'client', 'worker', 'test', 'default'];\nconst ALLOWED_ATTRIBUTES = ['context', 'generics', 'lang', 'module'];\n\n/**\n * @param {Parser} parser\n * @param {number} start\n * @param {Array<AST.Attribute | AST.SpreadAttribute | AST.Directive>} attributes\n * @returns {AST.Script}\n */\nexport function read_script(parser, start, attributes) {\n\tconst script_start = parser.index;\n\tconst data = parser.read_until(regex_closing_script_tag);\n\tif (parser.index >= parser.template.length) {\n\t\te.element_unclosed(parser.template.length, 'script');\n\t}\n\n\tconst source =\n\t\tparser.template.slice(0, script_start).replace(regex_not_newline_characters, ' ') + data;\n\tparser.read(regex_starts_with_closing_script_tag);\n\n\t/** @type {Program} */\n\tlet ast;\n\n\ttry {\n\t\tast = acorn.parse(source, parser.ts, true);\n\t} catch (err) {\n\t\tparser.acorn_error(err);\n\t}\n\n\t// TODO is this necessary?\n\tast.start = script_start;\n\n\t/** @type {'default' | 'module'} */\n\tlet context = 'default';\n\n\tfor (const attribute of /** @type {AST.Attribute[]} */ (attributes)) {\n\t\tif (RESERVED_ATTRIBUTES.includes(attribute.name)) {\n\t\t\te.script_reserved_attribute(attribute, attribute.name);\n\t\t}\n\n\t\tif (!ALLOWED_ATTRIBUTES.includes(attribute.name)) {\n\t\t\tw.script_unknown_attribute(attribute);\n\t\t}\n\n\t\tif (attribute.name === 'module') {\n\t\t\tif (attribute.value !== true) {\n\t\t\t\t// Deliberately a generic code to future-proof for potential other attributes\n\t\t\t\te.script_invalid_attribute_value(attribute, attribute.name);\n\t\t\t}\n\n\t\t\tcontext = 'module';\n\t\t}\n\n\t\tif (attribute.name === 'context') {\n\t\t\tif (attribute.value === true || !is_text_attribute(attribute)) {\n\t\t\t\te.script_invalid_context(attribute);\n\t\t\t}\n\n\t\t\tconst value = attribute.value[0].data;\n\n\t\t\tif (value !== 'module') {\n\t\t\t\te.script_invalid_context(attribute);\n\t\t\t}\n\n\t\t\tcontext = 'module';\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: 'Script',\n\t\tstart,\n\t\tend: parser.index,\n\t\tcontext,\n\t\tcontent: ast,\n\t\t// @ts-ignore\n\t\tattributes\n\t};\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Parser } from '../index.js' */\nimport * as e from '../../../errors.js';\n\nconst REGEX_MATCHER = /^[~^$*|]?=/;\nconst REGEX_CLOSING_BRACKET = /[\\s\\]]/;\nconst REGEX_ATTRIBUTE_FLAGS = /^[a-zA-Z]+/; // only `i` and `s` are valid today, but make it future-proof\nconst REGEX_COMBINATOR = /^(\\+|~|>|\\|\\|)/;\nconst REGEX_PERCENTAGE = /^\\d+(\\.\\d+)?%/;\nconst REGEX_NTH_OF =\n\t/^(even|odd|\\+?(\\d+|\\d*n(\\s*[+-]\\s*\\d+)?)|-\\d*n(\\s*\\+\\s*\\d+))((?=\\s*[,)])|\\s+of\\s+)/;\nconst REGEX_WHITESPACE_OR_COLON = /[\\s:]/;\nconst REGEX_LEADING_HYPHEN_OR_DIGIT = /-?\\d/;\nconst REGEX_VALID_IDENTIFIER_CHAR = /[a-zA-Z0-9_-]/;\nconst REGEX_COMMENT_CLOSE = /\\*\\//;\nconst REGEX_HTML_COMMENT_CLOSE = /-->/;\n\n/**\n * @param {Parser} parser\n * @param {number} start\n * @param {Array<AST.Attribute | AST.SpreadAttribute | AST.Directive>} attributes\n * @returns {AST.CSS.StyleSheet}\n */\nexport default function read_style(parser, start, attributes) {\n\tconst content_start = parser.index;\n\tconst children = read_body(parser, '</style');\n\tconst content_end = parser.index;\n\n\tparser.read(/^<\\/style\\s*>/);\n\n\treturn {\n\t\ttype: 'StyleSheet',\n\t\tstart,\n\t\tend: parser.index,\n\t\tattributes,\n\t\tchildren,\n\t\tcontent: {\n\t\t\tstart: content_start,\n\t\t\tend: content_end,\n\t\t\tstyles: parser.template.slice(content_start, content_end),\n\t\t\tcomment: null\n\t\t}\n\t};\n}\n\n/**\n * @param {Parser} parser\n * @param {string} close\n * @returns {any[]}\n */\nfunction read_body(parser, close) {\n\t/** @type {Array<AST.CSS.Rule | AST.CSS.Atrule>} */\n\tconst children = [];\n\n\twhile (parser.index < parser.template.length) {\n\t\tallow_comment_or_whitespace(parser);\n\n\t\tif (parser.match(close)) {\n\t\t\treturn children;\n\t\t}\n\n\t\tif (parser.match('@')) {\n\t\t\tchildren.push(read_at_rule(parser));\n\t\t} else {\n\t\t\tchildren.push(read_rule(parser));\n\t\t}\n\t}\n\n\te.expected_token(parser.template.length, close);\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.CSS.Atrule}\n */\nfunction read_at_rule(parser) {\n\tconst start = parser.index;\n\tparser.eat('@', true);\n\n\tconst name = read_identifier(parser);\n\n\tconst prelude = read_value(parser);\n\n\t/** @type {AST.CSS.Block | null} */\n\tlet block = null;\n\n\tif (parser.match('{')) {\n\t\t// e.g. `@media (...) {...}`\n\t\tblock = read_block(parser);\n\t} else {\n\t\t// e.g. `@import '...'`\n\t\tparser.eat(';', true);\n\t}\n\n\treturn {\n\t\ttype: 'Atrule',\n\t\tstart,\n\t\tend: parser.index,\n\t\tname,\n\t\tprelude,\n\t\tblock\n\t};\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.CSS.Rule}\n */\nfunction read_rule(parser) {\n\tconst start = parser.index;\n\n\treturn {\n\t\ttype: 'Rule',\n\t\tprelude: read_selector_list(parser),\n\t\tblock: read_block(parser),\n\t\tstart,\n\t\tend: parser.index,\n\t\tmetadata: {\n\t\t\tparent_rule: null,\n\t\t\thas_local_selectors: false,\n\t\t\thas_global_selectors: false,\n\t\t\tis_global_block: false\n\t\t}\n\t};\n}\n\n/**\n * @param {Parser} parser\n * @param {boolean} [inside_pseudo_class]\n * @returns {AST.CSS.SelectorList}\n */\nfunction read_selector_list(parser, inside_pseudo_class = false) {\n\t/** @type {AST.CSS.ComplexSelector[]} */\n\tconst children = [];\n\n\tallow_comment_or_whitespace(parser);\n\n\tconst start = parser.index;\n\n\twhile (parser.index < parser.template.length) {\n\t\tchildren.push(read_selector(parser, inside_pseudo_class));\n\n\t\tconst end = parser.index;\n\n\t\tallow_comment_or_whitespace(parser);\n\n\t\tif (inside_pseudo_class ? parser.match(')') : parser.match('{')) {\n\t\t\treturn {\n\t\t\t\ttype: 'SelectorList',\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tchildren\n\t\t\t};\n\t\t} else {\n\t\t\tparser.eat(',', true);\n\t\t\tallow_comment_or_whitespace(parser);\n\t\t}\n\t}\n\n\te.unexpected_eof(parser.template.length);\n}\n\n/**\n * @param {Parser} parser\n * @param {boolean} [inside_pseudo_class]\n * @returns {AST.CSS.ComplexSelector}\n */\nfunction read_selector(parser, inside_pseudo_class = false) {\n\tconst list_start = parser.index;\n\n\t/** @type {AST.CSS.RelativeSelector[]} */\n\tconst children = [];\n\n\t/**\n\t * @param {AST.CSS.Combinator | null} combinator\n\t * @param {number} start\n\t * @returns {AST.CSS.RelativeSelector}\n\t */\n\tfunction create_selector(combinator, start) {\n\t\treturn {\n\t\t\ttype: 'RelativeSelector',\n\t\t\tcombinator,\n\t\t\tselectors: [],\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\tmetadata: {\n\t\t\t\tis_global: false,\n\t\t\t\tis_global_like: false,\n\t\t\t\tscoped: false\n\t\t\t}\n\t\t};\n\t}\n\n\t/** @type {AST.CSS.RelativeSelector} */\n\tlet relative_selector = create_selector(null, parser.index);\n\n\twhile (parser.index < parser.template.length) {\n\t\tlet start = parser.index;\n\n\t\tif (parser.eat('&')) {\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'NestingSelector',\n\t\t\t\tname: '&',\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.eat('*')) {\n\t\t\tlet name = '*';\n\n\t\t\tif (parser.eat('|')) {\n\t\t\t\t// * is the namespace (which we ignore)\n\t\t\t\tname = read_identifier(parser);\n\t\t\t}\n\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'TypeSelector',\n\t\t\t\tname,\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.eat('#')) {\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'IdSelector',\n\t\t\t\tname: read_identifier(parser),\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.eat('.')) {\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'ClassSelector',\n\t\t\t\tname: read_identifier(parser),\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.eat('::')) {\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'PseudoElementSelector',\n\t\t\t\tname: read_identifier(parser),\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t\t// We read the inner selectors of a pseudo element to ensure it parses correctly,\n\t\t\t// but we don't do anything with the result.\n\t\t\tif (parser.eat('(')) {\n\t\t\t\tread_selector_list(parser, true);\n\t\t\t\tparser.eat(')', true);\n\t\t\t}\n\t\t} else if (parser.eat(':')) {\n\t\t\tconst name = read_identifier(parser);\n\n\t\t\t/** @type {null | AST.CSS.SelectorList} */\n\t\t\tlet args = null;\n\n\t\t\tif (parser.eat('(')) {\n\t\t\t\targs = read_selector_list(parser, true);\n\t\t\t\tparser.eat(')', true);\n\t\t\t}\n\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'PseudoClassSelector',\n\t\t\t\tname,\n\t\t\t\targs,\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.eat('[')) {\n\t\t\tparser.allow_whitespace();\n\t\t\tconst name = read_identifier(parser);\n\t\t\tparser.allow_whitespace();\n\n\t\t\t/** @type {string | null} */\n\t\t\tlet value = null;\n\n\t\t\tconst matcher = parser.read(REGEX_MATCHER);\n\n\t\t\tif (matcher) {\n\t\t\t\tparser.allow_whitespace();\n\t\t\t\tvalue = read_attribute_value(parser);\n\t\t\t}\n\n\t\t\tparser.allow_whitespace();\n\n\t\t\tconst flags = parser.read(REGEX_ATTRIBUTE_FLAGS);\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat(']', true);\n\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'AttributeSelector',\n\t\t\t\tstart,\n\t\t\t\tend: parser.index,\n\t\t\t\tname,\n\t\t\t\tmatcher,\n\t\t\t\tvalue,\n\t\t\t\tflags\n\t\t\t});\n\t\t} else if (inside_pseudo_class && parser.match_regex(REGEX_NTH_OF)) {\n\t\t\t// nth of matcher must come before combinator matcher to prevent collision else the '+' in '+2n-1' would be parsed as a combinator\n\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'Nth',\n\t\t\t\tvalue: /**@type {string} */ (parser.read(REGEX_NTH_OF)),\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (parser.match_regex(REGEX_PERCENTAGE)) {\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'Percentage',\n\t\t\t\tvalue: /** @type {string} */ (parser.read(REGEX_PERCENTAGE)),\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t} else if (!parser.match_regex(REGEX_COMBINATOR)) {\n\t\t\tlet name = read_identifier(parser);\n\n\t\t\tif (parser.eat('|')) {\n\t\t\t\t// we ignore the namespace when trying to find matching element classes\n\t\t\t\tname = read_identifier(parser);\n\t\t\t}\n\n\t\t\trelative_selector.selectors.push({\n\t\t\t\ttype: 'TypeSelector',\n\t\t\t\tname,\n\t\t\t\tstart,\n\t\t\t\tend: parser.index\n\t\t\t});\n\t\t}\n\n\t\tconst index = parser.index;\n\t\tallow_comment_or_whitespace(parser);\n\n\t\tif (parser.match(',') || (inside_pseudo_class ? parser.match(')') : parser.match('{'))) {\n\t\t\t// rewind, so we know whether to continue building the selector list\n\t\t\tparser.index = index;\n\n\t\t\trelative_selector.end = index;\n\t\t\tchildren.push(relative_selector);\n\n\t\t\treturn {\n\t\t\t\ttype: 'ComplexSelector',\n\t\t\t\tstart: list_start,\n\t\t\t\tend: index,\n\t\t\t\tchildren,\n\t\t\t\tmetadata: {\n\t\t\t\t\trule: null,\n\t\t\t\t\tis_global: false,\n\t\t\t\t\tused: false\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tparser.index = index;\n\t\tconst combinator = read_combinator(parser);\n\n\t\tif (combinator) {\n\t\t\tif (relative_selector.selectors.length > 0) {\n\t\t\t\trelative_selector.end = index;\n\t\t\t\tchildren.push(relative_selector);\n\t\t\t}\n\n\t\t\t// ...and start a new one\n\t\t\trelative_selector = create_selector(combinator, combinator.start);\n\n\t\t\tparser.allow_whitespace();\n\n\t\t\tif (parser.match(',') || (inside_pseudo_class ? parser.match(')') : parser.match('{'))) {\n\t\t\t\te.css_selector_invalid(parser.index);\n\t\t\t}\n\t\t}\n\t}\n\n\te.unexpected_eof(parser.template.length);\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.CSS.Combinator | null}\n */\nfunction read_combinator(parser) {\n\tconst start = parser.index;\n\tparser.allow_whitespace();\n\n\tconst index = parser.index;\n\tconst name = parser.read(REGEX_COMBINATOR);\n\n\tif (name) {\n\t\tconst end = parser.index;\n\t\tparser.allow_whitespace();\n\n\t\treturn {\n\t\t\ttype: 'Combinator',\n\t\t\tname,\n\t\t\tstart: index,\n\t\t\tend\n\t\t};\n\t}\n\n\tif (parser.index !== start) {\n\t\treturn {\n\t\t\ttype: 'Combinator',\n\t\t\tname: ' ',\n\t\t\tstart,\n\t\t\tend: parser.index\n\t\t};\n\t}\n\n\treturn null;\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.CSS.Block}\n */\nfunction read_block(parser) {\n\tconst start = parser.index;\n\n\tparser.eat('{', true);\n\n\t/** @type {Array<AST.CSS.Declaration | AST.CSS.Rule | AST.CSS.Atrule>} */\n\tconst children = [];\n\n\twhile (parser.index < parser.template.length) {\n\t\tallow_comment_or_whitespace(parser);\n\n\t\tif (parser.match('}')) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tchildren.push(read_block_item(parser));\n\t\t}\n\t}\n\n\tparser.eat('}', true);\n\n\treturn {\n\t\ttype: 'Block',\n\t\tstart,\n\t\tend: parser.index,\n\t\tchildren\n\t};\n}\n\n/**\n * Reads a declaration, rule or at-rule\n *\n * @param {Parser} parser\n * @returns {AST.CSS.Declaration | AST.CSS.Rule | AST.CSS.Atrule}\n */\nfunction read_block_item(parser) {\n\tif (parser.match('@')) {\n\t\treturn read_at_rule(parser);\n\t}\n\n\t// read ahead to understand whether we're dealing with a declaration or a nested rule.\n\t// this involves some duplicated work, but avoids a try-catch that would disguise errors\n\tconst start = parser.index;\n\tread_value(parser);\n\tconst char = parser.template[parser.index];\n\tparser.index = start;\n\n\treturn char === '{' ? read_rule(parser) : read_declaration(parser);\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.CSS.Declaration}\n */\nfunction read_declaration(parser) {\n\tconst start = parser.index;\n\n\tconst property = parser.read_until(REGEX_WHITESPACE_OR_COLON);\n\tparser.allow_whitespace();\n\tparser.eat(':');\n\tlet index = parser.index;\n\tparser.allow_whitespace();\n\n\tconst value = read_value(parser);\n\n\tif (!value && !property.startsWith('--')) {\n\t\te.css_empty_declaration({ start, end: index });\n\t}\n\n\tconst end = parser.index;\n\n\tif (!parser.match('}')) {\n\t\tparser.eat(';', true);\n\t}\n\n\treturn {\n\t\ttype: 'Declaration',\n\t\tstart,\n\t\tend,\n\t\tproperty,\n\t\tvalue\n\t};\n}\n\n/**\n * @param {Parser} parser\n * @returns {string}\n */\nfunction read_value(parser) {\n\tlet value = '';\n\tlet escaped = false;\n\tlet in_url = false;\n\n\t/** @type {null | '\"' | \"'\"} */\n\tlet quote_mark = null;\n\n\twhile (parser.index < parser.template.length) {\n\t\tconst char = parser.template[parser.index];\n\n\t\tif (escaped) {\n\t\t\tvalue += '\\\\' + char;\n\t\t\tescaped = false;\n\t\t} else if (char === '\\\\') {\n\t\t\tescaped = true;\n\t\t} else if (char === quote_mark) {\n\t\t\tquote_mark = null;\n\t\t} else if (char === ')') {\n\t\t\tin_url = false;\n\t\t} else if (quote_mark === null && (char === '\"' || char === \"'\")) {\n\t\t\tquote_mark = char;\n\t\t} else if (char === '(' && value.slice(-3) === 'url') {\n\t\t\tin_url = true;\n\t\t} else if ((char === ';' || char === '{' || char === '}') && !in_url && !quote_mark) {\n\t\t\treturn value.trim();\n\t\t}\n\n\t\tvalue += char;\n\n\t\tparser.index++;\n\t}\n\n\te.unexpected_eof(parser.template.length);\n}\n\n/**\n * Read a property that may or may not be quoted, e.g.\n * `foo` or `'foo bar'` or `\"foo bar\"`\n * @param {Parser} parser\n */\nfunction read_attribute_value(parser) {\n\tlet value = '';\n\tlet escaped = false;\n\tconst quote_mark = parser.eat('\"') ? '\"' : parser.eat(\"'\") ? \"'\" : null;\n\n\twhile (parser.index < parser.template.length) {\n\t\tconst char = parser.template[parser.index];\n\t\tif (escaped) {\n\t\t\tvalue += '\\\\' + char;\n\t\t\tescaped = false;\n\t\t} else if (char === '\\\\') {\n\t\t\tescaped = true;\n\t\t} else if (quote_mark ? char === quote_mark : REGEX_CLOSING_BRACKET.test(char)) {\n\t\t\tif (quote_mark) {\n\t\t\t\tparser.eat(quote_mark, true);\n\t\t\t}\n\n\t\t\treturn value.trim();\n\t\t} else {\n\t\t\tvalue += char;\n\t\t}\n\n\t\tparser.index++;\n\t}\n\n\te.unexpected_eof(parser.template.length);\n}\n\n/**\n * https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n * @param {Parser} parser\n */\nfunction read_identifier(parser) {\n\tconst start = parser.index;\n\n\tlet identifier = '';\n\n\tif (parser.match_regex(REGEX_LEADING_HYPHEN_OR_DIGIT)) {\n\t\te.css_expected_identifier(start);\n\t}\n\n\tlet escaped = false;\n\n\twhile (parser.index < parser.template.length) {\n\t\tconst char = parser.template[parser.index];\n\t\tif (escaped) {\n\t\t\tidentifier += '\\\\' + char;\n\t\t\tescaped = false;\n\t\t} else if (char === '\\\\') {\n\t\t\tescaped = true;\n\t\t} else if (\n\t\t\t/** @type {number} */ (char.codePointAt(0)) >= 160 ||\n\t\t\tREGEX_VALID_IDENTIFIER_CHAR.test(char)\n\t\t) {\n\t\t\tidentifier += char;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\n\t\tparser.index++;\n\t}\n\n\tif (identifier === '') {\n\t\te.css_expected_identifier(start);\n\t}\n\n\treturn identifier;\n}\n\n/** @param {Parser} parser */\nfunction allow_comment_or_whitespace(parser) {\n\tparser.allow_whitespace();\n\twhile (parser.match('/*') || parser.match('<!--')) {\n\t\tif (parser.eat('/*')) {\n\t\t\tparser.read_until(REGEX_COMMENT_CLOSE);\n\t\t\tparser.eat('*/', true);\n\t\t}\n\n\t\tif (parser.eat('<!--')) {\n\t\t\tparser.read_until(REGEX_HTML_COMMENT_CLOSE);\n\t\t\tparser.eat('-->', true);\n\t\t}\n\n\t\tparser.allow_whitespace();\n\t}\n}\n", "// https://html.spec.whatwg.org/entities.json from https://dev.w3.org/html5/html-author/charref\nexport default {\n\t'CounterClockwiseContourIntegral;': 8755,\n\t'ClockwiseContourIntegral;': 8754,\n\t'DoubleLongLeftRightArrow;': 10234,\n\t'NotNestedGreaterGreater;': 10914,\n\t'DiacriticalDoubleAcute;': 733,\n\t'NotSquareSupersetEqual;': 8931,\n\t'CloseCurlyDoubleQuote;': 8221,\n\t'DoubleContourIntegral;': 8751,\n\t'FilledVerySmallSquare;': 9642,\n\t'NegativeVeryThinSpace;': 8203,\n\t'NotPrecedesSlantEqual;': 8928,\n\t'NotRightTriangleEqual;': 8941,\n\t'NotSucceedsSlantEqual;': 8929,\n\t'CapitalDifferentialD;': 8517,\n\t'DoubleLeftRightArrow;': 8660,\n\t'DoubleLongRightArrow;': 10233,\n\t'EmptyVerySmallSquare;': 9643,\n\t'NestedGreaterGreater;': 8811,\n\t'NotDoubleVerticalBar;': 8742,\n\t'NotGreaterSlantEqual;': 10878,\n\t'NotLeftTriangleEqual;': 8940,\n\t'NotSquareSubsetEqual;': 8930,\n\t'OpenCurlyDoubleQuote;': 8220,\n\t'ReverseUpEquilibrium;': 10607,\n\t'DoubleLongLeftArrow;': 10232,\n\t'DownLeftRightVector;': 10576,\n\t'LeftArrowRightArrow;': 8646,\n\t'NegativeMediumSpace;': 8203,\n\t'NotGreaterFullEqual;': 8807,\n\t'NotRightTriangleBar;': 10704,\n\t'RightArrowLeftArrow;': 8644,\n\t'SquareSupersetEqual;': 8850,\n\t'leftrightsquigarrow;': 8621,\n\t'DownRightTeeVector;': 10591,\n\t'DownRightVectorBar;': 10583,\n\t'LongLeftRightArrow;': 10231,\n\t'Longleftrightarrow;': 10234,\n\t'NegativeThickSpace;': 8203,\n\t'NotLeftTriangleBar;': 10703,\n\t'PrecedesSlantEqual;': 8828,\n\t'ReverseEquilibrium;': 8651,\n\t'RightDoubleBracket;': 10215,\n\t'RightDownTeeVector;': 10589,\n\t'RightDownVectorBar;': 10581,\n\t'RightTriangleEqual;': 8885,\n\t'SquareIntersection;': 8851,\n\t'SucceedsSlantEqual;': 8829,\n\t'blacktriangleright;': 9656,\n\t'longleftrightarrow;': 10231,\n\t'DoubleUpDownArrow;': 8661,\n\t'DoubleVerticalBar;': 8741,\n\t'DownLeftTeeVector;': 10590,\n\t'DownLeftVectorBar;': 10582,\n\t'FilledSmallSquare;': 9724,\n\t'GreaterSlantEqual;': 10878,\n\t'LeftDoubleBracket;': 10214,\n\t'LeftDownTeeVector;': 10593,\n\t'LeftDownVectorBar;': 10585,\n\t'LeftTriangleEqual;': 8884,\n\t'NegativeThinSpace;': 8203,\n\t'NotGreaterGreater;': 8811,\n\t'NotLessSlantEqual;': 10877,\n\t'NotNestedLessLess;': 10913,\n\t'NotReverseElement;': 8716,\n\t'NotSquareSuperset;': 8848,\n\t'NotTildeFullEqual;': 8775,\n\t'RightAngleBracket;': 10217,\n\t'RightUpDownVector;': 10575,\n\t'SquareSubsetEqual;': 8849,\n\t'VerticalSeparator;': 10072,\n\t'blacktriangledown;': 9662,\n\t'blacktriangleleft;': 9666,\n\t'leftrightharpoons;': 8651,\n\t'rightleftharpoons;': 8652,\n\t'twoheadrightarrow;': 8608,\n\t'DiacriticalAcute;': 180,\n\t'DiacriticalGrave;': 96,\n\t'DiacriticalTilde;': 732,\n\t'DoubleRightArrow;': 8658,\n\t'DownArrowUpArrow;': 8693,\n\t'EmptySmallSquare;': 9723,\n\t'GreaterEqualLess;': 8923,\n\t'GreaterFullEqual;': 8807,\n\t'LeftAngleBracket;': 10216,\n\t'LeftUpDownVector;': 10577,\n\t'LessEqualGreater;': 8922,\n\t'NonBreakingSpace;': 160,\n\t'NotPrecedesEqual;': 10927,\n\t'NotRightTriangle;': 8939,\n\t'NotSucceedsEqual;': 10928,\n\t'NotSucceedsTilde;': 8831,\n\t'NotSupersetEqual;': 8841,\n\t'RightTriangleBar;': 10704,\n\t'RightUpTeeVector;': 10588,\n\t'RightUpVectorBar;': 10580,\n\t'UnderParenthesis;': 9181,\n\t'UpArrowDownArrow;': 8645,\n\t'circlearrowright;': 8635,\n\t'downharpoonright;': 8642,\n\t'ntrianglerighteq;': 8941,\n\t'rightharpoondown;': 8641,\n\t'rightrightarrows;': 8649,\n\t'twoheadleftarrow;': 8606,\n\t'vartriangleright;': 8883,\n\t'CloseCurlyQuote;': 8217,\n\t'ContourIntegral;': 8750,\n\t'DoubleDownArrow;': 8659,\n\t'DoubleLeftArrow;': 8656,\n\t'DownRightVector;': 8641,\n\t'LeftRightVector;': 10574,\n\t'LeftTriangleBar;': 10703,\n\t'LeftUpTeeVector;': 10592,\n\t'LeftUpVectorBar;': 10584,\n\t'LowerRightArrow;': 8600,\n\t'NotGreaterEqual;': 8817,\n\t'NotGreaterTilde;': 8821,\n\t'NotHumpDownHump;': 8782,\n\t'NotLeftTriangle;': 8938,\n\t'NotSquareSubset;': 8847,\n\t'OverParenthesis;': 9180,\n\t'RightDownVector;': 8642,\n\t'ShortRightArrow;': 8594,\n\t'UpperRightArrow;': 8599,\n\t'bigtriangledown;': 9661,\n\t'circlearrowleft;': 8634,\n\t'curvearrowright;': 8631,\n\t'downharpoonleft;': 8643,\n\t'leftharpoondown;': 8637,\n\t'leftrightarrows;': 8646,\n\t'nLeftrightarrow;': 8654,\n\t'nleftrightarrow;': 8622,\n\t'ntrianglelefteq;': 8940,\n\t'rightleftarrows;': 8644,\n\t'rightsquigarrow;': 8605,\n\t'rightthreetimes;': 8908,\n\t'straightepsilon;': 1013,\n\t'trianglerighteq;': 8885,\n\t'vartriangleleft;': 8882,\n\t'DiacriticalDot;': 729,\n\t'DoubleRightTee;': 8872,\n\t'DownLeftVector;': 8637,\n\t'GreaterGreater;': 10914,\n\t'HorizontalLine;': 9472,\n\t'InvisibleComma;': 8291,\n\t'InvisibleTimes;': 8290,\n\t'LeftDownVector;': 8643,\n\t'LeftRightArrow;': 8596,\n\t'Leftrightarrow;': 8660,\n\t'LessSlantEqual;': 10877,\n\t'LongRightArrow;': 10230,\n\t'Longrightarrow;': 10233,\n\t'LowerLeftArrow;': 8601,\n\t'NestedLessLess;': 8810,\n\t'NotGreaterLess;': 8825,\n\t'NotLessGreater;': 8824,\n\t'NotSubsetEqual;': 8840,\n\t'NotVerticalBar;': 8740,\n\t'OpenCurlyQuote;': 8216,\n\t'ReverseElement;': 8715,\n\t'RightTeeVector;': 10587,\n\t'RightVectorBar;': 10579,\n\t'ShortDownArrow;': 8595,\n\t'ShortLeftArrow;': 8592,\n\t'SquareSuperset;': 8848,\n\t'TildeFullEqual;': 8773,\n\t'UpperLeftArrow;': 8598,\n\t'ZeroWidthSpace;': 8203,\n\t'curvearrowleft;': 8630,\n\t'doublebarwedge;': 8966,\n\t'downdownarrows;': 8650,\n\t'hookrightarrow;': 8618,\n\t'leftleftarrows;': 8647,\n\t'leftrightarrow;': 8596,\n\t'leftthreetimes;': 8907,\n\t'longrightarrow;': 10230,\n\t'looparrowright;': 8620,\n\t'nshortparallel;': 8742,\n\t'ntriangleright;': 8939,\n\t'rightarrowtail;': 8611,\n\t'rightharpoonup;': 8640,\n\t'trianglelefteq;': 8884,\n\t'upharpoonright;': 8638,\n\t'ApplyFunction;': 8289,\n\t'DifferentialD;': 8518,\n\t'DoubleLeftTee;': 10980,\n\t'DoubleUpArrow;': 8657,\n\t'LeftTeeVector;': 10586,\n\t'LeftVectorBar;': 10578,\n\t'LessFullEqual;': 8806,\n\t'LongLeftArrow;': 10229,\n\t'Longleftarrow;': 10232,\n\t'NotEqualTilde;': 8770,\n\t'NotTildeEqual;': 8772,\n\t'NotTildeTilde;': 8777,\n\t'Poincareplane;': 8460,\n\t'PrecedesEqual;': 10927,\n\t'PrecedesTilde;': 8830,\n\t'RightArrowBar;': 8677,\n\t'RightTeeArrow;': 8614,\n\t'RightTriangle;': 8883,\n\t'RightUpVector;': 8638,\n\t'SucceedsEqual;': 10928,\n\t'SucceedsTilde;': 8831,\n\t'SupersetEqual;': 8839,\n\t'UpEquilibrium;': 10606,\n\t'VerticalTilde;': 8768,\n\t'VeryThinSpace;': 8202,\n\t'bigtriangleup;': 9651,\n\t'blacktriangle;': 9652,\n\t'divideontimes;': 8903,\n\t'fallingdotseq;': 8786,\n\t'hookleftarrow;': 8617,\n\t'leftarrowtail;': 8610,\n\t'leftharpoonup;': 8636,\n\t'longleftarrow;': 10229,\n\t'looparrowleft;': 8619,\n\t'measuredangle;': 8737,\n\t'ntriangleleft;': 8938,\n\t'shortparallel;': 8741,\n\t'smallsetminus;': 8726,\n\t'triangleright;': 9657,\n\t'upharpoonleft;': 8639,\n\t'varsubsetneqq;': 10955,\n\t'varsupsetneqq;': 10956,\n\t'DownArrowBar;': 10515,\n\t'DownTeeArrow;': 8615,\n\t'ExponentialE;': 8519,\n\t'GreaterEqual;': 8805,\n\t'GreaterTilde;': 8819,\n\t'HilbertSpace;': 8459,\n\t'HumpDownHump;': 8782,\n\t'Intersection;': 8898,\n\t'LeftArrowBar;': 8676,\n\t'LeftTeeArrow;': 8612,\n\t'LeftTriangle;': 8882,\n\t'LeftUpVector;': 8639,\n\t'NotCongruent;': 8802,\n\t'NotHumpEqual;': 8783,\n\t'NotLessEqual;': 8816,\n\t'NotLessTilde;': 8820,\n\t'Proportional;': 8733,\n\t'RightCeiling;': 8969,\n\t'RoundImplies;': 10608,\n\t'ShortUpArrow;': 8593,\n\t'SquareSubset;': 8847,\n\t'UnderBracket;': 9141,\n\t'VerticalLine;': 124,\n\t'blacklozenge;': 10731,\n\t'exponentiale;': 8519,\n\t'risingdotseq;': 8787,\n\t'triangledown;': 9663,\n\t'triangleleft;': 9667,\n\t'varsubsetneq;': 8842,\n\t'varsupsetneq;': 8843,\n\t'CircleMinus;': 8854,\n\t'CircleTimes;': 8855,\n\t'Equilibrium;': 8652,\n\t'GreaterLess;': 8823,\n\t'LeftCeiling;': 8968,\n\t'LessGreater;': 8822,\n\t'MediumSpace;': 8287,\n\t'NotLessLess;': 8810,\n\t'NotPrecedes;': 8832,\n\t'NotSucceeds;': 8833,\n\t'NotSuperset;': 8835,\n\t'OverBracket;': 9140,\n\t'RightVector;': 8640,\n\t'Rrightarrow;': 8667,\n\t'RuleDelayed;': 10740,\n\t'SmallCircle;': 8728,\n\t'SquareUnion;': 8852,\n\t'SubsetEqual;': 8838,\n\t'UpDownArrow;': 8597,\n\t'Updownarrow;': 8661,\n\t'VerticalBar;': 8739,\n\t'backepsilon;': 1014,\n\t'blacksquare;': 9642,\n\t'circledcirc;': 8858,\n\t'circleddash;': 8861,\n\t'curlyeqprec;': 8926,\n\t'curlyeqsucc;': 8927,\n\t'diamondsuit;': 9830,\n\t'eqslantless;': 10901,\n\t'expectation;': 8496,\n\t'nRightarrow;': 8655,\n\t'nrightarrow;': 8603,\n\t'preccurlyeq;': 8828,\n\t'precnapprox;': 10937,\n\t'quaternions;': 8461,\n\t'straightphi;': 981,\n\t'succcurlyeq;': 8829,\n\t'succnapprox;': 10938,\n\t'thickapprox;': 8776,\n\t'updownarrow;': 8597,\n\t'Bernoullis;': 8492,\n\t'CirclePlus;': 8853,\n\t'EqualTilde;': 8770,\n\t'Fouriertrf;': 8497,\n\t'ImaginaryI;': 8520,\n\t'Laplacetrf;': 8466,\n\t'LeftVector;': 8636,\n\t'Lleftarrow;': 8666,\n\t'NotElement;': 8713,\n\t'NotGreater;': 8815,\n\t'Proportion;': 8759,\n\t'RightArrow;': 8594,\n\t'RightFloor;': 8971,\n\t'Rightarrow;': 8658,\n\t'ThickSpace;': 8287,\n\t'TildeEqual;': 8771,\n\t'TildeTilde;': 8776,\n\t'UnderBrace;': 9183,\n\t'UpArrowBar;': 10514,\n\t'UpTeeArrow;': 8613,\n\t'circledast;': 8859,\n\t'complement;': 8705,\n\t'curlywedge;': 8911,\n\t'eqslantgtr;': 10902,\n\t'gtreqqless;': 10892,\n\t'lessapprox;': 10885,\n\t'lesseqqgtr;': 10891,\n\t'lmoustache;': 9136,\n\t'longmapsto;': 10236,\n\t'mapstodown;': 8615,\n\t'mapstoleft;': 8612,\n\t'nLeftarrow;': 8653,\n\t'nleftarrow;': 8602,\n\t'nsubseteqq;': 10949,\n\t'nsupseteqq;': 10950,\n\t'precapprox;': 10935,\n\t'rightarrow;': 8594,\n\t'rmoustache;': 9137,\n\t'sqsubseteq;': 8849,\n\t'sqsupseteq;': 8850,\n\t'subsetneqq;': 10955,\n\t'succapprox;': 10936,\n\t'supsetneqq;': 10956,\n\t'upuparrows;': 8648,\n\t'varepsilon;': 1013,\n\t'varnothing;': 8709,\n\t'Backslash;': 8726,\n\t'CenterDot;': 183,\n\t'CircleDot;': 8857,\n\t'Congruent;': 8801,\n\t'Coproduct;': 8720,\n\t'DoubleDot;': 168,\n\t'DownArrow;': 8595,\n\t'DownBreve;': 785,\n\t'Downarrow;': 8659,\n\t'HumpEqual;': 8783,\n\t'LeftArrow;': 8592,\n\t'LeftFloor;': 8970,\n\t'Leftarrow;': 8656,\n\t'LessTilde;': 8818,\n\t'Mellintrf;': 8499,\n\t'MinusPlus;': 8723,\n\t'NotCupCap;': 8813,\n\t'NotExists;': 8708,\n\t'NotSubset;': 8834,\n\t'OverBrace;': 9182,\n\t'PlusMinus;': 177,\n\t'Therefore;': 8756,\n\t'ThinSpace;': 8201,\n\t'TripleDot;': 8411,\n\t'UnionPlus;': 8846,\n\t'backprime;': 8245,\n\t'backsimeq;': 8909,\n\t'bigotimes;': 10754,\n\t'centerdot;': 183,\n\t'checkmark;': 10003,\n\t'complexes;': 8450,\n\t'dotsquare;': 8865,\n\t'downarrow;': 8595,\n\t'gtrapprox;': 10886,\n\t'gtreqless;': 8923,\n\t'gvertneqq;': 8809,\n\t'heartsuit;': 9829,\n\t'leftarrow;': 8592,\n\t'lesseqgtr;': 8922,\n\t'lvertneqq;': 8808,\n\t'ngeqslant;': 10878,\n\t'nleqslant;': 10877,\n\t'nparallel;': 8742,\n\t'nshortmid;': 8740,\n\t'nsubseteq;': 8840,\n\t'nsupseteq;': 8841,\n\t'pitchfork;': 8916,\n\t'rationals;': 8474,\n\t'spadesuit;': 9824,\n\t'subseteqq;': 10949,\n\t'subsetneq;': 8842,\n\t'supseteqq;': 10950,\n\t'supsetneq;': 8843,\n\t'therefore;': 8756,\n\t'triangleq;': 8796,\n\t'varpropto;': 8733,\n\t'DDotrahd;': 10513,\n\t'DotEqual;': 8784,\n\t'Integral;': 8747,\n\t'LessLess;': 10913,\n\t'NotEqual;': 8800,\n\t'NotTilde;': 8769,\n\t'PartialD;': 8706,\n\t'Precedes;': 8826,\n\t'RightTee;': 8866,\n\t'Succeeds;': 8827,\n\t'SuchThat;': 8715,\n\t'Superset;': 8835,\n\t'Uarrocir;': 10569,\n\t'UnderBar;': 95,\n\t'andslope;': 10840,\n\t'angmsdaa;': 10664,\n\t'angmsdab;': 10665,\n\t'angmsdac;': 10666,\n\t'angmsdad;': 10667,\n\t'angmsdae;': 10668,\n\t'angmsdaf;': 10669,\n\t'angmsdag;': 10670,\n\t'angmsdah;': 10671,\n\t'angrtvbd;': 10653,\n\t'approxeq;': 8778,\n\t'awconint;': 8755,\n\t'backcong;': 8780,\n\t'barwedge;': 8965,\n\t'bbrktbrk;': 9142,\n\t'bigoplus;': 10753,\n\t'bigsqcup;': 10758,\n\t'biguplus;': 10756,\n\t'bigwedge;': 8896,\n\t'boxminus;': 8863,\n\t'boxtimes;': 8864,\n\t'bsolhsub;': 10184,\n\t'capbrcup;': 10825,\n\t'circledR;': 174,\n\t'circledS;': 9416,\n\t'cirfnint;': 10768,\n\t'clubsuit;': 9827,\n\t'cupbrcap;': 10824,\n\t'curlyvee;': 8910,\n\t'cwconint;': 8754,\n\t'doteqdot;': 8785,\n\t'dotminus;': 8760,\n\t'drbkarow;': 10512,\n\t'dzigrarr;': 10239,\n\t'elinters;': 9191,\n\t'emptyset;': 8709,\n\t'eqvparsl;': 10725,\n\t'fpartint;': 10765,\n\t'geqslant;': 10878,\n\t'gesdotol;': 10884,\n\t'gnapprox;': 10890,\n\t'hksearow;': 10533,\n\t'hkswarow;': 10534,\n\t'imagline;': 8464,\n\t'imagpart;': 8465,\n\t'infintie;': 10717,\n\t'integers;': 8484,\n\t'intercal;': 8890,\n\t'intlarhk;': 10775,\n\t'laemptyv;': 10676,\n\t'ldrushar;': 10571,\n\t'leqslant;': 10877,\n\t'lesdotor;': 10883,\n\t'llcorner;': 8990,\n\t'lnapprox;': 10889,\n\t'lrcorner;': 8991,\n\t'lurdshar;': 10570,\n\t'mapstoup;': 8613,\n\t'multimap;': 8888,\n\t'naturals;': 8469,\n\t'ncongdot;': 10861,\n\t'notindot;': 8949,\n\t'otimesas;': 10806,\n\t'parallel;': 8741,\n\t'plusacir;': 10787,\n\t'pointint;': 10773,\n\t'precneqq;': 10933,\n\t'precnsim;': 8936,\n\t'profalar;': 9006,\n\t'profline;': 8978,\n\t'profsurf;': 8979,\n\t'raemptyv;': 10675,\n\t'realpart;': 8476,\n\t'rppolint;': 10770,\n\t'rtriltri;': 10702,\n\t'scpolint;': 10771,\n\t'setminus;': 8726,\n\t'shortmid;': 8739,\n\t'smeparsl;': 10724,\n\t'sqsubset;': 8847,\n\t'sqsupset;': 8848,\n\t'subseteq;': 8838,\n\t'succneqq;': 10934,\n\t'succnsim;': 8937,\n\t'supseteq;': 8839,\n\t'thetasym;': 977,\n\t'thicksim;': 8764,\n\t'timesbar;': 10801,\n\t'triangle;': 9653,\n\t'triminus;': 10810,\n\t'trpezium;': 9186,\n\t'ulcorner;': 8988,\n\t'urcorner;': 8989,\n\t'varkappa;': 1008,\n\t'varsigma;': 962,\n\t'vartheta;': 977,\n\t'Because;': 8757,\n\t'Cayleys;': 8493,\n\t'Cconint;': 8752,\n\t'Cedilla;': 184,\n\t'Diamond;': 8900,\n\t'DownTee;': 8868,\n\t'Element;': 8712,\n\t'Epsilon;': 917,\n\t'Implies;': 8658,\n\t'LeftTee;': 8867,\n\t'NewLine;': 10,\n\t'NoBreak;': 8288,\n\t'NotLess;': 8814,\n\t'Omicron;': 927,\n\t'OverBar;': 8254,\n\t'Product;': 8719,\n\t'UpArrow;': 8593,\n\t'Uparrow;': 8657,\n\t'Upsilon;': 933,\n\t'alefsym;': 8501,\n\t'angrtvb;': 8894,\n\t'angzarr;': 9084,\n\t'asympeq;': 8781,\n\t'backsim;': 8765,\n\t'because;': 8757,\n\t'bemptyv;': 10672,\n\t'between;': 8812,\n\t'bigcirc;': 9711,\n\t'bigodot;': 10752,\n\t'bigstar;': 9733,\n\t'bnequiv;': 8801,\n\t'boxplus;': 8862,\n\t'ccupssm;': 10832,\n\t'cemptyv;': 10674,\n\t'cirscir;': 10690,\n\t'coloneq;': 8788,\n\t'congdot;': 10861,\n\t'cudarrl;': 10552,\n\t'cudarrr;': 10549,\n\t'cularrp;': 10557,\n\t'curarrm;': 10556,\n\t'dbkarow;': 10511,\n\t'ddagger;': 8225,\n\t'ddotseq;': 10871,\n\t'demptyv;': 10673,\n\t'diamond;': 8900,\n\t'digamma;': 989,\n\t'dotplus;': 8724,\n\t'dwangle;': 10662,\n\t'epsilon;': 949,\n\t'eqcolon;': 8789,\n\t'equivDD;': 10872,\n\t'gesdoto;': 10882,\n\t'gtquest;': 10876,\n\t'gtrless;': 8823,\n\t'harrcir;': 10568,\n\t'intprod;': 10812,\n\t'isindot;': 8949,\n\t'larrbfs;': 10527,\n\t'larrsim;': 10611,\n\t'lbrksld;': 10639,\n\t'lbrkslu;': 10637,\n\t'ldrdhar;': 10599,\n\t'lesdoto;': 10881,\n\t'lessdot;': 8918,\n\t'lessgtr;': 8822,\n\t'lesssim;': 8818,\n\t'lotimes;': 10804,\n\t'lozenge;': 9674,\n\t'ltquest;': 10875,\n\t'luruhar;': 10598,\n\t'maltese;': 10016,\n\t'minusdu;': 10794,\n\t'napprox;': 8777,\n\t'natural;': 9838,\n\t'nearrow;': 8599,\n\t'nexists;': 8708,\n\t'notinva;': 8713,\n\t'notinvb;': 8951,\n\t'notinvc;': 8950,\n\t'notniva;': 8716,\n\t'notnivb;': 8958,\n\t'notnivc;': 8957,\n\t'npolint;': 10772,\n\t'npreceq;': 10927,\n\t'nsqsube;': 8930,\n\t'nsqsupe;': 8931,\n\t'nsubset;': 8834,\n\t'nsucceq;': 10928,\n\t'nsupset;': 8835,\n\t'nvinfin;': 10718,\n\t'nvltrie;': 8884,\n\t'nvrtrie;': 8885,\n\t'nwarrow;': 8598,\n\t'olcross;': 10683,\n\t'omicron;': 959,\n\t'orderof;': 8500,\n\t'orslope;': 10839,\n\t'pertenk;': 8241,\n\t'planckh;': 8462,\n\t'pluscir;': 10786,\n\t'plussim;': 10790,\n\t'plustwo;': 10791,\n\t'precsim;': 8830,\n\t'quatint;': 10774,\n\t'questeq;': 8799,\n\t'rarrbfs;': 10528,\n\t'rarrsim;': 10612,\n\t'rbrksld;': 10638,\n\t'rbrkslu;': 10640,\n\t'rdldhar;': 10601,\n\t'realine;': 8475,\n\t'rotimes;': 10805,\n\t'ruluhar;': 10600,\n\t'searrow;': 8600,\n\t'simplus;': 10788,\n\t'simrarr;': 10610,\n\t'subedot;': 10947,\n\t'submult;': 10945,\n\t'subplus;': 10943,\n\t'subrarr;': 10617,\n\t'succsim;': 8831,\n\t'supdsub;': 10968,\n\t'supedot;': 10948,\n\t'suphsol;': 10185,\n\t'suphsub;': 10967,\n\t'suplarr;': 10619,\n\t'supmult;': 10946,\n\t'supplus;': 10944,\n\t'swarrow;': 8601,\n\t'topfork;': 10970,\n\t'triplus;': 10809,\n\t'tritime;': 10811,\n\t'uparrow;': 8593,\n\t'upsilon;': 965,\n\t'uwangle;': 10663,\n\t'vzigzag;': 10650,\n\t'zigrarr;': 8669,\n\t'Aacute;': 193,\n\t'Abreve;': 258,\n\t'Agrave;': 192,\n\t'Assign;': 8788,\n\t'Atilde;': 195,\n\t'Barwed;': 8966,\n\t'Bumpeq;': 8782,\n\t'Cacute;': 262,\n\t'Ccaron;': 268,\n\t'Ccedil;': 199,\n\t'Colone;': 10868,\n\t'Conint;': 8751,\n\t'CupCap;': 8781,\n\t'Dagger;': 8225,\n\t'Dcaron;': 270,\n\t'DotDot;': 8412,\n\t'Dstrok;': 272,\n\t'Eacute;': 201,\n\t'Ecaron;': 282,\n\t'Egrave;': 200,\n\t'Exists;': 8707,\n\t'ForAll;': 8704,\n\t'Gammad;': 988,\n\t'Gbreve;': 286,\n\t'Gcedil;': 290,\n\t'HARDcy;': 1066,\n\t'Hstrok;': 294,\n\t'Iacute;': 205,\n\t'Igrave;': 204,\n\t'Itilde;': 296,\n\t'Jsercy;': 1032,\n\t'Kcedil;': 310,\n\t'Lacute;': 313,\n\t'Lambda;': 923,\n\t'Lcaron;': 317,\n\t'Lcedil;': 315,\n\t'Lmidot;': 319,\n\t'Lstrok;': 321,\n\t'Nacute;': 323,\n\t'Ncaron;': 327,\n\t'Ncedil;': 325,\n\t'Ntilde;': 209,\n\t'Oacute;': 211,\n\t'Odblac;': 336,\n\t'Ograve;': 210,\n\t'Oslash;': 216,\n\t'Otilde;': 213,\n\t'Otimes;': 10807,\n\t'Racute;': 340,\n\t'Rarrtl;': 10518,\n\t'Rcaron;': 344,\n\t'Rcedil;': 342,\n\t'SHCHcy;': 1065,\n\t'SOFTcy;': 1068,\n\t'Sacute;': 346,\n\t'Scaron;': 352,\n\t'Scedil;': 350,\n\t'Square;': 9633,\n\t'Subset;': 8912,\n\t'Supset;': 8913,\n\t'Tcaron;': 356,\n\t'Tcedil;': 354,\n\t'Tstrok;': 358,\n\t'Uacute;': 218,\n\t'Ubreve;': 364,\n\t'Udblac;': 368,\n\t'Ugrave;': 217,\n\t'Utilde;': 360,\n\t'Vdashl;': 10982,\n\t'Verbar;': 8214,\n\t'Vvdash;': 8874,\n\t'Yacute;': 221,\n\t'Zacute;': 377,\n\t'Zcaron;': 381,\n\t'aacute;': 225,\n\t'abreve;': 259,\n\t'agrave;': 224,\n\t'andand;': 10837,\n\t'angmsd;': 8737,\n\t'angsph;': 8738,\n\t'apacir;': 10863,\n\t'approx;': 8776,\n\t'atilde;': 227,\n\t'barvee;': 8893,\n\t'barwed;': 8965,\n\t'becaus;': 8757,\n\t'bernou;': 8492,\n\t'bigcap;': 8898,\n\t'bigcup;': 8899,\n\t'bigvee;': 8897,\n\t'bkarow;': 10509,\n\t'bottom;': 8869,\n\t'bowtie;': 8904,\n\t'boxbox;': 10697,\n\t'bprime;': 8245,\n\t'brvbar;': 166,\n\t'bullet;': 8226,\n\t'bumpeq;': 8783,\n\t'cacute;': 263,\n\t'capand;': 10820,\n\t'capcap;': 10827,\n\t'capcup;': 10823,\n\t'capdot;': 10816,\n\t'ccaron;': 269,\n\t'ccedil;': 231,\n\t'circeq;': 8791,\n\t'cirmid;': 10991,\n\t'colone;': 8788,\n\t'commat;': 64,\n\t'compfn;': 8728,\n\t'conint;': 8750,\n\t'coprod;': 8720,\n\t'copysr;': 8471,\n\t'cularr;': 8630,\n\t'cupcap;': 10822,\n\t'cupcup;': 10826,\n\t'cupdot;': 8845,\n\t'curarr;': 8631,\n\t'curren;': 164,\n\t'cylcty;': 9005,\n\t'dagger;': 8224,\n\t'daleth;': 8504,\n\t'dcaron;': 271,\n\t'dfisht;': 10623,\n\t'divide;': 247,\n\t'divonx;': 8903,\n\t'dlcorn;': 8990,\n\t'dlcrop;': 8973,\n\t'dollar;': 36,\n\t'drcorn;': 8991,\n\t'drcrop;': 8972,\n\t'dstrok;': 273,\n\t'eacute;': 233,\n\t'easter;': 10862,\n\t'ecaron;': 283,\n\t'ecolon;': 8789,\n\t'egrave;': 232,\n\t'egsdot;': 10904,\n\t'elsdot;': 10903,\n\t'emptyv;': 8709,\n\t'emsp13;': 8196,\n\t'emsp14;': 8197,\n\t'eparsl;': 10723,\n\t'eqcirc;': 8790,\n\t'equals;': 61,\n\t'equest;': 8799,\n\t'female;': 9792,\n\t'ffilig;': 64259,\n\t'ffllig;': 64260,\n\t'forall;': 8704,\n\t'frac12;': 189,\n\t'frac13;': 8531,\n\t'frac14;': 188,\n\t'frac15;': 8533,\n\t'frac16;': 8537,\n\t'frac18;': 8539,\n\t'frac23;': 8532,\n\t'frac25;': 8534,\n\t'frac34;': 190,\n\t'frac35;': 8535,\n\t'frac38;': 8540,\n\t'frac45;': 8536,\n\t'frac56;': 8538,\n\t'frac58;': 8541,\n\t'frac78;': 8542,\n\t'gacute;': 501,\n\t'gammad;': 989,\n\t'gbreve;': 287,\n\t'gesdot;': 10880,\n\t'gesles;': 10900,\n\t'gtlPar;': 10645,\n\t'gtrarr;': 10616,\n\t'gtrdot;': 8919,\n\t'gtrsim;': 8819,\n\t'hairsp;': 8202,\n\t'hamilt;': 8459,\n\t'hardcy;': 1098,\n\t'hearts;': 9829,\n\t'hellip;': 8230,\n\t'hercon;': 8889,\n\t'homtht;': 8763,\n\t'horbar;': 8213,\n\t'hslash;': 8463,\n\t'hstrok;': 295,\n\t'hybull;': 8259,\n\t'hyphen;': 8208,\n\t'iacute;': 237,\n\t'igrave;': 236,\n\t'iiiint;': 10764,\n\t'iinfin;': 10716,\n\t'incare;': 8453,\n\t'inodot;': 305,\n\t'intcal;': 8890,\n\t'iquest;': 191,\n\t'isinsv;': 8947,\n\t'itilde;': 297,\n\t'jsercy;': 1112,\n\t'kappav;': 1008,\n\t'kcedil;': 311,\n\t'kgreen;': 312,\n\t'lAtail;': 10523,\n\t'lacute;': 314,\n\t'lagran;': 8466,\n\t'lambda;': 955,\n\t'langle;': 10216,\n\t'larrfs;': 10525,\n\t'larrhk;': 8617,\n\t'larrlp;': 8619,\n\t'larrpl;': 10553,\n\t'larrtl;': 8610,\n\t'latail;': 10521,\n\t'lbrace;': 123,\n\t'lbrack;': 91,\n\t'lcaron;': 318,\n\t'lcedil;': 316,\n\t'ldquor;': 8222,\n\t'lesdot;': 10879,\n\t'lesges;': 10899,\n\t'lfisht;': 10620,\n\t'lfloor;': 8970,\n\t'lharul;': 10602,\n\t'llhard;': 10603,\n\t'lmidot;': 320,\n\t'lmoust;': 9136,\n\t'loplus;': 10797,\n\t'lowast;': 8727,\n\t'lowbar;': 95,\n\t'lparlt;': 10643,\n\t'lrhard;': 10605,\n\t'lsaquo;': 8249,\n\t'lsquor;': 8218,\n\t'lstrok;': 322,\n\t'lthree;': 8907,\n\t'ltimes;': 8905,\n\t'ltlarr;': 10614,\n\t'ltrPar;': 10646,\n\t'mapsto;': 8614,\n\t'marker;': 9646,\n\t'mcomma;': 10793,\n\t'midast;': 42,\n\t'midcir;': 10992,\n\t'middot;': 183,\n\t'minusb;': 8863,\n\t'minusd;': 8760,\n\t'mnplus;': 8723,\n\t'models;': 8871,\n\t'mstpos;': 8766,\n\t'nVDash;': 8879,\n\t'nVdash;': 8878,\n\t'nacute;': 324,\n\t'nbumpe;': 8783,\n\t'ncaron;': 328,\n\t'ncedil;': 326,\n\t'nearhk;': 10532,\n\t'nequiv;': 8802,\n\t'nesear;': 10536,\n\t'nexist;': 8708,\n\t'nltrie;': 8940,\n\t'notinE;': 8953,\n\t'nparsl;': 11005,\n\t'nprcue;': 8928,\n\t'nrarrc;': 10547,\n\t'nrarrw;': 8605,\n\t'nrtrie;': 8941,\n\t'nsccue;': 8929,\n\t'nsimeq;': 8772,\n\t'ntilde;': 241,\n\t'numero;': 8470,\n\t'nvDash;': 8877,\n\t'nvHarr;': 10500,\n\t'nvdash;': 8876,\n\t'nvlArr;': 10498,\n\t'nvrArr;': 10499,\n\t'nwarhk;': 10531,\n\t'nwnear;': 10535,\n\t'oacute;': 243,\n\t'odblac;': 337,\n\t'odsold;': 10684,\n\t'ograve;': 242,\n\t'ominus;': 8854,\n\t'origof;': 8886,\n\t'oslash;': 248,\n\t'otilde;': 245,\n\t'otimes;': 8855,\n\t'parsim;': 10995,\n\t'percnt;': 37,\n\t'period;': 46,\n\t'permil;': 8240,\n\t'phmmat;': 8499,\n\t'planck;': 8463,\n\t'plankv;': 8463,\n\t'plusdo;': 8724,\n\t'plusdu;': 10789,\n\t'plusmn;': 177,\n\t'preceq;': 10927,\n\t'primes;': 8473,\n\t'prnsim;': 8936,\n\t'propto;': 8733,\n\t'prurel;': 8880,\n\t'puncsp;': 8200,\n\t'qprime;': 8279,\n\t'rAtail;': 10524,\n\t'racute;': 341,\n\t'rangle;': 10217,\n\t'rarrap;': 10613,\n\t'rarrfs;': 10526,\n\t'rarrhk;': 8618,\n\t'rarrlp;': 8620,\n\t'rarrpl;': 10565,\n\t'rarrtl;': 8611,\n\t'ratail;': 10522,\n\t'rbrace;': 125,\n\t'rbrack;': 93,\n\t'rcaron;': 345,\n\t'rcedil;': 343,\n\t'rdquor;': 8221,\n\t'rfisht;': 10621,\n\t'rfloor;': 8971,\n\t'rharul;': 10604,\n\t'rmoust;': 9137,\n\t'roplus;': 10798,\n\t'rpargt;': 10644,\n\t'rsaquo;': 8250,\n\t'rsquor;': 8217,\n\t'rthree;': 8908,\n\t'rtimes;': 8906,\n\t'sacute;': 347,\n\t'scaron;': 353,\n\t'scedil;': 351,\n\t'scnsim;': 8937,\n\t'searhk;': 10533,\n\t'seswar;': 10537,\n\t'sfrown;': 8994,\n\t'shchcy;': 1097,\n\t'sigmaf;': 962,\n\t'sigmav;': 962,\n\t'simdot;': 10858,\n\t'smashp;': 10803,\n\t'softcy;': 1100,\n\t'solbar;': 9023,\n\t'spades;': 9824,\n\t'sqcaps;': 8851,\n\t'sqcups;': 8852,\n\t'sqsube;': 8849,\n\t'sqsupe;': 8850,\n\t'square;': 9633,\n\t'squarf;': 9642,\n\t'ssetmn;': 8726,\n\t'ssmile;': 8995,\n\t'sstarf;': 8902,\n\t'subdot;': 10941,\n\t'subset;': 8834,\n\t'subsim;': 10951,\n\t'subsub;': 10965,\n\t'subsup;': 10963,\n\t'succeq;': 10928,\n\t'supdot;': 10942,\n\t'supset;': 8835,\n\t'supsim;': 10952,\n\t'supsub;': 10964,\n\t'supsup;': 10966,\n\t'swarhk;': 10534,\n\t'swnwar;': 10538,\n\t'target;': 8982,\n\t'tcaron;': 357,\n\t'tcedil;': 355,\n\t'telrec;': 8981,\n\t'there4;': 8756,\n\t'thetav;': 977,\n\t'thinsp;': 8201,\n\t'thksim;': 8764,\n\t'timesb;': 8864,\n\t'timesd;': 10800,\n\t'topbot;': 9014,\n\t'topcir;': 10993,\n\t'tprime;': 8244,\n\t'tridot;': 9708,\n\t'tstrok;': 359,\n\t'uacute;': 250,\n\t'ubreve;': 365,\n\t'udblac;': 369,\n\t'ufisht;': 10622,\n\t'ugrave;': 249,\n\t'ulcorn;': 8988,\n\t'ulcrop;': 8975,\n\t'urcorn;': 8989,\n\t'urcrop;': 8974,\n\t'utilde;': 361,\n\t'vangrt;': 10652,\n\t'varphi;': 981,\n\t'varrho;': 1009,\n\t'veebar;': 8891,\n\t'vellip;': 8942,\n\t'verbar;': 124,\n\t'vsubnE;': 10955,\n\t'vsubne;': 8842,\n\t'vsupnE;': 10956,\n\t'vsupne;': 8843,\n\t'wedbar;': 10847,\n\t'wedgeq;': 8793,\n\t'weierp;': 8472,\n\t'wreath;': 8768,\n\t'xoplus;': 10753,\n\t'xotime;': 10754,\n\t'xsqcup;': 10758,\n\t'xuplus;': 10756,\n\t'xwedge;': 8896,\n\t'yacute;': 253,\n\t'zacute;': 378,\n\t'zcaron;': 382,\n\t'zeetrf;': 8488,\n\t'AElig;': 198,\n\tAacute: 193,\n\t'Acirc;': 194,\n\tAgrave: 192,\n\t'Alpha;': 913,\n\t'Amacr;': 256,\n\t'Aogon;': 260,\n\t'Aring;': 197,\n\tAtilde: 195,\n\t'Breve;': 728,\n\tCcedil: 199,\n\t'Ccirc;': 264,\n\t'Colon;': 8759,\n\t'Cross;': 10799,\n\t'Dashv;': 10980,\n\t'Delta;': 916,\n\tEacute: 201,\n\t'Ecirc;': 202,\n\tEgrave: 200,\n\t'Emacr;': 274,\n\t'Eogon;': 280,\n\t'Equal;': 10869,\n\t'Gamma;': 915,\n\t'Gcirc;': 284,\n\t'Hacek;': 711,\n\t'Hcirc;': 292,\n\t'IJlig;': 306,\n\tIacute: 205,\n\t'Icirc;': 206,\n\tIgrave: 204,\n\t'Imacr;': 298,\n\t'Iogon;': 302,\n\t'Iukcy;': 1030,\n\t'Jcirc;': 308,\n\t'Jukcy;': 1028,\n\t'Kappa;': 922,\n\tNtilde: 209,\n\t'OElig;': 338,\n\tOacute: 211,\n\t'Ocirc;': 212,\n\tOgrave: 210,\n\t'Omacr;': 332,\n\t'Omega;': 937,\n\tOslash: 216,\n\tOtilde: 213,\n\t'Prime;': 8243,\n\t'RBarr;': 10512,\n\t'Scirc;': 348,\n\t'Sigma;': 931,\n\t'THORN;': 222,\n\t'TRADE;': 8482,\n\t'TSHcy;': 1035,\n\t'Theta;': 920,\n\t'Tilde;': 8764,\n\tUacute: 218,\n\t'Ubrcy;': 1038,\n\t'Ucirc;': 219,\n\tUgrave: 217,\n\t'Umacr;': 362,\n\t'Union;': 8899,\n\t'Uogon;': 370,\n\t'UpTee;': 8869,\n\t'Uring;': 366,\n\t'VDash;': 8875,\n\t'Vdash;': 8873,\n\t'Wcirc;': 372,\n\t'Wedge;': 8896,\n\tYacute: 221,\n\t'Ycirc;': 374,\n\taacute: 225,\n\t'acirc;': 226,\n\t'acute;': 180,\n\t'aelig;': 230,\n\tagrave: 224,\n\t'aleph;': 8501,\n\t'alpha;': 945,\n\t'amacr;': 257,\n\t'amalg;': 10815,\n\t'angle;': 8736,\n\t'angrt;': 8735,\n\t'angst;': 197,\n\t'aogon;': 261,\n\t'aring;': 229,\n\t'asymp;': 8776,\n\tatilde: 227,\n\t'awint;': 10769,\n\t'bcong;': 8780,\n\t'bdquo;': 8222,\n\t'bepsi;': 1014,\n\t'blank;': 9251,\n\t'blk12;': 9618,\n\t'blk14;': 9617,\n\t'blk34;': 9619,\n\t'block;': 9608,\n\t'boxDL;': 9559,\n\t'boxDR;': 9556,\n\t'boxDl;': 9558,\n\t'boxDr;': 9555,\n\t'boxHD;': 9574,\n\t'boxHU;': 9577,\n\t'boxHd;': 9572,\n\t'boxHu;': 9575,\n\t'boxUL;': 9565,\n\t'boxUR;': 9562,\n\t'boxUl;': 9564,\n\t'boxUr;': 9561,\n\t'boxVH;': 9580,\n\t'boxVL;': 9571,\n\t'boxVR;': 9568,\n\t'boxVh;': 9579,\n\t'boxVl;': 9570,\n\t'boxVr;': 9567,\n\t'boxdL;': 9557,\n\t'boxdR;': 9554,\n\t'boxdl;': 9488,\n\t'boxdr;': 9484,\n\t'boxhD;': 9573,\n\t'boxhU;': 9576,\n\t'boxhd;': 9516,\n\t'boxhu;': 9524,\n\t'boxuL;': 9563,\n\t'boxuR;': 9560,\n\t'boxul;': 9496,\n\t'boxur;': 9492,\n\t'boxvH;': 9578,\n\t'boxvL;': 9569,\n\t'boxvR;': 9566,\n\t'boxvh;': 9532,\n\t'boxvl;': 9508,\n\t'boxvr;': 9500,\n\t'breve;': 728,\n\tbrvbar: 166,\n\t'bsemi;': 8271,\n\t'bsime;': 8909,\n\t'bsolb;': 10693,\n\t'bumpE;': 10926,\n\t'bumpe;': 8783,\n\t'caret;': 8257,\n\t'caron;': 711,\n\t'ccaps;': 10829,\n\tccedil: 231,\n\t'ccirc;': 265,\n\t'ccups;': 10828,\n\t'cedil;': 184,\n\t'check;': 10003,\n\t'clubs;': 9827,\n\t'colon;': 58,\n\t'comma;': 44,\n\t'crarr;': 8629,\n\t'cross;': 10007,\n\t'csube;': 10961,\n\t'csupe;': 10962,\n\t'ctdot;': 8943,\n\t'cuepr;': 8926,\n\t'cuesc;': 8927,\n\t'cupor;': 10821,\n\tcurren: 164,\n\t'cuvee;': 8910,\n\t'cuwed;': 8911,\n\t'cwint;': 8753,\n\t'dashv;': 8867,\n\t'dblac;': 733,\n\t'ddarr;': 8650,\n\t'delta;': 948,\n\t'dharl;': 8643,\n\t'dharr;': 8642,\n\t'diams;': 9830,\n\t'disin;': 8946,\n\tdivide: 247,\n\t'doteq;': 8784,\n\t'dtdot;': 8945,\n\t'dtrif;': 9662,\n\t'duarr;': 8693,\n\t'duhar;': 10607,\n\t'eDDot;': 10871,\n\teacute: 233,\n\t'ecirc;': 234,\n\t'efDot;': 8786,\n\tegrave: 232,\n\t'emacr;': 275,\n\t'empty;': 8709,\n\t'eogon;': 281,\n\t'eplus;': 10865,\n\t'epsiv;': 1013,\n\t'eqsim;': 8770,\n\t'equiv;': 8801,\n\t'erDot;': 8787,\n\t'erarr;': 10609,\n\t'esdot;': 8784,\n\t'exist;': 8707,\n\t'fflig;': 64256,\n\t'filig;': 64257,\n\t'fjlig;': 102,\n\t'fllig;': 64258,\n\t'fltns;': 9649,\n\t'forkv;': 10969,\n\tfrac12: 189,\n\tfrac14: 188,\n\tfrac34: 190,\n\t'frasl;': 8260,\n\t'frown;': 8994,\n\t'gamma;': 947,\n\t'gcirc;': 285,\n\t'gescc;': 10921,\n\t'gimel;': 8503,\n\t'gneqq;': 8809,\n\t'gnsim;': 8935,\n\t'grave;': 96,\n\t'gsime;': 10894,\n\t'gsiml;': 10896,\n\t'gtcir;': 10874,\n\t'gtdot;': 8919,\n\t'harrw;': 8621,\n\t'hcirc;': 293,\n\t'hoarr;': 8703,\n\tiacute: 237,\n\t'icirc;': 238,\n\t'iexcl;': 161,\n\tigrave: 236,\n\t'iiint;': 8749,\n\t'iiota;': 8489,\n\t'ijlig;': 307,\n\t'imacr;': 299,\n\t'image;': 8465,\n\t'imath;': 305,\n\t'imped;': 437,\n\t'infin;': 8734,\n\t'iogon;': 303,\n\t'iprod;': 10812,\n\tiquest: 191,\n\t'isinE;': 8953,\n\t'isins;': 8948,\n\t'isinv;': 8712,\n\t'iukcy;': 1110,\n\t'jcirc;': 309,\n\t'jmath;': 567,\n\t'jukcy;': 1108,\n\t'kappa;': 954,\n\t'lAarr;': 8666,\n\t'lBarr;': 10510,\n\t'langd;': 10641,\n\t'laquo;': 171,\n\t'larrb;': 8676,\n\t'lates;': 10925,\n\t'lbarr;': 10508,\n\t'lbbrk;': 10098,\n\t'lbrke;': 10635,\n\t'lceil;': 8968,\n\t'ldquo;': 8220,\n\t'lescc;': 10920,\n\t'lhard;': 8637,\n\t'lharu;': 8636,\n\t'lhblk;': 9604,\n\t'llarr;': 8647,\n\t'lltri;': 9722,\n\t'lneqq;': 8808,\n\t'lnsim;': 8934,\n\t'loang;': 10220,\n\t'loarr;': 8701,\n\t'lobrk;': 10214,\n\t'lopar;': 10629,\n\t'lrarr;': 8646,\n\t'lrhar;': 8651,\n\t'lrtri;': 8895,\n\t'lsime;': 10893,\n\t'lsimg;': 10895,\n\t'lsquo;': 8216,\n\t'ltcir;': 10873,\n\t'ltdot;': 8918,\n\t'ltrie;': 8884,\n\t'ltrif;': 9666,\n\t'mDDot;': 8762,\n\t'mdash;': 8212,\n\t'micro;': 181,\n\tmiddot: 183,\n\t'minus;': 8722,\n\t'mumap;': 8888,\n\t'nabla;': 8711,\n\t'napid;': 8779,\n\t'napos;': 329,\n\t'natur;': 9838,\n\t'nbump;': 8782,\n\t'ncong;': 8775,\n\t'ndash;': 8211,\n\t'neArr;': 8663,\n\t'nearr;': 8599,\n\t'nedot;': 8784,\n\t'nesim;': 8770,\n\t'ngeqq;': 8807,\n\t'ngsim;': 8821,\n\t'nhArr;': 8654,\n\t'nharr;': 8622,\n\t'nhpar;': 10994,\n\t'nlArr;': 8653,\n\t'nlarr;': 8602,\n\t'nleqq;': 8806,\n\t'nless;': 8814,\n\t'nlsim;': 8820,\n\t'nltri;': 8938,\n\t'notin;': 8713,\n\t'notni;': 8716,\n\t'npart;': 8706,\n\t'nprec;': 8832,\n\t'nrArr;': 8655,\n\t'nrarr;': 8603,\n\t'nrtri;': 8939,\n\t'nsime;': 8772,\n\t'nsmid;': 8740,\n\t'nspar;': 8742,\n\t'nsubE;': 10949,\n\t'nsube;': 8840,\n\t'nsucc;': 8833,\n\t'nsupE;': 10950,\n\t'nsupe;': 8841,\n\tntilde: 241,\n\t'numsp;': 8199,\n\t'nvsim;': 8764,\n\t'nwArr;': 8662,\n\t'nwarr;': 8598,\n\toacute: 243,\n\t'ocirc;': 244,\n\t'odash;': 8861,\n\t'oelig;': 339,\n\t'ofcir;': 10687,\n\tograve: 242,\n\t'ohbar;': 10677,\n\t'olarr;': 8634,\n\t'olcir;': 10686,\n\t'oline;': 8254,\n\t'omacr;': 333,\n\t'omega;': 969,\n\t'operp;': 10681,\n\t'oplus;': 8853,\n\t'orarr;': 8635,\n\t'order;': 8500,\n\toslash: 248,\n\totilde: 245,\n\t'ovbar;': 9021,\n\t'parsl;': 11005,\n\t'phone;': 9742,\n\t'plusb;': 8862,\n\t'pluse;': 10866,\n\tplusmn: 177,\n\t'pound;': 163,\n\t'prcue;': 8828,\n\t'prime;': 8242,\n\t'prnap;': 10937,\n\t'prsim;': 8830,\n\t'quest;': 63,\n\t'rAarr;': 8667,\n\t'rBarr;': 10511,\n\t'radic;': 8730,\n\t'rangd;': 10642,\n\t'range;': 10661,\n\t'raquo;': 187,\n\t'rarrb;': 8677,\n\t'rarrc;': 10547,\n\t'rarrw;': 8605,\n\t'ratio;': 8758,\n\t'rbarr;': 10509,\n\t'rbbrk;': 10099,\n\t'rbrke;': 10636,\n\t'rceil;': 8969,\n\t'rdquo;': 8221,\n\t'reals;': 8477,\n\t'rhard;': 8641,\n\t'rharu;': 8640,\n\t'rlarr;': 8644,\n\t'rlhar;': 8652,\n\t'rnmid;': 10990,\n\t'roang;': 10221,\n\t'roarr;': 8702,\n\t'robrk;': 10215,\n\t'ropar;': 10630,\n\t'rrarr;': 8649,\n\t'rsquo;': 8217,\n\t'rtrie;': 8885,\n\t'rtrif;': 9656,\n\t'sbquo;': 8218,\n\t'sccue;': 8829,\n\t'scirc;': 349,\n\t'scnap;': 10938,\n\t'scsim;': 8831,\n\t'sdotb;': 8865,\n\t'sdote;': 10854,\n\t'seArr;': 8664,\n\t'searr;': 8600,\n\t'setmn;': 8726,\n\t'sharp;': 9839,\n\t'sigma;': 963,\n\t'simeq;': 8771,\n\t'simgE;': 10912,\n\t'simlE;': 10911,\n\t'simne;': 8774,\n\t'slarr;': 8592,\n\t'smile;': 8995,\n\t'smtes;': 10924,\n\t'sqcap;': 8851,\n\t'sqcup;': 8852,\n\t'sqsub;': 8847,\n\t'sqsup;': 8848,\n\t'srarr;': 8594,\n\t'starf;': 9733,\n\t'strns;': 175,\n\t'subnE;': 10955,\n\t'subne;': 8842,\n\t'supnE;': 10956,\n\t'supne;': 8843,\n\t'swArr;': 8665,\n\t'swarr;': 8601,\n\t'szlig;': 223,\n\t'theta;': 952,\n\t'thkap;': 8776,\n\t'thorn;': 254,\n\t'tilde;': 732,\n\t'times;': 215,\n\t'trade;': 8482,\n\t'trisb;': 10701,\n\t'tshcy;': 1115,\n\t'twixt;': 8812,\n\tuacute: 250,\n\t'ubrcy;': 1118,\n\t'ucirc;': 251,\n\t'udarr;': 8645,\n\t'udhar;': 10606,\n\tugrave: 249,\n\t'uharl;': 8639,\n\t'uharr;': 8638,\n\t'uhblk;': 9600,\n\t'ultri;': 9720,\n\t'umacr;': 363,\n\t'uogon;': 371,\n\t'uplus;': 8846,\n\t'upsih;': 978,\n\t'uring;': 367,\n\t'urtri;': 9721,\n\t'utdot;': 8944,\n\t'utrif;': 9652,\n\t'uuarr;': 8648,\n\t'vBarv;': 10985,\n\t'vDash;': 8872,\n\t'varpi;': 982,\n\t'vdash;': 8866,\n\t'veeeq;': 8794,\n\t'vltri;': 8882,\n\t'vnsub;': 8834,\n\t'vnsup;': 8835,\n\t'vprop;': 8733,\n\t'vrtri;': 8883,\n\t'wcirc;': 373,\n\t'wedge;': 8743,\n\t'xcirc;': 9711,\n\t'xdtri;': 9661,\n\t'xhArr;': 10234,\n\t'xharr;': 10231,\n\t'xlArr;': 10232,\n\t'xlarr;': 10229,\n\t'xodot;': 10752,\n\t'xrArr;': 10233,\n\t'xrarr;': 10230,\n\t'xutri;': 9651,\n\tyacute: 253,\n\t'ycirc;': 375,\n\tAElig: 198,\n\tAcirc: 194,\n\t'Aopf;': 120120,\n\tAring: 197,\n\t'Ascr;': 119964,\n\t'Auml;': 196,\n\t'Barv;': 10983,\n\t'Beta;': 914,\n\t'Bopf;': 120121,\n\t'Bscr;': 8492,\n\t'CHcy;': 1063,\n\t'COPY;': 169,\n\t'Cdot;': 266,\n\t'Copf;': 8450,\n\t'Cscr;': 119966,\n\t'DJcy;': 1026,\n\t'DScy;': 1029,\n\t'DZcy;': 1039,\n\t'Darr;': 8609,\n\t'Dopf;': 120123,\n\t'Dscr;': 119967,\n\tEcirc: 202,\n\t'Edot;': 278,\n\t'Eopf;': 120124,\n\t'Escr;': 8496,\n\t'Esim;': 10867,\n\t'Euml;': 203,\n\t'Fopf;': 120125,\n\t'Fscr;': 8497,\n\t'GJcy;': 1027,\n\t'Gdot;': 288,\n\t'Gopf;': 120126,\n\t'Gscr;': 119970,\n\t'Hopf;': 8461,\n\t'Hscr;': 8459,\n\t'IEcy;': 1045,\n\t'IOcy;': 1025,\n\tIcirc: 206,\n\t'Idot;': 304,\n\t'Iopf;': 120128,\n\t'Iota;': 921,\n\t'Iscr;': 8464,\n\t'Iuml;': 207,\n\t'Jopf;': 120129,\n\t'Jscr;': 119973,\n\t'KHcy;': 1061,\n\t'KJcy;': 1036,\n\t'Kopf;': 120130,\n\t'Kscr;': 119974,\n\t'LJcy;': 1033,\n\t'Lang;': 10218,\n\t'Larr;': 8606,\n\t'Lopf;': 120131,\n\t'Lscr;': 8466,\n\t'Mopf;': 120132,\n\t'Mscr;': 8499,\n\t'NJcy;': 1034,\n\t'Nopf;': 8469,\n\t'Nscr;': 119977,\n\tOcirc: 212,\n\t'Oopf;': 120134,\n\t'Oscr;': 119978,\n\t'Ouml;': 214,\n\t'Popf;': 8473,\n\t'Pscr;': 119979,\n\t'QUOT;': 34,\n\t'Qopf;': 8474,\n\t'Qscr;': 119980,\n\t'Rang;': 10219,\n\t'Rarr;': 8608,\n\t'Ropf;': 8477,\n\t'Rscr;': 8475,\n\t'SHcy;': 1064,\n\t'Sopf;': 120138,\n\t'Sqrt;': 8730,\n\t'Sscr;': 119982,\n\t'Star;': 8902,\n\tTHORN: 222,\n\t'TScy;': 1062,\n\t'Topf;': 120139,\n\t'Tscr;': 119983,\n\t'Uarr;': 8607,\n\tUcirc: 219,\n\t'Uopf;': 120140,\n\t'Upsi;': 978,\n\t'Uscr;': 119984,\n\t'Uuml;': 220,\n\t'Vbar;': 10987,\n\t'Vert;': 8214,\n\t'Vopf;': 120141,\n\t'Vscr;': 119985,\n\t'Wopf;': 120142,\n\t'Wscr;': 119986,\n\t'Xopf;': 120143,\n\t'Xscr;': 119987,\n\t'YAcy;': 1071,\n\t'YIcy;': 1031,\n\t'YUcy;': 1070,\n\t'Yopf;': 120144,\n\t'Yscr;': 119988,\n\t'Yuml;': 376,\n\t'ZHcy;': 1046,\n\t'Zdot;': 379,\n\t'Zeta;': 918,\n\t'Zopf;': 8484,\n\t'Zscr;': 119989,\n\tacirc: 226,\n\tacute: 180,\n\taelig: 230,\n\t'andd;': 10844,\n\t'andv;': 10842,\n\t'ange;': 10660,\n\t'aopf;': 120146,\n\t'apid;': 8779,\n\t'apos;': 39,\n\taring: 229,\n\t'ascr;': 119990,\n\t'auml;': 228,\n\t'bNot;': 10989,\n\t'bbrk;': 9141,\n\t'beta;': 946,\n\t'beth;': 8502,\n\t'bnot;': 8976,\n\t'bopf;': 120147,\n\t'boxH;': 9552,\n\t'boxV;': 9553,\n\t'boxh;': 9472,\n\t'boxv;': 9474,\n\t'bscr;': 119991,\n\t'bsim;': 8765,\n\t'bsol;': 92,\n\t'bull;': 8226,\n\t'bump;': 8782,\n\t'caps;': 8745,\n\t'cdot;': 267,\n\tcedil: 184,\n\t'cent;': 162,\n\t'chcy;': 1095,\n\t'cirE;': 10691,\n\t'circ;': 710,\n\t'cire;': 8791,\n\t'comp;': 8705,\n\t'cong;': 8773,\n\t'copf;': 120148,\n\t'copy;': 169,\n\t'cscr;': 119992,\n\t'csub;': 10959,\n\t'csup;': 10960,\n\t'cups;': 8746,\n\t'dArr;': 8659,\n\t'dHar;': 10597,\n\t'darr;': 8595,\n\t'dash;': 8208,\n\t'diam;': 8900,\n\t'djcy;': 1106,\n\t'dopf;': 120149,\n\t'dscr;': 119993,\n\t'dscy;': 1109,\n\t'dsol;': 10742,\n\t'dtri;': 9663,\n\t'dzcy;': 1119,\n\t'eDot;': 8785,\n\t'ecir;': 8790,\n\tecirc: 234,\n\t'edot;': 279,\n\t'emsp;': 8195,\n\t'ensp;': 8194,\n\t'eopf;': 120150,\n\t'epar;': 8917,\n\t'epsi;': 949,\n\t'escr;': 8495,\n\t'esim;': 8770,\n\t'euml;': 235,\n\t'euro;': 8364,\n\t'excl;': 33,\n\t'flat;': 9837,\n\t'fnof;': 402,\n\t'fopf;': 120151,\n\t'fork;': 8916,\n\t'fscr;': 119995,\n\t'gdot;': 289,\n\t'geqq;': 8807,\n\t'gesl;': 8923,\n\t'gjcy;': 1107,\n\t'gnap;': 10890,\n\t'gneq;': 10888,\n\t'gopf;': 120152,\n\t'gscr;': 8458,\n\t'gsim;': 8819,\n\t'gtcc;': 10919,\n\t'gvnE;': 8809,\n\t'hArr;': 8660,\n\t'half;': 189,\n\t'harr;': 8596,\n\t'hbar;': 8463,\n\t'hopf;': 120153,\n\t'hscr;': 119997,\n\ticirc: 238,\n\t'iecy;': 1077,\n\tiexcl: 161,\n\t'imof;': 8887,\n\t'iocy;': 1105,\n\t'iopf;': 120154,\n\t'iota;': 953,\n\t'iscr;': 119998,\n\t'isin;': 8712,\n\t'iuml;': 239,\n\t'jopf;': 120155,\n\t'jscr;': 119999,\n\t'khcy;': 1093,\n\t'kjcy;': 1116,\n\t'kopf;': 120156,\n\t'kscr;': 120000,\n\t'lArr;': 8656,\n\t'lHar;': 10594,\n\t'lang;': 10216,\n\tlaquo: 171,\n\t'larr;': 8592,\n\t'late;': 10925,\n\t'lcub;': 123,\n\t'ldca;': 10550,\n\t'ldsh;': 8626,\n\t'leqq;': 8806,\n\t'lesg;': 8922,\n\t'ljcy;': 1113,\n\t'lnap;': 10889,\n\t'lneq;': 10887,\n\t'lopf;': 120157,\n\t'lozf;': 10731,\n\t'lpar;': 40,\n\t'lscr;': 120001,\n\t'lsim;': 8818,\n\t'lsqb;': 91,\n\t'ltcc;': 10918,\n\t'ltri;': 9667,\n\t'lvnE;': 8808,\n\t'macr;': 175,\n\t'male;': 9794,\n\t'malt;': 10016,\n\tmicro: 181,\n\t'mlcp;': 10971,\n\t'mldr;': 8230,\n\t'mopf;': 120158,\n\t'mscr;': 120002,\n\t'nGtv;': 8811,\n\t'nLtv;': 8810,\n\t'nang;': 8736,\n\t'napE;': 10864,\n\t'nbsp;': 160,\n\t'ncap;': 10819,\n\t'ncup;': 10818,\n\t'ngeq;': 8817,\n\t'nges;': 10878,\n\t'ngtr;': 8815,\n\t'nisd;': 8954,\n\t'njcy;': 1114,\n\t'nldr;': 8229,\n\t'nleq;': 8816,\n\t'nles;': 10877,\n\t'nmid;': 8740,\n\t'nopf;': 120159,\n\t'npar;': 8742,\n\t'npre;': 10927,\n\t'nsce;': 10928,\n\t'nscr;': 120003,\n\t'nsim;': 8769,\n\t'nsub;': 8836,\n\t'nsup;': 8837,\n\t'ntgl;': 8825,\n\t'ntlg;': 8824,\n\t'nvap;': 8781,\n\t'nvge;': 8805,\n\t'nvgt;': 62,\n\t'nvle;': 8804,\n\t'nvlt;': 60,\n\t'oast;': 8859,\n\t'ocir;': 8858,\n\tocirc: 244,\n\t'odiv;': 10808,\n\t'odot;': 8857,\n\t'ogon;': 731,\n\t'oint;': 8750,\n\t'omid;': 10678,\n\t'oopf;': 120160,\n\t'opar;': 10679,\n\t'ordf;': 170,\n\t'ordm;': 186,\n\t'oror;': 10838,\n\t'oscr;': 8500,\n\t'osol;': 8856,\n\t'ouml;': 246,\n\t'para;': 182,\n\t'part;': 8706,\n\t'perp;': 8869,\n\t'phiv;': 981,\n\t'plus;': 43,\n\t'popf;': 120161,\n\tpound: 163,\n\t'prap;': 10935,\n\t'prec;': 8826,\n\t'prnE;': 10933,\n\t'prod;': 8719,\n\t'prop;': 8733,\n\t'pscr;': 120005,\n\t'qint;': 10764,\n\t'qopf;': 120162,\n\t'qscr;': 120006,\n\t'quot;': 34,\n\t'rArr;': 8658,\n\t'rHar;': 10596,\n\t'race;': 8765,\n\t'rang;': 10217,\n\traquo: 187,\n\t'rarr;': 8594,\n\t'rcub;': 125,\n\t'rdca;': 10551,\n\t'rdsh;': 8627,\n\t'real;': 8476,\n\t'rect;': 9645,\n\t'rhov;': 1009,\n\t'ring;': 730,\n\t'ropf;': 120163,\n\t'rpar;': 41,\n\t'rscr;': 120007,\n\t'rsqb;': 93,\n\t'rtri;': 9657,\n\t'scap;': 10936,\n\t'scnE;': 10934,\n\t'sdot;': 8901,\n\t'sect;': 167,\n\t'semi;': 59,\n\t'sext;': 10038,\n\t'shcy;': 1096,\n\t'sime;': 8771,\n\t'simg;': 10910,\n\t'siml;': 10909,\n\t'smid;': 8739,\n\t'smte;': 10924,\n\t'solb;': 10692,\n\t'sopf;': 120164,\n\t'spar;': 8741,\n\t'squf;': 9642,\n\t'sscr;': 120008,\n\t'star;': 9734,\n\t'subE;': 10949,\n\t'sube;': 8838,\n\t'succ;': 8827,\n\t'sung;': 9834,\n\t'sup1;': 185,\n\t'sup2;': 178,\n\t'sup3;': 179,\n\t'supE;': 10950,\n\t'supe;': 8839,\n\tszlig: 223,\n\t'tbrk;': 9140,\n\t'tdot;': 8411,\n\tthorn: 254,\n\ttimes: 215,\n\t'tint;': 8749,\n\t'toea;': 10536,\n\t'topf;': 120165,\n\t'tosa;': 10537,\n\t'trie;': 8796,\n\t'tscr;': 120009,\n\t'tscy;': 1094,\n\t'uArr;': 8657,\n\t'uHar;': 10595,\n\t'uarr;': 8593,\n\tucirc: 251,\n\t'uopf;': 120166,\n\t'upsi;': 965,\n\t'uscr;': 120010,\n\t'utri;': 9653,\n\t'uuml;': 252,\n\t'vArr;': 8661,\n\t'vBar;': 10984,\n\t'varr;': 8597,\n\t'vert;': 124,\n\t'vopf;': 120167,\n\t'vscr;': 120011,\n\t'wopf;': 120168,\n\t'wscr;': 120012,\n\t'xcap;': 8898,\n\t'xcup;': 8899,\n\t'xmap;': 10236,\n\t'xnis;': 8955,\n\t'xopf;': 120169,\n\t'xscr;': 120013,\n\t'xvee;': 8897,\n\t'yacy;': 1103,\n\t'yicy;': 1111,\n\t'yopf;': 120170,\n\t'yscr;': 120014,\n\t'yucy;': 1102,\n\t'yuml;': 255,\n\t'zdot;': 380,\n\t'zeta;': 950,\n\t'zhcy;': 1078,\n\t'zopf;': 120171,\n\t'zscr;': 120015,\n\t'zwnj;': 8204,\n\t'AMP;': 38,\n\t'Acy;': 1040,\n\t'Afr;': 120068,\n\t'And;': 10835,\n\tAuml: 196,\n\t'Bcy;': 1041,\n\t'Bfr;': 120069,\n\tCOPY: 169,\n\t'Cap;': 8914,\n\t'Cfr;': 8493,\n\t'Chi;': 935,\n\t'Cup;': 8915,\n\t'Dcy;': 1044,\n\t'Del;': 8711,\n\t'Dfr;': 120071,\n\t'Dot;': 168,\n\t'ENG;': 330,\n\t'ETH;': 208,\n\t'Ecy;': 1069,\n\t'Efr;': 120072,\n\t'Eta;': 919,\n\tEuml: 203,\n\t'Fcy;': 1060,\n\t'Ffr;': 120073,\n\t'Gcy;': 1043,\n\t'Gfr;': 120074,\n\t'Hat;': 94,\n\t'Hfr;': 8460,\n\t'Icy;': 1048,\n\t'Ifr;': 8465,\n\t'Int;': 8748,\n\tIuml: 207,\n\t'Jcy;': 1049,\n\t'Jfr;': 120077,\n\t'Kcy;': 1050,\n\t'Kfr;': 120078,\n\t'Lcy;': 1051,\n\t'Lfr;': 120079,\n\t'Lsh;': 8624,\n\t'Map;': 10501,\n\t'Mcy;': 1052,\n\t'Mfr;': 120080,\n\t'Ncy;': 1053,\n\t'Nfr;': 120081,\n\t'Not;': 10988,\n\t'Ocy;': 1054,\n\t'Ofr;': 120082,\n\tOuml: 214,\n\t'Pcy;': 1055,\n\t'Pfr;': 120083,\n\t'Phi;': 934,\n\t'Psi;': 936,\n\tQUOT: 34,\n\t'Qfr;': 120084,\n\t'REG;': 174,\n\t'Rcy;': 1056,\n\t'Rfr;': 8476,\n\t'Rho;': 929,\n\t'Rsh;': 8625,\n\t'Scy;': 1057,\n\t'Sfr;': 120086,\n\t'Sub;': 8912,\n\t'Sum;': 8721,\n\t'Sup;': 8913,\n\t'Tab;': 9,\n\t'Tau;': 932,\n\t'Tcy;': 1058,\n\t'Tfr;': 120087,\n\t'Ucy;': 1059,\n\t'Ufr;': 120088,\n\tUuml: 220,\n\t'Vcy;': 1042,\n\t'Vee;': 8897,\n\t'Vfr;': 120089,\n\t'Wfr;': 120090,\n\t'Xfr;': 120091,\n\t'Ycy;': 1067,\n\t'Yfr;': 120092,\n\t'Zcy;': 1047,\n\t'Zfr;': 8488,\n\t'acE;': 8766,\n\t'acd;': 8767,\n\t'acy;': 1072,\n\t'afr;': 120094,\n\t'amp;': 38,\n\t'and;': 8743,\n\t'ang;': 8736,\n\t'apE;': 10864,\n\t'ape;': 8778,\n\t'ast;': 42,\n\tauml: 228,\n\t'bcy;': 1073,\n\t'bfr;': 120095,\n\t'bne;': 61,\n\t'bot;': 8869,\n\t'cap;': 8745,\n\tcent: 162,\n\t'cfr;': 120096,\n\t'chi;': 967,\n\t'cir;': 9675,\n\tcopy: 169,\n\t'cup;': 8746,\n\t'dcy;': 1076,\n\t'deg;': 176,\n\t'dfr;': 120097,\n\t'die;': 168,\n\t'div;': 247,\n\t'dot;': 729,\n\t'ecy;': 1101,\n\t'efr;': 120098,\n\t'egs;': 10902,\n\t'ell;': 8467,\n\t'els;': 10901,\n\t'eng;': 331,\n\t'eta;': 951,\n\t'eth;': 240,\n\teuml: 235,\n\t'fcy;': 1092,\n\t'ffr;': 120099,\n\t'gEl;': 10892,\n\t'gap;': 10886,\n\t'gcy;': 1075,\n\t'gel;': 8923,\n\t'geq;': 8805,\n\t'ges;': 10878,\n\t'gfr;': 120100,\n\t'ggg;': 8921,\n\t'glE;': 10898,\n\t'gla;': 10917,\n\t'glj;': 10916,\n\t'gnE;': 8809,\n\t'gne;': 10888,\n\t'hfr;': 120101,\n\t'icy;': 1080,\n\t'iff;': 8660,\n\t'ifr;': 120102,\n\t'int;': 8747,\n\tiuml: 239,\n\t'jcy;': 1081,\n\t'jfr;': 120103,\n\t'kcy;': 1082,\n\t'kfr;': 120104,\n\t'lEg;': 10891,\n\t'lap;': 10885,\n\t'lat;': 10923,\n\t'lcy;': 1083,\n\t'leg;': 8922,\n\t'leq;': 8804,\n\t'les;': 10877,\n\t'lfr;': 120105,\n\t'lgE;': 10897,\n\t'lnE;': 8808,\n\t'lne;': 10887,\n\t'loz;': 9674,\n\t'lrm;': 8206,\n\t'lsh;': 8624,\n\tmacr: 175,\n\t'map;': 8614,\n\t'mcy;': 1084,\n\t'mfr;': 120106,\n\t'mho;': 8487,\n\t'mid;': 8739,\n\t'nGg;': 8921,\n\t'nGt;': 8811,\n\t'nLl;': 8920,\n\t'nLt;': 8810,\n\t'nap;': 8777,\n\tnbsp: 160,\n\t'ncy;': 1085,\n\t'nfr;': 120107,\n\t'ngE;': 8807,\n\t'nge;': 8817,\n\t'ngt;': 8815,\n\t'nis;': 8956,\n\t'niv;': 8715,\n\t'nlE;': 8806,\n\t'nle;': 8816,\n\t'nlt;': 8814,\n\t'not;': 172,\n\t'npr;': 8832,\n\t'nsc;': 8833,\n\t'num;': 35,\n\t'ocy;': 1086,\n\t'ofr;': 120108,\n\t'ogt;': 10689,\n\t'ohm;': 937,\n\t'olt;': 10688,\n\t'ord;': 10845,\n\tordf: 170,\n\tordm: 186,\n\t'orv;': 10843,\n\touml: 246,\n\t'par;': 8741,\n\tpara: 182,\n\t'pcy;': 1087,\n\t'pfr;': 120109,\n\t'phi;': 966,\n\t'piv;': 982,\n\t'prE;': 10931,\n\t'pre;': 10927,\n\t'psi;': 968,\n\t'qfr;': 120110,\n\tquot: 34,\n\t'rcy;': 1088,\n\t'reg;': 174,\n\t'rfr;': 120111,\n\t'rho;': 961,\n\t'rlm;': 8207,\n\t'rsh;': 8625,\n\t'scE;': 10932,\n\t'sce;': 10928,\n\t'scy;': 1089,\n\tsect: 167,\n\t'sfr;': 120112,\n\t'shy;': 173,\n\t'sim;': 8764,\n\t'smt;': 10922,\n\t'sol;': 47,\n\t'squ;': 9633,\n\t'sub;': 8834,\n\t'sum;': 8721,\n\tsup1: 185,\n\tsup2: 178,\n\tsup3: 179,\n\t'sup;': 8835,\n\t'tau;': 964,\n\t'tcy;': 1090,\n\t'tfr;': 120113,\n\t'top;': 8868,\n\t'ucy;': 1091,\n\t'ufr;': 120114,\n\t'uml;': 168,\n\tuuml: 252,\n\t'vcy;': 1074,\n\t'vee;': 8744,\n\t'vfr;': 120115,\n\t'wfr;': 120116,\n\t'xfr;': 120117,\n\t'ycy;': 1099,\n\t'yen;': 165,\n\t'yfr;': 120118,\n\tyuml: 255,\n\t'zcy;': 1079,\n\t'zfr;': 120119,\n\t'zwj;': 8205,\n\tAMP: 38,\n\t'DD;': 8517,\n\tETH: 208,\n\t'GT;': 62,\n\t'Gg;': 8921,\n\t'Gt;': 8811,\n\t'Im;': 8465,\n\t'LT;': 60,\n\t'Ll;': 8920,\n\t'Lt;': 8810,\n\t'Mu;': 924,\n\t'Nu;': 925,\n\t'Or;': 10836,\n\t'Pi;': 928,\n\t'Pr;': 10939,\n\tREG: 174,\n\t'Re;': 8476,\n\t'Sc;': 10940,\n\t'Xi;': 926,\n\t'ac;': 8766,\n\t'af;': 8289,\n\tamp: 38,\n\t'ap;': 8776,\n\t'dd;': 8518,\n\tdeg: 176,\n\t'ee;': 8519,\n\t'eg;': 10906,\n\t'el;': 10905,\n\teth: 240,\n\t'gE;': 8807,\n\t'ge;': 8805,\n\t'gg;': 8811,\n\t'gl;': 8823,\n\t'gt;': 62,\n\t'ic;': 8291,\n\t'ii;': 8520,\n\t'in;': 8712,\n\t'it;': 8290,\n\t'lE;': 8806,\n\t'le;': 8804,\n\t'lg;': 8822,\n\t'll;': 8810,\n\t'lt;': 60,\n\t'mp;': 8723,\n\t'mu;': 956,\n\t'ne;': 8800,\n\t'ni;': 8715,\n\tnot: 172,\n\t'nu;': 957,\n\t'oS;': 9416,\n\t'or;': 8744,\n\t'pi;': 960,\n\t'pm;': 177,\n\t'pr;': 8826,\n\treg: 174,\n\t'rx;': 8478,\n\t'sc;': 8827,\n\tshy: 173,\n\tuml: 168,\n\t'wp;': 8472,\n\t'wr;': 8768,\n\t'xi;': 958,\n\tyen: 165,\n\tGT: 62,\n\tLT: 60,\n\tgt: 62,\n\tlt: 60\n};\n", "import entities from './entities.js';\n\nconst windows_1252 = [\n\t8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216,\n\t8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376\n];\n\n/**\n * @param {string} entity_name\n * @param {boolean} is_attribute_value\n */\nfunction reg_exp_entity(entity_name, is_attribute_value) {\n\t// https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n\t// doesn't decode the html entity which not ends with ; and next character is =, number or alphabet in attribute value.\n\tif (is_attribute_value && !entity_name.endsWith(';')) {\n\t\treturn `${entity_name}\\\\b(?!=)`;\n\t}\n\treturn entity_name;\n}\n\n/** @param {boolean} is_attribute_value */\nfunction get_entity_pattern(is_attribute_value) {\n\tconst reg_exp_num = '#(?:x[a-fA-F\\\\d]+|\\\\d+)(?:;)?';\n\tconst reg_exp_entities = Object.keys(entities).map(\n\t\t/** @param {any} entity_name */ (entity_name) => reg_exp_entity(entity_name, is_attribute_value)\n\t);\n\n\tconst entity_pattern = new RegExp(`&(${reg_exp_num}|${reg_exp_entities.join('|')})`, 'g');\n\n\treturn entity_pattern;\n}\n\nconst entity_pattern_content = get_entity_pattern(false);\nconst entity_pattern_attr_value = get_entity_pattern(true);\n\n/**\n * @param {string} html\n * @param {boolean} is_attribute_value\n */\nexport function decode_character_references(html, is_attribute_value) {\n\tconst entity_pattern = is_attribute_value ? entity_pattern_attr_value : entity_pattern_content;\n\treturn html.replace(\n\t\tentity_pattern,\n\t\t/**\n\t\t * @param {any} match\n\t\t * @param {keyof typeof entities} entity\n\t\t */ (match, entity) => {\n\t\t\tlet code;\n\n\t\t\t// Handle named entities\n\t\t\tif (entity[0] !== '#') {\n\t\t\t\tcode = entities[entity];\n\t\t\t} else if (entity[1] === 'x') {\n\t\t\t\tcode = parseInt(entity.substring(2), 16);\n\t\t\t} else {\n\t\t\t\tcode = parseInt(entity.substring(1), 10);\n\t\t\t}\n\n\t\t\tif (!code) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\treturn String.fromCodePoint(validate_code(code));\n\t\t}\n\t);\n}\n\nconst NUL = 0;\n\n// some code points are verboten. If we were inserting HTML, the browser would replace the illegal\n// code points with alternatives in some cases - since we're bypassing that mechanism, we need\n// to replace them ourselves\n//\n// Source: http://en.wikipedia.org/wiki/Character_encodings_in_HTML#Illegal_characters\n// Also see: https://en.wikipedia.org/wiki/Plane_(Unicode)\n// Also see: https://html.spec.whatwg.org/multipage/parsing.html#preprocessing-the-input-stream\n\n/** @param {number} code */\nfunction validate_code(code) {\n\t// line feed becomes generic whitespace\n\tif (code === 10) {\n\t\treturn 32;\n\t}\n\n\t// ASCII range. (Why someone would use HTML entities for ASCII characters I don't know, but...)\n\tif (code < 128) {\n\t\treturn code;\n\t}\n\n\t// code points 128-159 are dealt with leniently by browsers, but they're incorrect. We need\n\t// to correct the mistake or we'll end up with missing € signs and so on\n\tif (code <= 159) {\n\t\treturn windows_1252[code - 128];\n\t}\n\n\t// basic multilingual plane\n\tif (code < 55296) {\n\t\treturn code;\n\t}\n\n\t// UTF-16 surrogate halves\n\tif (code <= 57343) {\n\t\treturn NUL;\n\t}\n\n\t// rest of the basic multilingual plane\n\tif (code <= 65535) {\n\t\treturn code;\n\t}\n\n\t// supplementary multilingual plane 0x10000 - 0x1ffff\n\tif (code >= 65536 && code <= 131071) {\n\t\treturn code;\n\t}\n\n\t// supplementary ideographic plane 0x20000 - 0x2ffff\n\tif (code >= 131072 && code <= 196607) {\n\t\treturn code;\n\t}\n\n\t// supplementary special-purpose plane 0xe0000 - 0xe07f and 0xe0100 - 0xe01ef\n\tif ((code >= 917504 && code <= 917631) || (code >= 917760 && code <= 917999)) {\n\t\treturn code;\n\t}\n\n\treturn NUL;\n}\n", "/** @import { AST } from '#compiler' */\n\n/**\n * @param {any} transparent\n * @returns {AST.Fragment}\n */\nexport function create_fragment(transparent = false) {\n\treturn {\n\t\ttype: 'Fragment',\n\t\tnodes: [],\n\t\tmetadata: {\n\t\t\ttransparent,\n\t\t\tdynamic: false\n\t\t}\n\t};\n}\n", "/** @import { AST, ExpressionMetadata } from '#compiler' */\n/**\n * All nodes that can appear elsewhere than the top level, have attributes and can contain children\n */\nconst element_nodes = [\n\t'SvelteElement',\n\t'RegularElement',\n\t'SvelteFragment',\n\t'Component',\n\t'SvelteComponent',\n\t'SvelteSelf',\n\t'SlotElement'\n];\n\n/**\n * Returns true for all nodes that can appear elsewhere than the top level, have attributes and can contain children\n * @param {AST.SvelteNode} node\n * @returns {node is AST.Component | AST.RegularElement | AST.SlotElement | AST.SvelteComponent | AST.SvelteElement | AST.SvelteFragment | AST.SvelteSelf}\n */\nexport function is_element_node(node) {\n\treturn element_nodes.includes(node.type);\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} node\n * @returns {boolean}\n */\nexport function is_custom_element_node(node) {\n\treturn (\n\t\tnode.type === 'RegularElement' &&\n\t\t(node.name.includes('-') ||\n\t\t\tnode.attributes.some((attr) => attr.type === 'Attribute' && attr.name === 'is'))\n\t);\n}\n\n/**\n * @param {string} name\n * @param {number} start\n * @param {number} end\n * @param {AST.Attribute['value']} value\n * @returns {AST.Attribute}\n */\nexport function create_attribute(name, start, end, value) {\n\treturn {\n\t\ttype: 'Attribute',\n\t\tstart,\n\t\tend,\n\t\tname,\n\t\tvalue,\n\t\tmetadata: {\n\t\t\tdelegated: null,\n\t\t\tneeds_clsx: false\n\t\t}\n\t};\n}\n\n/**\n * @returns {ExpressionMetadata}\n */\nexport function create_expression_metadata() {\n\treturn {\n\t\tdependencies: new Set(),\n\t\thas_state: false,\n\t\thas_call: false\n\t};\n}\n", "/**\n * Map of elements that have certain elements that are not allowed inside them, in the sense that they will auto-close the parent/ancestor element.\n * Theoretically one could take advantage of it but most of the time it will just result in confusing behavior and break when SSR'd.\n * There are more elements that are invalid inside other elements, but they're not auto-closed and so don't break SSR and are therefore not listed here.\n * @type {Record<string, { direct: string[]} | { descendant: string[]; reset_by?: string[] }>}\n */\nconst autoclosing_children = {\n\t// based on http://developers.whatwg.org/syntax.html#syntax-tag-omission\n\tli: { direct: ['li'] },\n\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt#technical_summary\n\tdt: { descendant: ['dt', 'dd'], reset_by: ['dl'] },\n\tdd: { descendant: ['dt', 'dd'], reset_by: ['dl'] },\n\tp: {\n\t\tdescendant: [\n\t\t\t'address',\n\t\t\t'article',\n\t\t\t'aside',\n\t\t\t'blockquote',\n\t\t\t'div',\n\t\t\t'dl',\n\t\t\t'fieldset',\n\t\t\t'footer',\n\t\t\t'form',\n\t\t\t'h1',\n\t\t\t'h2',\n\t\t\t'h3',\n\t\t\t'h4',\n\t\t\t'h5',\n\t\t\t'h6',\n\t\t\t'header',\n\t\t\t'hgroup',\n\t\t\t'hr',\n\t\t\t'main',\n\t\t\t'menu',\n\t\t\t'nav',\n\t\t\t'ol',\n\t\t\t'p',\n\t\t\t'pre',\n\t\t\t'section',\n\t\t\t'table',\n\t\t\t'ul'\n\t\t]\n\t},\n\trt: { descendant: ['rt', 'rp'] },\n\trp: { descendant: ['rt', 'rp'] },\n\toptgroup: { descendant: ['optgroup'] },\n\toption: { descendant: ['option', 'optgroup'] },\n\tthead: { direct: ['tbody', 'tfoot'] },\n\ttbody: { direct: ['tbody', 'tfoot'] },\n\ttfoot: { direct: ['tbody'] },\n\ttr: { direct: ['tr', 'tbody'] },\n\ttd: { direct: ['td', 'th', 'tr'] },\n\tth: { direct: ['td', 'th', 'tr'] }\n};\n\n/**\n * Returns true if the tag is either the last in the list of siblings and will be autoclosed,\n * or not allowed inside the parent tag such that it will auto-close it. The latter results\n * in the browser repairing the HTML, which will likely result in an error during hydration.\n * @param {string} current\n * @param {string} [next]\n */\nexport function closing_tag_omitted(current, next) {\n\tconst disallowed = autoclosing_children[current];\n\tif (disallowed) {\n\t\tif (\n\t\t\t!next ||\n\t\t\t('direct' in disallowed ? disallowed.direct : disallowed.descendant).includes(next)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Map of elements that have certain elements that are not allowed inside them, in the sense that the browser will somehow repair the HTML.\n * There are more elements that are invalid inside other elements, but they're not repaired and so don't break SSR and are therefore not listed here.\n * @type {Record<string, { direct: string[]} | { descendant: string[]; reset_by?: string[]; only?: string[] } | { only: string[] }>}\n */\nconst disallowed_children = {\n\t...autoclosing_children,\n\toptgroup: { only: ['option', '#text'] },\n\t// Strictly speaking, seeing an <option> doesn't mean we're in a <select>, but we assume it here\n\toption: { only: ['#text'] },\n\tform: { descendant: ['form'] },\n\ta: { descendant: ['a'] },\n\tbutton: { descendant: ['button'] },\n\th1: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\th2: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\th3: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\th4: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\th5: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\th6: { descendant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] },\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\tselect: { only: ['option', 'optgroup', '#text', 'hr', 'script', 'template'] },\n\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t// No special behavior since these rules fall back to \"in body\" mode for\n\t// all except special table nodes which cause bad parsing behavior anyway.\n\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\ttr: { only: ['th', 'td', 'style', 'script', 'template'] },\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\ttbody: { only: ['tr', 'style', 'script', 'template'] },\n\tthead: { only: ['tr', 'style', 'script', 'template'] },\n\ttfoot: { only: ['tr', 'style', 'script', 'template'] },\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\tcolgroup: { only: ['col', 'template'] },\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\ttable: {\n\t\tonly: ['caption', 'colgroup', 'tbody', 'thead', 'tfoot', 'style', 'script', 'template']\n\t},\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\thead: {\n\t\tonly: [\n\t\t\t'base',\n\t\t\t'basefont',\n\t\t\t'bgsound',\n\t\t\t'link',\n\t\t\t'meta',\n\t\t\t'title',\n\t\t\t'noscript',\n\t\t\t'noframes',\n\t\t\t'style',\n\t\t\t'script',\n\t\t\t'template'\n\t\t]\n\t},\n\t// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\thtml: { only: ['head', 'body', 'frameset'] },\n\tframeset: { only: ['frame'] },\n\t'#document': { only: ['html'] }\n};\n\n/**\n * Returns an error message if the tag is not allowed inside the ancestor tag (which is grandparent and above) such that it will result\n * in the browser repairing the HTML, which will likely result in an error during hydration.\n * @param {string} child_tag\n * @param {string[]} ancestors All nodes starting with the parent, up until the ancestor, which means two entries minimum\n * @param {string} [child_loc]\n * @param {string} [ancestor_loc]\n * @returns {string | null}\n */\nexport function is_tag_valid_with_ancestor(child_tag, ancestors, child_loc, ancestor_loc) {\n\tif (child_tag.includes('-')) return null; // custom elements can be anything\n\n\tconst ancestor_tag = ancestors[ancestors.length - 1];\n\tconst disallowed = disallowed_children[ancestor_tag];\n\tif (!disallowed) return null;\n\n\tif ('reset_by' in disallowed && disallowed.reset_by) {\n\t\tfor (let i = ancestors.length - 2; i >= 0; i--) {\n\t\t\tconst ancestor = ancestors[i];\n\t\t\tif (ancestor.includes('-')) return null; // custom elements can be anything\n\n\t\t\t// A reset means that forbidden descendants are allowed again\n\t\t\tif (disallowed.reset_by.includes(ancestors[i])) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ('descendant' in disallowed && disallowed.descendant.includes(child_tag)) {\n\t\tconst child = child_loc ? `\\`<${child_tag}>\\` (${child_loc})` : `\\`<${child_tag}>\\``;\n\t\tconst ancestor = ancestor_loc\n\t\t\t? `\\`<${ancestor_tag}>\\` (${ancestor_loc})`\n\t\t\t: `\\`<${ancestor_tag}>\\``;\n\n\t\treturn `${child} cannot be a descendant of ${ancestor}`;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns an error message if the tag is not allowed inside the parent tag such that it will result\n * in the browser repairing the HTML, which will likely result in an error during hydration.\n * @param {string} child_tag\n * @param {string} parent_tag\n * @param {string} [child_loc]\n * @param {string} [parent_loc]\n * @returns {string | null}\n */\nexport function is_tag_valid_with_parent(child_tag, parent_tag, child_loc, parent_loc) {\n\tif (child_tag.includes('-') || parent_tag?.includes('-')) return null; // custom elements can be anything\n\n\tif (parent_tag === 'template') return null; // no errors or warning should be thrown in immediate children of template tags\n\n\tconst disallowed = disallowed_children[parent_tag];\n\n\tconst child = child_loc ? `\\`<${child_tag}>\\` (${child_loc})` : `\\`<${child_tag}>\\``;\n\tconst parent = parent_loc ? `\\`<${parent_tag}>\\` (${parent_loc})` : `\\`<${parent_tag}>\\``;\n\n\tif (disallowed) {\n\t\tif ('direct' in disallowed && disallowed.direct.includes(child_tag)) {\n\t\t\treturn `${child} cannot be a direct child of ${parent}`;\n\t\t}\n\n\t\tif ('descendant' in disallowed && disallowed.descendant.includes(child_tag)) {\n\t\t\treturn `${child} cannot be a child of ${parent}`;\n\t\t}\n\n\t\tif ('only' in disallowed && disallowed.only) {\n\t\t\tif (disallowed.only.includes(child_tag)) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn `${child} cannot be a child of ${parent}. \\`<${parent_tag}>\\` only allows these children: ${disallowed.only.map((d) => `\\`<${d}>\\``).join(', ')}`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// These tags are only valid with a few parents that have special child\n\t// parsing rules - if we're down here, then none of those matched and\n\t// so we allow it only if we don't know what the parent is, as all other\n\t// cases are invalid (and we only get into this function if we know the parent).\n\tswitch (child_tag) {\n\t\tcase 'body':\n\t\tcase 'caption':\n\t\tcase 'col':\n\t\tcase 'colgroup':\n\t\tcase 'frameset':\n\t\tcase 'frame':\n\t\tcase 'head':\n\t\tcase 'html':\n\t\t\treturn `${child} cannot be a child of ${parent}`;\n\t\tcase 'thead':\n\t\tcase 'tbody':\n\t\tcase 'tfoot':\n\t\t\treturn `${child} must be the child of a \\`<table>\\`, not a ${parent}`;\n\t\tcase 'td':\n\t\tcase 'th':\n\t\t\treturn `${child} must be the child of a \\`<tr>\\`, not a ${parent}`;\n\t\tcase 'tr':\n\t\t\treturn `\\`<tr>\\` must be the child of a \\`<thead>\\`, \\`<tbody>\\`, or \\`<tfoot>\\`, not a ${parent}`;\n\t}\n\n\treturn null;\n}\n", "/**\n * @param {string[]} strings\n * @param {string} conjunction\n */\nexport function list(strings, conjunction = 'or') {\n\tif (strings.length === 1) return strings[0];\n\tif (strings.length === 2) return `${strings[0]} ${conjunction} ${strings[1]}`;\n\treturn `${strings.slice(0, -1).join(', ')} ${conjunction} ${strings[strings.length - 1]}`;\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Parser } from '../index.js' */\nimport { is_void } from '../../../../utils.js';\nimport read_expression from '../read/expression.js';\nimport { read_script } from '../read/script.js';\nimport read_style from '../read/style.js';\nimport { decode_character_references } from '../utils/html.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { create_fragment } from '../utils/create.js';\nimport { create_attribute, create_expression_metadata, is_element_node } from '../../nodes.js';\nimport { get_attribute_expression, is_expression_attribute } from '../../../utils/ast.js';\nimport { closing_tag_omitted } from '../../../../html-tree-validation.js';\nimport { list } from '../../../utils/string.js';\nimport { regex_whitespace } from '../../patterns.js';\n\nconst regex_invalid_unquoted_attribute_value = /^(\\/>|[\\s\"'=<>`])/;\nconst regex_closing_textarea_tag = /^<\\/textarea(\\s[^>]*)?>/i;\nconst regex_closing_comment = /-->/;\nconst regex_whitespace_or_slash_or_closing_tag = /(\\s|\\/|>)/;\nconst regex_token_ending_character = /[\\s=/>\"']/;\nconst regex_starts_with_quote_characters = /^[\"']/;\nconst regex_attribute_value = /^(?:\"([^\"]*)\"|'([^'])*'|([^>\\s]+))/;\nconst regex_valid_element_name =\n\t/^(?:![a-zA-Z]+|[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|[a-zA-Z][a-zA-Z0-9]*:[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])$/;\nexport const regex_valid_component_name =\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#identifiers adjusted for our needs\n\t// (must start with uppercase letter if no dots, can contain dots)\n\t/^(?:\\p{Lu}[$\\u200c\\u200d\\p{ID_Continue}.]*|\\p{ID_Start}[$\\u200c\\u200d\\p{ID_Continue}]*(?:\\.[$\\u200c\\u200d\\p{ID_Continue}]+)+)$/u;\n\n/** @type {Map<string, AST.ElementLike['type']>} */\nconst root_only_meta_tags = new Map([\n\t['svelte:head', 'SvelteHead'],\n\t['svelte:options', 'SvelteOptions'],\n\t['svelte:window', 'SvelteWindow'],\n\t['svelte:document', 'SvelteDocument'],\n\t['svelte:body', 'SvelteBody']\n]);\n\n/** @type {Map<string, AST.ElementLike['type']>} */\nconst meta_tags = new Map([\n\t...root_only_meta_tags,\n\t['svelte:element', 'SvelteElement'],\n\t['svelte:component', 'SvelteComponent'],\n\t['svelte:self', 'SvelteSelf'],\n\t['svelte:fragment', 'SvelteFragment'],\n\t['svelte:boundary', 'SvelteBoundary']\n]);\n\n/** @param {Parser} parser */\nexport default function element(parser) {\n\tconst start = parser.index++;\n\n\tlet parent = parser.current();\n\n\tif (parser.eat('!--')) {\n\t\tconst data = parser.read_until(regex_closing_comment);\n\t\tparser.eat('-->', true);\n\n\t\tparser.append({\n\t\t\ttype: 'Comment',\n\t\t\tstart,\n\t\t\tend: parser.index,\n\t\t\tdata\n\t\t});\n\n\t\treturn;\n\t}\n\n\tconst is_closing_tag = parser.eat('/');\n\tconst name = parser.read_until(regex_whitespace_or_slash_or_closing_tag);\n\n\tif (is_closing_tag) {\n\t\tparser.allow_whitespace();\n\t\tparser.eat('>', true);\n\n\t\tif (is_void(name)) {\n\t\t\te.void_element_invalid_content(start);\n\t\t}\n\n\t\t// close any elements that don't have their own closing tags, e.g. <div><p></div>\n\t\twhile (/** @type {AST.RegularElement} */ (parent).name !== name) {\n\t\t\tif (parser.loose) {\n\t\t\t\t// If the previous element did interpret the next opening tag as an attribute, backtrack\n\t\t\t\tif (is_element_node(parent)) {\n\t\t\t\t\tconst last = parent.attributes.at(-1);\n\t\t\t\t\tif (last?.type === 'Attribute' && last.name === `<${name}`) {\n\t\t\t\t\t\tparser.index = last.start;\n\t\t\t\t\t\tparent.attributes.pop();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parent.type !== 'RegularElement' && !parser.loose) {\n\t\t\t\tif (parser.last_auto_closed_tag && parser.last_auto_closed_tag.tag === name) {\n\t\t\t\t\te.element_invalid_closing_tag_autoclosed(start, name, parser.last_auto_closed_tag.reason);\n\t\t\t\t} else {\n\t\t\t\t\te.element_invalid_closing_tag(start, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparent.end = start;\n\t\t\tparser.pop();\n\n\t\t\tparent = parser.current();\n\t\t}\n\n\t\tparent.end = parser.index;\n\t\tparser.pop();\n\n\t\tif (parser.last_auto_closed_tag && parser.stack.length < parser.last_auto_closed_tag.depth) {\n\t\t\tparser.last_auto_closed_tag = undefined;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (name.startsWith('svelte:') && !meta_tags.has(name)) {\n\t\tconst bounds = { start: start + 1, end: start + 1 + name.length };\n\t\te.svelte_meta_invalid_tag(bounds, list(Array.from(meta_tags.keys())));\n\t}\n\n\tif (!regex_valid_element_name.test(name) && !regex_valid_component_name.test(name)) {\n\t\t// <div. -> in the middle of typing -> allow in loose mode\n\t\tif (!parser.loose || !name.endsWith('.')) {\n\t\t\tconst bounds = { start: start + 1, end: start + 1 + name.length };\n\t\t\te.tag_invalid_name(bounds);\n\t\t}\n\t}\n\n\tif (root_only_meta_tags.has(name)) {\n\t\tif (name in parser.meta_tags) {\n\t\t\te.svelte_meta_duplicate(start, name);\n\t\t}\n\n\t\tif (parent.type !== 'Root') {\n\t\t\te.svelte_meta_invalid_placement(start, name);\n\t\t}\n\n\t\tparser.meta_tags[name] = true;\n\t}\n\n\tconst type = meta_tags.has(name)\n\t\t? meta_tags.get(name)\n\t\t: regex_valid_component_name.test(name) || (parser.loose && name.endsWith('.'))\n\t\t\t? 'Component'\n\t\t\t: name === 'title' && parent_is_head(parser.stack)\n\t\t\t\t? 'TitleElement'\n\t\t\t\t: // TODO Svelte 6/7: once slots are removed in favor of snippets, always keep slot as a regular element\n\t\t\t\t\tname === 'slot' && !parent_is_shadowroot_template(parser.stack)\n\t\t\t\t\t? 'SlotElement'\n\t\t\t\t\t: 'RegularElement';\n\n\t/** @type {AST.ElementLike} */\n\tconst element =\n\t\ttype === 'RegularElement'\n\t\t\t? {\n\t\t\t\t\ttype,\n\t\t\t\t\tstart,\n\t\t\t\t\tend: -1,\n\t\t\t\t\tname,\n\t\t\t\t\tattributes: [],\n\t\t\t\t\tfragment: create_fragment(true),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tsvg: false,\n\t\t\t\t\t\tmathml: false,\n\t\t\t\t\t\tscoped: false,\n\t\t\t\t\t\thas_spread: false,\n\t\t\t\t\t\tpath: []\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t: /** @type {AST.ElementLike} */ ({\n\t\t\t\t\ttype,\n\t\t\t\t\tstart,\n\t\t\t\t\tend: -1,\n\t\t\t\t\tname,\n\t\t\t\t\tattributes: [],\n\t\t\t\t\tfragment: create_fragment(true),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t// unpopulated at first, differs between types\n\t\t\t\t\t}\n\t\t\t\t});\n\n\tparser.allow_whitespace();\n\n\tif (parent.type === 'RegularElement' && closing_tag_omitted(parent.name, name)) {\n\t\tparent.end = start;\n\t\tparser.pop();\n\t\tparser.last_auto_closed_tag = {\n\t\t\ttag: parent.name,\n\t\t\treason: name,\n\t\t\tdepth: parser.stack.length\n\t\t};\n\t}\n\n\t/** @type {string[]} */\n\tconst unique_names = [];\n\n\tconst current = parser.current();\n\tconst is_top_level_script_or_style =\n\t\t(name === 'script' || name === 'style') && current.type === 'Root';\n\n\tconst read = is_top_level_script_or_style ? read_static_attribute : read_attribute;\n\n\tlet attribute;\n\twhile ((attribute = read(parser))) {\n\t\t// animate and transition can only be specified once per element so no need\n\t\t// to check here, use can be used multiple times, same for the on directive\n\t\t// finally let already has error handling in case of duplicate variable names\n\t\tif (\n\t\t\tattribute.type === 'Attribute' ||\n\t\t\tattribute.type === 'BindDirective' ||\n\t\t\tattribute.type === 'StyleDirective' ||\n\t\t\tattribute.type === 'ClassDirective'\n\t\t) {\n\t\t\t// `bind:attribute` and `attribute` are just the same but `class:attribute`,\n\t\t\t// `style:attribute` and `attribute` are different and should be allowed together\n\t\t\t// so we concatenate the type while normalizing the type for BindDirective\n\t\t\tconst type = attribute.type === 'BindDirective' ? 'Attribute' : attribute.type;\n\t\t\tif (unique_names.includes(type + attribute.name)) {\n\t\t\t\te.attribute_duplicate(attribute);\n\t\t\t\t// <svelte:element bind:this this=..> is allowed\n\t\t\t} else if (attribute.name !== 'this') {\n\t\t\t\tunique_names.push(type + attribute.name);\n\t\t\t}\n\t\t}\n\n\t\telement.attributes.push(attribute);\n\t\tparser.allow_whitespace();\n\t}\n\n\tif (element.type === 'SvelteComponent') {\n\t\tconst index = element.attributes.findIndex(\n\t\t\t/** @param {any} attr */\n\t\t\t(attr) => attr.type === 'Attribute' && attr.name === 'this'\n\t\t);\n\t\tif (index === -1) {\n\t\t\te.svelte_component_missing_this(start);\n\t\t}\n\n\t\tconst definition = /** @type {AST.Attribute} */ (element.attributes.splice(index, 1)[0]);\n\t\tif (!is_expression_attribute(definition)) {\n\t\t\te.svelte_component_invalid_this(definition.start);\n\t\t}\n\n\t\telement.expression = get_attribute_expression(definition);\n\t}\n\n\tif (element.type === 'SvelteElement') {\n\t\tconst index = element.attributes.findIndex(\n\t\t\t/** @param {any} attr */\n\t\t\t(attr) => attr.type === 'Attribute' && attr.name === 'this'\n\t\t);\n\t\tif (index === -1) {\n\t\t\te.svelte_element_missing_this(start);\n\t\t}\n\n\t\tconst definition = /** @type {AST.Attribute} */ (element.attributes.splice(index, 1)[0]);\n\n\t\tif (definition.value === true) {\n\t\t\te.svelte_element_missing_this(definition);\n\t\t}\n\n\t\tif (!is_expression_attribute(definition)) {\n\t\t\tw.svelte_element_invalid_this(definition);\n\n\t\t\t// note that this is wrong, in the case of e.g. `this=\"h{n}\"` — it will result in `<h>`.\n\t\t\t// it would be much better to just error here, but we are preserving the existing buggy\n\t\t\t// Svelte 4 behaviour out of an overabundance of caution regarding breaking changes.\n\t\t\t// TODO in 6.0, error\n\t\t\tconst chunk = /** @type {Array<AST.ExpressionTag | AST.Text>} */ (definition.value)[0];\n\t\t\telement.tag =\n\t\t\t\tchunk.type === 'Text'\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ttype: 'Literal',\n\t\t\t\t\t\t\tvalue: chunk.data,\n\t\t\t\t\t\t\traw: `'${chunk.raw}'`,\n\t\t\t\t\t\t\tstart: chunk.start,\n\t\t\t\t\t\t\tend: chunk.end\n\t\t\t\t\t\t}\n\t\t\t\t\t: chunk.expression;\n\t\t} else {\n\t\t\telement.tag = get_attribute_expression(definition);\n\t\t}\n\t}\n\n\tif (is_top_level_script_or_style) {\n\t\tparser.eat('>', true);\n\n\t\t/** @type {AST.Comment | null} */\n\t\tlet prev_comment = null;\n\t\tfor (let i = current.fragment.nodes.length - 1; i >= 0; i--) {\n\t\t\tconst node = current.fragment.nodes[i];\n\n\t\t\tif (i === current.fragment.nodes.length - 1 && node.end !== start) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (node.type === 'Comment') {\n\t\t\t\tprev_comment = node;\n\t\t\t\tbreak;\n\t\t\t} else if (node.type !== 'Text' || node.data.trim()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'script') {\n\t\t\tconst content = read_script(parser, start, element.attributes);\n\t\t\tif (prev_comment) {\n\t\t\t\t// We take advantage of the fact that the root will never have leadingComments set,\n\t\t\t\t// and set the previous comment to it so that the warning mechanism can later\n\t\t\t\t// inspect the root and see if there was a html comment before it silencing specific warnings.\n\t\t\t\tcontent.content.leadingComments = [{ type: 'Line', value: prev_comment.data }];\n\t\t\t}\n\n\t\t\tif (content.context === 'module') {\n\t\t\t\tif (current.module) e.script_duplicate(start);\n\t\t\t\tcurrent.module = content;\n\t\t\t} else {\n\t\t\t\tif (current.instance) e.script_duplicate(start);\n\t\t\t\tcurrent.instance = content;\n\t\t\t}\n\t\t} else {\n\t\t\tconst content = read_style(parser, start, element.attributes);\n\t\t\tcontent.content.comment = prev_comment;\n\n\t\t\tif (current.css) e.style_duplicate(start);\n\t\t\tcurrent.css = content;\n\t\t}\n\t\treturn;\n\t}\n\n\tparser.append(element);\n\n\tconst self_closing = parser.eat('/') || is_void(name);\n\tconst closed = parser.eat('>', true, false);\n\n\t// Loose parsing mode\n\tif (!closed) {\n\t\t// We may have eaten an opening `<` of the next element and treated it as an attribute...\n\t\tconst last = element.attributes.at(-1);\n\t\tif (last?.type === 'Attribute' && last.name === '<') {\n\t\t\tparser.index = last.start;\n\t\t\telement.attributes.pop();\n\t\t} else {\n\t\t\t// ... or we may have eaten part of a following block ...\n\t\t\tconst prev_1 = parser.template[parser.index - 1];\n\t\t\tconst prev_2 = parser.template[parser.index - 2];\n\t\t\tconst current = parser.template[parser.index];\n\t\t\tif (prev_2 === '{' && prev_1 === '/') {\n\t\t\t\tparser.index -= 2;\n\t\t\t} else if (prev_1 === '{' && (current === '#' || current === '@' || current === ':')) {\n\t\t\t\tparser.index -= 1;\n\t\t\t} else {\n\t\t\t\t// ... or we're followed by whitespace, for example near the end of the template,\n\t\t\t\t// which we want to take in so that language tools has more room to work with\n\t\t\t\tparser.allow_whitespace();\n\t\t\t\tif (parser.index === parser.template.length) {\n\t\t\t\t\twhile (\n\t\t\t\t\t\tparser.index < parser.template_untrimmed.length &&\n\t\t\t\t\t\tregex_whitespace.test(parser.template_untrimmed[parser.index])\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.index++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (self_closing || !closed) {\n\t\t// don't push self-closing elements onto the stack\n\t\telement.end = parser.index;\n\t} else if (name === 'textarea') {\n\t\t// special case\n\t\telement.fragment.nodes = read_sequence(\n\t\t\tparser,\n\t\t\t() => regex_closing_textarea_tag.test(parser.template.slice(parser.index)),\n\t\t\t'inside <textarea>'\n\t\t);\n\t\tparser.read(regex_closing_textarea_tag);\n\t\telement.end = parser.index;\n\t} else if (name === 'script' || name === 'style') {\n\t\t// special case\n\t\tconst start = parser.index;\n\t\tconst data = parser.read_until(new RegExp(`</${name}>`));\n\t\tconst end = parser.index;\n\n\t\t/** @type {AST.Text} */\n\t\tconst node = {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttype: 'Text',\n\t\t\tdata,\n\t\t\traw: data\n\t\t};\n\n\t\telement.fragment.nodes.push(node);\n\t\tparser.eat(`</${name}>`, true);\n\t\telement.end = parser.index;\n\t} else {\n\t\tparser.stack.push(element);\n\t\tparser.fragments.push(element.fragment);\n\t}\n}\n\n/** @param {AST.TemplateNode[]} stack */\nfunction parent_is_head(stack) {\n\tlet i = stack.length;\n\twhile (i--) {\n\t\tconst { type } = stack[i];\n\t\tif (type === 'SvelteHead') return true;\n\t\tif (type === 'RegularElement' || type === 'Component') return false;\n\t}\n\treturn false;\n}\n\n/** @param {AST.TemplateNode[]} stack */\nfunction parent_is_shadowroot_template(stack) {\n\t// https://developer.chrome.com/docs/css-ui/declarative-shadow-dom#building_a_declarative_shadow_root\n\tlet i = stack.length;\n\twhile (i--) {\n\t\tif (\n\t\t\tstack[i].type === 'RegularElement' &&\n\t\t\t/** @type {AST.RegularElement} */ (stack[i]).attributes.some(\n\t\t\t\t(a) => a.type === 'Attribute' && a.name === 'shadowrootmode'\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.Attribute | null}\n */\nfunction read_static_attribute(parser) {\n\tconst start = parser.index;\n\n\tconst name = parser.read_until(regex_token_ending_character);\n\tif (!name) return null;\n\n\t/** @type {true | Array<AST.Text | AST.ExpressionTag>} */\n\tlet value = true;\n\n\tif (parser.eat('=')) {\n\t\tparser.allow_whitespace();\n\t\tlet raw = parser.match_regex(regex_attribute_value);\n\t\tif (!raw) {\n\t\t\te.expected_attribute_value(parser.index);\n\t\t}\n\n\t\tparser.index += raw.length;\n\n\t\tconst quoted = raw[0] === '\"' || raw[0] === \"'\";\n\t\tif (quoted) {\n\t\t\traw = raw.slice(1, -1);\n\t\t}\n\n\t\tvalue = [\n\t\t\t{\n\t\t\t\tstart: parser.index - raw.length - (quoted ? 1 : 0),\n\t\t\t\tend: quoted ? parser.index - 1 : parser.index,\n\t\t\t\ttype: 'Text',\n\t\t\t\traw: raw,\n\t\t\t\tdata: decode_character_references(raw, true)\n\t\t\t}\n\t\t];\n\t}\n\n\tif (parser.match_regex(regex_starts_with_quote_characters)) {\n\t\te.expected_token(parser.index, '=');\n\t}\n\n\treturn create_attribute(name, start, parser.index, value);\n}\n\n/**\n * @param {Parser} parser\n * @returns {AST.Attribute | AST.SpreadAttribute | AST.Directive | null}\n */\nfunction read_attribute(parser) {\n\tconst start = parser.index;\n\n\tif (parser.eat('{')) {\n\t\tparser.allow_whitespace();\n\n\t\tif (parser.eat('...')) {\n\t\t\tconst expression = read_expression(parser);\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\n\t\t\t/** @type {AST.SpreadAttribute} */\n\t\t\tconst spread = {\n\t\t\t\ttype: 'SpreadAttribute',\n\t\t\t\tstart,\n\t\t\t\tend: parser.index,\n\t\t\t\texpression,\n\t\t\t\tmetadata: {\n\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn spread;\n\t\t} else {\n\t\t\tconst value_start = parser.index;\n\t\t\tlet name = parser.read_identifier();\n\n\t\t\tif (name === null) {\n\t\t\t\tif (\n\t\t\t\t\tparser.loose &&\n\t\t\t\t\t(parser.match('#') || parser.match('/') || parser.match('@') || parser.match(':'))\n\t\t\t\t) {\n\t\t\t\t\t// We're likely in an unclosed opening tag and did read part of a block.\n\t\t\t\t\t// Return null to not crash the parser so it can continue with closing the tag.\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (parser.loose && parser.match('}')) {\n\t\t\t\t\t// Likely in the middle of typing, just created the shorthand\n\t\t\t\t\tname = '';\n\t\t\t\t} else {\n\t\t\t\t\te.attribute_empty_shorthand(start);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\n\t\t\t/** @type {AST.ExpressionTag} */\n\t\t\tconst expression = {\n\t\t\t\ttype: 'ExpressionTag',\n\t\t\t\tstart: value_start,\n\t\t\t\tend: value_start + name.length,\n\t\t\t\texpression: {\n\t\t\t\t\tstart: value_start,\n\t\t\t\t\tend: value_start + name.length,\n\t\t\t\t\ttype: 'Identifier',\n\t\t\t\t\tname\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn create_attribute(name, start, parser.index, expression);\n\t\t}\n\t}\n\n\tconst name = parser.read_until(regex_token_ending_character);\n\tif (!name) return null;\n\n\tlet end = parser.index;\n\n\tparser.allow_whitespace();\n\n\tconst colon_index = name.indexOf(':');\n\tconst type = colon_index !== -1 && get_directive_type(name.slice(0, colon_index));\n\n\t/** @type {true | AST.ExpressionTag | Array<AST.Text | AST.ExpressionTag>} */\n\tlet value = true;\n\tif (parser.eat('=')) {\n\t\tparser.allow_whitespace();\n\n\t\tif (parser.template[parser.index] === '/' && parser.template[parser.index + 1] === '>') {\n\t\t\tconst char_start = parser.index;\n\t\t\tparser.index++; // consume '/'\n\t\t\tvalue = [\n\t\t\t\t{\n\t\t\t\t\tstart: char_start,\n\t\t\t\t\tend: char_start + 1,\n\t\t\t\t\ttype: 'Text',\n\t\t\t\t\traw: '/',\n\t\t\t\t\tdata: '/'\n\t\t\t\t}\n\t\t\t];\n\t\t\tend = parser.index;\n\t\t} else {\n\t\t\tvalue = read_attribute_value(parser);\n\t\t\tend = parser.index;\n\t\t}\n\t} else if (parser.match_regex(regex_starts_with_quote_characters)) {\n\t\te.expected_token(parser.index, '=');\n\t}\n\n\tif (type) {\n\t\tconst [directive_name, ...modifiers] = name.slice(colon_index + 1).split('|');\n\n\t\tif (directive_name === '') {\n\t\t\te.directive_missing_name({ start, end: start + colon_index + 1 }, name);\n\t\t}\n\n\t\tif (type === 'StyleDirective') {\n\t\t\treturn {\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\ttype,\n\t\t\t\tname: directive_name,\n\t\t\t\tmodifiers: /** @type {Array<'important'>} */ (modifiers),\n\t\t\t\tvalue,\n\t\t\t\tmetadata: {\n\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst first_value = value === true ? undefined : Array.isArray(value) ? value[0] : value;\n\n\t\t/** @type {Expression | null} */\n\t\tlet expression = null;\n\n\t\tif (first_value) {\n\t\t\tconst attribute_contains_text =\n\t\t\t\t/** @type {any[]} */ (value).length > 1 || first_value.type === 'Text';\n\t\t\tif (attribute_contains_text) {\n\t\t\t\te.directive_invalid_value(/** @type {number} */ (first_value.start));\n\t\t\t} else {\n\t\t\t\t// TODO throw a parser error in a future version here if this `[ExpressionTag]` instead of `ExpressionTag`,\n\t\t\t\t// which means stringified value, which isn't allowed for some directives?\n\t\t\t\texpression = first_value.expression;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {AST.Directive} */\n\t\tconst directive = {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttype,\n\t\t\tname: directive_name,\n\t\t\texpression,\n\t\t\tmetadata: {\n\t\t\t\texpression: create_expression_metadata()\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error we do this separately from the declaration to avoid upsetting typescript\n\t\tdirective.modifiers = modifiers;\n\n\t\tif (directive.type === 'TransitionDirective') {\n\t\t\tconst direction = name.slice(0, colon_index);\n\t\t\tdirective.intro = direction === 'in' || direction === 'transition';\n\t\t\tdirective.outro = direction === 'out' || direction === 'transition';\n\t\t}\n\n\t\t// Directive name is expression, e.g. <p class:isRed />\n\t\tif (\n\t\t\t(directive.type === 'BindDirective' || directive.type === 'ClassDirective') &&\n\t\t\t!directive.expression\n\t\t) {\n\t\t\tdirective.expression = /** @type {any} */ ({\n\t\t\t\tstart: start + colon_index + 1,\n\t\t\t\tend,\n\t\t\t\ttype: 'Identifier',\n\t\t\t\tname: directive.name\n\t\t\t});\n\t\t}\n\n\t\treturn directive;\n\t}\n\n\treturn create_attribute(name, start, end, value);\n}\n\n/**\n * @param {string} name\n * @returns {any}\n */\nfunction get_directive_type(name) {\n\tif (name === 'use') return 'UseDirective';\n\tif (name === 'animate') return 'AnimateDirective';\n\tif (name === 'bind') return 'BindDirective';\n\tif (name === 'class') return 'ClassDirective';\n\tif (name === 'style') return 'StyleDirective';\n\tif (name === 'on') return 'OnDirective';\n\tif (name === 'let') return 'LetDirective';\n\tif (name === 'in' || name === 'out' || name === 'transition') return 'TransitionDirective';\n\treturn false;\n}\n\n/**\n * @param {Parser} parser\n * @return {AST.ExpressionTag | Array<AST.ExpressionTag | AST.Text>}\n */\nfunction read_attribute_value(parser) {\n\tconst quote_mark = parser.eat(\"'\") ? \"'\" : parser.eat('\"') ? '\"' : null;\n\tif (quote_mark && parser.eat(quote_mark)) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tstart: parser.index - 1,\n\t\t\t\tend: parser.index - 1,\n\t\t\t\ttype: 'Text',\n\t\t\t\traw: '',\n\t\t\t\tdata: ''\n\t\t\t}\n\t\t];\n\t}\n\n\t/** @type {Array<AST.ExpressionTag | AST.Text>} */\n\tlet value;\n\ttry {\n\t\tvalue = read_sequence(\n\t\t\tparser,\n\t\t\t() => {\n\t\t\t\t// handle common case of quote marks existing outside of regex for performance reasons\n\t\t\t\tif (quote_mark) return parser.match(quote_mark);\n\t\t\t\treturn !!parser.match_regex(regex_invalid_unquoted_attribute_value);\n\t\t\t},\n\t\t\t'in attribute value'\n\t\t);\n\t} catch (/** @type {any} */ error) {\n\t\tif (error.code === 'js_parse_error') {\n\t\t\t// if the attribute value didn't close + self-closing tag\n\t\t\t// eg: `<Component test={{a:1} />`\n\t\t\t// acorn may throw a `Unterminated regular expression` because of `/>`\n\t\t\tconst pos = error.position?.[0];\n\t\t\tif (pos !== undefined && parser.template.slice(pos - 1, pos + 1) === '/>') {\n\t\t\t\tparser.index = pos;\n\t\t\t\te.expected_token(pos, quote_mark || '}');\n\t\t\t}\n\t\t}\n\t\tthrow error;\n\t}\n\n\tif (value.length === 0 && !quote_mark) {\n\t\te.expected_attribute_value(parser.index);\n\t}\n\n\tif (quote_mark) parser.index += 1;\n\n\tif (quote_mark || value.length > 1 || value[0].type === 'Text') {\n\t\treturn value;\n\t} else {\n\t\treturn value[0];\n\t}\n}\n\n/**\n * @param {Parser} parser\n * @param {() => boolean} done\n * @param {string} location\n * @returns {any[]}\n */\nfunction read_sequence(parser, done, location) {\n\t/** @type {AST.Text} */\n\tlet current_chunk = {\n\t\tstart: parser.index,\n\t\tend: -1,\n\t\ttype: 'Text',\n\t\traw: '',\n\t\tdata: ''\n\t};\n\n\t/** @type {Array<AST.Text | AST.ExpressionTag>} */\n\tconst chunks = [];\n\n\t/** @param {number} end */\n\tfunction flush(end) {\n\t\tif (current_chunk.raw) {\n\t\t\tcurrent_chunk.data = decode_character_references(current_chunk.raw, true);\n\t\t\tcurrent_chunk.end = end;\n\t\t\tchunks.push(current_chunk);\n\t\t}\n\t}\n\n\twhile (parser.index < parser.template.length) {\n\t\tconst index = parser.index;\n\n\t\tif (done()) {\n\t\t\tflush(parser.index);\n\t\t\treturn chunks;\n\t\t} else if (parser.eat('{')) {\n\t\t\tif (parser.match('#')) {\n\t\t\t\tconst index = parser.index - 1;\n\t\t\t\tparser.eat('#');\n\t\t\t\tconst name = parser.read_until(/[^a-z]/);\n\t\t\t\te.block_invalid_placement(index, name, location);\n\t\t\t} else if (parser.match('@')) {\n\t\t\t\tconst index = parser.index - 1;\n\t\t\t\tparser.eat('@');\n\t\t\t\tconst name = parser.read_until(/[^a-z]/);\n\t\t\t\te.tag_invalid_placement(index, name, location);\n\t\t\t}\n\n\t\t\tflush(parser.index - 1);\n\n\t\t\tparser.allow_whitespace();\n\t\t\tconst expression = read_expression(parser);\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\n\t\t\t/** @type {AST.ExpressionTag} */\n\t\t\tconst chunk = {\n\t\t\t\ttype: 'ExpressionTag',\n\t\t\t\tstart: index,\n\t\t\t\tend: parser.index,\n\t\t\t\texpression,\n\t\t\t\tmetadata: {\n\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tchunks.push(chunk);\n\n\t\t\tcurrent_chunk = {\n\t\t\t\tstart: parser.index,\n\t\t\t\tend: -1,\n\t\t\t\ttype: 'Text',\n\t\t\t\traw: '',\n\t\t\t\tdata: ''\n\t\t\t};\n\t\t} else {\n\t\t\tcurrent_chunk.raw += parser.template[parser.index++];\n\t\t}\n\t}\n\n\tif (parser.loose) {\n\t\treturn chunks;\n\t} else {\n\t\te.unexpected_eof(parser.template.length);\n\t}\n}\n", "/** @import { Location } from 'locate-character' */\n/** @import { Pattern } from 'estree' */\n/** @import { Parser } from '../index.js' */\nimport { is_bracket_open, is_bracket_close, get_bracket_close } from '../utils/bracket.js';\nimport { parse_expression_at } from '../acorn.js';\nimport { regex_not_newline_characters } from '../../patterns.js';\nimport * as e from '../../../errors.js';\nimport { locator } from '../../../state.js';\n\n/**\n * @param {Parser} parser\n * @returns {Pattern}\n */\nexport default function read_pattern(parser) {\n\tconst start = parser.index;\n\tlet i = parser.index;\n\n\tconst name = parser.read_identifier();\n\n\tif (name !== null) {\n\t\tconst annotation = read_type_annotation(parser);\n\n\t\treturn {\n\t\t\ttype: 'Identifier',\n\t\t\tname,\n\t\t\tstart,\n\t\t\tloc: {\n\t\t\t\tstart: /** @type {Location} */ (locator(start)),\n\t\t\t\tend: /** @type {Location} */ (locator(parser.index))\n\t\t\t},\n\t\t\tend: parser.index,\n\t\t\ttypeAnnotation: annotation\n\t\t};\n\t}\n\n\tif (!is_bracket_open(parser.template[i])) {\n\t\te.expected_pattern(i);\n\t}\n\n\ti = match_bracket(parser, start);\n\tparser.index = i;\n\n\tconst pattern_string = parser.template.slice(start, i);\n\n\ttry {\n\t\t// the length of the `space_with_newline` has to be start - 1\n\t\t// because we added a `(` in front of the pattern_string,\n\t\t// which shifted the entire string to right by 1\n\t\t// so we offset it by removing 1 character in the `space_with_newline`\n\t\t// to achieve that, we remove the 1st space encountered,\n\t\t// so it will not affect the `column` of the node\n\t\tlet space_with_newline = parser.template\n\t\t\t.slice(0, start)\n\t\t\t.replace(regex_not_newline_characters, ' ');\n\t\tconst first_space = space_with_newline.indexOf(' ');\n\t\tspace_with_newline =\n\t\t\tspace_with_newline.slice(0, first_space) + space_with_newline.slice(first_space + 1);\n\n\t\tconst expression = /** @type {any} */ (\n\t\t\tparse_expression_at(`${space_with_newline}(${pattern_string} = 1)`, parser.ts, start - 1)\n\t\t).left;\n\n\t\texpression.typeAnnotation = read_type_annotation(parser);\n\t\tif (expression.typeAnnotation) {\n\t\t\texpression.end = expression.typeAnnotation.end;\n\t\t}\n\n\t\treturn expression;\n\t} catch (error) {\n\t\tparser.acorn_error(error);\n\t}\n}\n\n/**\n * @param {Parser} parser\n * @param {number} start\n */\nfunction match_bracket(parser, start) {\n\tconst bracket_stack = [];\n\n\tlet i = start;\n\n\twhile (i < parser.template.length) {\n\t\tlet char = parser.template[i++];\n\n\t\tif (char === \"'\" || char === '\"' || char === '`') {\n\t\t\ti = match_quote(parser, i, char);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (is_bracket_open(char)) {\n\t\t\tbracket_stack.push(char);\n\t\t} else if (is_bracket_close(char)) {\n\t\t\tconst popped = /** @type {string} */ (bracket_stack.pop());\n\t\t\tconst expected = /** @type {string} */ (get_bracket_close(popped));\n\n\t\t\tif (char !== expected) {\n\t\t\t\te.expected_token(i - 1, expected);\n\t\t\t}\n\n\t\t\tif (bracket_stack.length === 0) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\te.unexpected_eof(parser.template.length);\n}\n\n/**\n * @param {Parser} parser\n * @param {number} start\n * @param {string} quote\n */\nfunction match_quote(parser, start, quote) {\n\tlet is_escaped = false;\n\tlet i = start;\n\n\twhile (i < parser.template.length) {\n\t\tconst char = parser.template[i++];\n\n\t\tif (is_escaped) {\n\t\t\tis_escaped = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === quote) {\n\t\t\treturn i;\n\t\t}\n\n\t\tif (char === '\\\\') {\n\t\t\tis_escaped = true;\n\t\t}\n\n\t\tif (quote === '`' && char === '$' && parser.template[i] === '{') {\n\t\t\ti = match_bracket(parser, i);\n\t\t}\n\t}\n\n\te.unterminated_string_constant(start);\n}\n\n/**\n * @param {Parser} parser\n * @returns {any}\n */\nfunction read_type_annotation(parser) {\n\tconst start = parser.index;\n\tparser.allow_whitespace();\n\n\tif (!parser.eat(':')) {\n\t\tparser.index = start;\n\t\treturn undefined;\n\t}\n\n\t// we need to trick Acorn into parsing the type annotation\n\tconst insert = '_ as ';\n\tlet a = parser.index - insert.length;\n\tconst template =\n\t\tparser.template.slice(0, a).replace(/[^\\n]/g, ' ') +\n\t\tinsert +\n\t\t// If this is a type annotation for a function parameter, Acorn-TS will treat subsequent\n\t\t// parameters as part of a sequence expression instead, and will then error on optional\n\t\t// parameters (`?:`). Therefore replace that sequence with something that will not error.\n\t\tparser.template.slice(parser.index).replace(/\\?\\s*:/g, ':');\n\tlet expression = parse_expression_at(template, parser.ts, a);\n\n\t// `foo: bar = baz` gets mangled — fix it\n\tif (expression.type === 'AssignmentExpression') {\n\t\tlet b = expression.right.start;\n\t\twhile (template[b] !== '=') b -= 1;\n\t\texpression = parse_expression_at(template.slice(0, b), parser.ts, a);\n\t}\n\n\t// `array as item: string, index` becomes `string, index`, which is mistaken as a sequence expression - fix that\n\tif (expression.type === 'SequenceExpression') {\n\t\texpression = expression.expressions[0];\n\t}\n\n\tparser.index = /** @type {number} */ (expression.end);\n\treturn {\n\t\ttype: 'TSTypeAnnotation',\n\t\tstart,\n\t\tend: parser.index,\n\t\ttypeAnnotation: /** @type {any} */ (expression).typeAnnotation\n\t};\n}\n", "/** @import { ArrowFunctionExpression, Expression, Identifier, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Parser } from '../index.js' */\nimport { walk } from 'zimmerframe';\nimport * as e from '../../../errors.js';\nimport { create_expression_metadata } from '../../nodes.js';\nimport { parse_expression_at } from '../acorn.js';\nimport read_pattern from '../read/context.js';\nimport read_expression, { get_loose_identifier } from '../read/expression.js';\nimport { create_fragment } from '../utils/create.js';\n\nconst regex_whitespace_with_closing_curly_brace = /^\\s*}/;\n\n/** @param {Parser} parser */\nexport default function tag(parser) {\n\tconst start = parser.index;\n\tparser.index += 1;\n\n\tparser.allow_whitespace();\n\n\tif (parser.eat('#')) return open(parser);\n\tif (parser.eat(':')) return next(parser);\n\tif (parser.eat('@')) return special(parser);\n\tif (parser.match('/')) {\n\t\tif (!parser.match('/*') && !parser.match('//')) {\n\t\t\tparser.eat('/');\n\t\t\treturn close(parser);\n\t\t}\n\t}\n\n\tconst expression = read_expression(parser);\n\n\tparser.allow_whitespace();\n\tparser.eat('}', true);\n\n\tparser.append({\n\t\ttype: 'ExpressionTag',\n\t\tstart,\n\t\tend: parser.index,\n\t\texpression,\n\t\tmetadata: {\n\t\t\texpression: create_expression_metadata()\n\t\t}\n\t});\n}\n\n/** @param {Parser} parser */\nfunction open(parser) {\n\tlet start = parser.index - 2;\n\twhile (parser.template[start] !== '{') start -= 1;\n\n\tif (parser.eat('if')) {\n\t\tparser.require_whitespace();\n\n\t\t/** @type {AST.IfBlock} */\n\t\tconst block = parser.append({\n\t\t\ttype: 'IfBlock',\n\t\t\telseif: false,\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\ttest: read_expression(parser),\n\t\t\tconsequent: create_fragment(),\n\t\t\talternate: null\n\t\t});\n\n\t\tparser.allow_whitespace();\n\t\tparser.eat('}', true);\n\n\t\tparser.stack.push(block);\n\t\tparser.fragments.push(block.consequent);\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('each')) {\n\t\tparser.require_whitespace();\n\n\t\tconst template = parser.template;\n\t\tlet end = parser.template.length;\n\n\t\t/** @type {Expression | undefined} */\n\t\tlet expression;\n\n\t\t// we have to do this loop because `{#each x as { y = z }}` fails to parse —\n\t\t// the `as { y = z }` is treated as an Expression but it's actually a Pattern.\n\t\t// the 'fix' is to backtrack and hide everything from the `as` onwards, until\n\t\t// we get a valid expression\n\t\twhile (!expression) {\n\t\t\ttry {\n\t\t\t\texpression = read_expression(parser, undefined, true);\n\t\t\t} catch (err) {\n\t\t\t\tend = /** @type {any} */ (err).position[0] - 2;\n\n\t\t\t\twhile (end > start && parser.template.slice(end, end + 2) !== 'as') {\n\t\t\t\t\tend -= 1;\n\t\t\t\t}\n\n\t\t\t\tif (end <= start) {\n\t\t\t\t\tif (parser.loose) {\n\t\t\t\t\t\texpression = get_loose_identifier(parser);\n\t\t\t\t\t\tif (expression) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\n\t\t\t\t// @ts-expect-error parser.template is meant to be readonly, this is a special case\n\t\t\t\tparser.template = template.slice(0, end);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tparser.template = template;\n\n\t\tparser.allow_whitespace();\n\n\t\t// {#each} blocks must declare a context – {#each list as item}\n\t\tif (!parser.match('as')) {\n\t\t\t// this could be a TypeScript assertion that was erroneously eaten.\n\n\t\t\tif (expression.type === 'SequenceExpression') {\n\t\t\t\texpression = expression.expressions[0];\n\t\t\t}\n\n\t\t\tlet assertion = null;\n\t\t\tlet end = expression.end;\n\n\t\t\texpression = walk(expression, null, {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tTSAsExpression(node, context) {\n\t\t\t\t\tif (node.end === /** @type {Expression} */ (expression).end) {\n\t\t\t\t\t\tassertion = node;\n\t\t\t\t\t\tend = node.expression.end;\n\t\t\t\t\t\treturn node.expression;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.next();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\texpression.end = end;\n\n\t\t\tif (assertion) {\n\t\t\t\t// we can't reset `parser.index` to `expression.expression.end` because\n\t\t\t\t// it will ignore any parentheses — we need to jump through this hoop\n\t\t\t\tlet end = /** @type {any} */ (/** @type {any} */ (assertion).typeAnnotation).start - 2;\n\t\t\t\twhile (parser.template.slice(end, end + 2) !== 'as') end -= 1;\n\n\t\t\t\tparser.index = end;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {Pattern | null} */\n\t\tlet context = null;\n\t\tlet index;\n\t\tlet key;\n\n\t\tif (parser.eat('as')) {\n\t\t\tparser.require_whitespace();\n\n\t\t\tcontext = read_pattern(parser);\n\t\t} else {\n\t\t\t// {#each Array.from({ length: 10 }), i} is read as a sequence expression,\n\t\t\t// which is set back above - we now gotta reset the index as a consequence\n\t\t\t// to properly read the , i part\n\t\t\tparser.index = /** @type {number} */ (expression.end);\n\t\t}\n\n\t\tparser.allow_whitespace();\n\n\t\tif (parser.eat(',')) {\n\t\t\tparser.allow_whitespace();\n\t\t\tindex = parser.read_identifier();\n\t\t\tif (!index) {\n\t\t\t\te.expected_identifier(parser.index);\n\t\t\t}\n\n\t\t\tparser.allow_whitespace();\n\t\t}\n\n\t\tif (parser.eat('(')) {\n\t\t\tparser.allow_whitespace();\n\n\t\t\tkey = read_expression(parser, '(');\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat(')', true);\n\t\t\tparser.allow_whitespace();\n\t\t}\n\n\t\tconst matches = parser.eat('}', true, false);\n\n\t\tif (!matches) {\n\t\t\t// Parser may have read the `as` as part of the expression (e.g. in `{#each foo. as x}`)\n\t\t\tif (parser.template.slice(parser.index - 4, parser.index) === ' as ') {\n\t\t\t\tconst prev_index = parser.index;\n\t\t\t\tcontext = read_pattern(parser);\n\t\t\t\tparser.eat('}', true);\n\t\t\t\texpression = {\n\t\t\t\t\ttype: 'Identifier',\n\t\t\t\t\tname: '',\n\t\t\t\t\tstart: expression.start,\n\t\t\t\t\tend: prev_index - 4\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tparser.eat('}', true); // rerun to produce the parser error\n\t\t\t}\n\t\t}\n\n\t\t/** @type {AST.EachBlock} */\n\t\tconst block = parser.append({\n\t\t\ttype: 'EachBlock',\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\texpression,\n\t\t\tbody: create_fragment(),\n\t\t\tcontext,\n\t\t\tindex,\n\t\t\tkey,\n\t\t\tmetadata: /** @type {any} */ (null) // filled in later\n\t\t});\n\n\t\tparser.stack.push(block);\n\t\tparser.fragments.push(block.body);\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('await')) {\n\t\tparser.require_whitespace();\n\t\tconst expression = read_expression(parser);\n\t\tparser.allow_whitespace();\n\n\t\t/** @type {AST.AwaitBlock} */\n\t\tconst block = parser.append({\n\t\t\ttype: 'AwaitBlock',\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\texpression,\n\t\t\tvalue: null,\n\t\t\terror: null,\n\t\t\tpending: null,\n\t\t\tthen: null,\n\t\t\tcatch: null\n\t\t});\n\n\t\tif (parser.eat('then')) {\n\t\t\tif (parser.match_regex(regex_whitespace_with_closing_curly_brace)) {\n\t\t\t\tparser.allow_whitespace();\n\t\t\t} else {\n\t\t\t\tparser.require_whitespace();\n\t\t\t\tblock.value = read_pattern(parser);\n\t\t\t\tparser.allow_whitespace();\n\t\t\t}\n\n\t\t\tblock.then = create_fragment();\n\t\t\tparser.fragments.push(block.then);\n\t\t} else if (parser.eat('catch')) {\n\t\t\tif (parser.match_regex(regex_whitespace_with_closing_curly_brace)) {\n\t\t\t\tparser.allow_whitespace();\n\t\t\t} else {\n\t\t\t\tparser.require_whitespace();\n\t\t\t\tblock.error = read_pattern(parser);\n\t\t\t\tparser.allow_whitespace();\n\t\t\t}\n\n\t\t\tblock.catch = create_fragment();\n\t\t\tparser.fragments.push(block.catch);\n\t\t} else {\n\t\t\tblock.pending = create_fragment();\n\t\t\tparser.fragments.push(block.pending);\n\t\t}\n\n\t\tconst matches = parser.eat('}', true, false);\n\n\t\t// Parser may have read the `then/catch` as part of the expression (e.g. in `{#await foo. then x}`)\n\t\tif (!matches) {\n\t\t\tif (parser.template.slice(parser.index - 6, parser.index) === ' then ') {\n\t\t\t\tconst prev_index = parser.index;\n\t\t\t\tblock.value = read_pattern(parser);\n\t\t\t\tparser.eat('}', true);\n\t\t\t\tblock.expression = {\n\t\t\t\t\ttype: 'Identifier',\n\t\t\t\t\tname: '',\n\t\t\t\t\tstart: expression.start,\n\t\t\t\t\tend: prev_index - 6\n\t\t\t\t};\n\t\t\t\tblock.then = block.pending;\n\t\t\t\tblock.pending = null;\n\t\t\t} else if (parser.template.slice(parser.index - 7, parser.index) === ' catch ') {\n\t\t\t\tconst prev_index = parser.index;\n\t\t\t\tblock.error = read_pattern(parser);\n\t\t\t\tparser.eat('}', true);\n\t\t\t\tblock.expression = {\n\t\t\t\t\ttype: 'Identifier',\n\t\t\t\t\tname: '',\n\t\t\t\t\tstart: expression.start,\n\t\t\t\t\tend: prev_index - 7\n\t\t\t\t};\n\t\t\t\tblock.catch = block.pending;\n\t\t\t\tblock.pending = null;\n\t\t\t} else {\n\t\t\t\tparser.eat('}', true); // rerun to produce the parser error\n\t\t\t}\n\t\t}\n\n\t\tparser.stack.push(block);\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('key')) {\n\t\tparser.require_whitespace();\n\n\t\tconst expression = read_expression(parser);\n\t\tparser.allow_whitespace();\n\n\t\tparser.eat('}', true);\n\n\t\t/** @type {AST.KeyBlock} */\n\t\tconst block = parser.append({\n\t\t\ttype: 'KeyBlock',\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\texpression,\n\t\t\tfragment: create_fragment()\n\t\t});\n\n\t\tparser.stack.push(block);\n\t\tparser.fragments.push(block.fragment);\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('snippet')) {\n\t\tparser.require_whitespace();\n\n\t\tconst name_start = parser.index;\n\t\tlet name = parser.read_identifier();\n\t\tconst name_end = parser.index;\n\n\t\tif (name === null) {\n\t\t\tif (parser.loose) {\n\t\t\t\tname = '';\n\t\t\t} else {\n\t\t\t\te.expected_identifier(parser.index);\n\t\t\t}\n\t\t}\n\n\t\tparser.allow_whitespace();\n\n\t\tconst params_start = parser.index;\n\n\t\tconst matched = parser.eat('(', true, false);\n\n\t\tif (matched) {\n\t\t\tlet parentheses = 1;\n\n\t\t\twhile (parser.index < parser.template.length && (!parser.match(')') || parentheses !== 1)) {\n\t\t\t\tif (parser.match('(')) parentheses++;\n\t\t\t\tif (parser.match(')')) parentheses--;\n\t\t\t\tparser.index += 1;\n\t\t\t}\n\n\t\t\tparser.eat(')', true);\n\t\t}\n\n\t\tconst prelude = parser.template.slice(0, params_start).replace(/\\S/g, ' ');\n\t\tconst params = parser.template.slice(params_start, parser.index);\n\n\t\tlet function_expression = matched\n\t\t\t? /** @type {ArrowFunctionExpression} */ (\n\t\t\t\t\tparse_expression_at(prelude + `${params} => {}`, parser.ts, params_start)\n\t\t\t\t)\n\t\t\t: { params: [] };\n\n\t\tparser.allow_whitespace();\n\t\tparser.eat('}', true);\n\n\t\t/** @type {AST.SnippetBlock} */\n\t\tconst block = parser.append({\n\t\t\ttype: 'SnippetBlock',\n\t\t\tstart,\n\t\t\tend: -1,\n\t\t\texpression: {\n\t\t\t\ttype: 'Identifier',\n\t\t\t\tstart: name_start,\n\t\t\t\tend: name_end,\n\t\t\t\tname\n\t\t\t},\n\t\t\tparameters: function_expression.params,\n\t\t\tbody: create_fragment(),\n\t\t\tmetadata: {\n\t\t\t\tcan_hoist: false,\n\t\t\t\tsites: new Set()\n\t\t\t}\n\t\t});\n\t\tparser.stack.push(block);\n\t\tparser.fragments.push(block.body);\n\n\t\treturn;\n\t}\n\n\te.expected_block_type(parser.index);\n}\n\n/** @param {Parser} parser */\nfunction next(parser) {\n\tconst start = parser.index - 1;\n\n\tconst block = parser.current(); // TODO type should not be TemplateNode, that's much too broad\n\n\tif (block.type === 'IfBlock') {\n\t\tif (!parser.eat('else')) e.expected_token(start, '{:else} or {:else if}');\n\t\tif (parser.eat('if')) e.block_invalid_elseif(start);\n\n\t\tparser.allow_whitespace();\n\n\t\tparser.fragments.pop();\n\n\t\tblock.alternate = create_fragment();\n\t\tparser.fragments.push(block.alternate);\n\n\t\t// :else if\n\t\tif (parser.eat('if')) {\n\t\t\tparser.require_whitespace();\n\n\t\t\tconst expression = read_expression(parser);\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\n\t\t\tlet elseif_start = start - 1;\n\t\t\twhile (parser.template[elseif_start] !== '{') elseif_start -= 1;\n\n\t\t\t/** @type {AST.IfBlock} */\n\t\t\tconst child = parser.append({\n\t\t\t\tstart: elseif_start,\n\t\t\t\tend: -1,\n\t\t\t\ttype: 'IfBlock',\n\t\t\t\telseif: true,\n\t\t\t\ttest: expression,\n\t\t\t\tconsequent: create_fragment(),\n\t\t\t\talternate: null\n\t\t\t});\n\n\t\t\tparser.stack.push(child);\n\t\t\tparser.fragments.pop();\n\t\t\tparser.fragments.push(child.consequent);\n\t\t} else {\n\t\t\t// :else\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (block.type === 'EachBlock') {\n\t\tif (!parser.eat('else')) e.expected_token(start, '{:else}');\n\n\t\tparser.allow_whitespace();\n\t\tparser.eat('}', true);\n\n\t\tblock.fallback = create_fragment();\n\n\t\tparser.fragments.pop();\n\t\tparser.fragments.push(block.fallback);\n\n\t\treturn;\n\t}\n\n\tif (block.type === 'AwaitBlock') {\n\t\tif (parser.eat('then')) {\n\t\t\tif (block.then) {\n\t\t\t\te.block_duplicate_clause(start, '{:then}');\n\t\t\t}\n\n\t\t\tif (!parser.eat('}')) {\n\t\t\t\tparser.require_whitespace();\n\t\t\t\tblock.value = read_pattern(parser);\n\t\t\t\tparser.allow_whitespace();\n\t\t\t\tparser.eat('}', true);\n\t\t\t}\n\n\t\t\tblock.then = create_fragment();\n\t\t\tparser.fragments.pop();\n\t\t\tparser.fragments.push(block.then);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (parser.eat('catch')) {\n\t\t\tif (block.catch) {\n\t\t\t\te.block_duplicate_clause(start, '{:catch}');\n\t\t\t}\n\n\t\t\tif (!parser.eat('}')) {\n\t\t\t\tparser.require_whitespace();\n\t\t\t\tblock.error = read_pattern(parser);\n\t\t\t\tparser.allow_whitespace();\n\t\t\t\tparser.eat('}', true);\n\t\t\t}\n\n\t\t\tblock.catch = create_fragment();\n\t\t\tparser.fragments.pop();\n\t\t\tparser.fragments.push(block.catch);\n\n\t\t\treturn;\n\t\t}\n\n\t\te.expected_token(start, '{:then ...} or {:catch ...}');\n\t}\n\n\te.block_invalid_continuation_placement(start);\n}\n\n/** @param {Parser} parser */\nfunction close(parser) {\n\tconst start = parser.index - 1;\n\n\tlet block = parser.current();\n\t/** Only relevant/reached for loose parsing mode */\n\tlet matched;\n\n\tswitch (block.type) {\n\t\tcase 'IfBlock':\n\t\t\tmatched = parser.eat('if', true, false);\n\n\t\t\tif (!matched) {\n\t\t\t\tblock.end = start - 1;\n\t\t\t\tparser.pop();\n\t\t\t\tclose(parser);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\n\t\t\twhile (block.elseif) {\n\t\t\t\tblock.end = parser.index;\n\t\t\t\tparser.stack.pop();\n\t\t\t\tblock = /** @type {AST.IfBlock} */ (parser.current());\n\t\t\t}\n\n\t\t\tblock.end = parser.index;\n\t\t\tparser.pop();\n\t\t\treturn;\n\n\t\tcase 'EachBlock':\n\t\t\tmatched = parser.eat('each', true, false);\n\t\t\tbreak;\n\t\tcase 'KeyBlock':\n\t\t\tmatched = parser.eat('key', true, false);\n\t\t\tbreak;\n\t\tcase 'AwaitBlock':\n\t\t\tmatched = parser.eat('await', true, false);\n\t\t\tbreak;\n\t\tcase 'SnippetBlock':\n\t\t\tmatched = parser.eat('snippet', true, false);\n\t\t\tbreak;\n\n\t\tcase 'RegularElement':\n\t\t\tif (parser.loose) {\n\t\t\t\tmatched = false;\n\t\t\t} else {\n\t\t\t\t// TODO handle implicitly closed elements\n\t\t\t\te.block_unexpected_close(start);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\te.block_unexpected_close(start);\n\t}\n\n\tif (!matched) {\n\t\tblock.end = start - 1;\n\t\tparser.pop();\n\t\tclose(parser);\n\t\treturn;\n\t}\n\n\tparser.allow_whitespace();\n\tparser.eat('}', true);\n\tblock.end = parser.index;\n\tparser.pop();\n}\n\n/** @param {Parser} parser */\nfunction special(parser) {\n\tlet start = parser.index;\n\twhile (parser.template[start] !== '{') start -= 1;\n\n\tif (parser.eat('html')) {\n\t\t// {@html content} tag\n\t\tparser.require_whitespace();\n\n\t\tconst expression = read_expression(parser);\n\n\t\tparser.allow_whitespace();\n\t\tparser.eat('}', true);\n\n\t\tparser.append({\n\t\t\ttype: 'HtmlTag',\n\t\t\tstart,\n\t\t\tend: parser.index,\n\t\t\texpression\n\t\t});\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('debug')) {\n\t\t/** @type {Identifier[]} */\n\t\tlet identifiers;\n\n\t\t// Implies {@debug} which indicates \"debug all\"\n\t\tif (parser.read(regex_whitespace_with_closing_curly_brace)) {\n\t\t\tidentifiers = [];\n\t\t} else {\n\t\t\tconst expression = read_expression(parser);\n\n\t\t\tidentifiers =\n\t\t\t\texpression.type === 'SequenceExpression'\n\t\t\t\t\t? /** @type {Identifier[]} */ (expression.expressions)\n\t\t\t\t\t: [/** @type {Identifier} */ (expression)];\n\n\t\t\tidentifiers.forEach(\n\t\t\t\t/** @param {any} node */ (node) => {\n\t\t\t\t\tif (node.type !== 'Identifier') {\n\t\t\t\t\t\te.debug_tag_invalid_arguments(/** @type {number} */ (node.start));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tparser.allow_whitespace();\n\t\t\tparser.eat('}', true);\n\t\t}\n\n\t\tparser.append({\n\t\t\ttype: 'DebugTag',\n\t\t\tstart,\n\t\t\tend: parser.index,\n\t\t\tidentifiers\n\t\t});\n\n\t\treturn;\n\t}\n\n\tif (parser.eat('const')) {\n\t\tparser.require_whitespace();\n\n\t\tconst id = read_pattern(parser);\n\t\tparser.allow_whitespace();\n\n\t\tparser.eat('=', true);\n\t\tparser.allow_whitespace();\n\n\t\tconst expression_start = parser.index;\n\t\tconst init = read_expression(parser);\n\t\tif (\n\t\t\tinit.type === 'SequenceExpression' &&\n\t\t\t!parser.template.substring(expression_start, init.start).includes('(')\n\t\t) {\n\t\t\t// const a = (b, c) is allowed but a = b, c = d is not;\n\t\t\te.const_tag_invalid_expression(init);\n\t\t}\n\t\tparser.allow_whitespace();\n\n\t\tparser.eat('}', true);\n\n\t\tparser.append({\n\t\t\ttype: 'ConstTag',\n\t\t\tstart,\n\t\t\tend: parser.index,\n\t\t\tdeclaration: {\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\tkind: 'const',\n\t\t\t\tdeclarations: [{ type: 'VariableDeclarator', id, init, start: id.start, end: init.end }],\n\t\t\t\tstart: start + 2, // start at const, not at @const\n\t\t\t\tend: parser.index - 1\n\t\t\t}\n\t\t});\n\t}\n\n\tif (parser.eat('render')) {\n\t\t// {@render foo(...)}\n\t\tparser.require_whitespace();\n\n\t\tconst expression = read_expression(parser);\n\n\t\tif (\n\t\t\texpression.type !== 'CallExpression' &&\n\t\t\t(expression.type !== 'ChainExpression' || expression.expression.type !== 'CallExpression')\n\t\t) {\n\t\t\te.render_tag_invalid_expression(expression);\n\t\t}\n\n\t\tparser.allow_whitespace();\n\t\tparser.eat('}', true);\n\n\t\tparser.append({\n\t\t\ttype: 'RenderTag',\n\t\t\tstart,\n\t\t\tend: parser.index,\n\t\t\texpression: /** @type {AST.RenderTag['expression']} */ (expression),\n\t\t\tmetadata: {\n\t\t\t\tdynamic: false,\n\t\t\t\targuments: [],\n\t\t\t\tpath: [],\n\t\t\t\tsnippets: new Set()\n\t\t\t}\n\t\t});\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Parser } from '../index.js' */\nimport { decode_character_references } from '../utils/html.js';\n\n/** @param {Parser} parser */\nexport default function text(parser) {\n\tconst start = parser.index;\n\n\tlet data = '';\n\n\twhile (parser.index < parser.template.length && !parser.match('<') && !parser.match('{')) {\n\t\tdata += parser.template[parser.index++];\n\t}\n\n\t/** @type {AST.Text} */\n\tparser.append({\n\t\ttype: 'Text',\n\t\tstart,\n\t\tend: parser.index,\n\t\traw: data,\n\t\tdata: decode_character_references(data, false)\n\t});\n}\n", "/** @import { Parser } from '../index.js' */\nimport element from './element.js';\nimport tag from './tag.js';\nimport text from './text.js';\n\n/** @param {Parser} parser */\nexport default function fragment(parser) {\n\tif (parser.match('<')) {\n\t\treturn element;\n\t}\n\n\tif (parser.match('{')) {\n\t\treturn tag;\n\t}\n\n\treturn text;\n}\n", "/** @import { ObjectExpression } from 'estree' */\n/** @import { AST } from '#compiler' */\nimport { NAMESPACE_MATHML, NAMESPACE_SVG } from '../../../../constants.js';\nimport * as e from '../../../errors.js';\n\n/**\n * @param {AST.SvelteOptionsRaw} node\n * @returns {AST.Root['options']}\n */\nexport default function read_options(node) {\n\t/** @type {AST.SvelteOptions} */\n\tconst component_options = {\n\t\tstart: node.start,\n\t\tend: node.end,\n\t\t// @ts-ignore\n\t\tattributes: node.attributes\n\t};\n\n\tif (!node) {\n\t\treturn component_options;\n\t}\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute') {\n\t\t\te.svelte_options_invalid_attribute(attribute);\n\t\t}\n\n\t\tconst { name } = attribute;\n\n\t\tswitch (name) {\n\t\t\tcase 'runes': {\n\t\t\t\tcomponent_options.runes = get_boolean_value(attribute);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'tag': {\n\t\t\t\te.svelte_options_deprecated_tag(attribute);\n\t\t\t\tbreak; // eslint doesn't know this is unnecessary\n\t\t\t}\n\t\t\tcase 'customElement': {\n\t\t\t\t/** @type {AST.SvelteOptions['customElement']} */\n\t\t\t\tconst ce = {};\n\t\t\t\tconst { value: v } = attribute;\n\t\t\t\tconst value = v === true || Array.isArray(v) ? v : [v];\n\n\t\t\t\tif (value === true) {\n\t\t\t\t\te.svelte_options_invalid_customelement(attribute);\n\t\t\t\t} else if (value[0].type === 'Text') {\n\t\t\t\t\tconst tag = get_static_value(attribute);\n\t\t\t\t\tvalidate_tag(attribute, tag);\n\t\t\t\t\tce.tag = tag;\n\t\t\t\t\tcomponent_options.customElement = ce;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value[0].expression.type !== 'ObjectExpression') {\n\t\t\t\t\t// Before Svelte 4 it was necessary to explicitly set customElement to null or else you'd get a warning.\n\t\t\t\t\t// This is no longer necessary, but for backwards compat just skip in this case now.\n\t\t\t\t\tif (value[0].expression.type === 'Literal' && value[0].expression.value === null) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\te.svelte_options_invalid_customelement(attribute);\n\t\t\t\t}\n\n\t\t\t\t/** @type {Array<[string, any]>} */\n\t\t\t\tconst properties = [];\n\t\t\t\tfor (const property of value[0].expression.properties) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tproperty.type !== 'Property' ||\n\t\t\t\t\t\tproperty.computed ||\n\t\t\t\t\t\tproperty.key.type !== 'Identifier'\n\t\t\t\t\t) {\n\t\t\t\t\t\te.svelte_options_invalid_customelement(attribute);\n\t\t\t\t\t}\n\t\t\t\t\tproperties.push([property.key.name, property.value]);\n\t\t\t\t}\n\n\t\t\t\tconst tag = properties.find(([name]) => name === 'tag');\n\t\t\t\tif (tag) {\n\t\t\t\t\tconst tag_value = tag[1]?.value;\n\t\t\t\t\tvalidate_tag(tag, tag_value);\n\t\t\t\t\tce.tag = tag_value;\n\t\t\t\t}\n\n\t\t\t\tconst props = properties.find(([name]) => name === 'props')?.[1];\n\t\t\t\tif (props) {\n\t\t\t\t\tif (props.type !== 'ObjectExpression') {\n\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t}\n\t\t\t\t\tce.props = {};\n\t\t\t\t\tfor (const property of /** @type {ObjectExpression} */ (props).properties) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tproperty.type !== 'Property' ||\n\t\t\t\t\t\t\tproperty.computed ||\n\t\t\t\t\t\t\tproperty.key.type !== 'Identifier' ||\n\t\t\t\t\t\t\tproperty.value.type !== 'ObjectExpression'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tce.props[property.key.name] = {};\n\t\t\t\t\t\tfor (const prop of property.value.properties) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tprop.type !== 'Property' ||\n\t\t\t\t\t\t\t\tprop.computed ||\n\t\t\t\t\t\t\t\tprop.key.type !== 'Identifier' ||\n\t\t\t\t\t\t\t\tprop.value.type !== 'Literal'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (prop.key.name === 'type') {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t['String', 'Number', 'Boolean', 'Array', 'Object'].indexOf(\n\t\t\t\t\t\t\t\t\t\t/** @type {string} */ (prop.value.value)\n\t\t\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tce.props[property.key.name].type = /** @type {any} */ (prop.value.value);\n\t\t\t\t\t\t\t} else if (prop.key.name === 'reflect') {\n\t\t\t\t\t\t\t\tif (typeof prop.value.value !== 'boolean') {\n\t\t\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tce.props[property.key.name].reflect = prop.value.value;\n\t\t\t\t\t\t\t} else if (prop.key.name === 'attribute') {\n\t\t\t\t\t\t\t\tif (typeof prop.value.value !== 'string') {\n\t\t\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tce.props[property.key.name].attribute = prop.value.value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\te.svelte_options_invalid_customelement_props(attribute);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst shadow = properties.find(([name]) => name === 'shadow')?.[1];\n\t\t\t\tif (shadow) {\n\t\t\t\t\tconst shadowdom = shadow?.value;\n\t\t\t\t\tif (shadowdom !== 'open' && shadowdom !== 'none') {\n\t\t\t\t\t\te.svelte_options_invalid_customelement_shadow(shadow);\n\t\t\t\t\t}\n\t\t\t\t\tce.shadow = shadowdom;\n\t\t\t\t}\n\n\t\t\t\tconst extend = properties.find(([name]) => name === 'extend')?.[1];\n\t\t\t\tif (extend) {\n\t\t\t\t\tce.extend = extend;\n\t\t\t\t}\n\n\t\t\t\tcomponent_options.customElement = ce;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'namespace': {\n\t\t\t\tconst value = get_static_value(attribute);\n\n\t\t\t\tif (value === NAMESPACE_SVG) {\n\t\t\t\t\tcomponent_options.namespace = 'svg';\n\t\t\t\t} else if (value === NAMESPACE_MATHML) {\n\t\t\t\t\tcomponent_options.namespace = 'mathml';\n\t\t\t\t} else if (value === 'html' || value === 'mathml' || value === 'svg') {\n\t\t\t\t\tcomponent_options.namespace = value;\n\t\t\t\t} else {\n\t\t\t\t\te.svelte_options_invalid_attribute_value(attribute, `\"html\", \"mathml\" or \"svg\"`);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'css': {\n\t\t\t\tconst value = get_static_value(attribute);\n\n\t\t\t\tif (value === 'injected') {\n\t\t\t\t\tcomponent_options.css = value;\n\t\t\t\t} else {\n\t\t\t\t\te.svelte_options_invalid_attribute_value(attribute, `\"injected\"`);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'immutable': {\n\t\t\t\tcomponent_options.immutable = get_boolean_value(attribute);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'preserveWhitespace': {\n\t\t\t\tcomponent_options.preserveWhitespace = get_boolean_value(attribute);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'accessors': {\n\t\t\t\tcomponent_options.accessors = get_boolean_value(attribute);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\te.svelte_options_unknown_attribute(attribute, name);\n\t\t}\n\t}\n\n\treturn component_options;\n}\n\n/**\n * @param {any} attribute\n */\nfunction get_static_value(attribute) {\n\tconst { value } = attribute;\n\n\tif (value === true) return true;\n\n\tconst chunk = Array.isArray(value) ? value[0] : value;\n\n\tif (!chunk) return true;\n\tif (value.length > 1) {\n\t\treturn null;\n\t}\n\tif (chunk.type === 'Text') return chunk.data;\n\tif (chunk.expression.type !== 'Literal') {\n\t\treturn null;\n\t}\n\n\treturn chunk.expression.value;\n}\n\n/**\n * @param {any} attribute\n */\nfunction get_boolean_value(attribute) {\n\tconst value = get_static_value(attribute);\n\tif (typeof value !== 'boolean') {\n\t\te.svelte_options_invalid_attribute_value(attribute, 'true or false');\n\t}\n\treturn value;\n}\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst tag_name_char =\n\t'[a-z0-9_.\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u{10000}-\\u{EFFFF}-]';\nconst regex_valid_tag_name = new RegExp(`^[a-z]${tag_name_char}*-${tag_name_char}*$`, 'u');\nconst reserved_tag_names = [\n\t'annotation-xml',\n\t'color-profile',\n\t'font-face',\n\t'font-face-src',\n\t'font-face-uri',\n\t'font-face-format',\n\t'font-face-name',\n\t'missing-glyph'\n];\n\n/**\n * @param {any} attribute\n * @param {string | null} tag\n * @returns {asserts tag is string}\n */\nfunction validate_tag(attribute, tag) {\n\tif (typeof tag !== 'string') {\n\t\te.svelte_options_invalid_tagname(attribute);\n\t}\n\tif (tag) {\n\t\tif (!regex_valid_tag_name.test(tag)) {\n\t\t\te.svelte_options_invalid_tagname(attribute);\n\t\t} else if (reserved_tag_names.includes(tag)) {\n\t\t\te.svelte_options_reserved_tagname(attribute);\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\nimport * as e from '../../../../errors.js';\n\n/**\n * @param {AST.SvelteBody | AST.SvelteDocument | AST.SvelteOptionsRaw | AST.SvelteWindow} node\n */\nexport function disallow_children(node) {\n\tconst { nodes } = node.fragment;\n\n\tif (nodes.length > 0) {\n\t\tconst first = nodes[0];\n\t\tconst last = nodes[nodes.length - 1];\n\n\t\te.svelte_meta_invalid_content({ start: first.start, end: last.end }, node.name);\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n// @ts-expect-error acorn type definitions are borked in the release we use\nimport { isIdentifierStart, isIdentifierChar } from 'acorn';\nimport fragment from './state/fragment.js';\nimport { regex_whitespace } from '../patterns.js';\nimport * as e from '../../errors.js';\nimport { create_fragment } from './utils/create.js';\nimport read_options from './read/options.js';\nimport { is_reserved } from '../../../utils.js';\nimport { disallow_children } from '../2-analyze/visitors/shared/special-element.js';\n\nconst regex_position_indicator = / \\(\\d+:\\d+\\)$/;\n\nconst regex_lang_attribute =\n\t/<!--[^]*?-->|<script\\s+(?:[^>]*|(?:[^=>'\"/]+=(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)\\s+)*)lang=([\"'])?([^\"' >]+)\\1[^>]*>/g;\n\nexport class Parser {\n\t/**\n\t * @readonly\n\t * @type {string}\n\t */\n\ttemplate;\n\n\t/**\n\t * @readonly\n\t * @type {string}\n\t */\n\ttemplate_untrimmed;\n\n\t/**\n\t * Whether or not we're in loose parsing mode, in which\n\t * case we try to continue parsing as much as possible\n\t * @type {boolean}\n\t */\n\tloose;\n\n\t/** */\n\tindex = 0;\n\n\t/** Whether we're parsing in TypeScript mode */\n\tts = false;\n\n\t/** @type {AST.TemplateNode[]} */\n\tstack = [];\n\n\t/** @type {AST.Fragment[]} */\n\tfragments = [];\n\n\t/** @type {AST.Root} */\n\troot;\n\n\t/** @type {Record<string, boolean>} */\n\tmeta_tags = {};\n\n\t/** @type {LastAutoClosedTag | undefined} */\n\tlast_auto_closed_tag;\n\n\t/**\n\t * @param {string} template\n\t * @param {boolean} loose\n\t */\n\tconstructor(template, loose) {\n\t\tif (typeof template !== 'string') {\n\t\t\tthrow new TypeError('Template must be a string');\n\t\t}\n\n\t\tthis.loose = loose;\n\t\tthis.template_untrimmed = template;\n\t\tthis.template = template.trimEnd();\n\n\t\tlet match_lang;\n\n\t\tdo match_lang = regex_lang_attribute.exec(template);\n\t\twhile (match_lang && match_lang[0][1] !== 's'); // ensure it starts with '<s' to match script tags\n\n\t\tregex_lang_attribute.lastIndex = 0; // reset matched index to pass tests - otherwise declare the regex inside the constructor\n\n\t\tthis.ts = match_lang?.[2] === 'ts';\n\n\t\tthis.root = {\n\t\t\tcss: null,\n\t\t\tjs: [],\n\t\t\t// @ts-ignore\n\t\t\tstart: null,\n\t\t\t// @ts-ignore\n\t\t\tend: null,\n\t\t\ttype: 'Root',\n\t\t\tfragment: create_fragment(),\n\t\t\toptions: null,\n\t\t\tmetadata: {\n\t\t\t\tts: this.ts\n\t\t\t}\n\t\t};\n\n\t\tthis.stack.push(this.root);\n\t\tthis.fragments.push(this.root.fragment);\n\n\t\t/** @type {ParserState} */\n\t\tlet state = fragment;\n\n\t\twhile (this.index < this.template.length) {\n\t\t\tstate = state(this) || fragment;\n\t\t}\n\n\t\tif (this.stack.length > 1) {\n\t\t\tconst current = this.current();\n\n\t\t\tif (this.loose) {\n\t\t\t\tcurrent.end = this.template.length;\n\t\t\t} else if (current.type === 'RegularElement') {\n\t\t\t\tcurrent.end = current.start + 1;\n\t\t\t\te.element_unclosed(current, current.name);\n\t\t\t} else {\n\t\t\t\tcurrent.end = current.start + 1;\n\t\t\t\te.block_unclosed(current);\n\t\t\t}\n\t\t}\n\n\t\tif (state !== fragment) {\n\t\t\te.unexpected_eof(this.index);\n\t\t}\n\n\t\tif (this.root.fragment.nodes.length) {\n\t\t\tlet start = /** @type {number} */ (this.root.fragment.nodes[0].start);\n\t\t\twhile (regex_whitespace.test(template[start])) start += 1;\n\n\t\t\tlet end = /** @type {number} */ (\n\t\t\t\tthis.root.fragment.nodes[this.root.fragment.nodes.length - 1].end\n\t\t\t);\n\t\t\twhile (regex_whitespace.test(template[end - 1])) end -= 1;\n\n\t\t\tthis.root.start = start;\n\t\t\tthis.root.end = end;\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tthis.root.start = this.root.end = null;\n\t\t}\n\n\t\tconst options_index = this.root.fragment.nodes.findIndex(\n\t\t\t/** @param {any} thing */\n\t\t\t(thing) => thing.type === 'SvelteOptions'\n\t\t);\n\t\tif (options_index !== -1) {\n\t\t\tconst options = /** @type {AST.SvelteOptionsRaw} */ (this.root.fragment.nodes[options_index]);\n\t\t\tthis.root.fragment.nodes.splice(options_index, 1);\n\t\t\tthis.root.options = read_options(options);\n\n\t\t\tdisallow_children(options);\n\n\t\t\t// We need this for the old AST format\n\t\t\tObject.defineProperty(this.root.options, '__raw__', {\n\t\t\t\tvalue: options,\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrent() {\n\t\treturn this.stack[this.stack.length - 1];\n\t}\n\n\t/**\n\t * @param {any} err\n\t * @returns {never}\n\t */\n\tacorn_error(err) {\n\t\te.js_parse_error(err.pos, err.message.replace(regex_position_indicator, ''));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @param {boolean} required\n\t * @param {boolean} required_in_loose\n\t */\n\teat(str, required = false, required_in_loose = true) {\n\t\tif (this.match(str)) {\n\t\t\tthis.index += str.length;\n\t\t\treturn true;\n\t\t}\n\n\t\tif (required && (!this.loose || required_in_loose)) {\n\t\t\te.expected_token(this.index, str);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/** @param {string} str */\n\tmatch(str) {\n\t\tconst length = str.length;\n\t\tif (length === 1) {\n\t\t\t// more performant than slicing\n\t\t\treturn this.template[this.index] === str;\n\t\t}\n\n\t\treturn this.template.slice(this.index, this.index + length) === str;\n\t}\n\n\t/**\n\t * Match a regex at the current index\n\t * @param {RegExp} pattern  Should have a ^ anchor at the start so the regex doesn't search past the beginning, resulting in worse performance\n\t */\n\tmatch_regex(pattern) {\n\t\tconst match = pattern.exec(this.template.slice(this.index));\n\t\tif (!match || match.index !== 0) return null;\n\n\t\treturn match[0];\n\t}\n\n\tallow_whitespace() {\n\t\twhile (this.index < this.template.length && regex_whitespace.test(this.template[this.index])) {\n\t\t\tthis.index++;\n\t\t}\n\t}\n\n\t/**\n\t * Search for a regex starting at the current index and return the result if it matches\n\t * @param {RegExp} pattern  Should have a ^ anchor at the start so the regex doesn't search past the beginning, resulting in worse performance\n\t */\n\tread(pattern) {\n\t\tconst result = this.match_regex(pattern);\n\t\tif (result) this.index += result.length;\n\t\treturn result;\n\t}\n\n\t/** @param {any} allow_reserved */\n\tread_identifier(allow_reserved = false) {\n\t\tconst start = this.index;\n\n\t\tlet i = this.index;\n\n\t\tconst code = /** @type {number} */ (this.template.codePointAt(i));\n\t\tif (!isIdentifierStart(code, true)) return null;\n\n\t\ti += code <= 0xffff ? 1 : 2;\n\n\t\twhile (i < this.template.length) {\n\t\t\tconst code = /** @type {number} */ (this.template.codePointAt(i));\n\n\t\t\tif (!isIdentifierChar(code, true)) break;\n\t\t\ti += code <= 0xffff ? 1 : 2;\n\t\t}\n\n\t\tconst identifier = this.template.slice(this.index, (this.index = i));\n\n\t\tif (!allow_reserved && is_reserved(identifier)) {\n\t\t\te.unexpected_reserved_word(start, identifier);\n\t\t}\n\n\t\treturn identifier;\n\t}\n\n\t/** @param {RegExp} pattern */\n\tread_until(pattern) {\n\t\tif (this.index >= this.template.length) {\n\t\t\tif (this.loose) return '';\n\t\t\te.unexpected_eof(this.template.length);\n\t\t}\n\n\t\tconst start = this.index;\n\t\tconst match = pattern.exec(this.template.slice(start));\n\n\t\tif (match) {\n\t\t\tthis.index = start + match.index;\n\t\t\treturn this.template.slice(start, this.index);\n\t\t}\n\n\t\tthis.index = this.template.length;\n\t\treturn this.template.slice(start);\n\t}\n\n\trequire_whitespace() {\n\t\tif (!regex_whitespace.test(this.template[this.index])) {\n\t\t\te.expected_whitespace(this.index);\n\t\t}\n\n\t\tthis.allow_whitespace();\n\t}\n\n\tpop() {\n\t\tthis.fragments.pop();\n\t\treturn this.stack.pop();\n\t}\n\n\t/**\n\t * @template {AST.Fragment['nodes'][number]} T\n\t * @param {T} node\n\t * @returns {T}\n\t */\n\tappend(node) {\n\t\tthis.fragments.at(-1)?.nodes.push(node);\n\t\treturn node;\n\t}\n}\n\n/**\n * @param {string} template\n * @param {boolean} [loose]\n * @returns {AST.Root}\n */\nexport function parse(template, loose = false) {\n\tconst parser = new Parser(template, loose);\n\treturn parser.root;\n}\n\n/** @typedef {(parser: Parser) => ParserState | void} ParserState */\n\n/** @typedef {Object} LastAutoClosedTag\n * @property {string} tag\n * @property {string} reason\n * @property {number} depth\n */\n", "/** @import { Context, Visitors } from 'zimmerframe' */\n/** @import { FunctionExpression, FunctionDeclaration } from 'estree' */\nimport { walk } from 'zimmerframe';\nimport * as b from '#compiler/builders';\nimport * as e from '../../errors.js';\n\n/**\n * @param {FunctionExpression | FunctionDeclaration} node\n * @param {Context<any, any>} context\n */\nfunction remove_this_param(node, context) {\n\tif (node.params[0]?.type === 'Identifier' && node.params[0].name === 'this') {\n\t\tnode.params.shift();\n\t}\n\treturn context.next();\n}\n\n/** @type {Visitors<any, null>} */\nconst visitors = {\n\t_(node, context) {\n\t\tconst n = context.next() ?? node;\n\n\t\t// TODO there may come a time when we decide to preserve type annotations.\n\t\t// until that day comes, we just delete them so they don't confuse esrap\n\t\tdelete n.typeAnnotation;\n\t\tdelete n.typeParameters;\n\t\tdelete n.typeArguments;\n\t\tdelete n.returnType;\n\t\tdelete n.accessibility;\n\t},\n\tDecorator(node) {\n\t\te.typescript_invalid_feature(node, 'decorators (related TSC proposal is not stage 4 yet)');\n\t},\n\tImportDeclaration(node) {\n\t\tif (node.importKind === 'type') return b.empty;\n\n\t\tif (node.specifiers?.length > 0) {\n\t\t\tconst specifiers = node.specifiers.filter((/** @type {any} */ s) => s.importKind !== 'type');\n\t\t\tif (specifiers.length === 0) return b.empty;\n\n\t\t\treturn { ...node, specifiers };\n\t\t}\n\n\t\treturn node;\n\t},\n\tExportNamedDeclaration(node, context) {\n\t\tif (node.exportKind === 'type') return b.empty;\n\n\t\tif (node.declaration) {\n\t\t\tconst result = context.next();\n\t\t\tif (result?.declaration?.type === 'EmptyStatement') {\n\t\t\t\treturn b.empty;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (node.specifiers) {\n\t\t\tconst specifiers = node.specifiers.filter((/** @type {any} */ s) => s.exportKind !== 'type');\n\t\t\tif (specifiers.length === 0) return b.empty;\n\n\t\t\treturn { ...node, specifiers };\n\t\t}\n\n\t\treturn node;\n\t},\n\tExportDefaultDeclaration(node) {\n\t\tif (node.exportKind === 'type') return b.empty;\n\t\treturn node;\n\t},\n\tExportAllDeclaration(node) {\n\t\tif (node.exportKind === 'type') return b.empty;\n\t\treturn node;\n\t},\n\tPropertyDefinition(node, { next }) {\n\t\tif (node.accessor) {\n\t\t\te.typescript_invalid_feature(\n\t\t\t\tnode,\n\t\t\t\t'accessor fields (related TSC proposal is not stage 4 yet)'\n\t\t\t);\n\t\t}\n\t\treturn next();\n\t},\n\tTSAsExpression(node, context) {\n\t\treturn context.visit(node.expression);\n\t},\n\tTSSatisfiesExpression(node, context) {\n\t\treturn context.visit(node.expression);\n\t},\n\tTSNonNullExpression(node, context) {\n\t\treturn context.visit(node.expression);\n\t},\n\tTSInterfaceDeclaration() {\n\t\treturn b.empty;\n\t},\n\tTSTypeAliasDeclaration() {\n\t\treturn b.empty;\n\t},\n\tTSTypeAssertion(node, context) {\n\t\treturn context.visit(node.expression);\n\t},\n\tTSEnumDeclaration(node) {\n\t\te.typescript_invalid_feature(node, 'enums');\n\t},\n\tTSParameterProperty(node, context) {\n\t\tif ((node.readonly || node.accessibility) && context.path.at(-2)?.kind === 'constructor') {\n\t\t\te.typescript_invalid_feature(node, 'accessibility modifiers on constructor parameters');\n\t\t}\n\t\treturn context.visit(node.parameter);\n\t},\n\tTSInstantiationExpression(node, context) {\n\t\treturn context.visit(node.expression);\n\t},\n\tFunctionExpression: remove_this_param,\n\tFunctionDeclaration: remove_this_param,\n\tTSDeclareFunction() {\n\t\treturn b.empty;\n\t},\n\tClassDeclaration(node, context) {\n\t\tif (node.declare) {\n\t\t\treturn b.empty;\n\t\t}\n\t\tdelete node.implements;\n\t\treturn context.next();\n\t},\n\tMethodDefinition(node, context) {\n\t\tif (node.abstract) {\n\t\t\treturn b.empty;\n\t\t}\n\t\treturn context.next();\n\t},\n\tVariableDeclaration(node, context) {\n\t\tif (node.declare) {\n\t\t\treturn b.empty;\n\t\t}\n\t\treturn context.next();\n\t},\n\tTSModuleDeclaration(node, context) {\n\t\tif (!node.body) return b.empty;\n\n\t\t// namespaces can contain non-type nodes\n\t\tconst cleaned = /** @type {any[]} */ (node.body.body).map((entry) => context.visit(entry));\n\t\tif (cleaned.some((entry) => entry !== b.empty)) {\n\t\t\te.typescript_invalid_feature(node, 'namespaces with non-type nodes');\n\t\t}\n\n\t\treturn b.empty;\n\t}\n};\n\n/**\n * @template T\n * @param {T} ast\n * @returns {T}\n */\nexport function remove_typescript_nodes(ast) {\n\treturn walk(ast, null, visitors);\n}\n", "/** @import { AST } from '#compiler' */\nimport { is_element_node } from '../phases/nodes.js';\nimport { is_text_attribute } from './ast.js';\n\n/**\n * @param {AST.SvelteNode} node\n */\nexport function determine_slot(node) {\n\tif (!is_element_node(node)) return null;\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute') continue;\n\t\tif (attribute.name !== 'slot') continue;\n\t\tif (!is_text_attribute(attribute)) continue;\n\n\t\treturn /** @type {string} */ (attribute.value[0].data);\n\t}\n\n\treturn null;\n}\n", "/** @import { AssignmentExpression, Expression, Literal, Node, Pattern, Super, UpdateExpression, VariableDeclarator } from 'estree' */\n/** @import { AST, Binding } from '#compiler' */\n/** @import { AnalysisState, Context } from '../../types' */\n/** @import { Scope } from '../../../scope' */\n/** @import { NodeLike } from '../../../../errors.js' */\nimport * as e from '../../../../errors.js';\nimport { extract_identifiers } from '../../../../utils/ast.js';\nimport * as w from '../../../../warnings.js';\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\n\n/**\n * @param {AssignmentExpression | UpdateExpression | AST.BindDirective} node\n * @param {Pattern | Expression} argument\n * @param {AnalysisState} state\n */\nexport function validate_assignment(node, argument, state) {\n\tvalidate_no_const_assignment(node, argument, state.scope, node.type === 'BindDirective');\n\n\tif (argument.type === 'Identifier') {\n\t\tconst binding = state.scope.get(argument.name);\n\n\t\tif (state.analysis.runes) {\n\t\t\tif (binding?.node === state.analysis.props_id) {\n\t\t\t\te.constant_assignment(node, '$props.id()');\n\t\t\t}\n\n\t\t\tif (binding?.kind === 'each') {\n\t\t\t\te.each_item_invalid_assignment(node);\n\t\t\t}\n\t\t}\n\n\t\tif (binding?.kind === 'snippet') {\n\t\t\te.snippet_parameter_assignment(node);\n\t\t}\n\t}\n}\n\n/**\n * @param {NodeLike} node\n * @param {Pattern | Expression} argument\n * @param {Scope} scope\n * @param {boolean} is_binding\n */\nexport function validate_no_const_assignment(node, argument, scope, is_binding) {\n\tif (argument.type === 'ArrayPattern') {\n\t\tfor (const element of argument.elements) {\n\t\t\tif (element) {\n\t\t\t\tvalidate_no_const_assignment(node, element, scope, is_binding);\n\t\t\t}\n\t\t}\n\t} else if (argument.type === 'ObjectPattern') {\n\t\tfor (const element of argument.properties) {\n\t\t\tif (element.type === 'Property') {\n\t\t\t\tvalidate_no_const_assignment(node, element.value, scope, is_binding);\n\t\t\t}\n\t\t}\n\t} else if (argument.type === 'Identifier') {\n\t\tconst binding = scope.get(argument.name);\n\t\tif (\n\t\t\tbinding?.declaration_kind === 'import' ||\n\t\t\t(binding?.declaration_kind === 'const' && binding.kind !== 'each')\n\t\t) {\n\t\t\t// e.invalid_const_assignment(\n\t\t\t// \tnode,\n\t\t\t// \tis_binding,\n\t\t\t// \t// This takes advantage of the fact that we don't assign initial for let directives and then/catch variables.\n\t\t\t// \t// If we start doing that, we need another property on the binding to differentiate, or give up on the more precise error message.\n\t\t\t// \tbinding.kind !== 'state' &&\n\t\t\t// \t\tbinding.kind !== 'raw_state' &&\n\t\t\t// \t\t(binding.kind !== 'normal' || !binding.initial)\n\t\t\t// );\n\n\t\t\t// TODO have a more specific error message for assignments to things like `{:then foo}`\n\t\t\tconst thing = binding.declaration_kind === 'import' ? 'import' : 'constant';\n\n\t\t\tif (is_binding) {\n\t\t\t\te.constant_binding(node, thing);\n\t\t\t} else {\n\t\t\t\te.constant_assignment(node, thing);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Validates that the opening of a control flow block is `{` immediately followed by the expected character.\n * In legacy mode whitespace is allowed inbetween. TODO remove once legacy mode is gone and move this into parser instead.\n * @param {{start: number; end: number}} node\n * @param {AnalysisState} state\n * @param {string} expected\n */\nexport function validate_opening_tag(node, state, expected) {\n\tif (state.analysis.source[node.start + 1] !== expected) {\n\t\t// avoid a sea of red and only mark the first few characters\n\t\te.block_unexpected_character({ start: node.start, end: node.start + 5 }, expected);\n\t}\n}\n\n/**\n * @param {AST.Fragment | null | undefined} node\n * @param {Context} context\n */\nexport function validate_block_not_empty(node, context) {\n\tif (!node) return;\n\t// Assumption: If the block has zero elements, someone's in the middle of typing it out,\n\t// so don't warn in that case because it would be distracting.\n\tif (node.nodes.length === 1 && node.nodes[0].type === 'Text' && !node.nodes[0].raw.trim()) {\n\t\tw.block_empty(node.nodes[0]);\n\t}\n}\n\n/**\n * @param {VariableDeclarator} node\n * @param {AnalysisState} state\n */\nexport function ensure_no_module_import_conflict(node, state) {\n\tconst ids = extract_identifiers(node.id);\n\tfor (const id of ids) {\n\t\tif (\n\t\t\tstate.ast_type === 'instance' &&\n\t\t\tstate.scope === state.analysis.instance.scope &&\n\t\t\tstate.analysis.module.scope.get(id.name)?.declaration_kind === 'import'\n\t\t) {\n\t\t\t// TODO fix the message here\n\t\t\te.declaration_duplicate_module_import(node.id);\n\t\t}\n\t}\n}\n\n/**\n * A 'safe' identifier means that the `foo` in `foo.bar` or `foo()` will not\n * call functions that require component context to exist\n * @param {Expression | Super} expression\n * @param {Scope} scope\n */\nexport function is_safe_identifier(expression, scope) {\n\tlet node = expression;\n\twhile (node.type === 'MemberExpression') node = node.object;\n\n\tif (node.type !== 'Identifier') return false;\n\n\tconst binding = scope.get(node.name);\n\tif (!binding) return true;\n\n\tif (binding.kind === 'store_sub') {\n\t\treturn is_safe_identifier({ name: node.name.slice(1), type: 'Identifier' }, scope);\n\t}\n\n\treturn (\n\t\tbinding.declaration_kind !== 'import' &&\n\t\tbinding.kind !== 'prop' &&\n\t\tbinding.kind !== 'bindable_prop' &&\n\t\tbinding.kind !== 'rest_prop'\n\t);\n}\n\n/**\n * @param {Expression | Literal | Super} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function is_pure(node, context) {\n\tif (node.type === 'Literal') {\n\t\treturn true;\n\t}\n\n\tif (node.type === 'CallExpression') {\n\t\tif (!is_pure(node.callee, context)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let arg of node.arguments) {\n\t\t\tif (!is_pure(arg.type === 'SpreadElement' ? arg.argument : arg, context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tif (node.type !== 'Identifier' && node.type !== 'MemberExpression') {\n\t\treturn false;\n\t}\n\n\tif (get_rune(b.call(node), context.state.scope) === '$effect.tracking') {\n\t\treturn false;\n\t}\n\n\t/** @type {Expression | Super | null} */\n\tlet left = node;\n\twhile (left.type === 'MemberExpression') {\n\t\tleft = left.object;\n\t}\n\n\tif (!left) return false;\n\n\tif (left.type === 'Identifier') {\n\t\tconst binding = context.state.scope.get(left.name);\n\t\tif (binding === null) return true; // globals are assumed to be safe\n\t} else if (is_pure(left, context)) {\n\t\treturn true;\n\t}\n\n\t// TODO add more cases (safe Svelte imports, etc)\n\treturn false;\n}\n\n/**\n * Checks if the name is valid, which it is when it's not starting with (or is) a dollar sign or if it's a function parameter.\n * The second argument is the depth of the scope, which is there for backwards compatibility reasons: In Svelte 4, you\n * were allowed to define `$`-prefixed variables anywhere below the top level of components. Once legacy mode is gone, this\n * argument can be removed / the call sites adjusted accordingly.\n * @param {Binding | null} binding\n * @param {number | undefined} [function_depth]\n */\nexport function validate_identifier_name(binding, function_depth) {\n\tif (!binding) return;\n\n\tconst declaration_kind = binding.declaration_kind;\n\n\tif (\n\t\tdeclaration_kind !== 'synthetic' &&\n\t\tdeclaration_kind !== 'param' &&\n\t\tdeclaration_kind !== 'rest_param' &&\n\t\t(!function_depth || function_depth <= 1)\n\t) {\n\t\tconst node = binding.node;\n\n\t\tif (node.name === '$') {\n\t\t\te.dollar_binding_invalid(node);\n\t\t} else if (\n\t\t\tnode.name.startsWith('$') &&\n\t\t\t// import type { $Type } from \"\" - these are normally already filtered out,\n\t\t\t// but for the migration they aren't, and throwing here is preventing the migration to complete\n\t\t\t// TODO -> once migration script is gone we can remove this check\n\t\t\t!(\n\t\t\t\tbinding.initial?.type === 'ImportDeclaration' &&\n\t\t\t\t/** @type {any} */ (binding.initial).importKind === 'type'\n\t\t\t)\n\t\t) {\n\t\t\te.dollar_prefix_invalid(node);\n\t\t}\n\t}\n}\n\n/**\n * Checks that the exported name is not a derived or reassigned state variable.\n * @param {Node} node\n * @param {Scope} scope\n * @param {string} name\n */\nexport function validate_export(node, scope, name) {\n\tconst binding = scope.get(name);\n\tif (!binding) return;\n\n\tif (binding.kind === 'derived') {\n\t\te.derived_invalid_export(node);\n\t}\n\n\tif ((binding.kind === 'state' || binding.kind === 'raw_state') && binding.reassigned) {\n\t\te.state_invalid_export(node);\n\t}\n}\n", "/** @import { ArrowFunctionExpression, BinaryOperator, ClassDeclaration, Expression, FunctionDeclaration, FunctionExpression, Identifier, ImportDeclaration, MemberExpression, LogicalOperator, Node, Pattern, UnaryOperator, VariableDeclarator, Super } from 'estree' */\n/** @import { Context, Visitor } from 'zimmerframe' */\n/** @import { AST, BindingKind, DeclarationKind } from '#compiler' */\nimport is_reference from 'is-reference';\nimport { walk } from 'zimmerframe';\nimport { create_expression_metadata } from './nodes.js';\nimport * as b from '#compiler/builders';\nimport * as e from '../errors.js';\nimport {\n\textract_identifiers,\n\textract_identifiers_from_destructuring,\n\tobject,\n\tunwrap_pattern\n} from '../utils/ast.js';\nimport { is_reserved, is_rune } from '../../utils.js';\nimport { determine_slot } from '../utils/slot.js';\nimport { validate_identifier_name } from './2-analyze/visitors/shared/utils.js';\n\nconst UNKNOWN = Symbol('unknown');\n/** Includes `BigInt` */\nexport const NUMBER = Symbol('number');\nexport const STRING = Symbol('string');\n\n/** @type {Record<string, [type: NUMBER | STRING | UNKNOWN, fn?: Function]>} */\nconst globals = {\n\tBigInt: [NUMBER],\n\t'Math.min': [NUMBER, Math.min],\n\t'Math.max': [NUMBER, Math.max],\n\t'Math.random': [NUMBER],\n\t'Math.floor': [NUMBER, Math.floor],\n\t// @ts-ignore\n\t'Math.f16round': [NUMBER, Math.f16round],\n\t'Math.round': [NUMBER, Math.round],\n\t'Math.abs': [NUMBER, Math.abs],\n\t'Math.acos': [NUMBER, Math.acos],\n\t'Math.asin': [NUMBER, Math.asin],\n\t'Math.atan': [NUMBER, Math.atan],\n\t'Math.atan2': [NUMBER, Math.atan2],\n\t'Math.ceil': [NUMBER, Math.ceil],\n\t'Math.cos': [NUMBER, Math.cos],\n\t'Math.sin': [NUMBER, Math.sin],\n\t'Math.tan': [NUMBER, Math.tan],\n\t'Math.exp': [NUMBER, Math.exp],\n\t'Math.log': [NUMBER, Math.log],\n\t'Math.pow': [NUMBER, Math.pow],\n\t'Math.sqrt': [NUMBER, Math.sqrt],\n\t'Math.clz32': [NUMBER, Math.clz32],\n\t'Math.imul': [NUMBER, Math.imul],\n\t'Math.sign': [NUMBER, Math.sign],\n\t'Math.log10': [NUMBER, Math.log10],\n\t'Math.log2': [NUMBER, Math.log2],\n\t'Math.log1p': [NUMBER, Math.log1p],\n\t'Math.expm1': [NUMBER, Math.expm1],\n\t'Math.cosh': [NUMBER, Math.cosh],\n\t'Math.sinh': [NUMBER, Math.sinh],\n\t'Math.tanh': [NUMBER, Math.tanh],\n\t'Math.acosh': [NUMBER, Math.acosh],\n\t'Math.asinh': [NUMBER, Math.asinh],\n\t'Math.atanh': [NUMBER, Math.atanh],\n\t'Math.trunc': [NUMBER, Math.trunc],\n\t'Math.fround': [NUMBER, Math.fround],\n\t'Math.cbrt': [NUMBER, Math.cbrt],\n\tNumber: [NUMBER, Number],\n\t'Number.isInteger': [NUMBER, Number.isInteger],\n\t'Number.isFinite': [NUMBER, Number.isFinite],\n\t'Number.isNaN': [NUMBER, Number.isNaN],\n\t'Number.isSafeInteger': [NUMBER, Number.isSafeInteger],\n\t'Number.parseFloat': [NUMBER, Number.parseFloat],\n\t'Number.parseInt': [NUMBER, Number.parseInt],\n\tString: [STRING, String],\n\t'String.fromCharCode': [STRING, String.fromCharCode],\n\t'String.fromCodePoint': [STRING, String.fromCodePoint]\n};\n\n/** @type {Record<string, any>} */\nconst global_constants = {\n\t'Math.PI': Math.PI,\n\t'Math.E': Math.E,\n\t'Math.LN10': Math.LN10,\n\t'Math.LN2': Math.LN2,\n\t'Math.LOG10E': Math.LOG10E,\n\t'Math.LOG2E': Math.LOG2E,\n\t'Math.SQRT2': Math.SQRT2,\n\t'Math.SQRT1_2': Math.SQRT1_2\n};\n\nexport class Binding {\n\t/** @type {Scope} */\n\tscope;\n\n\t/** @type {Identifier} */\n\tnode;\n\n\t/** @type {BindingKind} */\n\tkind;\n\n\t/** @type {DeclarationKind} */\n\tdeclaration_kind;\n\n\t/**\n\t * What the value was initialized with.\n\t * For destructured props such as `let { foo = 'bar' } = $props()` this is `'bar'` and not `$props()`\n\t * @type {null | Expression | FunctionDeclaration | ClassDeclaration | ImportDeclaration | AST.EachBlock | AST.SnippetBlock}\n\t */\n\tinitial = null;\n\n\t/** @type {Array<{ node: Identifier; path: AST.SvelteNode[] }>} */\n\treferences = [];\n\n\t/**\n\t * For `legacy_reactive`: its reactive dependencies\n\t * @type {Binding[]}\n\t */\n\tlegacy_dependencies = [];\n\n\t/**\n\t * Legacy props: the `class` in `{ export klass as class}`. $props(): The `class` in { class: klass } = $props()\n\t * @type {string | null}\n\t */\n\tprop_alias = null;\n\n\t/**\n\t * Additional metadata, varies per binding type\n\t * @type {null | { inside_rest?: boolean }}\n\t */\n\tmetadata = null;\n\n\tmutated = false;\n\treassigned = false;\n\n\t/**\n\t *\n\t * @param {Scope} scope\n\t * @param {Identifier} node\n\t * @param {BindingKind} kind\n\t * @param {DeclarationKind} declaration_kind\n\t * @param {Binding['initial']} initial\n\t */\n\tconstructor(scope, node, kind, declaration_kind, initial) {\n\t\tthis.scope = scope;\n\t\tthis.node = node;\n\t\tthis.initial = initial;\n\t\tthis.kind = kind;\n\t\tthis.declaration_kind = declaration_kind;\n\t}\n\n\tget updated() {\n\t\treturn this.mutated || this.reassigned;\n\t}\n\n\t/**\n\t * @returns {this is Binding & { initial: ArrowFunctionExpression | FunctionDeclaration | FunctionExpression }}\n\t */\n\tis_function() {\n\t\tif (this.updated) {\n\t\t\t// even if it's reassigned to another function,\n\t\t\t// we can't use it directly as e.g. an event handler\n\t\t\treturn false;\n\t\t}\n\n\t\tconst type = this.initial?.type;\n\n\t\treturn (\n\t\t\ttype === 'ArrowFunctionExpression' ||\n\t\t\ttype === 'FunctionExpression' ||\n\t\t\ttype === 'FunctionDeclaration'\n\t\t);\n\t}\n}\n\nclass Evaluation {\n\t/** @type {Set<any>} */\n\tvalues;\n\n\t/**\n\t * True if there is exactly one possible value\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tis_known = true;\n\n\t/**\n\t * True if the value is known to not be null/undefined\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tis_defined = true;\n\n\t/**\n\t * True if the value is known to be a string\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tis_string = true;\n\n\t/**\n\t * True if the value is known to be a number\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tis_number = true;\n\n\t/**\n\t * @readonly\n\t * @type {any}\n\t */\n\tvalue = undefined;\n\n\t/**\n\t *\n\t * @param {Scope} scope\n\t * @param {Expression} expression\n\t * @param {Set<any>} values\n\t */\n\tconstructor(scope, expression, values) {\n\t\tthis.values = values;\n\n\t\tswitch (expression.type) {\n\t\t\tcase 'Literal': {\n\t\t\t\tthis.values.add(expression.value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Identifier': {\n\t\t\t\tconst binding = scope.get(expression.name);\n\n\t\t\t\tif (binding) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tbinding.initial?.type === 'CallExpression' &&\n\t\t\t\t\t\tget_rune(binding.initial, scope) === '$props.id'\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst is_prop =\n\t\t\t\t\t\tbinding.kind === 'prop' ||\n\t\t\t\t\t\tbinding.kind === 'rest_prop' ||\n\t\t\t\t\t\tbinding.kind === 'bindable_prop';\n\n\t\t\t\t\tif (binding.initial?.type === 'EachBlock' && binding.initial.index === expression.name) {\n\t\t\t\t\t\tthis.values.add(NUMBER);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!binding.updated && binding.initial !== null && !is_prop) {\n\t\t\t\t\t\tbinding.scope.evaluate(/** @type {Expression} */ (binding.initial), this.values);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (expression.name === 'undefined') {\n\t\t\t\t\tthis.values.add(undefined);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// TODO glean what we can from reassignments\n\t\t\t\t// TODO one day, expose props and imports somehow\n\n\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'BinaryExpression': {\n\t\t\t\tconst a = scope.evaluate(/** @type {Expression} */ (expression.left)); // `left` cannot be `PrivateIdentifier` unless operator is `in`\n\t\t\t\tconst b = scope.evaluate(expression.right);\n\n\t\t\t\tif (a.is_known && b.is_known) {\n\t\t\t\t\tthis.values.add(binary[expression.operator](a.value, b.value));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch (expression.operator) {\n\t\t\t\t\tcase '!=':\n\t\t\t\t\tcase '!==':\n\t\t\t\t\tcase '<':\n\t\t\t\t\tcase '<=':\n\t\t\t\t\tcase '>':\n\t\t\t\t\tcase '>=':\n\t\t\t\t\tcase '==':\n\t\t\t\t\tcase '===':\n\t\t\t\t\tcase 'in':\n\t\t\t\t\tcase 'instanceof':\n\t\t\t\t\t\tthis.values.add(true);\n\t\t\t\t\t\tthis.values.add(false);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase '%':\n\t\t\t\t\tcase '&':\n\t\t\t\t\tcase '*':\n\t\t\t\t\tcase '**':\n\t\t\t\t\tcase '-':\n\t\t\t\t\tcase '/':\n\t\t\t\t\tcase '<<':\n\t\t\t\t\tcase '>>':\n\t\t\t\t\tcase '>>>':\n\t\t\t\t\tcase '^':\n\t\t\t\t\tcase '|':\n\t\t\t\t\t\tthis.values.add(NUMBER);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase '+':\n\t\t\t\t\t\tif (a.is_string || b.is_string) {\n\t\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\t} else if (a.is_number && b.is_number) {\n\t\t\t\t\t\t\tthis.values.add(NUMBER);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\t\tthis.values.add(NUMBER);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'ConditionalExpression': {\n\t\t\t\tconst test = scope.evaluate(expression.test);\n\t\t\t\tconst consequent = scope.evaluate(expression.consequent);\n\t\t\t\tconst alternate = scope.evaluate(expression.alternate);\n\n\t\t\t\tif (test.is_known) {\n\t\t\t\t\tfor (const value of (test.value ? consequent : alternate).values) {\n\t\t\t\t\t\tthis.values.add(value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of consequent.values) {\n\t\t\t\t\t\tthis.values.add(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const value of alternate.values) {\n\t\t\t\t\t\tthis.values.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'LogicalExpression': {\n\t\t\t\tconst a = scope.evaluate(expression.left);\n\t\t\t\tconst b = scope.evaluate(expression.right);\n\n\t\t\t\tif (a.is_known) {\n\t\t\t\t\tif (b.is_known) {\n\t\t\t\t\t\tthis.values.add(logical[expression.operator](a.value, b.value));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(expression.operator === '&&' && !a.value) ||\n\t\t\t\t\t\t(expression.operator === '||' && a.value) ||\n\t\t\t\t\t\t(expression.operator === '??' && a.value != null)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.values.add(a.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const value of b.values) {\n\t\t\t\t\t\t\tthis.values.add(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tfor (const value of a.values) {\n\t\t\t\t\tthis.values.add(value);\n\t\t\t\t}\n\n\t\t\t\tfor (const value of b.values) {\n\t\t\t\t\tthis.values.add(value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'UnaryExpression': {\n\t\t\t\tconst argument = scope.evaluate(expression.argument);\n\n\t\t\t\tif (argument.is_known) {\n\t\t\t\t\tthis.values.add(unary[expression.operator](argument.value));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch (expression.operator) {\n\t\t\t\t\tcase '!':\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\t\tthis.values.add(false);\n\t\t\t\t\t\tthis.values.add(true);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase '+':\n\t\t\t\t\tcase '-':\n\t\t\t\t\tcase '~':\n\t\t\t\t\t\tthis.values.add(NUMBER);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'typeof':\n\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'void':\n\t\t\t\t\t\tthis.values.add(undefined);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'CallExpression': {\n\t\t\t\tconst keypath = get_global_keypath(expression.callee, scope);\n\n\t\t\t\tif (keypath) {\n\t\t\t\t\tif (is_rune(keypath)) {\n\t\t\t\t\t\tconst arg = /** @type {Expression | undefined} */ (expression.arguments[0]);\n\n\t\t\t\t\t\tswitch (keypath) {\n\t\t\t\t\t\t\tcase '$state':\n\t\t\t\t\t\t\tcase '$state.raw':\n\t\t\t\t\t\t\tcase '$derived':\n\t\t\t\t\t\t\t\tif (arg) {\n\t\t\t\t\t\t\t\t\tscope.evaluate(arg, this.values);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.values.add(undefined);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase '$props.id':\n\t\t\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase '$effect.tracking':\n\t\t\t\t\t\t\t\tthis.values.add(false);\n\t\t\t\t\t\t\t\tthis.values.add(true);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase '$derived.by':\n\t\t\t\t\t\t\t\tif (arg?.type === 'ArrowFunctionExpression' && arg.body.type !== 'BlockStatement') {\n\t\t\t\t\t\t\t\t\tscope.evaluate(arg.body, this.values);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.hasOwn(globals, keypath) &&\n\t\t\t\t\t\texpression.arguments.every((arg) => arg.type !== 'SpreadElement')\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst [type, fn] = globals[keypath];\n\t\t\t\t\t\tconst values = expression.arguments.map((arg) => scope.evaluate(arg));\n\n\t\t\t\t\t\tif (fn && values.every((e) => e.is_known)) {\n\t\t\t\t\t\t\tthis.values.add(fn(...values.map((e) => e.value)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.values.add(type);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'TemplateLiteral': {\n\t\t\t\tlet result = expression.quasis[0].value.cooked;\n\n\t\t\t\tfor (let i = 0; i < expression.expressions.length; i += 1) {\n\t\t\t\t\tconst e = scope.evaluate(expression.expressions[i]);\n\n\t\t\t\t\tif (e.is_known) {\n\t\t\t\t\t\tresult += e.value + expression.quasis[i + 1].value.cooked;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.values.add(STRING);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.values.add(result);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'MemberExpression': {\n\t\t\t\tconst keypath = get_global_keypath(expression, scope);\n\n\t\t\t\tif (keypath && Object.hasOwn(global_constants, keypath)) {\n\t\t\t\t\tthis.values.add(global_constants[keypath]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tthis.values.add(UNKNOWN);\n\t\t\t}\n\t\t}\n\n\t\tfor (const value of this.values) {\n\t\t\tthis.value = value; // saves having special logic for `size === 1`\n\n\t\t\tif (value !== STRING && typeof value !== 'string') {\n\t\t\t\tthis.is_string = false;\n\t\t\t}\n\n\t\t\tif (value !== NUMBER && typeof value !== 'number') {\n\t\t\t\tthis.is_number = false;\n\t\t\t}\n\n\t\t\tif (value == null || value === UNKNOWN) {\n\t\t\t\tthis.is_defined = false;\n\t\t\t}\n\t\t}\n\n\t\tif (this.values.size > 1 || typeof this.value === 'symbol') {\n\t\t\tthis.is_known = false;\n\t\t}\n\t}\n}\n\nexport class Scope {\n\t/** @type {ScopeRoot} */\n\troot;\n\n\t/**\n\t * The immediate parent scope\n\t * @type {Scope | null}\n\t */\n\tparent;\n\n\t/**\n\t * Whether or not `var` declarations are contained by this scope\n\t * @type {boolean}\n\t */\n\t#porous;\n\n\t/**\n\t * A map of every identifier declared by this scope, and all the\n\t * identifiers that reference it\n\t * @type {Map<string, Binding>}\n\t */\n\tdeclarations = new Map();\n\n\t/**\n\t * A map of declarators to the bindings they declare\n\t * @type {Map<VariableDeclarator | AST.LetDirective, Binding[]>}\n\t */\n\tdeclarators = new Map();\n\n\t/**\n\t * A set of all the names referenced with this scope\n\t * — useful for generating unique names\n\t * @type {Map<string, { node: Identifier; path: AST.SvelteNode[] }[]>}\n\t */\n\treferences = new Map();\n\n\t/**\n\t * The scope depth allows us to determine if a state variable is referenced in its own scope,\n\t * which is usually an error. Block statements do not increase this value\n\t */\n\tfunction_depth = 0;\n\n\t/**\n\t * If tracing of reactive dependencies is enabled for this scope\n\t * @type {null | Expression}\n\t */\n\ttracing = null;\n\n\t/**\n\t *\n\t * @param {ScopeRoot} root\n\t * @param {Scope | null} parent\n\t * @param {boolean} porous\n\t */\n\tconstructor(root, parent, porous) {\n\t\tthis.root = root;\n\t\tthis.parent = parent;\n\t\tthis.#porous = porous;\n\t\tthis.function_depth = parent ? parent.function_depth + (porous ? 0 : 1) : 0;\n\t}\n\n\t/**\n\t * @param {Identifier} node\n\t * @param {Binding['kind']} kind\n\t * @param {DeclarationKind} declaration_kind\n\t * @param {null | Expression | FunctionDeclaration | ClassDeclaration | ImportDeclaration | AST.EachBlock | AST.SnippetBlock} initial\n\t * @returns {Binding}\n\t */\n\tdeclare(node, kind, declaration_kind, initial = null) {\n\t\tif (this.parent) {\n\t\t\tif (declaration_kind === 'var' && this.#porous) {\n\t\t\t\treturn this.parent.declare(node, kind, declaration_kind);\n\t\t\t}\n\n\t\t\tif (declaration_kind === 'import') {\n\t\t\t\treturn this.parent.declare(node, kind, declaration_kind, initial);\n\t\t\t}\n\t\t}\n\n\t\tif (this.declarations.has(node.name)) {\n\t\t\tconst binding = this.declarations.get(node.name);\n\t\t\tif (binding && binding.declaration_kind !== 'var' && declaration_kind !== 'var') {\n\t\t\t\t// This also errors on function types, but that's arguably a good thing\n\t\t\t\t// declaring function twice is also caught by acorn in the parse phase\n\t\t\t\te.declaration_duplicate(node, node.name);\n\t\t\t}\n\t\t}\n\n\t\tconst binding = new Binding(this, node, kind, declaration_kind, initial);\n\n\t\tvalidate_identifier_name(binding, this.function_depth);\n\n\t\tthis.declarations.set(node.name, binding);\n\t\tthis.root.conflicts.add(node.name);\n\t\treturn binding;\n\t}\n\n\tchild(porous = false) {\n\t\treturn new Scope(this.root, this, porous);\n\t}\n\n\t/**\n\t * @param {string} preferred_name\n\t * @returns {string}\n\t */\n\tgenerate(preferred_name) {\n\t\tif (this.#porous) {\n\t\t\treturn /** @type {Scope} */ (this.parent).generate(preferred_name);\n\t\t}\n\n\t\tpreferred_name = preferred_name.replace(/[^a-zA-Z0-9_$]/g, '_').replace(/^[0-9]/, '_');\n\t\tlet name = preferred_name;\n\t\tlet n = 1;\n\n\t\twhile (\n\t\t\tthis.references.has(name) ||\n\t\t\tthis.declarations.has(name) ||\n\t\t\tthis.root.conflicts.has(name) ||\n\t\t\tis_reserved(name)\n\t\t) {\n\t\t\tname = `${preferred_name}_${n++}`;\n\t\t}\n\n\t\tthis.references.set(name, []);\n\t\tthis.root.conflicts.add(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {Binding | null}\n\t */\n\tget(name) {\n\t\treturn this.declarations.get(name) ?? this.parent?.get(name) ?? null;\n\t}\n\n\t/**\n\t * @param {VariableDeclarator | AST.LetDirective} node\n\t * @returns {Binding[]}\n\t */\n\tget_bindings(node) {\n\t\tconst bindings = this.declarators.get(node);\n\t\tif (!bindings) {\n\t\t\tthrow new Error('No binding found for declarator');\n\t\t}\n\t\treturn bindings;\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {Scope | null}\n\t */\n\towner(name) {\n\t\treturn this.declarations.has(name) ? this : this.parent && this.parent.owner(name);\n\t}\n\n\t/**\n\t * @param {Identifier} node\n\t * @param {AST.SvelteNode[]} path\n\t */\n\treference(node, path) {\n\t\tpath = [...path]; // ensure that mutations to path afterwards don't affect this reference\n\t\tlet references = this.references.get(node.name);\n\n\t\tif (!references) this.references.set(node.name, (references = []));\n\n\t\treferences.push({ node, path });\n\n\t\tconst binding = this.declarations.get(node.name);\n\t\tif (binding) {\n\t\t\tbinding.references.push({ node, path });\n\t\t} else if (this.parent) {\n\t\t\tthis.parent.reference(node, path);\n\t\t} else {\n\t\t\t// no binding was found, and this is the top level scope,\n\t\t\t// which means this is a global\n\t\t\tthis.root.conflicts.add(node.name);\n\t\t}\n\t}\n\n\t/**\n\t * Does partial evaluation to find an exact value or at least the rough type of the expression.\n\t * Only call this once scope has been fully generated in a first pass,\n\t * else this evaluates on incomplete data and may yield wrong results.\n\t * @param {Expression} expression\n\t * @param {Set<any>} [values]\n\t */\n\tevaluate(expression, values = new Set()) {\n\t\treturn new Evaluation(this, expression, values);\n\t}\n}\n\n/** @type {Record<BinaryOperator, (left: any, right: any) => any>} */\nconst binary = {\n\t'!=': (left, right) => left != right,\n\t'!==': (left, right) => left !== right,\n\t'<': (left, right) => left < right,\n\t'<=': (left, right) => left <= right,\n\t'>': (left, right) => left > right,\n\t'>=': (left, right) => left >= right,\n\t'==': (left, right) => left == right,\n\t'===': (left, right) => left === right,\n\tin: (left, right) => left in right,\n\tinstanceof: (left, right) => left instanceof right,\n\t'%': (left, right) => left % right,\n\t'&': (left, right) => left & right,\n\t'*': (left, right) => left * right,\n\t'**': (left, right) => left ** right,\n\t'+': (left, right) => left + right,\n\t'-': (left, right) => left - right,\n\t'/': (left, right) => left / right,\n\t'<<': (left, right) => left << right,\n\t'>>': (left, right) => left >> right,\n\t'>>>': (left, right) => left >>> right,\n\t'^': (left, right) => left ^ right,\n\t'|': (left, right) => left | right\n};\n\n/** @type {Record<UnaryOperator, (argument: any) => any>} */\nconst unary = {\n\t'-': (argument) => -argument,\n\t'+': (argument) => +argument,\n\t'!': (argument) => !argument,\n\t'~': (argument) => ~argument,\n\ttypeof: (argument) => typeof argument,\n\tvoid: () => undefined,\n\tdelete: () => true\n};\n\n/** @type {Record<LogicalOperator, (left: any, right: any) => any>} */\nconst logical = {\n\t'||': (left, right) => left || right,\n\t'&&': (left, right) => left && right,\n\t'??': (left, right) => left ?? right\n};\n\nexport class ScopeRoot {\n\t/** @type {Set<string>} */\n\tconflicts = new Set();\n\n\t/**\n\t * @param {string} preferred_name\n\t */\n\tunique(preferred_name) {\n\t\tpreferred_name = preferred_name.replace(/[^a-zA-Z0-9_$]/g, '_');\n\t\tlet final_name = preferred_name;\n\t\tlet n = 1;\n\n\t\twhile (this.conflicts.has(final_name)) {\n\t\t\tfinal_name = `${preferred_name}_${n++}`;\n\t\t}\n\n\t\tthis.conflicts.add(final_name);\n\t\tconst id = b.id(final_name);\n\t\treturn id;\n\t}\n}\n\n/**\n * @param {AST.SvelteNode} ast\n * @param {ScopeRoot} root\n * @param {boolean} allow_reactive_declarations\n * @param {Scope | null} parent\n */\nexport function create_scopes(ast, root, allow_reactive_declarations, parent) {\n\t/** @typedef {{ scope: Scope }} State */\n\n\t/**\n\t * A map of node->associated scope. A node appearing in this map does not necessarily mean that it created a scope\n\t * @type {Map<AST.SvelteNode, Scope>}\n\t */\n\tconst scopes = new Map();\n\tconst scope = new Scope(root, parent, false);\n\tscopes.set(ast, scope);\n\n\t/** @type {State} */\n\tconst state = { scope };\n\n\t/** @type {[Scope, { node: Identifier; path: AST.SvelteNode[] }][]} */\n\tconst references = [];\n\n\t/** @type {[Scope, Pattern | MemberExpression][]} */\n\tconst updates = [];\n\n\t/**\n\t * An array of reactive declarations, i.e. the `a` in `$: a = b * 2`\n\t * @type {Identifier[]}\n\t */\n\tconst possible_implicit_declarations = [];\n\n\t/**\n\t * @param {Scope} scope\n\t * @param {Pattern[]} params\n\t */\n\tfunction add_params(scope, params) {\n\t\tfor (const param of params) {\n\t\t\tfor (const node of extract_identifiers(param)) {\n\t\t\t\tscope.declare(node, 'normal', param.type === 'RestElement' ? 'rest_param' : 'param');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @type {Visitor<Node, State, AST.SvelteNode>}\n\t */\n\tconst create_block_scope = (node, { state, next }) => {\n\t\tconst scope = state.scope.child(true);\n\t\tscopes.set(node, scope);\n\n\t\tnext({ scope });\n\t};\n\n\t/**\n\t * @type {Visitor<AST.ElementLike, State, AST.SvelteNode>}\n\t */\n\tconst SvelteFragment = (node, { state, next }) => {\n\t\tconst scope = state.scope.child();\n\t\tscopes.set(node, scope);\n\t\tnext({ scope });\n\t};\n\n\t/**\n\t * @type {Visitor<AST.Component | AST.SvelteComponent | AST.SvelteSelf, State, AST.SvelteNode>}\n\t */\n\tconst Component = (node, context) => {\n\t\tnode.metadata.scopes = {\n\t\t\tdefault: context.state.scope.child()\n\t\t};\n\n\t\tif (node.type === 'SvelteComponent') {\n\t\t\tcontext.visit(node.expression);\n\t\t}\n\n\t\tconst default_state = determine_slot(node)\n\t\t\t? context.state\n\t\t\t: { scope: node.metadata.scopes.default };\n\n\t\tfor (const attribute of node.attributes) {\n\t\t\tif (attribute.type === 'LetDirective') {\n\t\t\t\tcontext.visit(attribute, default_state);\n\t\t\t} else {\n\t\t\t\tcontext.visit(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfor (const child of node.fragment.nodes) {\n\t\t\tlet state = default_state;\n\n\t\t\tconst slot_name = determine_slot(child);\n\n\t\t\tif (slot_name !== null) {\n\t\t\t\tnode.metadata.scopes[slot_name] = context.state.scope.child();\n\n\t\t\t\tstate = {\n\t\t\t\t\tscope: node.metadata.scopes[slot_name]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcontext.visit(child, state);\n\t\t}\n\t};\n\n\t/**\n\t * @type {Visitor<AST.AnimateDirective | AST.TransitionDirective | AST.UseDirective, State, AST.SvelteNode>}\n\t */\n\tconst SvelteDirective = (node, { state, path, visit }) => {\n\t\tstate.scope.reference(b.id(node.name.split('.')[0]), path);\n\n\t\tif (node.expression) {\n\t\t\tvisit(node.expression);\n\t\t}\n\t};\n\n\twalk(ast, state, {\n\t\t// references\n\t\tIdentifier(node, { path, state }) {\n\t\t\tconst parent = path.at(-1);\n\t\t\tif (\n\t\t\t\tparent &&\n\t\t\t\tis_reference(node, /** @type {Node} */ (parent)) &&\n\t\t\t\t// TSTypeAnnotation, TSInterfaceDeclaration etc - these are normally already filtered out,\n\t\t\t\t// but for the migration they aren't, so we need to filter them out here\n\t\t\t\t// TODO -> once migration script is gone we can remove this check\n\t\t\t\t!parent.type.startsWith('TS')\n\t\t\t) {\n\t\t\t\treferences.push([state.scope, { node, path: path.slice() }]);\n\t\t\t}\n\t\t},\n\t\tLabeledStatement(node, { path, next }) {\n\t\t\tif (path.length > 1 || !allow_reactive_declarations) return next();\n\t\t\tif (node.label.name !== '$') return next();\n\n\t\t\t// create a scope for the $: block\n\t\t\tconst scope = state.scope.child();\n\t\t\tscopes.set(node, scope);\n\n\t\t\tif (\n\t\t\t\tnode.body.type === 'ExpressionStatement' &&\n\t\t\t\tnode.body.expression.type === 'AssignmentExpression'\n\t\t\t) {\n\t\t\t\tfor (const id of extract_identifiers(node.body.expression.left)) {\n\t\t\t\t\tif (!id.name.startsWith('$')) {\n\t\t\t\t\t\tpossible_implicit_declarations.push(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext({ scope });\n\t\t},\n\n\t\tSvelteFragment,\n\t\tSlotElement: SvelteFragment,\n\t\tSvelteElement: SvelteFragment,\n\t\tRegularElement: SvelteFragment,\n\n\t\tLetDirective(node, context) {\n\t\t\tconst scope = context.state.scope;\n\n\t\t\t/** @type {Binding[]} */\n\t\t\tconst bindings = [];\n\t\t\tscope.declarators.set(node, bindings);\n\n\t\t\tif (node.expression) {\n\t\t\t\tfor (const id of extract_identifiers_from_destructuring(node.expression)) {\n\t\t\t\t\tconst binding = scope.declare(id, 'template', 'const');\n\t\t\t\t\tscope.reference(id, [context.path[context.path.length - 1], node]);\n\t\t\t\t\tbindings.push(binding);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/** @type {Identifier} */\n\t\t\t\tconst id = {\n\t\t\t\t\tname: node.name,\n\t\t\t\t\ttype: 'Identifier',\n\t\t\t\t\tstart: node.start,\n\t\t\t\t\tend: node.end\n\t\t\t\t};\n\t\t\t\tconst binding = scope.declare(id, 'template', 'const');\n\t\t\t\tscope.reference(id, [context.path[context.path.length - 1], node]);\n\t\t\t\tbindings.push(binding);\n\t\t\t}\n\t\t},\n\n\t\tComponent: (node, context) => {\n\t\t\tcontext.state.scope.reference(b.id(node.name), context.path);\n\t\t\tComponent(node, context);\n\t\t},\n\t\tSvelteSelf: Component,\n\t\tSvelteComponent: Component,\n\n\t\t// updates\n\t\tAssignmentExpression(node, { state, next }) {\n\t\t\tupdates.push([state.scope, node.left]);\n\t\t\tnext();\n\t\t},\n\n\t\tUpdateExpression(node, { state, next }) {\n\t\t\tupdates.push([state.scope, /** @type {Identifier | MemberExpression} */ (node.argument)]);\n\t\t\tnext();\n\t\t},\n\n\t\tImportDeclaration(node, { state }) {\n\t\t\tfor (const specifier of node.specifiers) {\n\t\t\t\tstate.scope.declare(specifier.local, 'normal', 'import', node);\n\t\t\t}\n\t\t},\n\n\t\tFunctionExpression(node, { state, next }) {\n\t\t\tconst scope = state.scope.child();\n\t\t\tscopes.set(node, scope);\n\n\t\t\tif (node.id) scope.declare(node.id, 'normal', 'function');\n\n\t\t\tadd_params(scope, node.params);\n\t\t\tnext({ scope });\n\t\t},\n\n\t\tFunctionDeclaration(node, { state, next }) {\n\t\t\tif (node.id) state.scope.declare(node.id, 'normal', 'function', node);\n\n\t\t\tconst scope = state.scope.child();\n\t\t\tscopes.set(node, scope);\n\n\t\t\tadd_params(scope, node.params);\n\t\t\tnext({ scope });\n\t\t},\n\n\t\tArrowFunctionExpression(node, { state, next }) {\n\t\t\tconst scope = state.scope.child();\n\t\t\tscopes.set(node, scope);\n\n\t\t\tadd_params(scope, node.params);\n\t\t\tnext({ scope });\n\t\t},\n\n\t\tForStatement: create_block_scope,\n\t\tForInStatement: create_block_scope,\n\t\tForOfStatement: create_block_scope,\n\t\tSwitchStatement: create_block_scope,\n\t\tBlockStatement(node, context) {\n\t\t\tconst parent = context.path.at(-1);\n\t\t\tif (\n\t\t\t\tparent?.type === 'FunctionDeclaration' ||\n\t\t\t\tparent?.type === 'FunctionExpression' ||\n\t\t\t\tparent?.type === 'ArrowFunctionExpression'\n\t\t\t) {\n\t\t\t\t// We already created a new scope for the function\n\t\t\t\tcontext.next();\n\t\t\t} else {\n\t\t\t\tcreate_block_scope(node, context);\n\t\t\t}\n\t\t},\n\n\t\tClassDeclaration(node, { state, next }) {\n\t\t\tif (node.id) state.scope.declare(node.id, 'normal', 'let', node);\n\t\t\tnext();\n\t\t},\n\n\t\tVariableDeclaration(node, { state, path, next }) {\n\t\t\tconst is_parent_const_tag = path.at(-1)?.type === 'ConstTag';\n\t\t\tfor (const declarator of node.declarations) {\n\t\t\t\t/** @type {Binding[]} */\n\t\t\t\tconst bindings = [];\n\n\t\t\t\tstate.scope.declarators.set(declarator, bindings);\n\n\t\t\t\tfor (const id of extract_identifiers(declarator.id)) {\n\t\t\t\t\tconst binding = state.scope.declare(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tis_parent_const_tag ? 'template' : 'normal',\n\t\t\t\t\t\tnode.kind,\n\t\t\t\t\t\tdeclarator.init\n\t\t\t\t\t);\n\t\t\t\t\tbindings.push(binding);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext();\n\t\t},\n\n\t\tCatchClause(node, { state, next }) {\n\t\t\tif (node.param) {\n\t\t\t\tconst scope = state.scope.child(true);\n\t\t\t\tscopes.set(node, scope);\n\n\t\t\t\tfor (const id of extract_identifiers(node.param)) {\n\t\t\t\t\tscope.declare(id, 'normal', 'let');\n\t\t\t\t}\n\n\t\t\t\tnext({ scope });\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\n\t\tEachBlock(node, { state, visit }) {\n\t\t\tvisit(node.expression);\n\n\t\t\t// context and children are a new scope\n\t\t\tconst scope = state.scope.child();\n\t\t\tscopes.set(node, scope);\n\n\t\t\tif (node.context) {\n\t\t\t\t// declarations\n\t\t\t\tfor (const id of extract_identifiers(node.context)) {\n\t\t\t\t\tconst binding = scope.declare(id, 'each', 'const');\n\n\t\t\t\t\tlet inside_rest = false;\n\t\t\t\t\tlet is_rest_id = false;\n\t\t\t\t\twalk(node.context, null, {\n\t\t\t\t\t\tIdentifier(node) {\n\t\t\t\t\t\t\tif (inside_rest && node === id) {\n\t\t\t\t\t\t\t\tis_rest_id = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tRestElement(_, { next }) {\n\t\t\t\t\t\t\tconst prev = inside_rest;\n\t\t\t\t\t\t\tinside_rest = true;\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\tinside_rest = prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tbinding.metadata = { inside_rest: is_rest_id };\n\t\t\t\t}\n\n\t\t\t\t// Visit to pick up references from default initializers\n\t\t\t\tvisit(node.context, { scope });\n\t\t\t}\n\n\t\t\tif (node.index) {\n\t\t\t\tconst is_keyed =\n\t\t\t\t\tnode.key &&\n\t\t\t\t\t(node.key.type !== 'Identifier' || !node.index || node.key.name !== node.index);\n\t\t\t\tscope.declare(b.id(node.index), is_keyed ? 'template' : 'normal', 'const', node);\n\t\t\t}\n\t\t\tif (node.key) visit(node.key, { scope });\n\n\t\t\t// children\n\t\t\tfor (const child of node.body.nodes) {\n\t\t\t\tvisit(child, { scope });\n\t\t\t}\n\t\t\tif (node.fallback) visit(node.fallback, { scope });\n\n\t\t\tnode.metadata = {\n\t\t\t\texpression: create_expression_metadata(),\n\t\t\t\tkeyed: false,\n\t\t\t\tcontains_group_binding: false,\n\t\t\t\tindex: scope.root.unique('$$index'),\n\t\t\t\tdeclarations: scope.declarations,\n\t\t\t\tis_controlled: false\n\t\t\t};\n\t\t},\n\n\t\tAwaitBlock(node, context) {\n\t\t\tcontext.visit(node.expression);\n\n\t\t\tif (node.pending) {\n\t\t\t\tcontext.visit(node.pending);\n\t\t\t}\n\n\t\t\tif (node.then) {\n\t\t\t\tcontext.visit(node.then);\n\t\t\t\tif (node.value) {\n\t\t\t\t\tconst then_scope = /** @type {Scope} */ (scopes.get(node.then));\n\t\t\t\t\tconst value_scope = context.state.scope.child();\n\t\t\t\t\tscopes.set(node.value, value_scope);\n\t\t\t\t\tcontext.visit(node.value, { scope: value_scope });\n\t\t\t\t\tfor (const id of extract_identifiers(node.value)) {\n\t\t\t\t\t\tthen_scope.declare(id, 'template', 'const');\n\t\t\t\t\t\tvalue_scope.declare(id, 'normal', 'const');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node.catch) {\n\t\t\t\tcontext.visit(node.catch);\n\t\t\t\tif (node.error) {\n\t\t\t\t\tconst catch_scope = /** @type {Scope} */ (scopes.get(node.catch));\n\t\t\t\t\tconst error_scope = context.state.scope.child();\n\t\t\t\t\tscopes.set(node.error, error_scope);\n\t\t\t\t\tcontext.visit(node.error, { scope: error_scope });\n\t\t\t\t\tfor (const id of extract_identifiers(node.error)) {\n\t\t\t\t\t\tcatch_scope.declare(id, 'template', 'const');\n\t\t\t\t\t\terror_scope.declare(id, 'normal', 'const');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tSnippetBlock(node, context) {\n\t\t\tconst state = context.state;\n\t\t\tlet scope = state.scope;\n\n\t\t\tscope.declare(node.expression, 'normal', 'function', node);\n\n\t\t\tconst child_scope = state.scope.child();\n\t\t\tscopes.set(node, child_scope);\n\n\t\t\tfor (const param of node.parameters) {\n\t\t\t\tfor (const id of extract_identifiers(param)) {\n\t\t\t\t\tchild_scope.declare(id, 'snippet', 'let');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.next({ scope: child_scope });\n\t\t},\n\n\t\tFragment: (node, context) => {\n\t\t\tconst scope = context.state.scope.child(node.metadata.transparent);\n\t\t\tscopes.set(node, scope);\n\t\t\tcontext.next({ scope });\n\t\t},\n\n\t\tBindDirective(node, context) {\n\t\t\tupdates.push([\n\t\t\t\tcontext.state.scope,\n\t\t\t\t/** @type {Identifier | MemberExpression} */ (node.expression)\n\t\t\t]);\n\t\t\tcontext.next();\n\t\t},\n\n\t\tTransitionDirective: SvelteDirective,\n\t\tAnimateDirective: SvelteDirective,\n\t\tUseDirective: SvelteDirective,\n\t\t// using it's own function instead of `SvelteDirective` because\n\t\t// StyleDirective doesn't have expressions and are generally already\n\t\t// handled by `Identifier`. This is the special case for the shorthand\n\t\t// eg <button style:height /> where the variable has the same name of\n\t\t// the css property\n\t\tStyleDirective(node, { path, state, next }) {\n\t\t\tif (node.value === true) {\n\t\t\t\tstate.scope.reference(b.id(node.name), path.concat(node));\n\t\t\t}\n\t\t\tnext();\n\t\t}\n\n\t\t// TODO others\n\t});\n\n\tfor (const id of possible_implicit_declarations) {\n\t\tconst binding = scope.get(id.name);\n\t\tif (binding) continue; // TODO can also be legacy_reactive if declared outside of reactive statement\n\n\t\tscope.declare(id, 'legacy_reactive', 'let');\n\t}\n\n\t// we do this after the fact, so that we don't need to worry\n\t// about encountering references before their declarations\n\tfor (const [scope, { node, path }] of references) {\n\t\tscope.reference(node, path);\n\t}\n\n\tfor (const [scope, node] of updates) {\n\t\tfor (const expression of unwrap_pattern(node)) {\n\t\t\tconst left = object(expression);\n\t\t\tconst binding = left && scope.get(left.name);\n\n\t\t\tif (binding !== null && left !== binding.node) {\n\t\t\t\tif (left === expression) {\n\t\t\t\t\tbinding.reassigned = true;\n\t\t\t\t} else {\n\t\t\t\t\tbinding.mutated = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tscope,\n\t\tscopes\n\t};\n}\n\n/**\n * @template {{ scope: Scope, scopes: Map<AST.SvelteNode, Scope> }} State\n * @param {AST.SvelteNode} node\n * @param {Context<AST.SvelteNode, State>} context\n */\nexport function set_scope(node, { next, state }) {\n\tconst scope = state.scopes.get(node);\n\tnext(scope !== undefined && scope !== state.scope ? { ...state, scope } : state);\n}\n\n/**\n * Returns the name of the rune if the given expression is a `CallExpression` using a rune.\n * @param {Node | null | undefined} node\n * @param {Scope} scope\n */\nexport function get_rune(node, scope) {\n\tif (!node) return null;\n\tif (node.type !== 'CallExpression') return null;\n\n\tconst keypath = get_global_keypath(node.callee, scope);\n\n\tif (!keypath || !is_rune(keypath)) return null;\n\treturn keypath;\n}\n\n/**\n * Returns the name of the rune if the given expression is a `CallExpression` using a rune.\n * @param {Expression | Super} node\n * @param {Scope} scope\n */\nfunction get_global_keypath(node, scope) {\n\tlet n = node;\n\n\tlet joined = '';\n\n\twhile (n.type === 'MemberExpression') {\n\t\tif (n.computed) return null;\n\t\tif (n.property.type !== 'Identifier') return null;\n\t\tjoined = '.' + n.property.name + joined;\n\t\tn = n.object;\n\t}\n\n\tif (n.type === 'CallExpression' && n.callee.type === 'Identifier') {\n\t\tjoined = '()' + joined;\n\t\tn = n.callee;\n\t}\n\n\tif (n.type !== 'Identifier') return null;\n\n\tconst binding = scope.get(n.name);\n\tif (binding !== null) return null; // rune name, but references a variable or store\n\n\treturn n.name + joined;\n}\n", "/**\n * @template T\n * @param {Array<[T, T]>} edges\n * @returns {Array<T>|undefined}\n */\nexport default function check_graph_for_cycles(edges) {\n\t/** @type {Map<T, T[]>} */\n\tconst graph = edges.reduce((g, edge) => {\n\t\tconst [u, v] = edge;\n\t\tif (!g.has(u)) g.set(u, []);\n\t\tif (!g.has(v)) g.set(v, []);\n\t\tg.get(u).push(v);\n\t\treturn g;\n\t}, new Map());\n\n\tconst visited = new Set();\n\tconst on_stack = new Set();\n\t/** @type {Array<Array<T>>} */\n\tconst cycles = [];\n\n\t/**\n\t * @param {T} v\n\t */\n\tfunction visit(v) {\n\t\tvisited.add(v);\n\t\ton_stack.add(v);\n\n\t\tgraph.get(v)?.forEach((w) => {\n\t\t\tif (!visited.has(w)) {\n\t\t\t\tvisit(w);\n\t\t\t} else if (on_stack.has(w)) {\n\t\t\t\tcycles.push([...on_stack, w]);\n\t\t\t}\n\t\t});\n\n\t\ton_stack.delete(v);\n\t}\n\n\tgraph.forEach((_, v) => {\n\t\tif (!visited.has(v)) {\n\t\t\tvisit(v);\n\t\t}\n\t});\n\n\treturn cycles[0];\n}\n", "/** @import { AST } from '#compiler' */\nconst regex_css_browser_prefix = /^-((webkit)|(moz)|(o)|(ms))-/;\nexport const regex_css_name_boundary = /^[\\s,;}]$/;\n\n/**\n * @param {string} name\n * @returns {string}\n */\nexport function remove_css_prefix(name) {\n\treturn name.replace(regex_css_browser_prefix, '');\n}\n\n/** @param {AST.CSS.Atrule} node */\nexport const is_keyframes_node = (node) => remove_css_prefix(node.name) === 'keyframes';\n", "/** @import { AST } from '#compiler' */\n/** @import { Node } from 'estree' */\nconst UNKNOWN = {};\n\n/**\n * @param {Node} node\n * @param {boolean} is_class\n * @param {Set<any>} set\n * @param {boolean} is_nested\n */\nfunction gather_possible_values(node, is_class, set, is_nested = false) {\n\tif (set.has(UNKNOWN)) {\n\t\t// no point traversing any further\n\t\treturn;\n\t}\n\n\tif (node.type === 'Literal') {\n\t\tset.add(String(node.value));\n\t} else if (node.type === 'ConditionalExpression') {\n\t\tgather_possible_values(node.consequent, is_class, set, is_nested);\n\t\tgather_possible_values(node.alternate, is_class, set, is_nested);\n\t} else if (node.type === 'LogicalExpression') {\n\t\tif (node.operator === '&&') {\n\t\t\t// && is a special case, because the only way the left\n\t\t\t// hand value can be included is if it's falsy. this is\n\t\t\t// a bit of extra work but it's worth it because\n\t\t\t// `class={[condition && 'blah']}` is common,\n\t\t\t// and we don't want to deopt on `condition`\n\t\t\tconst left = new Set();\n\t\t\tgather_possible_values(node.left, is_class, left, is_nested);\n\n\t\t\tif (left.has(UNKNOWN)) {\n\t\t\t\t// add all non-nullish falsy values, unless this is a `class` attribute that\n\t\t\t\t// will be processed by cslx, in which case falsy values are removed, unless\n\t\t\t\t// they're not inside an array/object (TODO 6.0 remove that last part)\n\t\t\t\tif (!is_class || !is_nested) {\n\t\t\t\t\tset.add('');\n\t\t\t\t\tset.add(false);\n\t\t\t\t\tset.add(NaN);\n\t\t\t\t\tset.add(0); // -0 and 0n are also falsy, but stringify to '0'\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const value of left) {\n\t\t\t\t\tif (!value && value != undefined && (!is_class || !is_nested)) {\n\t\t\t\t\t\tset.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgather_possible_values(node.right, is_class, set, is_nested);\n\t\t} else {\n\t\t\tgather_possible_values(node.left, is_class, set, is_nested);\n\t\t\tgather_possible_values(node.right, is_class, set, is_nested);\n\t\t}\n\t} else if (is_class && node.type === 'ArrayExpression') {\n\t\tfor (const entry of node.elements) {\n\t\t\tif (entry) {\n\t\t\t\tgather_possible_values(entry, is_class, set, true);\n\t\t\t}\n\t\t}\n\t} else if (is_class && node.type === 'ObjectExpression') {\n\t\tfor (const property of node.properties) {\n\t\t\tif (\n\t\t\t\tproperty.type === 'Property' &&\n\t\t\t\t!property.computed &&\n\t\t\t\t(property.key.type === 'Identifier' || property.key.type === 'Literal')\n\t\t\t) {\n\t\t\t\tset.add(\n\t\t\t\t\tproperty.key.type === 'Identifier' ? property.key.name : String(property.key.value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tset.add(UNKNOWN);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tset.add(UNKNOWN);\n\t}\n}\n\n/**\n * @param {AST.Text | AST.ExpressionTag} chunk\n * @param {boolean} is_class\n * @returns {string[] | null}\n */\nexport function get_possible_values(chunk, is_class) {\n\tconst values = new Set();\n\n\tif (chunk.type === 'Text') {\n\t\tvalues.add(chunk.data);\n\t} else {\n\t\tgather_possible_values(chunk.expression, is_class, values);\n\t}\n\n\tif (values.has(UNKNOWN)) return null;\n\treturn [...values].map((value) => String(value));\n}\n\n/**\n * Returns all parent rules; root is last\n * @param {AST.CSS.Rule | null} rule\n */\nexport function get_parent_rules(rule) {\n\tconst rules = [];\n\n\twhile (rule) {\n\t\trules.push(rule);\n\t\trule = rule.metadata.parent_rule;\n\t}\n\n\treturn rules;\n}\n\n/**\n * True if is `:global(...)` or `:global` and no pseudo class that is scoped.\n * @param {AST.CSS.RelativeSelector} relative_selector\n * @returns {relative_selector is AST.CSS.RelativeSelector & { selectors: [AST.CSS.PseudoClassSelector, ...Array<AST.CSS.PseudoClassSelector | AST.CSS.PseudoElementSelector>] }}\n */\nexport function is_global(relative_selector) {\n\tconst first = relative_selector.selectors[0];\n\n\treturn (\n\t\tfirst.type === 'PseudoClassSelector' &&\n\t\tfirst.name === 'global' &&\n\t\t(first.args === null ||\n\t\t\t// Only these two selector types keep the whole selector global, because e.g.\n\t\t\t// :global(button).x means that the selector is still scoped because of the .x\n\t\t\trelative_selector.selectors.every(\n\t\t\t\t(selector) =>\n\t\t\t\t\tis_unscoped_pseudo_class(selector) || selector.type === 'PseudoElementSelector'\n\t\t\t))\n\t);\n}\n\n/**\n * `true` if is a pseudo class that cannot be or is not scoped\n * @param {AST.CSS.SimpleSelector} selector\n */\nexport function is_unscoped_pseudo_class(selector) {\n\treturn (\n\t\tselector.type === 'PseudoClassSelector' &&\n\t\t// These make the selector scoped\n\t\t((selector.name !== 'has' &&\n\t\t\tselector.name !== 'is' &&\n\t\t\tselector.name !== 'where' &&\n\t\t\t// Not is special because we want to scope as specific as possible, but because :not\n\t\t\t// inverses the result, we want to leave the unscoped, too. The exception is more than\n\t\t\t// one selector in the :not (.e.g :not(.x .y)), then .x and .y should be scoped\n\t\t\t(selector.name !== 'not' ||\n\t\t\t\tselector.args === null ||\n\t\t\t\tselector.args.children.every((c) => c.children.length === 1))) ||\n\t\t\t// selectors with has/is/where/not can also be global if all their children are global\n\t\t\tselector.args === null ||\n\t\t\tselector.args.children.every((c) => c.children.every((r) => is_global(r))))\n\t);\n}\n\n/**\n * True if is `:global(...)` or `:global`, irrespective of whether or not there are any pseudo classes that are scoped.\n * Difference to `is_global`: `:global(x):has(y)` is `true` for `is_outer_global` but `false` for `is_global`.\n * @param {AST.CSS.RelativeSelector} relative_selector\n * @returns {relative_selector is AST.CSS.RelativeSelector & { selectors: [AST.CSS.PseudoClassSelector, ...Array<AST.CSS.PseudoClassSelector | AST.CSS.PseudoElementSelector>] }}\n */\nexport function is_outer_global(relative_selector) {\n\tconst first = relative_selector.selectors[0];\n\n\treturn (\n\t\tfirst.type === 'PseudoClassSelector' &&\n\t\tfirst.name === 'global' &&\n\t\t(first.args === null ||\n\t\t\t// Only these two selector types can keep the whole selector global, because e.g.\n\t\t\t// :global(button).x means that the selector is still scoped because of the .x\n\t\t\trelative_selector.selectors.every(\n\t\t\t\t(selector) =>\n\t\t\t\t\tselector.type === 'PseudoClassSelector' || selector.type === 'PseudoElementSelector'\n\t\t\t))\n\t);\n}\n", "/** @import { ComponentAnalysis } from '../../types.js' */\n/** @import { AST } from '#compiler' */\n/** @import { Visitors } from 'zimmerframe' */\nimport { walk } from 'zimmerframe';\nimport * as e from '../../../errors.js';\nimport { is_keyframes_node } from '../../css.js';\nimport { is_global, is_unscoped_pseudo_class } from './utils.js';\n\n/**\n * @typedef {{\n *   keyframes: string[];\n *   rule: AST.CSS.Rule | null;\n *   analysis: ComponentAnalysis;\n * }} CssState\n */\n\n/**\n * @typedef {Visitors<AST.CSS.Node, CssState>} CssVisitors\n */\n\n/**\n * True if is `:global`\n * @param {AST.CSS.SimpleSelector} simple_selector\n */\nfunction is_global_block_selector(simple_selector) {\n\treturn (\n\t\tsimple_selector.type === 'PseudoClassSelector' &&\n\t\tsimple_selector.name === 'global' &&\n\t\tsimple_selector.args === null\n\t);\n}\n\n/**\n * @param {AST.SvelteNode[]} path\n */\nfunction is_unscoped(path) {\n\treturn path\n\t\t.filter((node) => node.type === 'Rule')\n\t\t.every((node) => node.metadata.has_global_selectors);\n}\n\n/**\n *\n * @param {Array<AST.CSS.Node>} path\n */\nfunction is_in_global_block(path) {\n\treturn path.some((node) => node.type === 'Rule' && node.metadata.is_global_block);\n}\n\n/** @type {CssVisitors} */\nconst css_visitors = {\n\tAtrule(node, context) {\n\t\tif (is_keyframes_node(node)) {\n\t\t\tif (!node.prelude.startsWith('-global-') && !is_in_global_block(context.path)) {\n\t\t\t\tcontext.state.keyframes.push(node.prelude);\n\t\t\t} else if (node.prelude.startsWith('-global-')) {\n\t\t\t\t// we don't check if the block.children.length because the keyframe is still added even if empty\n\t\t\t\tcontext.state.analysis.css.has_global ||= is_unscoped(context.path);\n\t\t\t}\n\t\t}\n\n\t\tcontext.next();\n\t},\n\tComplexSelector(node, context) {\n\t\tcontext.next(); // analyse relevant selectors first\n\n\t\t{\n\t\t\tconst global = node.children.find(is_global);\n\n\t\t\tif (global) {\n\t\t\t\tconst is_nested = context.path.at(-2)?.type === 'PseudoClassSelector';\n\t\t\t\tif (is_nested && !global.selectors[0].args) {\n\t\t\t\t\te.css_global_block_invalid_placement(global.selectors[0]);\n\t\t\t\t}\n\n\t\t\t\tconst idx = node.children.indexOf(global);\n\t\t\t\tif (global.selectors[0].args !== null && idx !== 0 && idx !== node.children.length - 1) {\n\t\t\t\t\t// ensure `:global(...)` is not used in the middle of a selector (but multiple `global(...)` in sequence are ok)\n\t\t\t\t\tfor (let i = idx + 1; i < node.children.length; i++) {\n\t\t\t\t\t\tif (!is_global(node.children[i])) {\n\t\t\t\t\t\t\te.css_global_invalid_placement(global.selectors[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ensure `:global(...)` do not lead to invalid css after `:global()` is removed\n\t\tfor (const relative_selector of node.children) {\n\t\t\tfor (let i = 0; i < relative_selector.selectors.length; i++) {\n\t\t\t\tconst selector = relative_selector.selectors[i];\n\n\t\t\t\tif (selector.type === 'PseudoClassSelector' && selector.name === 'global') {\n\t\t\t\t\tconst child = selector.args?.children[0].children[0];\n\t\t\t\t\t// ensure `:global(element)` to be at the first position in a compound selector\n\t\t\t\t\tif (child?.selectors[0].type === 'TypeSelector' && i !== 0) {\n\t\t\t\t\t\te.css_global_invalid_selector_list(selector);\n\t\t\t\t\t}\n\n\t\t\t\t\t// ensure `:global(.class)` is not followed by a type selector, eg: `:global(.class)element`\n\t\t\t\t\tif (relative_selector.selectors[i + 1]?.type === 'TypeSelector') {\n\t\t\t\t\t\te.css_type_selector_invalid_placement(relative_selector.selectors[i + 1]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// ensure `:global(...)`contains a single selector\n\t\t\t\t\t// (standalone :global() with multiple selectors is OK)\n\t\t\t\t\tif (\n\t\t\t\t\t\tselector.args !== null &&\n\t\t\t\t\t\tselector.args.children.length > 1 &&\n\t\t\t\t\t\t(node.children.length > 1 || relative_selector.selectors.length > 1)\n\t\t\t\t\t) {\n\t\t\t\t\t\te.css_global_invalid_selector(selector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnode.metadata.rule = context.state.rule;\n\n\t\tnode.metadata.is_global = node.children.every(\n\t\t\t({ metadata }) => metadata.is_global || metadata.is_global_like\n\t\t);\n\n\t\tnode.metadata.used ||= node.metadata.is_global;\n\n\t\tif (\n\t\t\tnode.metadata.rule?.metadata.parent_rule &&\n\t\t\tnode.children[0]?.selectors[0]?.type === 'NestingSelector'\n\t\t) {\n\t\t\tconst first = node.children[0]?.selectors[1];\n\t\t\tconst no_nesting_scope =\n\t\t\t\tfirst?.type !== 'PseudoClassSelector' || is_unscoped_pseudo_class(first);\n\t\t\tconst parent_is_global = node.metadata.rule.metadata.parent_rule.prelude.children.some(\n\t\t\t\t(child) => child.children.length === 1 && child.children[0].metadata.is_global\n\t\t\t);\n\t\t\t// mark `&:hover` in `:global(.foo) { &:hover { color: green }}` as used\n\t\t\tif (no_nesting_scope && parent_is_global) {\n\t\t\t\tnode.metadata.used = true;\n\t\t\t}\n\t\t}\n\t},\n\tRelativeSelector(node, context) {\n\t\tconst parent = /** @type {AST.CSS.ComplexSelector} */ (context.path.at(-1));\n\n\t\tif (\n\t\t\tnode.combinator != null &&\n\t\t\t!context.state.rule?.metadata.parent_rule &&\n\t\t\tparent.children[0] === node &&\n\t\t\tcontext.path.at(-3)?.type !== 'PseudoClassSelector'\n\t\t) {\n\t\t\te.css_selector_invalid(node.combinator);\n\t\t}\n\n\t\tnode.metadata.is_global = node.selectors.length >= 1 && is_global(node);\n\n\t\tif (\n\t\t\tnode.selectors.length >= 1 &&\n\t\t\tnode.selectors.every(\n\t\t\t\t(selector) =>\n\t\t\t\t\tselector.type === 'PseudoClassSelector' || selector.type === 'PseudoElementSelector'\n\t\t\t)\n\t\t) {\n\t\t\tconst first = node.selectors[0];\n\t\t\tnode.metadata.is_global_like ||=\n\t\t\t\t(first.type === 'PseudoClassSelector' && first.name === 'host') ||\n\t\t\t\t(first.type === 'PseudoElementSelector' &&\n\t\t\t\t\t[\n\t\t\t\t\t\t'view-transition',\n\t\t\t\t\t\t'view-transition-group',\n\t\t\t\t\t\t'view-transition-old',\n\t\t\t\t\t\t'view-transition-new',\n\t\t\t\t\t\t'view-transition-image-pair'\n\t\t\t\t\t].includes(first.name));\n\t\t}\n\n\t\tnode.metadata.is_global_like ||=\n\t\t\tnode.selectors.some(\n\t\t\t\t(child) => child.type === 'PseudoClassSelector' && child.name === 'root'\n\t\t\t) &&\n\t\t\t// :root.y:has(.x) is not a global selector because while .y is unscoped, .x inside `:has(...)` should be scoped\n\t\t\t!node.selectors.some((child) => child.type === 'PseudoClassSelector' && child.name === 'has');\n\n\t\tif (node.metadata.is_global_like || node.metadata.is_global) {\n\t\t\t// So that nested selectors like `:root:not(.x)` are not marked as unused\n\t\t\tfor (const child of node.selectors) {\n\t\t\t\twalk(/** @type {AST.CSS.Node} */ (child), null, {\n\t\t\t\t\tComplexSelector(node, context) {\n\t\t\t\t\t\tnode.metadata.used = true;\n\t\t\t\t\t\tcontext.next();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tcontext.next();\n\t},\n\tRule(node, context) {\n\t\tnode.metadata.parent_rule = context.state.rule;\n\n\t\t// We gotta allow :global x, :global y because CSS preprocessors might generate that from :global { x, y {...} }\n\t\tfor (const complex_selector of node.prelude.children) {\n\t\t\tlet is_global_block = false;\n\n\t\t\tfor (let selector_idx = 0; selector_idx < complex_selector.children.length; selector_idx++) {\n\t\t\t\tconst child = complex_selector.children[selector_idx];\n\t\t\t\tconst idx = child.selectors.findIndex(is_global_block_selector);\n\n\t\t\t\tif (is_global_block) {\n\t\t\t\t\t// All selectors after :global are unscoped\n\t\t\t\t\tchild.metadata.is_global_like = true;\n\t\t\t\t}\n\n\t\t\t\tif (idx === 0) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tchild.selectors.length > 1 &&\n\t\t\t\t\t\tselector_idx === 0 &&\n\t\t\t\t\t\tnode.metadata.parent_rule === null\n\t\t\t\t\t) {\n\t\t\t\t\t\te.css_global_block_invalid_modifier_start(child.selectors[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `child` starts with `:global`\n\t\t\t\t\t\tnode.metadata.is_global_block = is_global_block = true;\n\n\t\t\t\t\t\tfor (let i = 1; i < child.selectors.length; i++) {\n\t\t\t\t\t\t\twalk(/** @type {AST.CSS.Node} */ (child.selectors[i]), null, {\n\t\t\t\t\t\t\t\tComplexSelector(node) {\n\t\t\t\t\t\t\t\t\tnode.metadata.used = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (child.combinator && child.combinator.name !== ' ') {\n\t\t\t\t\t\t\te.css_global_block_invalid_combinator(child, child.combinator.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst declaration = node.block.children.find((child) => child.type === 'Declaration');\n\t\t\t\t\t\tconst is_lone_global =\n\t\t\t\t\t\t\tcomplex_selector.children.length === 1 &&\n\t\t\t\t\t\t\tcomplex_selector.children[0].selectors.length === 1; // just `:global`, not e.g. `:global x`\n\n\t\t\t\t\t\tif (is_lone_global && node.prelude.children.length > 1) {\n\t\t\t\t\t\t\t// `:global, :global x { z { ... } }` would become `x { z { ... } }` which means `z` is always\n\t\t\t\t\t\t\t// constrained by `x`, which is not what the user intended\n\t\t\t\t\t\t\te.css_global_block_invalid_list(node.prelude);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdeclaration &&\n\t\t\t\t\t\t\t// :global { color: red; } is invalid, but foo :global { color: red; } is valid\n\t\t\t\t\t\t\tnode.prelude.children.length === 1 &&\n\t\t\t\t\t\t\tis_lone_global\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\te.css_global_block_invalid_declaration(declaration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (idx !== -1) {\n\t\t\t\t\te.css_global_block_invalid_modifier(child.selectors[idx]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node.metadata.is_global_block && !is_global_block) {\n\t\t\t\te.css_global_block_invalid_list(node.prelude);\n\t\t\t}\n\t\t}\n\n\t\tconst state = { ...context.state, rule: node };\n\n\t\t// visit selector list first, to populate child selector metadata\n\t\tcontext.visit(node.prelude, state);\n\n\t\tfor (const selector of node.prelude.children) {\n\t\t\tnode.metadata.has_global_selectors ||= selector.metadata.is_global;\n\t\t\tnode.metadata.has_local_selectors ||= !selector.metadata.is_global;\n\t\t}\n\n\t\t// if this rule has a ComplexSelector whose RelativeSelector children are all\n\t\t// `:global(...)`, and the rule contains declarations (rather than just\n\t\t// nested rules) then the component as a whole includes global CSS\n\t\tcontext.state.analysis.css.has_global ||=\n\t\t\tnode.metadata.has_global_selectors &&\n\t\t\tnode.block.children.filter((child) => child.type === 'Declaration').length > 0 &&\n\t\t\tis_unscoped(context.path);\n\n\t\t// visit block list, so parent rule metadata is populated\n\t\tcontext.visit(node.block, state);\n\t},\n\tNestingSelector(node, context) {\n\t\tconst rule = /** @type {AST.CSS.Rule} */ (context.state.rule);\n\t\tconst parent_rule = rule.metadata.parent_rule;\n\n\t\tif (!parent_rule) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/CSS/Nesting_selector#using_outside_nested_rule\n\t\t\tconst children = rule.prelude.children;\n\t\t\tconst selectors = children[0].children[0].selectors;\n\t\t\tif (\n\t\t\t\tchildren.length > 1 ||\n\t\t\t\tselectors.length > 1 ||\n\t\t\t\tselectors[0].type !== 'PseudoClassSelector' ||\n\t\t\t\tselectors[0].name !== 'global' ||\n\t\t\t\tselectors[0].args?.children[0]?.children[0].selectors[0] !== node\n\t\t\t) {\n\t\t\t\te.css_nesting_selector_invalid_placement(node);\n\t\t\t}\n\t\t} else if (\n\t\t\t// :global { &.foo { ... } } is invalid\n\t\t\tparent_rule.metadata.is_global_block &&\n\t\t\t!parent_rule.metadata.parent_rule &&\n\t\t\tparent_rule.prelude.children[0].children.length === 1 &&\n\t\t\tparent_rule.prelude.children[0].children[0].selectors.length === 1\n\t\t) {\n\t\t\te.css_global_block_invalid_modifier_start(node);\n\t\t}\n\n\t\tcontext.next();\n\t}\n};\n\n/**\n * @param {AST.CSS.StyleSheet} stylesheet\n * @param {ComponentAnalysis} analysis\n */\nexport function analyze_css(stylesheet, analysis) {\n\t/** @type {CssState} */\n\tconst css_state = {\n\t\tkeyframes: analysis.css.keyframes,\n\t\trule: null,\n\t\tanalysis\n\t};\n\n\twalk(stylesheet, css_state, css_visitors);\n}\n", "/** @import * as Compiler from '#compiler' */\nimport { walk } from 'zimmerframe';\nimport {\n\tget_parent_rules,\n\tget_possible_values,\n\tis_outer_global,\n\tis_unscoped_pseudo_class\n} from './utils.js';\nimport { regex_ends_with_whitespace, regex_starts_with_whitespace } from '../../patterns.js';\nimport { get_attribute_chunks, is_text_attribute } from '../../../utils/ast.js';\n\n/** @typedef {NODE_PROBABLY_EXISTS | NODE_DEFINITELY_EXISTS} NodeExistsValue */\n/** @typedef {FORWARD | BACKWARD} Direction */\n\nconst NODE_PROBABLY_EXISTS = 0;\nconst NODE_DEFINITELY_EXISTS = 1;\nconst FORWARD = 0;\nconst BACKWARD = 1;\n\nconst whitelist_attribute_selector = new Map([\n\t['details', ['open']],\n\t['dialog', ['open']]\n]);\n\n/** @type {Compiler.AST.CSS.Combinator} */\nconst descendant_combinator = {\n\ttype: 'Combinator',\n\tname: ' ',\n\tstart: -1,\n\tend: -1\n};\n\n/** @type {Compiler.AST.CSS.RelativeSelector} */\nconst nesting_selector = {\n\ttype: 'RelativeSelector',\n\tstart: -1,\n\tend: -1,\n\tcombinator: null,\n\tselectors: [\n\t\t{\n\t\t\ttype: 'NestingSelector',\n\t\t\tname: '&',\n\t\t\tstart: -1,\n\t\t\tend: -1\n\t\t}\n\t],\n\tmetadata: {\n\t\tis_global: false,\n\t\tis_global_like: false,\n\t\tscoped: false\n\t}\n};\n\n/** @type {Compiler.AST.CSS.RelativeSelector} */\nconst any_selector = {\n\ttype: 'RelativeSelector',\n\tstart: -1,\n\tend: -1,\n\tcombinator: null,\n\tselectors: [\n\t\t{\n\t\t\ttype: 'TypeSelector',\n\t\t\tname: '*',\n\t\t\tstart: -1,\n\t\t\tend: -1\n\t\t}\n\t],\n\tmetadata: {\n\t\tis_global: false,\n\t\tis_global_like: false,\n\t\tscoped: false\n\t}\n};\n\n/**\n * Snippets encountered already (avoids infinite loops)\n * @type {Set<Compiler.AST.SnippetBlock>}\n */\nconst seen = new Set();\n\n/**\n *\n * @param {Compiler.AST.CSS.StyleSheet} stylesheet\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement} element\n */\nexport function prune(stylesheet, element) {\n\twalk(/** @type {Compiler.AST.CSS.Node} */ (stylesheet), null, {\n\t\tRule(node, context) {\n\t\t\tif (node.metadata.is_global_block) {\n\t\t\t\tcontext.visit(node.prelude);\n\t\t\t} else {\n\t\t\t\tcontext.next();\n\t\t\t}\n\t\t},\n\t\tComplexSelector(node) {\n\t\t\tconst selectors = get_relative_selectors(node);\n\n\t\t\tseen.clear();\n\n\t\t\tif (\n\t\t\t\tapply_selector(\n\t\t\t\t\tselectors,\n\t\t\t\t\t/** @type {Compiler.AST.CSS.Rule} */ (node.metadata.rule),\n\t\t\t\t\telement,\n\t\t\t\t\tBACKWARD\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnode.metadata.used = true;\n\t\t\t}\n\n\t\t\t// note: we don't call context.next() here, we only recurse into\n\t\t\t// selectors that don't belong to rules (i.e. inside `:is(...)` etc)\n\t\t\t// when we encounter them below\n\t\t}\n\t});\n}\n\n/**\n * Retrieves the relative selectors (minus the trailing globals) from a complex selector.\n * Also searches them for any existing `&` selectors and adds one if none are found.\n * This ensures we traverse up to the parent rule when the inner selectors match and we're\n * trying to see if the parent rule also matches.\n * @param {Compiler.AST.CSS.ComplexSelector} node\n */\nfunction get_relative_selectors(node) {\n\tconst selectors = truncate(node);\n\n\tif (node.metadata.rule?.metadata.parent_rule && selectors.length > 0) {\n\t\tlet has_explicit_nesting_selector = false;\n\n\t\t// nesting could be inside pseudo classes like :is, :has or :where\n\t\tfor (let selector of selectors) {\n\t\t\twalk(selector, null, {\n\t\t\t\t// @ts-ignore\n\t\t\t\tNestingSelector() {\n\t\t\t\t\thas_explicit_nesting_selector = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// if we found one we can break from the others\n\t\t\tif (has_explicit_nesting_selector) break;\n\t\t}\n\n\t\tif (!has_explicit_nesting_selector) {\n\t\t\tif (selectors[0].combinator === null) {\n\t\t\t\tselectors[0] = {\n\t\t\t\t\t...selectors[0],\n\t\t\t\t\tcombinator: descendant_combinator\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tselectors.unshift(nesting_selector);\n\t\t}\n\t}\n\n\treturn selectors;\n}\n\n/**\n * Discard trailing `:global(...)` selectors, these are unused for scoping purposes\n * @param {Compiler.AST.CSS.ComplexSelector} node\n */\nfunction truncate(node) {\n\tconst i = node.children.findLastIndex(({ metadata, selectors }) => {\n\t\tconst first = selectors[0];\n\t\treturn (\n\t\t\t// not after a :global selector\n\t\t\t!metadata.is_global_like &&\n\t\t\t!(first.type === 'PseudoClassSelector' && first.name === 'global' && first.args === null) &&\n\t\t\t// not a :global(...) without a :has/is/where(...) modifier that is scoped\n\t\t\t!metadata.is_global\n\t\t);\n\t});\n\n\treturn node.children.slice(0, i + 1).map((child) => {\n\t\t// In case of `:root.y:has(...)`, `y` is unscoped, but everything in `:has(...)` should be scoped (if not global).\n\t\t// To properly accomplish that, we gotta filter out all selector types except `:has`.\n\t\tconst root = child.selectors.find((s) => s.type === 'PseudoClassSelector' && s.name === 'root');\n\t\tif (!root || child.metadata.is_global_like) return child;\n\n\t\treturn {\n\t\t\t...child,\n\t\t\tselectors: child.selectors.filter((s) => s.type === 'PseudoClassSelector' && s.name === 'has')\n\t\t};\n\t});\n}\n\n/**\n * @param {Compiler.AST.CSS.RelativeSelector[]} relative_selectors\n * @param {Compiler.AST.CSS.Rule} rule\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement} element\n * @param {Direction} direction\n * @returns {boolean}\n */\nfunction apply_selector(relative_selectors, rule, element, direction) {\n\tconst rest_selectors = relative_selectors.slice();\n\tconst relative_selector = direction === FORWARD ? rest_selectors.shift() : rest_selectors.pop();\n\n\tconst matched =\n\t\t!!relative_selector &&\n\t\trelative_selector_might_apply_to_node(relative_selector, rule, element, direction) &&\n\t\tapply_combinator(relative_selector, rest_selectors, rule, element, direction);\n\n\tif (matched) {\n\t\tif (!is_outer_global(relative_selector)) {\n\t\t\trelative_selector.metadata.scoped = true;\n\t\t}\n\n\t\telement.metadata.scoped = true;\n\t}\n\n\treturn matched;\n}\n\n/**\n * @param {Compiler.AST.CSS.RelativeSelector} relative_selector\n * @param {Compiler.AST.CSS.RelativeSelector[]} rest_selectors\n * @param {Compiler.AST.CSS.Rule} rule\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.RenderTag | Compiler.AST.Component | Compiler.AST.SvelteComponent | Compiler.AST.SvelteSelf} node\n * @param {Direction} direction\n * @returns {boolean}\n */\nfunction apply_combinator(relative_selector, rest_selectors, rule, node, direction) {\n\tconst combinator =\n\t\tdirection == FORWARD ? rest_selectors[0]?.combinator : relative_selector.combinator;\n\tif (!combinator) return true;\n\n\tswitch (combinator.name) {\n\t\tcase ' ':\n\t\tcase '>': {\n\t\t\tconst is_adjacent = combinator.name === '>';\n\t\t\tconst parents =\n\t\t\t\tdirection === FORWARD\n\t\t\t\t\t? get_descendant_elements(node, is_adjacent)\n\t\t\t\t\t: get_ancestor_elements(node, is_adjacent);\n\t\t\tlet parent_matched = false;\n\n\t\t\tfor (const parent of parents) {\n\t\t\t\tif (apply_selector(rest_selectors, rule, parent, direction)) {\n\t\t\t\t\tparent_matched = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tparent_matched ||\n\t\t\t\t(direction === BACKWARD &&\n\t\t\t\t\t(!is_adjacent || parents.length === 0) &&\n\t\t\t\t\trest_selectors.every((selector) => is_global(selector, rule)))\n\t\t\t);\n\t\t}\n\n\t\tcase '+':\n\t\tcase '~': {\n\t\t\tconst siblings = get_possible_element_siblings(node, direction, combinator.name === '+');\n\n\t\t\tlet sibling_matched = false;\n\n\t\t\tfor (const possible_sibling of siblings.keys()) {\n\t\t\t\tif (\n\t\t\t\t\tpossible_sibling.type === 'RenderTag' ||\n\t\t\t\t\tpossible_sibling.type === 'SlotElement' ||\n\t\t\t\t\tpossible_sibling.type === 'Component'\n\t\t\t\t) {\n\t\t\t\t\t// `{@render foo()}<p>foo</p>` with `:global(.x) + p` is a match\n\t\t\t\t\tif (rest_selectors.length === 1 && rest_selectors[0].metadata.is_global) {\n\t\t\t\t\t\tsibling_matched = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (apply_selector(rest_selectors, rule, possible_sibling, direction)) {\n\t\t\t\t\tsibling_matched = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tsibling_matched ||\n\t\t\t\t(direction === BACKWARD &&\n\t\t\t\t\tget_element_parent(node) === null &&\n\t\t\t\t\trest_selectors.every((selector) => is_global(selector, rule)))\n\t\t\t);\n\t\t}\n\n\t\tdefault:\n\t\t\t// TODO other combinators\n\t\t\treturn true;\n\t}\n}\n\n/**\n * Returns `true` if the relative selector is global, meaning\n * it's a `:global(...)` or unscopeable selector, or\n * is an `:is(...)` or `:where(...)` selector that contains\n * a global selector\n * @param {Compiler.AST.CSS.RelativeSelector} selector\n * @param {Compiler.AST.CSS.Rule} rule\n * @returns {boolean}\n */\nfunction is_global(selector, rule) {\n\tif (selector.metadata.is_global || selector.metadata.is_global_like) {\n\t\treturn true;\n\t}\n\n\tlet explicitly_global = false;\n\n\tfor (const s of selector.selectors) {\n\t\t/** @type {Compiler.AST.CSS.SelectorList | null} */\n\t\tlet selector_list = null;\n\t\tlet can_be_global = false;\n\t\tlet owner = rule;\n\n\t\tif (s.type === 'PseudoClassSelector') {\n\t\t\tif ((s.name === 'is' || s.name === 'where') && s.args) {\n\t\t\t\tselector_list = s.args;\n\t\t\t} else {\n\t\t\t\tcan_be_global = is_unscoped_pseudo_class(s);\n\t\t\t}\n\t\t}\n\n\t\tif (s.type === 'NestingSelector') {\n\t\t\towner = /** @type {Compiler.AST.CSS.Rule} */ (rule.metadata.parent_rule);\n\t\t\tselector_list = owner.prelude;\n\t\t}\n\n\t\tconst has_global_selectors = !!selector_list?.children.some((complex_selector) => {\n\t\t\treturn complex_selector.children.every((relative_selector) =>\n\t\t\t\tis_global(relative_selector, owner)\n\t\t\t);\n\t\t});\n\t\texplicitly_global ||= has_global_selectors;\n\n\t\tif (!has_global_selectors && !can_be_global) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn explicitly_global || selector.selectors.length === 0;\n}\n\nconst regex_backslash_and_following_character = /\\\\(.)/g;\n\n/**\n * Ensure that `element` satisfies each simple selector in `relative_selector`\n *\n * @param {Compiler.AST.CSS.RelativeSelector} relative_selector\n * @param {Compiler.AST.CSS.Rule} rule\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement} element\n * @param {Direction} direction\n * @returns {boolean}\n */\nfunction relative_selector_might_apply_to_node(relative_selector, rule, element, direction) {\n\t// Sort :has(...) selectors in one bucket and everything else into another\n\tconst has_selectors = [];\n\tconst other_selectors = [];\n\n\tfor (const selector of relative_selector.selectors) {\n\t\tif (selector.type === 'PseudoClassSelector' && selector.name === 'has' && selector.args) {\n\t\t\thas_selectors.push(selector);\n\t\t} else {\n\t\t\tother_selectors.push(selector);\n\t\t}\n\t}\n\n\t// If we're called recursively from a :has(...) selector, we're on the way of checking if the other selectors match.\n\t// In that case ignore this check (because we just came from this) to avoid an infinite loop.\n\tif (has_selectors.length > 0) {\n\t\t// If this is a :has inside a global selector, we gotta include the element itself, too,\n\t\t// because the global selector might be for an element that's outside the component,\n\t\t// e.g. :root:has(.scoped), :global(.foo):has(.scoped), or :root { &:has(.scoped) {} }\n\t\tconst rules = get_parent_rules(rule);\n\t\tconst include_self =\n\t\t\trules.some((r) => r.prelude.children.some((c) => c.children.some((s) => is_global(s, r)))) ||\n\t\t\trules[rules.length - 1].prelude.children.some((c) =>\n\t\t\t\tc.children.some((r) =>\n\t\t\t\t\tr.selectors.some(\n\t\t\t\t\t\t(s) =>\n\t\t\t\t\t\t\ts.type === 'PseudoClassSelector' &&\n\t\t\t\t\t\t\t(s.name === 'root' || (s.name === 'global' && s.args))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t// :has(...) is special in that it means \"look downwards in the CSS tree\". Since our matching algorithm goes\n\t\t// upwards and back-to-front, we need to first check the selectors inside :has(...), then check the rest of the\n\t\t// selector in a way that is similar to ancestor matching. In a sense, we're treating `.x:has(.y)` as `.x .y`.\n\t\tfor (const has_selector of has_selectors) {\n\t\t\tconst complex_selectors = /** @type {Compiler.AST.CSS.SelectorList} */ (has_selector.args)\n\t\t\t\t.children;\n\t\t\tlet matched = false;\n\n\t\t\tfor (const complex_selector of complex_selectors) {\n\t\t\t\tconst [first, ...rest] = truncate(complex_selector);\n\t\t\t\t// if it was just a :global(...)\n\t\t\t\tif (!first) {\n\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\tmatched = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (include_self) {\n\t\t\t\t\tconst selector_including_self = [\n\t\t\t\t\t\tfirst.combinator ? { ...first, combinator: null } : first,\n\t\t\t\t\t\t...rest\n\t\t\t\t\t];\n\t\t\t\t\tif (apply_selector(selector_including_self, rule, element, FORWARD)) {\n\t\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst selector_excluding_self = [\n\t\t\t\t\tany_selector,\n\t\t\t\t\tfirst.combinator ? first : { ...first, combinator: descendant_combinator },\n\t\t\t\t\t...rest\n\t\t\t\t];\n\t\t\t\tif (apply_selector(selector_excluding_self, rule, element, FORWARD)) {\n\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\tmatched = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!matched) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const selector of other_selectors) {\n\t\tif (selector.type === 'Percentage' || selector.type === 'Nth') continue;\n\n\t\tconst name = selector.name.replace(regex_backslash_and_following_character, '$1');\n\n\t\tswitch (selector.type) {\n\t\t\tcase 'PseudoClassSelector': {\n\t\t\t\tif (name === 'host' || name === 'root') return false;\n\n\t\t\t\tif (\n\t\t\t\t\tname === 'global' &&\n\t\t\t\t\tselector.args !== null &&\n\t\t\t\t\trelative_selector.selectors.length === 1\n\t\t\t\t) {\n\t\t\t\t\tconst args = selector.args;\n\t\t\t\t\tconst complex_selector = args.children[0];\n\t\t\t\t\treturn apply_selector(complex_selector.children, rule, element, BACKWARD);\n\t\t\t\t}\n\n\t\t\t\t// We came across a :global, everything beyond it is global and therefore a potential match\n\t\t\t\tif (name === 'global' && selector.args === null) return true;\n\n\t\t\t\t// :not(...) contents should stay unscoped. Scoping them would achieve the opposite of what we want,\n\t\t\t\t// because they are then _more_ likely to bleed out of the component. The exception is complex selectors\n\t\t\t\t// with descendants, in which case we scope them all.\n\t\t\t\tif (name === 'not' && selector.args) {\n\t\t\t\t\tfor (const complex_selector of selector.args.children) {\n\t\t\t\t\t\twalk(complex_selector, null, {\n\t\t\t\t\t\t\tComplexSelector(node, context) {\n\t\t\t\t\t\t\t\tnode.metadata.used = true;\n\t\t\t\t\t\t\t\tcontext.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst relative = truncate(complex_selector);\n\n\t\t\t\t\t\tif (complex_selector.children.length > 1) {\n\t\t\t\t\t\t\t// foo:not(bar foo) means that bar is an ancestor of foo (side note: ending with foo is the only way the selector make sense).\n\t\t\t\t\t\t\t// We can't fully check if that actually matches with our current algorithm, so we just assume it does.\n\t\t\t\t\t\t\t// The result may not match a real element, so the only drawback is the missing prune.\n\t\t\t\t\t\t\tfor (const selector of relative) {\n\t\t\t\t\t\t\t\tselector.metadata.scoped = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/** @type {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | null} */\n\t\t\t\t\t\t\tlet el = element;\n\t\t\t\t\t\t\twhile (el) {\n\t\t\t\t\t\t\t\tel.metadata.scoped = true;\n\t\t\t\t\t\t\t\tel = get_element_parent(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ((name === 'is' || name === 'where') && selector.args) {\n\t\t\t\t\tlet matched = false;\n\n\t\t\t\t\tfor (const complex_selector of selector.args.children) {\n\t\t\t\t\t\tconst relative = truncate(complex_selector);\n\t\t\t\t\t\tconst is_global = relative.length === 0;\n\n\t\t\t\t\t\tif (is_global) {\n\t\t\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\t} else if (apply_selector(relative, rule, element, BACKWARD)) {\n\t\t\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\t} else if (complex_selector.children.length > 1 && (name == 'is' || name == 'where')) {\n\t\t\t\t\t\t\t// foo :is(bar baz) can also mean that bar is an ancestor of foo, and baz a descendant.\n\t\t\t\t\t\t\t// We can't fully check if that actually matches with our current algorithm, so we just assume it does.\n\t\t\t\t\t\t\t// The result may not match a real element, so the only drawback is the missing prune.\n\t\t\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\t\tfor (const selector of relative) {\n\t\t\t\t\t\t\t\tselector.metadata.scoped = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!matched) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'PseudoElementSelector': {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'AttributeSelector': {\n\t\t\t\tconst whitelisted = whitelist_attribute_selector.get(element.name.toLowerCase());\n\t\t\t\tif (\n\t\t\t\t\t!whitelisted?.includes(selector.name.toLowerCase()) &&\n\t\t\t\t\t!attribute_matches(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tselector.name,\n\t\t\t\t\t\tselector.value && unquote(selector.value),\n\t\t\t\t\t\tselector.matcher,\n\t\t\t\t\t\tselector.flags?.includes('i') ?? false\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'ClassSelector': {\n\t\t\t\tif (\n\t\t\t\t\t!attribute_matches(element, 'class', name, '~=', false) &&\n\t\t\t\t\t!element.attributes.some(\n\t\t\t\t\t\t(attribute) => attribute.type === 'ClassDirective' && attribute.name === name\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'IdSelector': {\n\t\t\t\tif (!attribute_matches(element, 'id', name, '=', false)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'TypeSelector': {\n\t\t\t\tif (\n\t\t\t\t\telement.name.toLowerCase() !== name.toLowerCase() &&\n\t\t\t\t\tname !== '*' &&\n\t\t\t\t\telement.type !== 'SvelteElement'\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'NestingSelector': {\n\t\t\t\tlet matched = false;\n\n\t\t\t\tconst parent = /** @type {Compiler.AST.CSS.Rule} */ (rule.metadata.parent_rule);\n\n\t\t\t\tfor (const complex_selector of parent.prelude.children) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tapply_selector(get_relative_selectors(complex_selector), parent, element, direction) ||\n\t\t\t\t\t\tcomplex_selector.children.every((s) => is_global(s, parent))\n\t\t\t\t\t) {\n\t\t\t\t\t\tcomplex_selector.metadata.used = true;\n\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!matched) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// possible match\n\treturn true;\n}\n\n/**\n * @param {any} operator\n * @param {any} expected_value\n * @param {any} case_insensitive\n * @param {any} value\n */\nfunction test_attribute(operator, expected_value, case_insensitive, value) {\n\tif (case_insensitive) {\n\t\texpected_value = expected_value.toLowerCase();\n\t\tvalue = value.toLowerCase();\n\t}\n\tswitch (operator) {\n\t\tcase '=':\n\t\t\treturn value === expected_value;\n\t\tcase '~=':\n\t\t\treturn value.split(/\\s/).includes(expected_value);\n\t\tcase '|=':\n\t\t\treturn `${value}-`.startsWith(`${expected_value}-`);\n\t\tcase '^=':\n\t\t\treturn value.startsWith(expected_value);\n\t\tcase '$=':\n\t\t\treturn value.endsWith(expected_value);\n\t\tcase '*=':\n\t\t\treturn value.includes(expected_value);\n\t\tdefault:\n\t\t\tthrow new Error(\"this shouldn't happen\");\n\t}\n}\n\n/**\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement} node\n * @param {string} name\n * @param {string | null} expected_value\n * @param {string | null} operator\n * @param {boolean} case_insensitive\n */\nfunction attribute_matches(node, name, expected_value, operator, case_insensitive) {\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'SpreadAttribute') return true;\n\t\tif (attribute.type === 'BindDirective' && attribute.name === name) return true;\n\n\t\tif (attribute.type !== 'Attribute') continue;\n\t\tif (attribute.name.toLowerCase() !== name.toLowerCase()) continue;\n\n\t\tif (attribute.value === true) return operator === null;\n\t\tif (expected_value === null) return true;\n\n\t\tif (is_text_attribute(attribute)) {\n\t\t\treturn test_attribute(operator, expected_value, case_insensitive, attribute.value[0].data);\n\t\t}\n\n\t\tconst chunks = get_attribute_chunks(attribute.value);\n\t\tconst possible_values = new Set();\n\n\t\t/** @type {string[]} */\n\t\tlet prev_values = [];\n\t\tfor (const chunk of chunks) {\n\t\t\tconst current_possible_values = get_possible_values(chunk, name === 'class');\n\n\t\t\t// impossible to find out all combinations\n\t\t\tif (!current_possible_values) return true;\n\n\t\t\tif (prev_values.length > 0) {\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tconst start_with_space = [];\n\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tconst remaining = [];\n\n\t\t\t\tcurrent_possible_values.forEach((current_possible_value) => {\n\t\t\t\t\tif (regex_starts_with_whitespace.test(current_possible_value)) {\n\t\t\t\t\t\tstart_with_space.push(current_possible_value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremaining.push(current_possible_value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (remaining.length > 0) {\n\t\t\t\t\tif (start_with_space.length > 0) {\n\t\t\t\t\t\tprev_values.forEach((prev_value) => possible_values.add(prev_value));\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {string[]} */\n\t\t\t\t\tconst combined = [];\n\n\t\t\t\t\tprev_values.forEach((prev_value) => {\n\t\t\t\t\t\tremaining.forEach((value) => {\n\t\t\t\t\t\t\tcombined.push(prev_value + value);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tprev_values = combined;\n\t\t\t\t\tstart_with_space.forEach((value) => {\n\t\t\t\t\t\tif (regex_ends_with_whitespace.test(value)) {\n\t\t\t\t\t\t\tpossible_values.add(value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprev_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tprev_values.forEach((prev_value) => possible_values.add(prev_value));\n\t\t\t\t\tprev_values = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrent_possible_values.forEach((current_possible_value) => {\n\t\t\t\tif (regex_ends_with_whitespace.test(current_possible_value)) {\n\t\t\t\t\tpossible_values.add(current_possible_value);\n\t\t\t\t} else {\n\t\t\t\t\tprev_values.push(current_possible_value);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (prev_values.length < current_possible_values.length) {\n\t\t\t\tprev_values.push(' ');\n\t\t\t}\n\t\t\tif (prev_values.length > 20) {\n\t\t\t\t// might grow exponentially, bail out\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tprev_values.forEach((prev_value) => possible_values.add(prev_value));\n\n\t\tfor (const value of possible_values) {\n\t\t\tif (test_attribute(operator, expected_value, case_insensitive, value)) return true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/** @param {string} str */\nfunction unquote(str) {\n\tif ((str[0] === str[str.length - 1] && str[0] === \"'\") || str[0] === '\"') {\n\t\treturn str.slice(1, str.length - 1);\n\t}\n\treturn str;\n}\n\n/**\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.RenderTag | Compiler.AST.Component | Compiler.AST.SvelteComponent | Compiler.AST.SvelteSelf} node\n * @param {boolean} adjacent_only\n * @param {Set<Compiler.AST.SnippetBlock>} seen\n */\nfunction get_ancestor_elements(node, adjacent_only, seen = new Set()) {\n\t/** @type {Array<Compiler.AST.RegularElement | Compiler.AST.SvelteElement>} */\n\tconst ancestors = [];\n\n\tconst path = node.metadata.path;\n\tlet i = path.length;\n\n\twhile (i--) {\n\t\tconst parent = path[i];\n\n\t\tif (parent.type === 'SnippetBlock') {\n\t\t\tif (!seen.has(parent)) {\n\t\t\t\tseen.add(parent);\n\n\t\t\t\tfor (const site of parent.metadata.sites) {\n\t\t\t\t\tancestors.push(...get_ancestor_elements(site, adjacent_only, seen));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tif (parent.type === 'RegularElement' || parent.type === 'SvelteElement') {\n\t\t\tancestors.push(parent);\n\t\t\tif (adjacent_only) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ancestors;\n}\n\n/**\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.RenderTag | Compiler.AST.Component | Compiler.AST.SvelteComponent | Compiler.AST.SvelteSelf} node\n * @param {boolean} adjacent_only\n * @param {Set<Compiler.AST.SnippetBlock>} seen\n */\nfunction get_descendant_elements(node, adjacent_only, seen = new Set()) {\n\t/** @type {Array<Compiler.AST.RegularElement | Compiler.AST.SvelteElement>} */\n\tconst descendants = [];\n\n\t/**\n\t * @param {Compiler.AST.SvelteNode} node\n\t */\n\tfunction walk_children(node) {\n\t\twalk(node, null, {\n\t\t\t_(node, context) {\n\t\t\t\tif (node.type === 'RegularElement' || node.type === 'SvelteElement') {\n\t\t\t\t\tdescendants.push(node);\n\n\t\t\t\t\tif (!adjacent_only) {\n\t\t\t\t\t\tcontext.next();\n\t\t\t\t\t}\n\t\t\t\t} else if (node.type === 'RenderTag') {\n\t\t\t\t\tfor (const snippet of node.metadata.snippets) {\n\t\t\t\t\t\tif (seen.has(snippet)) continue;\n\n\t\t\t\t\t\tseen.add(snippet);\n\t\t\t\t\t\twalk_children(snippet.body);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.next();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twalk_children(node.type === 'RenderTag' ? node : node.fragment);\n\n\treturn descendants;\n}\n\n/**\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.RenderTag | Compiler.AST.Component | Compiler.AST.SvelteComponent | Compiler.AST.SvelteSelf} node\n * @returns {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | null}\n */\nfunction get_element_parent(node) {\n\tlet path = node.metadata.path;\n\tlet i = path.length;\n\n\twhile (i--) {\n\t\tconst parent = path[i];\n\n\t\tif (parent.type === 'RegularElement' || parent.type === 'SvelteElement') {\n\t\t\treturn parent;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * @param {Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.RenderTag | Compiler.AST.Component | Compiler.AST.SvelteComponent | Compiler.AST.SvelteSelf} node\n * @param {Direction} direction\n * @param {boolean} adjacent_only\n * @param {Set<Compiler.AST.SnippetBlock>} seen\n * @returns {Map<Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.SlotElement | Compiler.AST.RenderTag | Compiler.AST.Component, NodeExistsValue>}\n */\nfunction get_possible_element_siblings(node, direction, adjacent_only, seen = new Set()) {\n\t/** @type {Map<Compiler.AST.RegularElement | Compiler.AST.SvelteElement | Compiler.AST.SlotElement | Compiler.AST.RenderTag | Compiler.AST.Component, NodeExistsValue>} */\n\tconst result = new Map();\n\tconst path = node.metadata.path;\n\n\t/** @type {Compiler.AST.SvelteNode} */\n\tlet current = node;\n\n\tlet i = path.length;\n\n\twhile (i--) {\n\t\tconst fragment = /** @type {Compiler.AST.Fragment} */ (path[i--]);\n\t\tlet j = fragment.nodes.indexOf(current) + (direction === FORWARD ? 1 : -1);\n\n\t\twhile (j >= 0 && j < fragment.nodes.length) {\n\t\t\tconst node = fragment.nodes[j];\n\n\t\t\tif (node.type === 'RegularElement') {\n\t\t\t\tconst has_slot_attribute = node.attributes.some(\n\t\t\t\t\t(attr) => attr.type === 'Attribute' && attr.name.toLowerCase() === 'slot'\n\t\t\t\t);\n\n\t\t\t\tif (!has_slot_attribute) {\n\t\t\t\t\tresult.set(node, NODE_DEFINITELY_EXISTS);\n\n\t\t\t\t\tif (adjacent_only) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Special case: slots, render tags and svelte:element tags could resolve to no siblings,\n\t\t\t\t// so we want to continue until we find a definite sibling even with the adjacent-only combinator\n\t\t\t} else if (is_block(node) || node.type === 'Component') {\n\t\t\t\tif (node.type === 'SlotElement' || node.type === 'Component') {\n\t\t\t\t\tresult.set(node, NODE_PROBABLY_EXISTS);\n\t\t\t\t}\n\n\t\t\t\tconst possible_last_child = get_possible_nested_siblings(node, direction, adjacent_only);\n\t\t\t\tadd_to_map(possible_last_child, result);\n\t\t\t\tif (\n\t\t\t\t\tadjacent_only &&\n\t\t\t\t\tnode.type !== 'Component' &&\n\t\t\t\t\thas_definite_elements(possible_last_child)\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t} else if (node.type === 'SvelteElement') {\n\t\t\t\tresult.set(node, NODE_PROBABLY_EXISTS);\n\t\t\t} else if (node.type === 'RenderTag') {\n\t\t\t\tresult.set(node, NODE_PROBABLY_EXISTS);\n\t\t\t\tfor (const snippet of node.metadata.snippets) {\n\t\t\t\t\tadd_to_map(get_possible_nested_siblings(snippet, direction, adjacent_only), result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tj = direction === FORWARD ? j + 1 : j - 1;\n\t\t}\n\n\t\tcurrent = path[i];\n\n\t\tif (!current) break;\n\n\t\tif (\n\t\t\tcurrent.type === 'Component' ||\n\t\t\tcurrent.type === 'SvelteComponent' ||\n\t\t\tcurrent.type === 'SvelteSelf'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (current.type === 'SnippetBlock') {\n\t\t\tif (seen.has(current)) break;\n\t\t\tseen.add(current);\n\n\t\t\tfor (const site of current.metadata.sites) {\n\t\t\t\tconst siblings = get_possible_element_siblings(site, direction, adjacent_only, seen);\n\t\t\t\tadd_to_map(siblings, result);\n\n\t\t\t\tif (adjacent_only && current.metadata.sites.size === 1 && has_definite_elements(siblings)) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_block(current)) break;\n\n\t\tif (current.type === 'EachBlock' && fragment === current.body) {\n\t\t\t// `{#each ...}<a /><b />{/each}` — `<b>` can be previous sibling of `<a />`\n\t\t\tadd_to_map(get_possible_nested_siblings(current, direction, adjacent_only), result);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Compiler.AST.EachBlock | Compiler.AST.IfBlock | Compiler.AST.AwaitBlock | Compiler.AST.KeyBlock | Compiler.AST.SlotElement | Compiler.AST.SnippetBlock | Compiler.AST.Component} node\n * @param {Direction} direction\n * @param {boolean} adjacent_only\n * @param {Set<Compiler.AST.SnippetBlock>} seen\n * @returns {Map<Compiler.AST.RegularElement | Compiler.AST.SvelteElement, NodeExistsValue>}\n */\nfunction get_possible_nested_siblings(node, direction, adjacent_only, seen = new Set()) {\n\t/** @type {Array<Compiler.AST.Fragment | undefined | null>} */\n\tlet fragments = [];\n\n\tswitch (node.type) {\n\t\tcase 'EachBlock':\n\t\t\tfragments.push(node.body, node.fallback);\n\t\t\tbreak;\n\n\t\tcase 'IfBlock':\n\t\t\tfragments.push(node.consequent, node.alternate);\n\t\t\tbreak;\n\n\t\tcase 'AwaitBlock':\n\t\t\tfragments.push(node.pending, node.then, node.catch);\n\t\t\tbreak;\n\n\t\tcase 'KeyBlock':\n\t\tcase 'SlotElement':\n\t\t\tfragments.push(node.fragment);\n\t\t\tbreak;\n\n\t\tcase 'SnippetBlock':\n\t\t\tif (seen.has(node)) {\n\t\t\t\treturn new Map();\n\t\t\t}\n\t\t\tseen.add(node);\n\t\t\tfragments.push(node.body);\n\t\t\tbreak;\n\n\t\tcase 'Component':\n\t\t\tfragments.push(node.fragment, ...[...node.metadata.snippets].map((s) => s.body));\n\t\t\tbreak;\n\t}\n\n\t/** @type {Map<Compiler.AST.RegularElement | Compiler.AST.SvelteElement, NodeExistsValue>} NodeMap */\n\tconst result = new Map();\n\n\tlet exhaustive = node.type !== 'SlotElement' && node.type !== 'SnippetBlock';\n\n\tfor (const fragment of fragments) {\n\t\tif (fragment == null) {\n\t\t\texhaustive = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst map = loop_child(fragment.nodes, direction, adjacent_only, seen);\n\t\texhaustive &&= has_definite_elements(map);\n\n\t\tadd_to_map(map, result);\n\t}\n\n\tif (!exhaustive) {\n\t\tfor (const key of result.keys()) {\n\t\t\tresult.set(key, NODE_PROBABLY_EXISTS);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Map<unknown, NodeExistsValue>} result\n * @returns {boolean}\n */\nfunction has_definite_elements(result) {\n\tif (result.size === 0) return false;\n\tfor (const exist of result.values()) {\n\t\tif (exist === NODE_DEFINITELY_EXISTS) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * @template T2\n * @template {T2} T1\n * @param {Map<T1, NodeExistsValue>} from\n * @param {Map<T2, NodeExistsValue>} to\n * @returns {void}\n */\nfunction add_to_map(from, to) {\n\tfrom.forEach((exist, element) => {\n\t\tto.set(element, higher_existence(exist, to.get(element)));\n\t});\n}\n\n/**\n * @param {NodeExistsValue} exist1\n * @param {NodeExistsValue | undefined} exist2\n * @returns {NodeExistsValue}\n */\nfunction higher_existence(exist1, exist2) {\n\tif (exist2 === undefined) return exist1;\n\treturn exist1 > exist2 ? exist1 : exist2;\n}\n\n/**\n * @param {Compiler.AST.SvelteNode[]} children\n * @param {Direction} direction\n * @param {boolean} adjacent_only\n * @param {Set<Compiler.AST.SnippetBlock>} seen\n */\nfunction loop_child(children, direction, adjacent_only, seen) {\n\t/** @type {Map<Compiler.AST.RegularElement | Compiler.AST.SvelteElement, NodeExistsValue>} */\n\tconst result = new Map();\n\n\tlet i = direction === FORWARD ? 0 : children.length - 1;\n\n\twhile (i >= 0 && i < children.length) {\n\t\tconst child = children[i];\n\n\t\tif (child.type === 'RegularElement') {\n\t\t\tresult.set(child, NODE_DEFINITELY_EXISTS);\n\t\t\tif (adjacent_only) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (child.type === 'SvelteElement') {\n\t\t\tresult.set(child, NODE_PROBABLY_EXISTS);\n\t\t} else if (child.type === 'RenderTag') {\n\t\t\tfor (const snippet of child.metadata.snippets) {\n\t\t\t\tadd_to_map(get_possible_nested_siblings(snippet, direction, adjacent_only, seen), result);\n\t\t\t}\n\t\t} else if (is_block(child)) {\n\t\t\tconst child_result = get_possible_nested_siblings(child, direction, adjacent_only, seen);\n\t\t\tadd_to_map(child_result, result);\n\t\t\tif (adjacent_only && has_definite_elements(child_result)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ti = direction === FORWARD ? i + 1 : i - 1;\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Compiler.AST.SvelteNode} node\n * @returns {node is Compiler.AST.IfBlock | Compiler.AST.EachBlock | Compiler.AST.AwaitBlock | Compiler.AST.KeyBlock | Compiler.AST.SlotElement}\n */\nfunction is_block(node) {\n\treturn (\n\t\tnode.type === 'IfBlock' ||\n\t\tnode.type === 'EachBlock' ||\n\t\tnode.type === 'AwaitBlock' ||\n\t\tnode.type === 'KeyBlock' ||\n\t\tnode.type === 'SlotElement'\n\t);\n}\n", "/** @import { Visitors } from 'zimmerframe' */\n/** @import { AST } from '#compiler' */\nimport { walk } from 'zimmerframe';\nimport * as w from '../../../warnings.js';\nimport { is_keyframes_node } from '../../css.js';\n\n/**\n * @param {AST.CSS.StyleSheet} stylesheet\n */\nexport function warn_unused(stylesheet) {\n\twalk(stylesheet, { stylesheet }, visitors);\n}\n\n/** @type {Visitors<AST.CSS.Node, { stylesheet: AST.CSS.StyleSheet }>} */\nconst visitors = {\n\tAtrule(node, context) {\n\t\tif (!is_keyframes_node(node)) {\n\t\t\tcontext.next();\n\t\t}\n\t},\n\tPseudoClassSelector(node, context) {\n\t\tif (node.name === 'is' || node.name === 'where') {\n\t\t\tcontext.next();\n\t\t}\n\t},\n\tComplexSelector(node, context) {\n\t\tif (\n\t\t\t!node.metadata.used &&\n\t\t\t// prevent double-marking of `.unused:is(.unused)`\n\t\t\t(context.path.at(-2)?.type !== 'PseudoClassSelector' ||\n\t\t\t\t/** @type {AST.CSS.ComplexSelector} */ (context.path.at(-4))?.metadata.used)\n\t\t) {\n\t\t\tconst content = context.state.stylesheet.content;\n\t\t\tconst text = content.styles.substring(node.start - content.start, node.end - content.start);\n\t\t\tw.css_unused_selector(node, text);\n\t\t}\n\n\t\tcontext.next();\n\t},\n\tRule(node, context) {\n\t\tif (node.metadata.is_global_block) {\n\t\t\tcontext.visit(node.prelude);\n\t\t} else {\n\t\t\tcontext.next();\n\t\t}\n\t}\n};\n", "/** @import { ArrowFunctionExpression, FunctionDeclaration, FunctionExpression } from 'estree' */\n/** @import { Context } from '../../types' */\n\n/**\n * @param {ArrowFunctionExpression | FunctionExpression | FunctionDeclaration} node\n * @param {Context} context\n */\nexport function visit_function(node, context) {\n\t// TODO retire this in favour of a more general solution based on bindings\n\tnode.metadata = {\n\t\thoisted: false,\n\t\thoisted_params: [],\n\t\tscope: context.state.scope\n\t};\n\n\tcontext.next({\n\t\t...context.state,\n\t\tfunction_depth: context.state.function_depth + 1,\n\t\texpression: null\n\t});\n}\n", "/** @import { ArrowFunctionExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { visit_function } from './shared/function.js';\n\n/**\n * @param {ArrowFunctionExpression} node\n * @param {Context} context\n */\nexport function ArrowFunctionExpression(node, context) {\n\tvisit_function(node, context);\n}\n", "/** @import { AssignmentExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { extract_identifiers, object } from '../../../utils/ast.js';\nimport { validate_assignment } from './shared/utils.js';\n\n/**\n * @param {AssignmentExpression} node\n * @param {Context} context\n */\nexport function AssignmentExpression(node, context) {\n\tvalidate_assignment(node, node.left, context.state);\n\n\tif (context.state.reactive_statement) {\n\t\tconst id = node.left.type === 'MemberExpression' ? object(node.left) : node.left;\n\t\tif (id !== null) {\n\t\t\tfor (const id of extract_identifiers(node.left)) {\n\t\t\t\tconst binding = context.state.scope.get(id.name);\n\n\t\t\t\tif (binding) {\n\t\t\t\t\tcontext.state.reactive_statement.assignments.add(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n\n/**\n * @param {AST.SvelteNode[]} path\n */\nexport function mark_subtree_dynamic(path) {\n\tlet i = path.length;\n\twhile (i--) {\n\t\tconst node = path[i];\n\t\tif (node.type === 'Fragment') {\n\t\t\tif (node.metadata.dynamic) return;\n\t\t\tnode.metadata.dynamic = true;\n\t\t}\n\t}\n}\n", "/** @import { ArrowFunctionExpression, Expression, FunctionDeclaration, FunctionExpression } from 'estree' */\n/** @import { AST, DelegatedEvent } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { cannot_be_set_statically, is_capture_event, is_delegated } from '../../../../utils.js';\nimport {\n\tget_attribute_chunks,\n\tget_attribute_expression,\n\tis_event_attribute\n} from '../../../utils/ast.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.Attribute} node\n * @param {Context} context\n */\nexport function Attribute(node, context) {\n\tcontext.next();\n\n\tconst parent = /** @type {AST.SvelteNode} */ (context.path.at(-1));\n\n\tif (parent.type === 'RegularElement') {\n\t\t// special case <option value=\"\" />\n\t\tif (node.name === 'value' && parent.name === 'option') {\n\t\t\tmark_subtree_dynamic(context.path);\n\t\t}\n\t}\n\n\tif (is_event_attribute(node)) {\n\t\tmark_subtree_dynamic(context.path);\n\t}\n\n\tif (cannot_be_set_statically(node.name)) {\n\t\tmark_subtree_dynamic(context.path);\n\t}\n\n\t// class={[...]} or class={{...}} or `class={x}` need clsx to resolve the classes\n\tif (\n\t\tnode.name === 'class' &&\n\t\t!Array.isArray(node.value) &&\n\t\tnode.value !== true &&\n\t\tnode.value.expression.type !== 'Literal' &&\n\t\tnode.value.expression.type !== 'TemplateLiteral' &&\n\t\tnode.value.expression.type !== 'BinaryExpression'\n\t) {\n\t\tmark_subtree_dynamic(context.path);\n\t\tnode.metadata.needs_clsx = true;\n\t}\n\n\tif (node.value !== true) {\n\t\tfor (const chunk of get_attribute_chunks(node.value)) {\n\t\t\tif (chunk.type !== 'ExpressionTag') continue;\n\n\t\t\tif (\n\t\t\t\tchunk.expression.type === 'FunctionExpression' ||\n\t\t\t\tchunk.expression.type === 'ArrowFunctionExpression'\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (is_event_attribute(node)) {\n\t\t\tconst parent = context.path.at(-1);\n\t\t\tif (parent?.type === 'RegularElement' || parent?.type === 'SvelteElement') {\n\t\t\t\tcontext.state.analysis.uses_event_attributes = true;\n\t\t\t}\n\n\t\t\tconst expression = get_attribute_expression(node);\n\t\t\tconst delegated_event = get_delegated_event(node.name.slice(2), expression, context);\n\n\t\t\tif (delegated_event !== null) {\n\t\t\t\tif (delegated_event.hoisted) {\n\t\t\t\t\tdelegated_event.function.metadata.hoisted = true;\n\t\t\t\t}\n\n\t\t\t\tnode.metadata.delegated = delegated_event;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/** @type {DelegatedEvent} */\nconst unhoisted = { hoisted: false };\n\n/**\n * Checks if given event attribute can be delegated/hoisted and returns the corresponding info if so\n * @param {string} event_name\n * @param {Expression | null} handler\n * @param {Context} context\n * @returns {null | DelegatedEvent}\n */\nfunction get_delegated_event(event_name, handler, context) {\n\t// Handle delegated event handlers. Bail out if not a delegated event.\n\tif (!handler || !is_delegated(event_name)) {\n\t\treturn null;\n\t}\n\n\t// If we are not working with a RegularElement, then bail out.\n\tconst element = context.path.at(-1);\n\tif (element?.type !== 'RegularElement') {\n\t\treturn null;\n\t}\n\n\t/** @type {FunctionExpression | FunctionDeclaration | ArrowFunctionExpression | null} */\n\tlet target_function = null;\n\tlet binding = null;\n\n\tif (element.metadata.has_spread) {\n\t\t// event attribute becomes part of the dynamic spread array\n\t\treturn unhoisted;\n\t}\n\n\tif (handler.type === 'ArrowFunctionExpression' || handler.type === 'FunctionExpression') {\n\t\ttarget_function = handler;\n\t} else if (handler.type === 'Identifier') {\n\t\tbinding = context.state.scope.get(handler.name);\n\n\t\tif (context.state.analysis.module.scope.references.has(handler.name)) {\n\t\t\t// If a binding with the same name is referenced in the module scope (even if not declared there), bail out\n\t\t\treturn unhoisted;\n\t\t}\n\n\t\tif (binding != null) {\n\t\t\tfor (const { path } of binding.references) {\n\t\t\t\tconst parent = path.at(-1);\n\t\t\t\tif (parent === undefined) return unhoisted;\n\n\t\t\t\tconst grandparent = path.at(-2);\n\n\t\t\t\t/** @type {AST.RegularElement | null} */\n\t\t\t\tlet element = null;\n\t\t\t\t/** @type {string | null} */\n\t\t\t\tlet event_name = null;\n\t\t\t\tif (parent.type === 'OnDirective') {\n\t\t\t\t\telement = /** @type {AST.RegularElement} */ (grandparent);\n\t\t\t\t\tevent_name = parent.name;\n\t\t\t\t} else if (\n\t\t\t\t\tparent.type === 'ExpressionTag' &&\n\t\t\t\t\tgrandparent?.type === 'Attribute' &&\n\t\t\t\t\tis_event_attribute(grandparent)\n\t\t\t\t) {\n\t\t\t\t\telement = /** @type {AST.RegularElement} */ (path.at(-3));\n\t\t\t\t\tconst attribute = /** @type {AST.Attribute} */ (grandparent);\n\t\t\t\t\tevent_name = get_attribute_event_name(attribute.name);\n\t\t\t\t}\n\n\t\t\t\tif (element && event_name) {\n\t\t\t\t\tif (\n\t\t\t\t\t\telement.type !== 'RegularElement' ||\n\t\t\t\t\t\telement.metadata.has_spread ||\n\t\t\t\t\t\t!is_delegated(event_name)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn unhoisted;\n\t\t\t\t\t}\n\t\t\t\t} else if (parent.type !== 'FunctionDeclaration' && parent.type !== 'VariableDeclarator') {\n\t\t\t\t\treturn unhoisted;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the binding is exported, bail out\n\t\tif (context.state.analysis.exports.find((node) => node.name === handler.name)) {\n\t\t\treturn unhoisted;\n\t\t}\n\n\t\tif (binding?.is_function()) {\n\t\t\ttarget_function = binding.initial;\n\t\t}\n\t}\n\n\t// If we can't find a function, or the function has multiple parameters, bail out\n\tif (target_function == null || target_function.params.length > 1) {\n\t\treturn unhoisted;\n\t}\n\n\tconst visited_references = new Set();\n\tconst scope = target_function.metadata.scope;\n\tfor (const [reference] of scope.references) {\n\t\t// Bail out if the arguments keyword is used or $host is referenced\n\t\tif (reference === 'arguments' || reference === '$host') return unhoisted;\n\t\t// Bail out if references a store subscription\n\t\tif (scope.get(`$${reference}`)?.kind === 'store_sub') return unhoisted;\n\n\t\tconst binding = scope.get(reference);\n\t\tconst local_binding = context.state.scope.get(reference);\n\n\t\t// if the function access a snippet that can't be hoisted we bail out\n\t\tif (\n\t\t\tlocal_binding !== null &&\n\t\t\tlocal_binding.initial?.type === 'SnippetBlock' &&\n\t\t\t!local_binding.initial.metadata.can_hoist\n\t\t) {\n\t\t\treturn unhoisted;\n\t\t}\n\n\t\t// If we are referencing a binding that is shadowed in another scope then bail out.\n\t\tif (local_binding !== null && binding !== null && local_binding.node !== binding.node) {\n\t\t\treturn unhoisted;\n\t\t}\n\n\t\t// If we have multiple references to the same store using $ prefix, bail out.\n\t\tif (\n\t\t\tbinding !== null &&\n\t\t\tbinding.kind === 'store_sub' &&\n\t\t\tvisited_references.has(reference.slice(1))\n\t\t) {\n\t\t\treturn unhoisted;\n\t\t}\n\n\t\t// If we reference the index within an each block, then bail out.\n\t\tif (binding !== null && binding.initial?.type === 'EachBlock') return unhoisted;\n\n\t\tif (\n\t\t\tbinding !== null &&\n\t\t\t// Bail out if the the binding is a rest param\n\t\t\t(binding.declaration_kind === 'rest_param' ||\n\t\t\t\t// Bail out if we reference anything from the EachBlock (for now) that mutates in non-runes mode,\n\t\t\t\t(((!context.state.analysis.runes && binding.kind === 'each') ||\n\t\t\t\t\t// or any normal not reactive bindings that are mutated.\n\t\t\t\t\tbinding.kind === 'normal') &&\n\t\t\t\t\tbinding.updated))\n\t\t) {\n\t\t\treturn unhoisted;\n\t\t}\n\t\tvisited_references.add(reference);\n\t}\n\n\treturn { hoisted: true, function: target_function };\n}\n\n/**\n * @param {string} event_name\n */\nfunction get_attribute_event_name(event_name) {\n\tevent_name = event_name.slice(2);\n\tif (is_capture_event(event_name)) {\n\t\tevent_name = event_name.slice(0, -7);\n\t}\n\treturn event_name;\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { validate_block_not_empty, validate_opening_tag } from './shared/utils.js';\nimport * as e from '../../../errors.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.AwaitBlock} node\n * @param {Context} context\n */\nexport function AwaitBlock(node, context) {\n\tvalidate_block_not_empty(node.pending, context);\n\tvalidate_block_not_empty(node.then, context);\n\tvalidate_block_not_empty(node.catch, context);\n\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '#');\n\n\t\tif (node.value) {\n\t\t\tconst start = /** @type {number} */ (node.value.start);\n\t\t\tconst match = context.state.analysis.source\n\t\t\t\t.substring(start - 10, start)\n\t\t\t\t.match(/{(\\s*):then\\s+$/);\n\n\t\t\tif (match && match[1] !== '') {\n\t\t\t\te.block_unexpected_character({ start: start - 10, end: start }, ':');\n\t\t\t}\n\t\t}\n\n\t\tif (node.error) {\n\t\t\tconst start = /** @type {number} */ (node.error.start);\n\t\t\tconst match = context.state.analysis.source\n\t\t\t\t.substring(start - 10, start)\n\t\t\t\t.match(/{(\\s*):catch\\s+$/);\n\n\t\t\tif (match && match[1] !== '') {\n\t\t\t\te.block_unexpected_character({ start: start - 10, end: start }, ':');\n\t\t\t}\n\t\t}\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/**\n * @typedef BindingProperty\n * @property {string} [event] This is set if the binding corresponds to the property name on the dom element it's bound to\n * \t\t\t\t\t\t\t  and there's an event that notifies of a change to that property\n * @property {boolean} [bidirectional] Set this to `true` if updates are written to the dom property\n * @property {boolean} [omit_in_ssr] Set this to true if the binding should not be included in SSR\n * @property {string[]} [valid_elements] If this is set, the binding is only valid on the given elements\n * @property {string[]} [invalid_elements] If this is set, the binding is invalid on the given elements\n */\n\n/**\n * @type {Record<string, BindingProperty>}\n */\nexport const binding_properties = {\n\t// media\n\tcurrentTime: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tduration: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tevent: 'durationchange',\n\t\tomit_in_ssr: true\n\t},\n\tfocused: {},\n\tpaused: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tbuffered: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\tseekable: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\tplayed: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\tvolume: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tmuted: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tplaybackRate: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tseeking: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\tended: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\treadyState: {\n\t\tvalid_elements: ['audio', 'video'],\n\t\tomit_in_ssr: true\n\t},\n\t// video\n\tvideoHeight: {\n\t\tvalid_elements: ['video'],\n\t\tevent: 'resize',\n\t\tomit_in_ssr: true\n\t},\n\tvideoWidth: {\n\t\tvalid_elements: ['video'],\n\t\tevent: 'resize',\n\t\tomit_in_ssr: true\n\t},\n\t// img\n\tnaturalWidth: {\n\t\tvalid_elements: ['img'],\n\t\tevent: 'load',\n\t\tomit_in_ssr: true\n\t},\n\tnaturalHeight: {\n\t\tvalid_elements: ['img'],\n\t\tevent: 'load',\n\t\tomit_in_ssr: true\n\t},\n\t// document\n\tactiveElement: {\n\t\tvalid_elements: ['svelte:document'],\n\t\tomit_in_ssr: true\n\t},\n\tfullscreenElement: {\n\t\tvalid_elements: ['svelte:document'],\n\t\tevent: 'fullscreenchange',\n\t\tomit_in_ssr: true\n\t},\n\tpointerLockElement: {\n\t\tvalid_elements: ['svelte:document'],\n\t\tevent: 'pointerlockchange',\n\t\tomit_in_ssr: true\n\t},\n\tvisibilityState: {\n\t\tvalid_elements: ['svelte:document'],\n\t\tevent: 'visibilitychange',\n\t\tomit_in_ssr: true\n\t},\n\t// window\n\tinnerWidth: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true\n\t},\n\tinnerHeight: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true\n\t},\n\touterWidth: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true\n\t},\n\touterHeight: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true\n\t},\n\tscrollX: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tscrollY: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t},\n\tonline: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tomit_in_ssr: true\n\t},\n\tdevicePixelRatio: {\n\t\tvalid_elements: ['svelte:window'],\n\t\tevent: 'resize',\n\t\tomit_in_ssr: true\n\t},\n\t// dimensions\n\tclientWidth: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\tclientHeight: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\toffsetWidth: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\toffsetHeight: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\tcontentRect: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\tcontentBoxSize: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\tborderBoxSize: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\tdevicePixelContentBoxSize: {\n\t\tomit_in_ssr: true,\n\t\tinvalid_elements: ['svelte:window', 'svelte:document']\n\t},\n\t// checkbox/radio\n\tindeterminate: {\n\t\tevent: 'change',\n\t\tbidirectional: true,\n\t\tvalid_elements: ['input'],\n\t\tomit_in_ssr: true // no corresponding attribute\n\t},\n\tchecked: {\n\t\tvalid_elements: ['input'],\n\t\tbidirectional: true\n\t},\n\tgroup: {\n\t\tvalid_elements: ['input'],\n\t\tbidirectional: true\n\t},\n\t// various\n\tthis: {\n\t\tomit_in_ssr: true\n\t},\n\tinnerText: {\n\t\tinvalid_elements: ['svelte:window', 'svelte:document'],\n\t\tbidirectional: true\n\t},\n\tinnerHTML: {\n\t\tinvalid_elements: ['svelte:window', 'svelte:document'],\n\t\tbidirectional: true\n\t},\n\ttextContent: {\n\t\tinvalid_elements: ['svelte:window', 'svelte:document'],\n\t\tbidirectional: true\n\t},\n\topen: {\n\t\tevent: 'toggle',\n\t\tbidirectional: true,\n\t\tvalid_elements: ['details']\n\t},\n\tvalue: {\n\t\tvalid_elements: ['input', 'textarea', 'select'],\n\t\tbidirectional: true\n\t},\n\tfiles: {\n\t\tvalid_elements: ['input'],\n\t\tomit_in_ssr: true,\n\t\tbidirectional: true\n\t}\n};\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport {\n\textract_all_identifiers_from_expression,\n\tis_text_attribute,\n\tobject\n} from '../../../utils/ast.js';\nimport { validate_assignment } from './shared/utils.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { binding_properties } from '../../bindings.js';\nimport fuzzymatch from '../../1-parse/utils/fuzzymatch.js';\nimport { is_content_editable_binding, is_svg } from '../../../../utils.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.BindDirective} node\n * @param {Context} context\n */\nexport function BindDirective(node, context) {\n\tconst parent = context.path.at(-1);\n\n\tif (\n\t\tparent?.type === 'RegularElement' ||\n\t\tparent?.type === 'SvelteElement' ||\n\t\tparent?.type === 'SvelteWindow' ||\n\t\tparent?.type === 'SvelteDocument' ||\n\t\tparent?.type === 'SvelteBody'\n\t) {\n\t\tif (node.name in binding_properties) {\n\t\t\tconst property = binding_properties[node.name];\n\t\t\tif (property.valid_elements && !property.valid_elements.includes(parent.name)) {\n\t\t\t\te.bind_invalid_target(\n\t\t\t\t\tnode,\n\t\t\t\t\tnode.name,\n\t\t\t\t\tproperty.valid_elements.map((valid_element) => `<${valid_element}>`).join(', ')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (property.invalid_elements && property.invalid_elements.includes(parent.name)) {\n\t\t\t\tconst valid_bindings = Object.entries(binding_properties)\n\t\t\t\t\t.filter(([_, binding_property]) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tbinding_property.valid_elements?.includes(parent.name) ||\n\t\t\t\t\t\t\t(!binding_property.valid_elements &&\n\t\t\t\t\t\t\t\t!binding_property.invalid_elements?.includes(parent.name))\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map(([property_name]) => property_name)\n\t\t\t\t\t.sort();\n\n\t\t\t\te.bind_invalid_name(\n\t\t\t\t\tnode,\n\t\t\t\t\tnode.name,\n\t\t\t\t\t`Possible bindings for <${parent.name}> are ${valid_bindings.join(', ')}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (parent.name === 'input' && node.name !== 'this') {\n\t\t\t\tconst type = /** @type {AST.Attribute | undefined} */ (\n\t\t\t\t\tparent.attributes.find((a) => a.type === 'Attribute' && a.name === 'type')\n\t\t\t\t);\n\n\t\t\t\tif (type && !is_text_attribute(type)) {\n\t\t\t\t\tif (node.name !== 'value' || type.value === true) {\n\t\t\t\t\t\te.attribute_invalid_type(type);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (node.name === 'checked' && type?.value[0].data !== 'checkbox') {\n\t\t\t\t\t\te.bind_invalid_target(node, node.name, '<input type=\"checkbox\">');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node.name === 'files' && type?.value[0].data !== 'file') {\n\t\t\t\t\t\te.bind_invalid_target(node, node.name, '<input type=\"file\">');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parent.name === 'select' && node.name !== 'this') {\n\t\t\t\tconst multiple = parent.attributes.find(\n\t\t\t\t\t(a) =>\n\t\t\t\t\t\ta.type === 'Attribute' &&\n\t\t\t\t\t\ta.name === 'multiple' &&\n\t\t\t\t\t\t!is_text_attribute(a) &&\n\t\t\t\t\t\ta.value !== true\n\t\t\t\t);\n\n\t\t\t\tif (multiple) {\n\t\t\t\t\te.attribute_invalid_multiple(multiple);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node.name === 'offsetWidth' && is_svg(parent.name)) {\n\t\t\t\te.bind_invalid_target(\n\t\t\t\t\tnode,\n\t\t\t\t\tnode.name,\n\t\t\t\t\t`non-<svg> elements. Use 'clientWidth' for <svg> instead`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (is_content_editable_binding(node.name)) {\n\t\t\t\tconst contenteditable = /** @type {AST.Attribute} */ (\n\t\t\t\t\tparent.attributes.find((a) => a.type === 'Attribute' && a.name === 'contenteditable')\n\t\t\t\t);\n\n\t\t\t\tif (!contenteditable) {\n\t\t\t\t\te.attribute_contenteditable_missing(node);\n\t\t\t\t} else if (!is_text_attribute(contenteditable) && contenteditable.value !== true) {\n\t\t\t\t\te.attribute_contenteditable_dynamic(contenteditable);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst match = fuzzymatch(node.name, Object.keys(binding_properties));\n\n\t\t\tif (match) {\n\t\t\t\tconst property = binding_properties[match];\n\t\t\t\tif (!property.valid_elements || property.valid_elements.includes(parent.name)) {\n\t\t\t\t\te.bind_invalid_name(node, node.name, `Did you mean '${match}'?`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\te.bind_invalid_name(node, node.name);\n\t\t}\n\t}\n\n\t// When dealing with bind getters/setters skip the specific binding validation\n\t// Group bindings aren't supported for getter/setters so we don't need to handle\n\t// the metadata\n\tif (node.expression.type === 'SequenceExpression') {\n\t\tif (node.name === 'group') {\n\t\t\te.bind_group_invalid_expression(node);\n\t\t}\n\n\t\tlet i = /** @type {number} */ (node.expression.start);\n\t\tlet leading_comments_start = /**@type {any}*/ (node.expression.leadingComments?.at(0))?.start;\n\t\tlet leading_comments_end = /**@type {any}*/ (node.expression.leadingComments?.at(-1))?.end;\n\t\twhile (context.state.analysis.source[--i] !== '{') {\n\t\t\tif (\n\t\t\t\tcontext.state.analysis.source[i] === '(' &&\n\t\t\t\t// if the parenthesis is in a leading comment we don't need to throw the error\n\t\t\t\t!(\n\t\t\t\t\tleading_comments_start &&\n\t\t\t\t\tleading_comments_end &&\n\t\t\t\t\ti <= leading_comments_end &&\n\t\t\t\t\ti >= leading_comments_start\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\te.bind_invalid_parens(node, node.name);\n\t\t\t}\n\t\t}\n\n\t\tif (node.expression.expressions.length !== 2) {\n\t\t\te.bind_invalid_expression(node);\n\t\t}\n\n\t\tmark_subtree_dynamic(context.path);\n\n\t\treturn;\n\t}\n\n\tvalidate_assignment(node, node.expression, context.state);\n\n\tconst assignee = node.expression;\n\tconst left = object(assignee);\n\n\tif (left === null) {\n\t\te.bind_invalid_expression(node);\n\t}\n\n\tconst binding = context.state.scope.get(left.name);\n\n\tif (assignee.type === 'Identifier') {\n\t\t// reassignment\n\t\tif (\n\t\t\tnode.name !== 'this' && // bind:this also works for regular variables\n\t\t\t(!binding ||\n\t\t\t\t(binding.kind !== 'state' &&\n\t\t\t\t\tbinding.kind !== 'raw_state' &&\n\t\t\t\t\tbinding.kind !== 'prop' &&\n\t\t\t\t\tbinding.kind !== 'bindable_prop' &&\n\t\t\t\t\tbinding.kind !== 'each' &&\n\t\t\t\t\tbinding.kind !== 'store_sub' &&\n\t\t\t\t\t!binding.updated)) // TODO wut?\n\t\t) {\n\t\t\te.bind_invalid_value(node.expression);\n\t\t}\n\t}\n\n\tif (node.name === 'group') {\n\t\tif (!binding) {\n\t\t\tthrow new Error('Cannot find declaration for bind:group');\n\t\t}\n\n\t\tif (binding.kind === 'snippet') {\n\t\t\te.bind_group_invalid_snippet_parameter(node);\n\t\t}\n\n\t\t// Traverse the path upwards and find all EachBlocks who are (indirectly) contributing to bind:group,\n\t\t// i.e. one of their declarations is referenced in the binding. This allows group bindings to work\n\t\t// correctly when referencing a variable declared in an EachBlock by using the index of the each block\n\t\t// entries as keys.\n\t\tconst each_blocks = [];\n\t\tconst [keypath, expression_ids] = extract_all_identifiers_from_expression(node.expression);\n\t\tlet ids = expression_ids;\n\n\t\tlet i = context.path.length;\n\t\twhile (i--) {\n\t\t\tconst parent = context.path[i];\n\n\t\t\tif (parent.type === 'EachBlock') {\n\t\t\t\tconst references = ids.filter((id) => parent.metadata.declarations.has(id.name));\n\n\t\t\t\tif (references.length > 0) {\n\t\t\t\t\tparent.metadata.contains_group_binding = true;\n\n\t\t\t\t\teach_blocks.push(parent);\n\t\t\t\t\tids = ids.filter((id) => !references.includes(id));\n\t\t\t\t\tids.push(...extract_all_identifiers_from_expression(parent.expression)[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The identifiers that make up the binding expression form they key for the binding group.\n\t\t// If the same identifiers in the same order are used in another bind:group, they will be in the same group.\n\t\t// (there's an edge case where `bind:group={a[i]}` will be in a different group than `bind:group={a[j]}` even when i == j,\n\t\t//  but this is a limitation of the current static analysis we do; it also never worked in Svelte 4)\n\t\tconst bindings = expression_ids.map((id) => context.state.scope.get(id.name));\n\t\tlet group_name;\n\n\t\touter: for (const [[key, b], group] of context.state.analysis.binding_groups) {\n\t\t\tif (b.length !== bindings.length || key !== keypath) continue;\n\t\t\tfor (let i = 0; i < bindings.length; i++) {\n\t\t\t\tif (bindings[i] !== b[i]) continue outer;\n\t\t\t}\n\t\t\tgroup_name = group;\n\t\t}\n\n\t\tif (!group_name) {\n\t\t\tgroup_name = context.state.scope.root.unique('binding_group');\n\t\t\tcontext.state.analysis.binding_groups.set([keypath, bindings], group_name);\n\t\t}\n\n\t\tnode.metadata = {\n\t\t\tbinding_group_name: group_name,\n\t\t\tparent_each_blocks: each_blocks\n\t\t};\n\t}\n\n\tif (binding?.kind === 'each' && binding.metadata?.inside_rest) {\n\t\tw.bind_invalid_each_rest(binding.node, binding.node.name);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { ArrowFunctionExpression, CallExpression, Expression, FunctionDeclaration, FunctionExpression, Identifier, VariableDeclarator } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { get_rune } from '../../scope.js';\nimport * as e from '../../../errors.js';\nimport { get_parent } from '../../../utils/ast.js';\nimport { is_pure, is_safe_identifier } from './shared/utils.js';\nimport { dev, locate_node, source } from '../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {CallExpression} node\n * @param {Context} context\n */\nexport function CallExpression(node, context) {\n\tconst parent = /** @type {AST.SvelteNode} */ (get_parent(context.path, -1));\n\n\tconst rune = get_rune(node, context.state.scope);\n\n\tif (rune && rune !== '$inspect') {\n\t\tfor (const arg of node.arguments) {\n\t\t\tif (arg.type === 'SpreadElement') {\n\t\t\t\te.rune_invalid_spread(node, rune);\n\t\t\t}\n\t\t}\n\t}\n\n\tswitch (rune) {\n\t\tcase null:\n\t\t\tif (!is_safe_identifier(node.callee, context.state.scope)) {\n\t\t\t\tcontext.state.analysis.needs_context = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$bindable':\n\t\t\tif (node.arguments.length > 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, '$bindable', 'zero or one arguments');\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tparent.type !== 'AssignmentPattern' ||\n\t\t\t\tcontext.path.at(-3)?.type !== 'ObjectPattern' ||\n\t\t\t\tcontext.path.at(-4)?.type !== 'VariableDeclarator' ||\n\t\t\t\tget_rune(\n\t\t\t\t\t/** @type {VariableDeclarator} */ (context.path.at(-4)).init,\n\t\t\t\t\tcontext.state.scope\n\t\t\t\t) !== '$props'\n\t\t\t) {\n\t\t\t\te.bindable_invalid_location(node);\n\t\t\t}\n\n\t\t\t// We need context in case the bound prop is stale\n\t\t\tcontext.state.analysis.needs_context = true;\n\n\t\t\tbreak;\n\n\t\tcase '$host':\n\t\t\tif (node.arguments.length > 0) {\n\t\t\t\te.rune_invalid_arguments(node, '$host');\n\t\t\t} else if (context.state.ast_type === 'module' || !context.state.analysis.custom_element) {\n\t\t\t\te.host_invalid_placement(node);\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$props':\n\t\t\tif (context.state.has_props_rune) {\n\t\t\t\te.props_duplicate(node, rune);\n\t\t\t}\n\n\t\t\tcontext.state.has_props_rune = true;\n\n\t\t\tif (\n\t\t\t\tparent.type !== 'VariableDeclarator' ||\n\t\t\t\tcontext.state.ast_type !== 'instance' ||\n\t\t\t\tcontext.state.scope !== context.state.analysis.instance.scope\n\t\t\t) {\n\t\t\t\te.props_invalid_placement(node);\n\t\t\t}\n\n\t\t\tif (node.arguments.length > 0) {\n\t\t\t\te.rune_invalid_arguments(node, rune);\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$props.id': {\n\t\t\tconst grand_parent = get_parent(context.path, -2);\n\n\t\t\tif (context.state.analysis.props_id) {\n\t\t\t\te.props_duplicate(node, rune);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tparent.type !== 'VariableDeclarator' ||\n\t\t\t\tparent.id.type !== 'Identifier' ||\n\t\t\t\tcontext.state.ast_type !== 'instance' ||\n\t\t\t\tcontext.state.scope !== context.state.analysis.instance.scope ||\n\t\t\t\tgrand_parent.type !== 'VariableDeclaration'\n\t\t\t) {\n\t\t\t\te.props_id_invalid_placement(node);\n\t\t\t}\n\n\t\t\tif (node.arguments.length > 0) {\n\t\t\t\te.rune_invalid_arguments(node, rune);\n\t\t\t}\n\n\t\t\tcontext.state.analysis.props_id = parent.id;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase '$state':\n\t\tcase '$state.raw':\n\t\tcase '$derived':\n\t\tcase '$derived.by':\n\t\t\tif (\n\t\t\t\t(parent.type !== 'VariableDeclarator' ||\n\t\t\t\t\tget_parent(context.path, -3).type === 'ConstTag') &&\n\t\t\t\t!(parent.type === 'PropertyDefinition' && !parent.static && !parent.computed)\n\t\t\t) {\n\t\t\t\te.state_invalid_placement(node, rune);\n\t\t\t}\n\n\t\t\tif ((rune === '$derived' || rune === '$derived.by') && node.arguments.length !== 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'exactly one argument');\n\t\t\t} else if (node.arguments.length > 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'zero or one arguments');\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$effect':\n\t\tcase '$effect.pre':\n\t\t\tif (parent.type !== 'ExpressionStatement') {\n\t\t\t\te.effect_invalid_placement(node);\n\t\t\t}\n\n\t\t\tif (node.arguments.length !== 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'exactly one argument');\n\t\t\t}\n\n\t\t\t// `$effect` needs context because Svelte needs to know whether it should re-run\n\t\t\t// effects that invalidate themselves, and that's determined by whether we're in runes mode\n\t\t\tcontext.state.analysis.needs_context = true;\n\n\t\t\tbreak;\n\n\t\tcase '$effect.tracking':\n\t\t\tif (node.arguments.length !== 0) {\n\t\t\t\te.rune_invalid_arguments(node, rune);\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$effect.root':\n\t\t\tif (node.arguments.length !== 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'exactly one argument');\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$inspect':\n\t\t\tif (node.arguments.length < 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'one or more arguments');\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$inspect().with':\n\t\t\tif (node.arguments.length !== 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'exactly one argument');\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase '$inspect.trace': {\n\t\t\tif (node.arguments.length > 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'zero or one arguments');\n\t\t\t}\n\n\t\t\tconst grand_parent = context.path.at(-2);\n\t\t\tconst fn = context.path.at(-3);\n\n\t\t\tif (\n\t\t\t\tparent.type !== 'ExpressionStatement' ||\n\t\t\t\tgrand_parent?.type !== 'BlockStatement' ||\n\t\t\t\t!(\n\t\t\t\t\tfn?.type === 'FunctionDeclaration' ||\n\t\t\t\t\tfn?.type === 'FunctionExpression' ||\n\t\t\t\t\tfn?.type === 'ArrowFunctionExpression'\n\t\t\t\t) ||\n\t\t\t\tgrand_parent.body[0] !== parent\n\t\t\t) {\n\t\t\t\te.inspect_trace_invalid_placement(node);\n\t\t\t}\n\n\t\t\tif (fn.generator) {\n\t\t\t\te.inspect_trace_generator(node);\n\t\t\t}\n\n\t\t\tif (dev) {\n\t\t\t\tif (node.arguments[0]) {\n\t\t\t\t\tcontext.state.scope.tracing = b.thunk(/** @type {Expression} */ (node.arguments[0]));\n\t\t\t\t} else {\n\t\t\t\t\tconst label = get_function_label(context.path.slice(0, -2)) ?? 'trace';\n\t\t\t\t\tconst loc = `(${locate_node(fn)})`;\n\n\t\t\t\t\tcontext.state.scope.tracing = b.thunk(b.literal(label + ' ' + loc));\n\t\t\t\t}\n\n\t\t\t\tcontext.state.analysis.tracing = true;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase '$state.snapshot':\n\t\t\tif (node.arguments.length !== 1) {\n\t\t\t\te.rune_invalid_arguments_length(node, rune, 'exactly one argument');\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\t// `$inspect(foo)` or `$derived(foo) should not trigger the `static-state-reference` warning\n\tif (rune === '$inspect' || rune === '$derived') {\n\t\tcontext.next({ ...context.state, function_depth: context.state.function_depth + 1 });\n\t} else {\n\t\tcontext.next();\n\t}\n\n\tif (context.state.expression) {\n\t\t// TODO We assume that any dependencies are stateful, which isn't necessarily the case — see\n\t\t// https://github.com/sveltejs/svelte/issues/13266. This check also includes dependencies\n\t\t// outside the call expression itself (e.g. `{blah && pure()}`) resulting in additional\n\t\t// false positives, but for now we accept that trade-off\n\t\tif (!is_pure(node.callee, context) || context.state.expression.dependencies.size > 0) {\n\t\t\tcontext.state.expression.has_call = true;\n\t\t\tcontext.state.expression.has_state = true;\n\t\t}\n\t}\n}\n\n/**\n * @param {AST.SvelteNode[]} nodes\n */\nfunction get_function_label(nodes) {\n\tconst fn = /** @type {FunctionExpression | FunctionDeclaration | ArrowFunctionExpression} */ (\n\t\tnodes.at(-1)\n\t);\n\n\tif ((fn.type === 'FunctionDeclaration' || fn.type === 'FunctionExpression') && fn.id != null) {\n\t\treturn fn.id.name;\n\t}\n\n\tconst parent = nodes.at(-2);\n\tif (!parent) return;\n\n\tif (parent.type === 'CallExpression') {\n\t\treturn source.slice(parent.callee.start, parent.callee.end) + '(...)';\n\t}\n\n\tif (parent.type === 'Property' && !parent.computed) {\n\t\treturn /** @type {Identifier} */ (parent.key).name;\n\t}\n\n\tif (parent.type === 'VariableDeclarator' && parent.id.type === 'Identifier') {\n\t\treturn parent.id.name;\n\t}\n}\n", "/** @import { ClassBody } from 'estree' */\n/** @import { Context } from '../types' */\nimport { get_rune } from '../../scope.js';\n\n/**\n * @param {ClassBody} node\n * @param {Context} context\n */\nexport function ClassBody(node, context) {\n\t/** @type {{name: string, private: boolean}[]} */\n\tconst derived_state = [];\n\n\tfor (const definition of node.body) {\n\t\tif (\n\t\t\tdefinition.type === 'PropertyDefinition' &&\n\t\t\t(definition.key.type === 'PrivateIdentifier' || definition.key.type === 'Identifier') &&\n\t\t\tdefinition.value?.type === 'CallExpression'\n\t\t) {\n\t\t\tconst rune = get_rune(definition.value, context.state.scope);\n\t\t\tif (rune === '$derived' || rune === '$derived.by') {\n\t\t\t\tderived_state.push({\n\t\t\t\t\tname: definition.key.name,\n\t\t\t\t\tprivate: definition.key.type === 'PrivateIdentifier'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.next({ ...context.state, derived_state });\n}\n", "/** @import { ClassDeclaration } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as w from '../../../warnings.js';\nimport { validate_identifier_name } from './shared/utils.js';\n\n/**\n * @param {ClassDeclaration} node\n * @param {Context} context\n */\nexport function ClassDeclaration(node, context) {\n\tif (context.state.analysis.runes && node.id !== null) {\n\t\tvalidate_identifier_name(context.state.scope.get(node.id.name));\n\t}\n\n\t// In modules, we allow top-level module scope only, in components, we allow the component scope,\n\t// which is function_depth of 1. With the exception of `new class` which is also not allowed at\n\t// component scope level either.\n\tconst allowed_depth = context.state.ast_type === 'module' ? 0 : 1;\n\n\tif (context.state.scope.function_depth > allowed_depth) {\n\t\tw.perf_avoid_nested_class(node);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\n\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.ClassDirective} node\n * @param {Context} context\n */\nexport function ClassDirective(node, context) {\n\tmark_subtree_dynamic(context.path);\n\tcontext.next({ ...context.state, expression: node.metadata.expression });\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../../types' */\nimport * as e from '../../../../errors.js';\nimport { is_text_attribute } from '../../../../utils/ast.js';\nimport * as w from '../../../../warnings.js';\nimport { is_custom_element_node } from '../../../nodes.js';\nimport { regex_only_whitespaces } from '../../../patterns.js';\n\n/**\n * @param {AST.Attribute} attribute\n */\nexport function validate_attribute_name(attribute) {\n\tif (\n\t\tattribute.name.includes(':') &&\n\t\t!attribute.name.startsWith('xmlns:') &&\n\t\t!attribute.name.startsWith('xlink:') &&\n\t\t!attribute.name.startsWith('xml:')\n\t) {\n\t\tw.attribute_illegal_colon(attribute);\n\t}\n}\n\n/**\n * @param {AST.Attribute} attribute\n * @param {AST.ElementLike} parent\n */\nexport function validate_attribute(attribute, parent) {\n\tif (\n\t\tArray.isArray(attribute.value) &&\n\t\tattribute.value.length === 1 &&\n\t\tattribute.value[0].type === 'ExpressionTag' &&\n\t\t(parent.type === 'Component' ||\n\t\t\tparent.type === 'SvelteComponent' ||\n\t\t\tparent.type === 'SvelteSelf' ||\n\t\t\t(parent.type === 'RegularElement' && is_custom_element_node(parent)))\n\t) {\n\t\tw.attribute_quoted(attribute);\n\t}\n\n\tif (attribute.value === true || !Array.isArray(attribute.value) || attribute.value.length === 1) {\n\t\treturn;\n\t}\n\n\tconst is_quoted = attribute.value.at(-1)?.end !== attribute.end;\n\n\tif (!is_quoted) {\n\t\te.attribute_unquoted_sequence(attribute);\n\t}\n}\n\n/**\n * @param {Context} context\n * @param {AST.Attribute} attribute\n * @param {boolean} is_component\n */\nexport function validate_slot_attribute(context, attribute, is_component = false) {\n\tconst parent = context.path.at(-2);\n\tlet owner = undefined;\n\n\tif (parent?.type === 'SnippetBlock') {\n\t\tif (!is_text_attribute(attribute)) {\n\t\t\te.slot_attribute_invalid(attribute);\n\t\t}\n\t\treturn;\n\t}\n\n\tlet i = context.path.length;\n\twhile (i--) {\n\t\tconst ancestor = context.path[i];\n\t\tif (\n\t\t\t!owner &&\n\t\t\t(ancestor.type === 'Component' ||\n\t\t\t\tancestor.type === 'SvelteComponent' ||\n\t\t\t\tancestor.type === 'SvelteSelf' ||\n\t\t\t\tancestor.type === 'SvelteElement' ||\n\t\t\t\t(ancestor.type === 'RegularElement' && is_custom_element_node(ancestor)))\n\t\t) {\n\t\t\towner = ancestor;\n\t\t}\n\t}\n\n\tif (owner) {\n\t\tif (\n\t\t\towner.type === 'Component' ||\n\t\t\towner.type === 'SvelteComponent' ||\n\t\t\towner.type === 'SvelteSelf'\n\t\t) {\n\t\t\tif (owner !== parent) {\n\t\t\t\tif (!is_component) {\n\t\t\t\t\te.slot_attribute_invalid_placement(attribute);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!is_text_attribute(attribute)) {\n\t\t\t\t\te.slot_attribute_invalid(attribute);\n\t\t\t\t}\n\n\t\t\t\tconst name = attribute.value[0].data;\n\n\t\t\t\tif (context.state.component_slots.has(name)) {\n\t\t\t\t\te.slot_attribute_duplicate(attribute, name, owner.name);\n\t\t\t\t}\n\n\t\t\t\tcontext.state.component_slots.add(name);\n\n\t\t\t\tif (name === 'default') {\n\t\t\t\t\tfor (const node of owner.fragment.nodes) {\n\t\t\t\t\t\tif (node.type === 'Text' && regex_only_whitespaces.test(node.data)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.type === 'RegularElement' || node.type === 'SvelteFragment') {\n\t\t\t\t\t\t\tif (node.attributes.some((a) => a.type === 'Attribute' && a.name === 'slot')) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\te.slot_default_duplicate(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (!is_component) {\n\t\te.slot_attribute_invalid_placement(attribute);\n\t}\n}\n", "/** @import { Binding } from '#compiler' */\n\n/**\n * Returns `true` if a binding unambiguously resolves to a specific\n * snippet declaration, or is external to the current component\n * @param {Binding | null} binding\n */\nexport function is_resolved_snippet(binding) {\n\treturn (\n\t\t!binding ||\n\t\tbinding.declaration_kind === 'import' ||\n\t\tbinding.kind === 'prop' ||\n\t\tbinding.kind === 'rest_prop' ||\n\t\tbinding.kind === 'bindable_prop' ||\n\t\tbinding?.initial?.type === 'SnippetBlock'\n\t);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { AnalysisState, Context } from '../../types' */\nimport * as e from '../../../../errors.js';\nimport { get_attribute_expression, is_expression_attribute } from '../../../../utils/ast.js';\nimport { determine_slot } from '../../../../utils/slot.js';\nimport {\n\tvalidate_attribute,\n\tvalidate_attribute_name,\n\tvalidate_slot_attribute\n} from './attribute.js';\nimport { mark_subtree_dynamic } from './fragment.js';\nimport { is_resolved_snippet } from './snippets.js';\n\n/**\n * @param {AST.Component | AST.SvelteComponent | AST.SvelteSelf} node\n * @param {Context} context\n */\nexport function visit_component(node, context) {\n\tnode.metadata.path = [...context.path];\n\n\t// link this node to all the snippets that it could render, so that we can prune CSS correctly\n\tnode.metadata.snippets = new Set();\n\n\t// 'resolved' means we know which snippets this component might render. if it is `false`,\n\t// then `node.metadata.snippets` is populated with every locally defined snippet\n\t// once analysis is complete\n\tlet resolved = true;\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'SpreadAttribute' || attribute.type === 'BindDirective') {\n\t\t\tresolved = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (attribute.type !== 'Attribute' || !is_expression_attribute(attribute)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst expression = get_attribute_expression(attribute);\n\n\t\t// given an attribute like `foo={bar}`, if `bar` resolves to an import or a prop\n\t\t// then we know it doesn't reference a locally defined snippet. if it resolves\n\t\t// to a `{#snippet bar()}` then we know _which_ snippet it resolves to. in all\n\t\t// other cases, we can't know (without much more complex static analysis) which\n\t\t// snippets the component might render, so we treat the component as unresolved\n\t\tif (expression.type === 'Identifier') {\n\t\t\tconst binding = context.state.scope.get(expression.name);\n\n\t\t\tresolved &&= is_resolved_snippet(binding);\n\n\t\t\tif (binding?.initial?.type === 'SnippetBlock') {\n\t\t\t\tnode.metadata.snippets.add(binding.initial);\n\t\t\t}\n\t\t} else if (expression.type !== 'Literal') {\n\t\t\tresolved = false;\n\t\t}\n\t}\n\n\tif (resolved) {\n\t\tfor (const child of node.fragment.nodes) {\n\t\t\tif (child.type === 'SnippetBlock') {\n\t\t\t\tnode.metadata.snippets.add(child);\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.state.analysis.snippet_renderers.set(node, resolved);\n\n\tmark_subtree_dynamic(context.path);\n\n\tfor (const attribute of node.attributes) {\n\t\tif (\n\t\t\tattribute.type !== 'Attribute' &&\n\t\t\tattribute.type !== 'SpreadAttribute' &&\n\t\t\tattribute.type !== 'LetDirective' &&\n\t\t\tattribute.type !== 'OnDirective' &&\n\t\t\tattribute.type !== 'BindDirective'\n\t\t) {\n\t\t\te.component_invalid_directive(attribute);\n\t\t}\n\n\t\tif (\n\t\t\tattribute.type === 'OnDirective' &&\n\t\t\t(attribute.modifiers.length > 1 || attribute.modifiers.some((m) => m !== 'once'))\n\t\t) {\n\t\t\te.event_handler_invalid_component_modifier(attribute);\n\t\t}\n\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tif (context.state.analysis.runes) {\n\t\t\t\tvalidate_attribute(attribute, node);\n\n\t\t\t\tif (is_expression_attribute(attribute)) {\n\t\t\t\t\tconst expression = get_attribute_expression(attribute);\n\t\t\t\t\tif (expression.type === 'SequenceExpression') {\n\t\t\t\t\t\tlet i = /** @type {number} */ (expression.start);\n\t\t\t\t\t\twhile (--i > 0) {\n\t\t\t\t\t\t\tconst char = context.state.analysis.source[i];\n\t\t\t\t\t\t\tif (char === '(') break; // parenthesized sequence expressions are ok\n\t\t\t\t\t\t\tif (char === '{') e.attribute_invalid_sequence_expression(expression);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidate_attribute_name(attribute);\n\n\t\t\tif (attribute.name === 'slot') {\n\t\t\t\tvalidate_slot_attribute(context, attribute, true);\n\t\t\t}\n\t\t}\n\n\t\tif (attribute.type === 'BindDirective' && attribute.name !== 'this') {\n\t\t\tcontext.state.analysis.uses_component_bindings = true;\n\t\t}\n\t}\n\n\t// If the component has a slot attribute — `<Foo slot=\"whatever\" .../>` —\n\t// then `let:` directives apply to other attributes, instead of just the\n\t// top-level contents of the component. Yes, this is very weird.\n\tconst default_state = determine_slot(node)\n\t\t? context.state\n\t\t: { ...context.state, scope: node.metadata.scopes.default };\n\n\tfor (const attribute of node.attributes) {\n\t\tcontext.visit(attribute, attribute.type === 'LetDirective' ? default_state : context.state);\n\t}\n\n\t/** @type {AST.Comment[]} */\n\tlet comments = [];\n\n\t/** @type {Record<string, AST.Fragment['nodes']>} */\n\tconst nodes = { default: [] };\n\n\tfor (const child of node.fragment.nodes) {\n\t\tif (child.type === 'Comment') {\n\t\t\tcomments.push(child);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst slot_name = determine_slot(child) ?? 'default';\n\t\t(nodes[slot_name] ??= []).push(...comments, child);\n\n\t\tif (slot_name !== 'default') comments = [];\n\t}\n\n\tconst component_slots = new Set();\n\n\tfor (const slot_name in nodes) {\n\t\t/** @type {AnalysisState} */\n\t\tconst state = {\n\t\t\t...context.state,\n\t\t\tscope: node.metadata.scopes[slot_name],\n\t\t\tparent_element: null,\n\t\t\tcomponent_slots\n\t\t};\n\n\t\tcontext.visit({ ...node.fragment, nodes: nodes[slot_name] }, state);\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { visit_component } from './shared/component.js';\n\n/**\n * @param {AST.Component} node\n * @param {Context} context\n */\nexport function Component(node, context) {\n\tconst binding = context.state.scope.get(\n\t\tnode.name.includes('.') ? node.name.slice(0, node.name.indexOf('.')) : node.name\n\t);\n\n\tnode.metadata.dynamic =\n\t\tcontext.state.analysis.runes && // Svelte 4 required you to use svelte:component to switch components\n\t\tbinding !== null &&\n\t\t(binding.kind !== 'normal' || node.name.includes('.'));\n\n\tvisit_component(node, context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.ConstTag} node\n * @param {Context} context\n */\nexport function ConstTag(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '@');\n\t}\n\n\tconst parent = context.path.at(-1);\n\tconst grand_parent = context.path.at(-2);\n\n\tif (\n\t\tparent?.type !== 'Fragment' ||\n\t\t(grand_parent?.type !== 'IfBlock' &&\n\t\t\tgrand_parent?.type !== 'SvelteFragment' &&\n\t\t\tgrand_parent?.type !== 'Component' &&\n\t\t\tgrand_parent?.type !== 'SvelteComponent' &&\n\t\t\tgrand_parent?.type !== 'EachBlock' &&\n\t\t\tgrand_parent?.type !== 'AwaitBlock' &&\n\t\t\tgrand_parent?.type !== 'SnippetBlock' &&\n\t\t\tgrand_parent?.type !== 'SvelteBoundary' &&\n\t\t\tgrand_parent?.type !== 'KeyBlock' &&\n\t\t\t((grand_parent?.type !== 'RegularElement' && grand_parent?.type !== 'SvelteElement') ||\n\t\t\t\t!grand_parent.attributes.some((a) => a.type === 'Attribute' && a.name === 'slot')))\n\t) {\n\t\te.const_tag_invalid_placement(node);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.DebugTag} node\n * @param {Context} context\n */\nexport function DebugTag(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '@');\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\n/** @import { Scope } from '../../scope' */\nimport * as e from '../../../errors.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { validate_block_not_empty, validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.EachBlock} node\n * @param {Context} context\n */\nexport function EachBlock(node, context) {\n\tvalidate_opening_tag(node, context.state, '#');\n\n\tvalidate_block_not_empty(node.body, context);\n\tvalidate_block_not_empty(node.fallback, context);\n\n\tconst id = node.context;\n\tif (id?.type === 'Identifier' && (id.name === '$state' || id.name === '$derived')) {\n\t\t// TODO weird that this is necessary\n\t\te.state_invalid_placement(node, id.name);\n\t}\n\n\tif (node.key) {\n\t\t// treat `{#each items as item, i (i)}` as a normal indexed block, everything else as keyed\n\t\tnode.metadata.keyed =\n\t\t\tnode.key.type !== 'Identifier' || !node.index || node.key.name !== node.index;\n\t}\n\n\t// evaluate expression in parent scope\n\tcontext.visit(node.expression, {\n\t\t...context.state,\n\t\texpression: node.metadata.expression,\n\t\tscope: /** @type {Scope} */ (context.state.scope.parent)\n\t});\n\n\tcontext.visit(node.body);\n\tif (node.key) context.visit(node.key);\n\tif (node.fallback) context.visit(node.fallback);\n\n\tmark_subtree_dynamic(context.path);\n}\n", "/** @import { ExportDefaultDeclaration } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { validate_export } from './shared/utils.js';\n\n/**\n * @param {ExportDefaultDeclaration} node\n * @param {Context} context\n */\nexport function ExportDefaultDeclaration(node, context) {\n\tif (!context.state.ast_type /* .svelte.js module */) {\n\t\tif (node.declaration.type === 'Identifier') {\n\t\t\tvalidate_export(node, context.state.scope, node.declaration.name);\n\t\t}\n\t} else {\n\t\te.module_illegal_default_export(node);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { ExportNamedDeclaration, Identifier } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { extract_identifiers } from '../../../utils/ast.js';\n\n/**\n * @param {ExportNamedDeclaration} node\n * @param {Context} context\n */\nexport function ExportNamedDeclaration(node, context) {\n\t// visit children, so bindings are correctly initialised\n\tcontext.next();\n\n\tif (node.declaration?.type === 'VariableDeclaration') {\n\t\t// in runes mode, forbid `export let`\n\t\tif (\n\t\t\tcontext.state.analysis.runes &&\n\t\t\tcontext.state.ast_type === 'instance' &&\n\t\t\tnode.declaration.kind === 'let'\n\t\t) {\n\t\t\te.legacy_export_invalid(node);\n\t\t}\n\n\t\tfor (const declarator of node.declaration.declarations) {\n\t\t\tfor (const id of extract_identifiers(declarator.id)) {\n\t\t\t\tconst binding = context.state.scope.get(id.name);\n\t\t\t\tif (!binding) continue;\n\n\t\t\t\tif (binding.kind === 'derived') {\n\t\t\t\t\te.derived_invalid_export(node);\n\t\t\t\t}\n\n\t\t\t\tif ((binding.kind === 'state' || binding.kind === 'raw_state') && binding.reassigned) {\n\t\t\t\t\te.state_invalid_export(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (context.state.analysis.runes) {\n\t\tif (node.declaration && context.state.ast_type === 'instance') {\n\t\t\tif (\n\t\t\t\tnode.declaration.type === 'FunctionDeclaration' ||\n\t\t\t\tnode.declaration.type === 'ClassDeclaration'\n\t\t\t) {\n\t\t\t\tcontext.state.analysis.exports.push({\n\t\t\t\t\tname: /** @type {Identifier} */ (node.declaration.id).name,\n\t\t\t\t\talias: null\n\t\t\t\t});\n\t\t\t} else if (node.declaration.kind === 'const') {\n\t\t\t\tfor (const declarator of node.declaration.declarations) {\n\t\t\t\t\tfor (const node of extract_identifiers(declarator.id)) {\n\t\t\t\t\t\tcontext.state.analysis.exports.push({ name: node.name, alias: null });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { ExportSpecifier } from 'estree' */\n/** @import { Context } from '../types' */\nimport { validate_export } from './shared/utils.js';\n\n/**\n * @param {ExportSpecifier} node\n * @param {Context} context\n */\nexport function ExportSpecifier(node, context) {\n\tconst local_name =\n\t\tnode.local.type === 'Identifier' ? node.local.name : /** @type {string} */ (node.local.value);\n\tconst exported_name =\n\t\tnode.exported.type === 'Identifier'\n\t\t\t? node.exported.name\n\t\t\t: /** @type {string} */ (node.exported.value);\n\n\tif (context.state.ast_type === 'instance') {\n\t\tif (context.state.analysis.runes) {\n\t\t\tcontext.state.analysis.exports.push({\n\t\t\t\tname: local_name,\n\t\t\t\talias: exported_name\n\t\t\t});\n\n\t\t\tconst binding = context.state.scope.get(local_name);\n\t\t\tif (binding) binding.reassigned = true;\n\t\t}\n\t} else {\n\t\tvalidate_export(node, context.state.scope, local_name);\n\t}\n}\n", "/** @import { ExpressionStatement, ImportDeclaration } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as w from '../../../warnings.js';\n\n/**\n * @param {ExpressionStatement} node\n * @param {Context} context\n */\nexport function ExpressionStatement(node, context) {\n\t// warn on `new Component({ target: ... })` if imported from a `.svelte` file\n\tif (\n\t\tnode.expression.type === 'NewExpression' &&\n\t\tnode.expression.callee.type === 'Identifier' &&\n\t\tnode.expression.arguments.length === 1 &&\n\t\tnode.expression.arguments[0].type === 'ObjectExpression' &&\n\t\tnode.expression.arguments[0].properties.some(\n\t\t\t(p) => p.type === 'Property' && p.key.type === 'Identifier' && p.key.name === 'target'\n\t\t)\n\t) {\n\t\tconst binding = context.state.scope.get(node.expression.callee.name);\n\n\t\tif (binding?.kind === 'normal' && binding.declaration_kind === 'import') {\n\t\t\tconst declaration = /** @type {ImportDeclaration} */ (binding.initial);\n\n\t\t\t// Theoretically someone could import a class from a `.svelte.js` module, but that's too rare to worry about\n\t\t\tif (\n\t\t\t\t/** @type {string} */ (declaration.source.value).endsWith('.svelte') &&\n\t\t\t\tdeclaration.specifiers.find(\n\t\t\t\t\t(s) => s.local.name === binding.node.name && s.type === 'ImportDefaultSpecifier'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tw.legacy_component_creation(node.expression);\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { is_tag_valid_with_parent } from '../../../../html-tree-validation.js';\nimport * as e from '../../../errors.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.ExpressionTag} node\n * @param {Context} context\n */\nexport function ExpressionTag(node, context) {\n\tconst in_template = context.path.at(-1)?.type === 'Fragment';\n\n\tif (in_template && context.state.parent_element) {\n\t\tconst message = is_tag_valid_with_parent('#text', context.state.parent_element);\n\t\tif (message) {\n\t\t\te.node_invalid_placement(node, message);\n\t\t}\n\t}\n\n\t// TODO ideally we wouldn't do this here, we'd just do it on encountering\n\t// an `Identifier` within the tag. But we currently need to handle `{42}` etc\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next({ ...context.state, expression: node.metadata.expression });\n}\n", "/** @import { FunctionDeclaration } from 'estree' */\n/** @import { Context } from '../types' */\nimport { visit_function } from './shared/function.js';\nimport { validate_identifier_name } from './shared/utils.js';\n\n/**\n * @param {FunctionDeclaration} node\n * @param {Context} context\n */\nexport function FunctionDeclaration(node, context) {\n\tif (context.state.analysis.runes && node.id !== null) {\n\t\tvalidate_identifier_name(context.state.scope.get(node.id.name));\n\t}\n\n\tvisit_function(node, context);\n}\n", "/** @import { FunctionExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { visit_function } from './shared/function.js';\n\n/**\n * @param {FunctionExpression} node\n * @param {Context} context\n */\nexport function FunctionExpression(node, context) {\n\tvisit_function(node, context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.HtmlTag} node\n * @param {Context} context\n */\nexport function HtmlTag(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '@');\n\t}\n\n\t// unfortunately this is necessary in order to fix invalid HTML\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/** @import { AssignmentExpression, Expression, ExpressionStatement, Identifier, MemberExpression, SequenceExpression, Literal, Super, UpdateExpression } from 'estree' */\n/** @import { AST, ExpressionMetadata } from '#compiler' */\n/** @import { ComponentClientTransformState, Context } from '../../types' */\nimport { walk } from 'zimmerframe';\nimport { object } from '../../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { sanitize_template_string } from '../../../../../utils/sanitize_template_string.js';\nimport { regex_is_valid_identifier } from '../../../../patterns.js';\nimport is_reference from 'is-reference';\nimport { dev, is_ignored, locator } from '../../../../../state.js';\nimport { create_derived } from '../../utils.js';\n\n/**\n * @param {ComponentClientTransformState} state\n * @param {Expression} value\n */\nexport function memoize_expression(state, value) {\n\tconst id = b.id(state.scope.generate('expression'));\n\tstate.init.push(b.const(id, create_derived(state, b.thunk(value))));\n\treturn b.call('$.get', id);\n}\n\n/**\n *\n * @param {ComponentClientTransformState} state\n * @param {Expression} value\n */\nexport function get_expression_id(state, value) {\n\treturn b.id(`$${state.expressions.push(value) - 1}`);\n}\n\n/**\n * @param {Array<AST.Text | AST.ExpressionTag>} values\n * @param {(node: AST.SvelteNode, state: any) => any} visit\n * @param {ComponentClientTransformState} state\n * @param {(value: Expression, metadata: ExpressionMetadata) => Expression} memoize\n * @returns {{ value: Expression, has_state: boolean }}\n */\nexport function build_template_chunk(\n\tvalues,\n\tvisit,\n\tstate,\n\tmemoize = (value, metadata) => (metadata.has_call ? get_expression_id(state, value) : value)\n) {\n\t/** @type {Expression[]} */\n\tconst expressions = [];\n\n\tlet quasi = b.quasi('');\n\tconst quasis = [quasi];\n\n\tlet has_state = false;\n\n\tfor (let i = 0; i < values.length; i++) {\n\t\tconst node = values[i];\n\n\t\tif (node.type === 'Text') {\n\t\t\tquasi.value.cooked += node.data;\n\t\t} else if (node.expression.type === 'Literal') {\n\t\t\tif (node.expression.value != null) {\n\t\t\t\tquasi.value.cooked += node.expression.value + '';\n\t\t\t}\n\t\t} else if (\n\t\t\tnode.expression.type !== 'Identifier' ||\n\t\t\tnode.expression.name !== 'undefined' ||\n\t\t\tstate.scope.get('undefined')\n\t\t) {\n\t\t\tlet value = memoize(\n\t\t\t\t/** @type {Expression} */ (visit(node.expression, state)),\n\t\t\t\tnode.metadata.expression\n\t\t\t);\n\n\t\t\tconst evaluated = state.scope.evaluate(value);\n\n\t\t\thas_state ||= node.metadata.expression.has_state && !evaluated.is_known;\n\n\t\t\tif (values.length === 1) {\n\t\t\t\t// If we have a single expression, then pass that in directly to possibly avoid doing\n\t\t\t\t// extra work in the template_effect (instead we do the work in set_text).\n\t\t\t\tif (evaluated.is_known) {\n\t\t\t\t\tvalue = b.literal((evaluated.value ?? '') + '');\n\t\t\t\t}\n\n\t\t\t\treturn { value, has_state };\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tvalue.type === 'LogicalExpression' &&\n\t\t\t\tvalue.right.type === 'Literal' &&\n\t\t\t\t(value.operator === '??' || value.operator === '||')\n\t\t\t) {\n\t\t\t\t// `foo ?? null` -=> `foo ?? ''`\n\t\t\t\t// otherwise leave the expression untouched\n\t\t\t\tif (value.right.value === null) {\n\t\t\t\t\tvalue = { ...value, right: b.literal('') };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (evaluated.is_known) {\n\t\t\t\tquasi.value.cooked += (evaluated.value ?? '') + '';\n\t\t\t} else {\n\t\t\t\tif (!evaluated.is_defined) {\n\t\t\t\t\t// add `?? ''` where necessary\n\t\t\t\t\tvalue = b.logical('??', value, b.literal(''));\n\t\t\t\t}\n\n\t\t\t\texpressions.push(value);\n\n\t\t\t\tquasi = b.quasi('', i + 1 === values.length);\n\t\t\t\tquasis.push(quasi);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const quasi of quasis) {\n\t\tquasi.value.raw = sanitize_template_string(/** @type {string} */ (quasi.value.cooked));\n\t}\n\n\tconst value =\n\t\texpressions.length > 0\n\t\t\t? b.template(quasis, expressions)\n\t\t\t: b.literal(/** @type {string} */ (quasi.value.cooked));\n\n\treturn { value, has_state };\n}\n\n/**\n * @param {ComponentClientTransformState} state\n */\nexport function build_render_statement(state) {\n\treturn b.stmt(\n\t\tb.call(\n\t\t\t'$.template_effect',\n\t\t\tb.arrow(\n\t\t\t\tstate.expressions.map((_, i) => b.id(`$${i}`)),\n\t\t\t\tstate.update.length === 1 && state.update[0].type === 'ExpressionStatement'\n\t\t\t\t\t? state.update[0].expression\n\t\t\t\t\t: b.block(state.update)\n\t\t\t),\n\t\t\tstate.expressions.length > 0 &&\n\t\t\t\tb.array(state.expressions.map((expression) => b.thunk(expression))),\n\t\t\tstate.expressions.length > 0 && !state.analysis.runes && b.id('$.derived_safe_equal')\n\t\t)\n\t);\n}\n\n/**\n * For unfortunate legacy reasons, directive names can look like this `use:a.b-c`\n * This turns that string into a member expression\n * @param {string} name\n */\nexport function parse_directive_name(name) {\n\t// this allow for accessing members of an object\n\tconst parts = name.split('.');\n\tlet part = /** @type {string} */ (parts.shift());\n\n\t/** @type {Identifier | MemberExpression} */\n\tlet expression = b.id(part);\n\n\twhile ((part = /** @type {string} */ (parts.shift()))) {\n\t\tconst computed = !regex_is_valid_identifier.test(part);\n\t\texpression = b.member(expression, computed ? b.literal(part) : b.id(part), computed);\n\t}\n\n\treturn expression;\n}\n\n/**\n * @param {ComponentClientTransformState} state\n * @param {string} id\n * @param {Expression | undefined} init\n * @param {Expression} value\n * @param {ExpressionStatement} update\n */\nexport function build_update_assignment(state, id, init, value, update) {\n\tstate.init.push(b.var(id, init));\n\tstate.update.push(\n\t\tb.if(b.binary('!==', b.id(id), b.assignment('=', b.id(id), value)), b.block([update]))\n\t);\n}\n\n/**\n * Serializes `bind:this` for components and elements.\n * @param {Identifier | MemberExpression | SequenceExpression} expression\n * @param {Expression} value\n * @param {import('zimmerframe').Context<AST.SvelteNode, ComponentClientTransformState>} context\n */\nexport function build_bind_this(expression, value, { state, visit }) {\n\tif (expression.type === 'SequenceExpression') {\n\t\tconst [get, set] = /** @type {SequenceExpression} */ (visit(expression)).expressions;\n\t\treturn b.call('$.bind_this', value, set, get);\n\t}\n\n\t/** @type {Identifier[]} */\n\tconst ids = [];\n\n\t/** @type {Expression[]} */\n\tconst values = [];\n\n\t/** @type {string[]} */\n\tconst seen = [];\n\n\tconst transform = { ...state.transform };\n\n\t// Pass in each context variables to the get/set functions, so that we can null out old values on teardown.\n\t// Note that we only do this for each context variables, the consequence is that the value might be stale in\n\t// some scenarios where the value is a member expression with changing computed parts or using a combination of multiple\n\t// variables, but that was the same case in Svelte 4, too. Once legacy mode is gone completely, we can revisit this.\n\twalk(expression, null, {\n\t\tIdentifier(node, { path }) {\n\t\t\tif (seen.includes(node.name)) return;\n\t\t\tseen.push(node.name);\n\n\t\t\tconst parent = /** @type {Expression} */ (path.at(-1));\n\t\t\tif (!is_reference(node, parent)) return;\n\n\t\t\tconst binding = state.scope.get(node.name);\n\t\t\tif (!binding) return;\n\n\t\t\tfor (const [owner, scope] of state.scopes) {\n\t\t\t\tif (owner.type === 'EachBlock' && scope === binding.scope) {\n\t\t\t\t\tids.push(node);\n\t\t\t\t\tvalues.push(/** @type {Expression} */ (visit(node)));\n\n\t\t\t\t\tif (transform[node.name]) {\n\t\t\t\t\t\ttransform[node.name] = {\n\t\t\t\t\t\t\t...transform[node.name],\n\t\t\t\t\t\t\tread: (node) => node\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst child_state = { ...state, transform };\n\n\tconst get = /** @type {Expression} */ (visit(expression, child_state));\n\tconst set = /** @type {Expression} */ (\n\t\tvisit(b.assignment('=', expression, b.id('$$value')), child_state)\n\t);\n\n\t// If we're mutating a property, then it might already be non-existent.\n\t// If we make all the object nodes optional, then it avoids any runtime exceptions.\n\t/** @type {Expression | Super} */\n\tlet node = get;\n\n\twhile (node.type === 'MemberExpression') {\n\t\tnode.optional = true;\n\t\tnode = node.object;\n\t}\n\n\treturn b.call(\n\t\t'$.bind_this',\n\t\tvalue,\n\t\tb.arrow([b.id('$$value'), ...ids], set),\n\t\tb.arrow([...ids], get),\n\t\tvalues.length > 0 && b.thunk(b.array(values))\n\t);\n}\n\n/**\n * @param {ComponentClientTransformState} state\n * @param {AST.BindDirective} binding\n * @param {MemberExpression} expression\n */\nexport function validate_binding(state, binding, expression) {\n\tif (binding.expression.type === 'SequenceExpression') {\n\t\treturn;\n\t}\n\t// If we are referencing a $store.foo then we don't need to add validation\n\tconst left = object(binding.expression);\n\tconst left_binding = left && state.scope.get(left.name);\n\tif (left_binding?.kind === 'store_sub') return;\n\n\tconst loc = locator(binding.start);\n\n\tconst obj = /** @type {Expression} */ (expression.object);\n\n\tstate.init.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.validate_binding',\n\t\t\t\tb.literal(state.analysis.source.slice(binding.start, binding.end)),\n\t\t\t\tb.thunk(\n\t\t\t\t\tstate.store_to_invalidate ? b.sequence([b.call('$.mark_store_binding'), obj]) : obj\n\t\t\t\t),\n\t\t\t\tb.thunk(\n\t\t\t\t\t/** @type {Expression} */ (\n\t\t\t\t\t\texpression.computed\n\t\t\t\t\t\t\t? expression.property\n\t\t\t\t\t\t\t: b.literal(/** @type {Identifier} */ (expression.property).name)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tloc && b.literal(loc.line),\n\t\t\t\tloc && b.literal(loc.column)\n\t\t\t)\n\t\t)\n\t);\n}\n\n/**\n * In dev mode validate mutations to props\n * @param {AssignmentExpression | UpdateExpression} node\n * @param {Context} context\n * @param {Expression} expression\n */\nexport function validate_mutation(node, context, expression) {\n\tlet left = /** @type {Expression | Super} */ (\n\t\tnode.type === 'AssignmentExpression' ? node.left : node.argument\n\t);\n\n\tif (!dev || left.type !== 'MemberExpression' || is_ignored(node, 'ownership_invalid_mutation')) {\n\t\treturn expression;\n\t}\n\n\tconst name = object(left);\n\tif (!name) return expression;\n\n\tconst binding = context.state.scope.get(name.name);\n\tif (binding?.kind !== 'prop' && binding?.kind !== 'bindable_prop') return expression;\n\n\tconst state = /** @type {ComponentClientTransformState} */ (context.state);\n\tstate.analysis.needs_mutation_validation = true;\n\n\t/** @type {Array<Identifier | Literal | Expression>} */\n\tconst path = [];\n\n\twhile (left.type === 'MemberExpression') {\n\t\tif (left.property.type === 'Literal') {\n\t\t\tpath.unshift(left.property);\n\t\t} else if (left.property.type === 'Identifier') {\n\t\t\tconst transform = Object.hasOwn(context.state.transform, left.property.name)\n\t\t\t\t? context.state.transform[left.property.name]\n\t\t\t\t: null;\n\t\t\tif (left.computed) {\n\t\t\t\tpath.unshift(transform?.read ? transform.read(left.property) : left.property);\n\t\t\t} else {\n\t\t\t\tpath.unshift(b.literal(left.property.name));\n\t\t\t}\n\t\t} else {\n\t\t\treturn expression;\n\t\t}\n\n\t\tleft = left.object;\n\t}\n\n\tpath.unshift(b.literal(name.name));\n\n\tconst loc = locator(/** @type {number} */ (left.start));\n\n\treturn b.call(\n\t\t'$$ownership_validator.mutation',\n\t\tb.literal(binding.prop_alias),\n\t\tb.array(path),\n\t\texpression,\n\t\tloc && b.literal(loc.line),\n\t\tloc && b.literal(loc.column)\n\t);\n}\n", "/** @import { ArrowFunctionExpression, AssignmentExpression, Expression, FunctionDeclaration, FunctionExpression, Identifier, Node, Pattern, UpdateExpression } from 'estree' */\n/** @import { Binding } from '#compiler' */\n/** @import { ClientTransformState, ComponentClientTransformState, ComponentContext } from './types.js' */\n/** @import { Analysis } from '../../types.js' */\n/** @import { Scope } from '../../scope.js' */\nimport * as b from '#compiler/builders';\nimport { is_simple_expression } from '../../../utils/ast.js';\nimport {\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED,\n\tPROPS_IS_BINDABLE\n} from '../../../../constants.js';\nimport { dev } from '../../../state.js';\nimport { walk } from 'zimmerframe';\nimport { validate_mutation } from './visitors/shared/utils.js';\n\n/**\n * @param {Binding} binding\n * @param {Analysis} analysis\n * @returns {boolean}\n */\nexport function is_state_source(binding, analysis) {\n\treturn (\n\t\t(binding.kind === 'state' || binding.kind === 'raw_state') &&\n\t\t(!analysis.immutable || binding.reassigned || analysis.accessors)\n\t);\n}\n\n/**\n * @param {Identifier} node\n * @param {ClientTransformState} state\n * @returns {Expression}\n */\nexport function build_getter(node, state) {\n\tif (Object.hasOwn(state.transform, node.name)) {\n\t\tconst binding = state.scope.get(node.name);\n\n\t\t// don't transform the declaration itself\n\t\tif (node !== binding?.node) {\n\t\t\treturn state.transform[node.name].read(node);\n\t\t}\n\t}\n\n\treturn node;\n}\n\n/**\n * @param {FunctionDeclaration | FunctionExpression | ArrowFunctionExpression} node\n * @param {ComponentContext} context\n * @returns {Pattern[]}\n */\nfunction get_hoisted_params(node, context) {\n\tconst scope = context.state.scope;\n\n\t/** @type {Identifier[]} */\n\tconst params = [];\n\n\t/**\n\t * We only want to push if it's not already present to avoid name clashing\n\t * @param {Identifier} id\n\t */\n\tfunction push_unique(id) {\n\t\tif (!params.find((param) => param.name === id.name)) {\n\t\t\tparams.push(id);\n\t\t}\n\t}\n\n\tfor (const [reference] of scope.references) {\n\t\tlet binding = scope.get(reference);\n\n\t\tif (binding !== null && !scope.declarations.has(reference) && binding.initial !== node) {\n\t\t\tif (binding.kind === 'store_sub') {\n\t\t\t\t// We need both the subscription for getting the value and the store for updating\n\t\t\t\tpush_unique(b.id(binding.node.name));\n\t\t\t\tbinding = /** @type {Binding} */ (scope.get(binding.node.name.slice(1)));\n\t\t\t}\n\n\t\t\tlet expression = context.state.transform[reference]?.read(b.id(binding.node.name));\n\n\t\t\tif (\n\t\t\t\t// If it's a destructured derived binding, then we can extract the derived signal reference and use that.\n\t\t\t\t// TODO this code is bad, we need to kill it\n\t\t\t\texpression != null &&\n\t\t\t\ttypeof expression !== 'function' &&\n\t\t\t\texpression.type === 'MemberExpression' &&\n\t\t\t\texpression.object.type === 'CallExpression' &&\n\t\t\t\texpression.object.callee.type === 'Identifier' &&\n\t\t\t\texpression.object.callee.name === '$.get' &&\n\t\t\t\texpression.object.arguments[0].type === 'Identifier'\n\t\t\t) {\n\t\t\t\tpush_unique(b.id(expression.object.arguments[0].name));\n\t\t\t} else if (\n\t\t\t\t// If we are referencing a simple $$props value, then we need to reference the object property instead\n\t\t\t\t(binding.kind === 'prop' || binding.kind === 'bindable_prop') &&\n\t\t\t\t!is_prop_source(binding, context.state)\n\t\t\t) {\n\t\t\t\tpush_unique(b.id('$$props'));\n\t\t\t} else if (\n\t\t\t\t// imports don't need to be hoisted\n\t\t\t\tbinding.declaration_kind !== 'import'\n\t\t\t) {\n\t\t\t\t// create a copy to remove start/end tags which would mess up source maps\n\t\t\t\tpush_unique(b.id(binding.node.name));\n\t\t\t\t// rest props are often accessed through the $$props object for optimization reasons,\n\t\t\t\t// but we can't know if the delegated event handler will use it, so we need to add both as params\n\t\t\t\tif (binding.kind === 'rest_prop' && context.state.analysis.runes) {\n\t\t\t\t\tpush_unique(b.id('$$props'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dev) {\n\t\t// this is a little hacky, but necessary for ownership validation\n\t\t// to work inside hoisted event handlers\n\n\t\t/**\n\t\t * @param {AssignmentExpression | UpdateExpression} node\n\t\t * @param {{ next: () => void, stop: () => void }} context\n\t\t */\n\t\tfunction visit(node, { next, stop }) {\n\t\t\tif (validate_mutation(node, /** @type {any} */ (context), node) !== node) {\n\t\t\t\tparams.push(b.id('$$ownership_validator'));\n\t\t\t\tstop();\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\n\t\twalk(/** @type {Node} */ (node), null, {\n\t\t\tAssignmentExpression: visit,\n\t\t\tUpdateExpression: visit\n\t\t});\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {FunctionDeclaration | FunctionExpression | ArrowFunctionExpression} node\n * @param {ComponentContext} context\n * @returns {Pattern[]}\n */\nexport function build_hoisted_params(node, context) {\n\tconst hoisted_params = get_hoisted_params(node, context);\n\tnode.metadata.hoisted_params = hoisted_params;\n\n\t/** @type {Pattern[]} */\n\tconst params = [];\n\n\tif (node.params.length === 0) {\n\t\tif (hoisted_params.length > 0) {\n\t\t\t// For the event object\n\t\t\tparams.push(b.id(context.state.scope.generate('_')));\n\t\t}\n\t} else {\n\t\tfor (const param of node.params) {\n\t\t\tparams.push(/** @type {Pattern} */ (context.visit(param)));\n\t\t}\n\t}\n\n\tparams.push(...hoisted_params);\n\treturn params;\n}\n\n/**\n * @param {Binding} binding\n * @param {ComponentClientTransformState} state\n * @param {string} name\n * @param {Expression | null} [initial]\n * @returns\n */\nexport function get_prop_source(binding, state, name, initial) {\n\t/** @type {Expression[]} */\n\tconst args = [b.id('$$props'), b.literal(name)];\n\n\tlet flags = 0;\n\n\tif (binding.kind === 'bindable_prop') {\n\t\tflags |= PROPS_IS_BINDABLE;\n\t}\n\n\tif (state.analysis.immutable) {\n\t\tflags |= PROPS_IS_IMMUTABLE;\n\t}\n\n\tif (state.analysis.runes) {\n\t\tflags |= PROPS_IS_RUNES;\n\t}\n\n\tif (\n\t\tstate.analysis.accessors ||\n\t\t(state.analysis.immutable\n\t\t\t? binding.reassigned || (state.analysis.runes && binding.mutated)\n\t\t\t: binding.updated)\n\t) {\n\t\tflags |= PROPS_IS_UPDATED;\n\t}\n\n\t/** @type {Expression | undefined} */\n\tlet arg;\n\n\tif (initial) {\n\t\t// To avoid eagerly evaluating the right-hand-side, we wrap it in a thunk if necessary\n\t\tif (is_simple_expression(initial)) {\n\t\t\targ = initial;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tinitial.type === 'CallExpression' &&\n\t\t\t\tinitial.callee.type === 'Identifier' &&\n\t\t\t\tinitial.arguments.length === 0\n\t\t\t) {\n\t\t\t\targ = initial.callee;\n\t\t\t} else {\n\t\t\t\targ = b.thunk(initial);\n\t\t\t}\n\n\t\t\tflags |= PROPS_IS_LAZY_INITIAL;\n\t\t}\n\t}\n\n\tif (flags || arg) {\n\t\targs.push(b.literal(flags));\n\t\tif (arg) args.push(arg);\n\t}\n\n\treturn b.call('$.prop', ...args);\n}\n\n/**\n *\n * @param {Binding} binding\n * @param {ClientTransformState} state\n * @returns\n */\nexport function is_prop_source(binding, state) {\n\treturn (\n\t\t(binding.kind === 'prop' || binding.kind === 'bindable_prop') &&\n\t\t(!state.analysis.runes ||\n\t\t\tstate.analysis.accessors ||\n\t\t\tbinding.reassigned ||\n\t\t\tbinding.initial ||\n\t\t\t// Until legacy mode is gone, we also need to use the prop source when only mutated is true,\n\t\t\t// because the parent could be a legacy component which needs coarse-grained reactivity\n\t\t\tbinding.updated)\n\t);\n}\n\n/**\n * @param {Expression} node\n * @param {Scope | null} scope\n */\nexport function should_proxy(node, scope) {\n\tif (\n\t\t!node ||\n\t\tnode.type === 'Literal' ||\n\t\tnode.type === 'TemplateLiteral' ||\n\t\tnode.type === 'ArrowFunctionExpression' ||\n\t\tnode.type === 'FunctionExpression' ||\n\t\tnode.type === 'UnaryExpression' ||\n\t\tnode.type === 'BinaryExpression' ||\n\t\t(node.type === 'Identifier' && node.name === 'undefined')\n\t) {\n\t\treturn false;\n\t}\n\n\tif (node.type === 'Identifier' && scope !== null) {\n\t\tconst binding = scope.get(node.name);\n\t\t// Let's see if the reference is something that can be proxied\n\t\tif (\n\t\t\tbinding !== null &&\n\t\t\t!binding.reassigned &&\n\t\t\tbinding.initial !== null &&\n\t\t\tbinding.initial.type !== 'FunctionDeclaration' &&\n\t\t\tbinding.initial.type !== 'ClassDeclaration' &&\n\t\t\tbinding.initial.type !== 'ImportDeclaration' &&\n\t\t\tbinding.initial.type !== 'EachBlock' &&\n\t\t\tbinding.initial.type !== 'SnippetBlock'\n\t\t) {\n\t\t\treturn should_proxy(binding.initial, null);\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Svelte legacy mode should use safe equals in most places, runes mode shouldn't\n * @param {ComponentClientTransformState} state\n * @param {Expression} arg\n */\nexport function create_derived(state, arg) {\n\treturn b.call(state.analysis.runes ? '$.derived' : '$.derived_safe_equal', arg);\n}\n", "/** @import { Expression, Identifier } from 'estree' */\n/** @import { Context } from '../types' */\nimport is_reference from 'is-reference';\nimport { should_proxy } from '../../3-transform/client/utils.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { is_rune } from '../../../../utils.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { get_rune } from '../../scope.js';\n\n/**\n * @param {Identifier} node\n * @param {Context} context\n */\nexport function Identifier(node, context) {\n\tlet i = context.path.length;\n\tlet parent = /** @type {Expression} */ (context.path[--i]);\n\n\tif (!is_reference(node, parent)) {\n\t\treturn;\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\t// If we are using arguments outside of a function, then throw an error\n\tif (\n\t\tnode.name === 'arguments' &&\n\t\t!context.path.some((n) => n.type === 'FunctionDeclaration' || n.type === 'FunctionExpression')\n\t) {\n\t\te.invalid_arguments_usage(node);\n\t}\n\n\t// `$$slots` exists even in runes mode\n\tif (node.name === '$$slots') {\n\t\tcontext.state.analysis.uses_slots = true;\n\t}\n\n\tif (context.state.analysis.runes) {\n\t\tif (\n\t\t\tis_rune(node.name) &&\n\t\t\tcontext.state.scope.get(node.name) === null &&\n\t\t\tcontext.state.scope.get(node.name.slice(1))?.kind !== 'store_sub'\n\t\t) {\n\t\t\t/** @type {Expression} */\n\t\t\tlet current = node;\n\t\t\tlet name = node.name;\n\n\t\t\twhile (parent.type === 'MemberExpression') {\n\t\t\t\tif (parent.computed) e.rune_invalid_computed_property(parent);\n\t\t\t\tname += `.${/** @type {Identifier} */ (parent.property).name}`;\n\n\t\t\t\tcurrent = parent;\n\t\t\t\tparent = /** @type {Expression} */ (context.path[--i]);\n\n\t\t\t\tif (!is_rune(name)) {\n\t\t\t\t\tif (name === '$effect.active') {\n\t\t\t\t\t\te.rune_renamed(parent, '$effect.active', '$effect.tracking');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (name === '$state.frozen') {\n\t\t\t\t\t\te.rune_renamed(parent, '$state.frozen', '$state.raw');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (name === '$state.is') {\n\t\t\t\t\t\te.rune_removed(parent, '$state.is');\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_invalid_name(parent, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parent.type !== 'CallExpression') {\n\t\t\t\te.rune_missing_parentheses(current);\n\t\t\t}\n\t\t}\n\t}\n\n\tlet binding = context.state.scope.get(node.name);\n\n\tif (!context.state.analysis.runes) {\n\t\tif (node.name === '$$props') {\n\t\t\tcontext.state.analysis.uses_props = true;\n\t\t}\n\n\t\tif (node.name === '$$restProps') {\n\t\t\tcontext.state.analysis.uses_rest_props = true;\n\t\t}\n\t}\n\n\tif (binding) {\n\t\tif (context.state.expression) {\n\t\t\tcontext.state.expression.dependencies.add(binding);\n\t\t\tcontext.state.expression.has_state ||= binding.kind !== 'normal';\n\t\t}\n\n\t\tif (\n\t\t\tcontext.state.analysis.runes &&\n\t\t\tnode !== binding.node &&\n\t\t\tcontext.state.function_depth === binding.scope.function_depth &&\n\t\t\t// If we have $state that can be proxied or frozen and isn't re-assigned, then that means\n\t\t\t// it's likely not using a primitive value and thus this warning isn't that helpful.\n\t\t\t((binding.kind === 'state' &&\n\t\t\t\t(binding.reassigned ||\n\t\t\t\t\t(binding.initial?.type === 'CallExpression' &&\n\t\t\t\t\t\tbinding.initial.arguments.length === 1 &&\n\t\t\t\t\t\tbinding.initial.arguments[0].type !== 'SpreadElement' &&\n\t\t\t\t\t\t!should_proxy(binding.initial.arguments[0], context.state.scope)))) ||\n\t\t\t\tbinding.kind === 'raw_state' ||\n\t\t\t\tbinding.kind === 'derived') &&\n\t\t\t// We're only concerned with reads here\n\t\t\t(parent.type !== 'AssignmentExpression' || parent.left !== node) &&\n\t\t\tparent.type !== 'UpdateExpression'\n\t\t) {\n\t\t\tlet type = 'closure';\n\n\t\t\tlet i = context.path.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst parent = context.path[i];\n\n\t\t\t\tif (\n\t\t\t\t\tparent.type === 'ArrowFunctionExpression' ||\n\t\t\t\t\tparent.type === 'FunctionDeclaration' ||\n\t\t\t\t\tparent.type === 'FunctionExpression'\n\t\t\t\t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tparent.type === 'CallExpression' &&\n\t\t\t\t\tparent.arguments.includes(/** @type {any} */ (context.path[i + 1]))\n\t\t\t\t) {\n\t\t\t\t\tconst rune = get_rune(parent, context.state.scope);\n\n\t\t\t\t\tif (rune === '$state' || rune === '$state.raw') {\n\t\t\t\t\t\ttype = 'derived';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw.state_referenced_locally(node, node.name, type);\n\t\t}\n\n\t\tif (\n\t\t\tcontext.state.reactive_statement &&\n\t\t\tbinding.scope === context.state.analysis.module.scope &&\n\t\t\tbinding.reassigned\n\t\t) {\n\t\t\tw.reactive_declaration_module_script_dependency(node);\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { validate_block_not_empty, validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.IfBlock} node\n * @param {Context} context\n */\nexport function IfBlock(node, context) {\n\tvalidate_block_not_empty(node.consequent, context);\n\tvalidate_block_not_empty(node.alternate, context);\n\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, node.elseif ? ':' : '#');\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/** @import { ImportDeclaration } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\n\n/**\n * @param {ImportDeclaration} node\n * @param {Context} context\n */\nexport function ImportDeclaration(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tconst source = /** @type {string} */ (node.source.value);\n\n\t\tif (source.startsWith('svelte/internal')) {\n\t\t\te.import_svelte_internal_forbidden(node);\n\t\t}\n\n\t\tif (source === 'svelte') {\n\t\t\tfor (const specifier of node.specifiers) {\n\t\t\t\tif (specifier.type === 'ImportSpecifier') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tspecifier.imported.type === 'Identifier' &&\n\t\t\t\t\t\t(specifier.imported.name === 'beforeUpdate' ||\n\t\t\t\t\t\t\tspecifier.imported.name === 'afterUpdate')\n\t\t\t\t\t) {\n\t\t\t\t\t\te.runes_mode_invalid_import(specifier, specifier.imported.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { validate_block_not_empty, validate_opening_tag } from './shared/utils.js';\n\n/**\n * @param {AST.KeyBlock} node\n * @param {Context} context\n */\nexport function KeyBlock(node, context) {\n\tvalidate_block_not_empty(node.fragment, context);\n\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '#');\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/** @import { Expression, LabeledStatement } from 'estree' */\n/** @import { AST, ReactiveStatement } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { extract_identifiers, object } from '../../../utils/ast.js';\nimport * as w from '../../../warnings.js';\n\n/**\n * @param {LabeledStatement} node\n * @param {Context} context\n */\nexport function LabeledStatement(node, context) {\n\tif (node.label.name === '$') {\n\t\tconst parent = /** @type {AST.SvelteNode} */ (context.path.at(-1));\n\n\t\tconst is_reactive_statement =\n\t\t\tcontext.state.ast_type === 'instance' && parent.type === 'Program';\n\n\t\tif (is_reactive_statement) {\n\t\t\tif (context.state.analysis.runes) {\n\t\t\t\te.legacy_reactive_statement_invalid(node);\n\t\t\t}\n\n\t\t\t// Find all dependencies of this `$: {...}` statement\n\t\t\t/** @type {ReactiveStatement} */\n\t\t\tconst reactive_statement = {\n\t\t\t\tassignments: new Set(),\n\t\t\t\tdependencies: []\n\t\t\t};\n\n\t\t\tcontext.next({\n\t\t\t\t...context.state,\n\t\t\t\treactive_statement,\n\t\t\t\tfunction_depth: context.state.scope.function_depth + 1\n\t\t\t});\n\n\t\t\t// Every referenced binding becomes a dependency, unless it's on\n\t\t\t// the left-hand side of an `=` assignment\n\t\t\tfor (const [name, nodes] of context.state.scope.references) {\n\t\t\t\tconst binding = context.state.scope.get(name);\n\t\t\t\tif (binding === null) continue;\n\n\t\t\t\tfor (const { node, path } of nodes) {\n\t\t\t\t\t/** @type {Expression} */\n\t\t\t\t\tlet left = node;\n\n\t\t\t\t\tlet i = path.length - 1;\n\t\t\t\t\tlet parent = /** @type {Expression} */ (path.at(i));\n\t\t\t\t\twhile (parent.type === 'MemberExpression') {\n\t\t\t\t\t\tleft = parent;\n\t\t\t\t\t\tparent = /** @type {Expression} */ (path.at(--i));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.type === 'AssignmentExpression' &&\n\t\t\t\t\t\tparent.operator === '=' &&\n\t\t\t\t\t\tparent.left === left\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treactive_statement.dependencies.push(binding);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.state.analysis.reactive_statements.set(node, reactive_statement);\n\n\t\t\tif (\n\t\t\t\tnode.body.type === 'ExpressionStatement' &&\n\t\t\t\tnode.body.expression.type === 'AssignmentExpression'\n\t\t\t) {\n\t\t\t\tlet ids = extract_identifiers(node.body.expression.left);\n\t\t\t\tif (node.body.expression.left.type === 'MemberExpression') {\n\t\t\t\t\tconst id = object(node.body.expression.left);\n\t\t\t\t\tif (id !== null) {\n\t\t\t\t\t\tids = [id];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const id of ids) {\n\t\t\t\t\tconst binding = context.state.scope.get(id.name);\n\t\t\t\t\tif (binding?.kind === 'legacy_reactive') {\n\t\t\t\t\t\t// TODO does this include `let double; $: double = x * 2`?\n\t\t\t\t\t\tbinding.legacy_dependencies = Array.from(reactive_statement.dependencies);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!context.state.analysis.runes) {\n\t\t\tw.reactive_declaration_invalid_placement(node);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\n\n/**\n * @param {AST.LetDirective} node\n * @param {Context} context\n */\nexport function LetDirective(node, context) {\n\tconst parent = context.path.at(-1);\n\n\tif (\n\t\tparent === undefined ||\n\t\t(parent.type !== 'Component' &&\n\t\t\tparent.type !== 'RegularElement' &&\n\t\t\tparent.type !== 'SlotElement' &&\n\t\t\tparent.type !== 'SvelteElement' &&\n\t\t\tparent.type !== 'SvelteComponent' &&\n\t\t\tparent.type !== 'SvelteSelf' &&\n\t\t\tparent.type !== 'SvelteFragment')\n\t) {\n\t\te.let_directive_invalid_placement(node);\n\t}\n}\n", "/** @import { Literal } from 'estree' */\nimport * as w from '../../../warnings.js';\nimport { regex_bidirectional_control_characters } from '../../patterns.js';\n\n/**\n * @param {Literal} node\n */\nexport function Literal(node) {\n\tif (typeof node.value === 'string') {\n\t\tif (regex_bidirectional_control_characters.test(node.value)) {\n\t\t\tw.bidirectional_control_characters(node);\n\t\t}\n\t}\n}\n", "/** @import { MemberExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { is_pure, is_safe_identifier } from './shared/utils.js';\n\n/**\n * @param {MemberExpression} node\n * @param {Context} context\n */\nexport function MemberExpression(node, context) {\n\tif (node.object.type === 'Identifier' && node.property.type === 'Identifier') {\n\t\tconst binding = context.state.scope.get(node.object.name);\n\t\tif (binding?.kind === 'rest_prop' && node.property.name.startsWith('$$')) {\n\t\t\te.props_illegal_name(node.property);\n\t\t}\n\t}\n\n\tif (context.state.expression && !is_pure(node, context)) {\n\t\tcontext.state.expression.has_state = true;\n\t}\n\n\tif (!is_safe_identifier(node, context.state.scope)) {\n\t\tcontext.state.analysis.needs_context = true;\n\t}\n\n\tcontext.next();\n}\n", "/** @import { NewExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as w from '../../../warnings.js';\n\n/**\n * @param {NewExpression} node\n * @param {Context} context\n */\nexport function NewExpression(node, context) {\n\tif (node.callee.type === 'ClassExpression' && context.state.scope.function_depth > 0) {\n\t\tw.perf_avoid_inline_class(node);\n\t}\n\n\tcontext.state.analysis.needs_context = true;\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as w from '../../../warnings.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.OnDirective} node\n * @param {Context} context\n */\nexport function OnDirective(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tconst parent_type = context.path.at(-1)?.type;\n\n\t\t// Don't warn on component events; these might not be under the author's control so the warning would be unactionable\n\t\tif (parent_type === 'RegularElement' || parent_type === 'SvelteElement') {\n\t\t\tw.event_directive_deprecated(node, node.name);\n\t\t}\n\t}\n\n\tconst parent = context.path.at(-1);\n\tif (parent?.type === 'SvelteElement' || parent?.type === 'RegularElement') {\n\t\tcontext.state.analysis.event_directive_node ??= node;\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next({ ...context.state, expression: node.metadata.expression });\n}\n", "/** @import { Context } from '../../types.js' */\n/** @import { AST } from '#compiler' */\n/** @import { ARIARoleDefinitionKey, ARIARoleRelationConcept, ARIAProperty, ARIAPropertyDefinition, ARIARoleDefinition } from 'aria-query' */\nimport { roles as roles_map, aria, elementRoles } from 'aria-query';\n// @ts-expect-error package doesn't provide typings\nimport { AXObjects, AXObjectRoles, elementAXObjects } from 'axobject-query';\nimport {\n\tregex_heading_tags,\n\tregex_not_whitespace,\n\tregex_starts_with_vowel,\n\tregex_whitespaces\n} from '../../../patterns.js';\nimport * as w from '../../../../warnings.js';\nimport fuzzymatch from '../../../1-parse/utils/fuzzymatch.js';\nimport { is_event_attribute, is_text_attribute } from '../../../../utils/ast.js';\nimport { walk } from 'zimmerframe';\nimport { list } from '../../../../utils/string.js';\nimport { is_content_editable_binding } from '../../../../../utils.js';\n\nconst aria_roles = roles_map.keys();\nconst abstract_roles = aria_roles.filter((role) => roles_map.get(role)?.abstract);\nconst non_abstract_roles = aria_roles.filter((name) => !abstract_roles.includes(name));\nconst non_interactive_roles = non_abstract_roles\n\t.filter((name) => {\n\t\tconst role = roles_map.get(name);\n\t\treturn (\n\t\t\t// 'toolbar' does not descend from widget, but it does support\n\t\t\t// aria-activedescendant, thus in practice we treat it as a widget.\n\t\t\t// focusable tabpanel elements are recommended if any panels in a set contain content where the first element in the panel is not focusable.\n\t\t\t// 'generic' is meant to have no semantic meaning.\n\t\t\t// 'cell' is treated as CellRole by the AXObject which is interactive, so we treat 'cell' it as interactive as well.\n\t\t\t!['toolbar', 'tabpanel', 'generic', 'cell'].includes(name) &&\n\t\t\t!role?.superClass.some((classes) => classes.includes('widget') || classes.includes('window'))\n\t\t);\n\t})\n\t.concat(\n\t\t// The `progressbar` is descended from `widget`, but in practice, its\n\t\t// value is always `readonly`, so we treat it as a non-interactive role.\n\t\t'progressbar'\n\t);\nconst interactive_roles = non_abstract_roles.filter(\n\t(name) =>\n\t\t!non_interactive_roles.includes(name) &&\n\t\t// 'generic' is meant to have no semantic meaning.\n\t\tname !== 'generic'\n);\n\n/**\n * @param {ARIARoleDefinitionKey} role\n */\nfunction is_non_interactive_roles(role) {\n\treturn non_interactive_roles.includes(role);\n}\n\n/**\n * @param {ARIARoleDefinitionKey} role\n */\nfunction is_interactive_roles(role) {\n\treturn interactive_roles.includes(role);\n}\n\n/**\n * @param {ARIARoleDefinitionKey} role\n */\nfunction is_abstract_role(role) {\n\treturn abstract_roles.includes(role);\n}\n\nconst presentation_roles = ['presentation', 'none'];\n\n/**\n * @param {ARIARoleDefinitionKey} role\n */\nfunction is_presentation_role(role) {\n\treturn presentation_roles.includes(role);\n}\n\n/**\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n */\nfunction is_hidden_from_screen_reader(tag_name, attribute_map) {\n\tif (tag_name === 'input') {\n\t\tconst type = get_static_value(attribute_map.get('type'));\n\t\tif (type === 'hidden') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst aria_hidden = attribute_map.get('aria-hidden');\n\tif (!aria_hidden) return false;\n\tconst aria_hidden_value = get_static_value(aria_hidden);\n\tif (aria_hidden_value === null) return true;\n\treturn aria_hidden_value === true || aria_hidden_value === 'true';\n}\n\n/**\n * @param {Map<string, AST.Attribute>} attribute_map\n */\nfunction has_disabled_attribute(attribute_map) {\n\tconst disabled_attr_value = get_static_value(attribute_map.get('disabled'));\n\tif (disabled_attr_value) {\n\t\treturn true;\n\t}\n\n\tconst aria_disabled_attr = attribute_map.get('aria-disabled');\n\tif (aria_disabled_attr) {\n\t\tconst aria_disabled_attr_value = get_static_value(aria_disabled_attr);\n\t\tif (aria_disabled_attr_value === 'true') {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * @type {ARIARoleRelationConcept[]}\n */\nconst non_interactive_element_role_schemas = [];\nelementRoles.entries().forEach(([schema, roles]) => {\n\tif ([...roles].every((role) => role !== 'generic' && non_interactive_roles.includes(role))) {\n\t\tnon_interactive_element_role_schemas.push(schema);\n\t}\n});\n\n/**\n * @type {ARIARoleRelationConcept[]}\n */\nconst interactive_element_role_schemas = [];\nelementRoles.entries().forEach(([schema, roles]) => {\n\tif ([...roles].every((role) => interactive_roles.includes(role))) {\n\t\tinteractive_element_role_schemas.push(schema);\n\t}\n});\nconst interactive_ax_objects = [...AXObjects.keys()].filter(\n\t(name) => AXObjects.get(name).type === 'widget'\n);\nconst non_interactive_ax_objects = [...AXObjects.keys()].filter((name) =>\n\t['windows', 'structure'].includes(AXObjects.get(name).type)\n);\n\n/**\n * @type {ARIARoleRelationConcept[]}\n */\nconst interactive_element_ax_object_schemas = [];\nelementAXObjects.entries().forEach(\n\t/**\n\t * @param {any} _\n\t */\n\t([schema, ax_object]) => {\n\t\tif ([...ax_object].every((role) => interactive_ax_objects.includes(role))) {\n\t\t\tinteractive_element_ax_object_schemas.push(schema);\n\t\t}\n\t}\n);\n\n/**\n * @type {ARIARoleRelationConcept[]}\n */\nconst non_interactive_element_ax_object_schemas = [];\nelementAXObjects.entries().forEach(\n\t/**\n\t * @param {any} _\n\t */\n\t([schema, ax_object]) => {\n\t\tif ([...ax_object].every((role) => non_interactive_ax_objects.includes(role))) {\n\t\t\tnon_interactive_element_ax_object_schemas.push(schema);\n\t\t}\n\t}\n);\n\n/**\n * @param {ARIARoleRelationConcept} schema\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n */\nfunction match_schema(schema, tag_name, attribute_map) {\n\tif (schema.name !== tag_name) return false;\n\tif (!schema.attributes) return true;\n\treturn schema.attributes.every((schema_attribute) => {\n\t\tconst attribute = attribute_map.get(schema_attribute.name);\n\t\tif (!attribute) return false;\n\t\tif (schema_attribute.value && schema_attribute.value !== get_static_text_value(attribute)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n}\n\nconst ElementInteractivity = /** @type {const} */ ({\n\tInteractive: 'interactive',\n\tNonInteractive: 'non-interactive',\n\tStatic: 'static'\n});\n\n/**\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n * @returns {ElementInteractivity[keyof ElementInteractivity]}\n */\nfunction element_interactivity(tag_name, attribute_map) {\n\tif (\n\t\tinteractive_element_role_schemas.some((schema) => match_schema(schema, tag_name, attribute_map))\n\t) {\n\t\treturn ElementInteractivity.Interactive;\n\t}\n\tif (\n\t\ttag_name !== 'header' &&\n\t\tnon_interactive_element_role_schemas.some((schema) =>\n\t\t\tmatch_schema(schema, tag_name, attribute_map)\n\t\t)\n\t) {\n\t\treturn ElementInteractivity.NonInteractive;\n\t}\n\tif (\n\t\tinteractive_element_ax_object_schemas.some((schema) =>\n\t\t\tmatch_schema(schema, tag_name, attribute_map)\n\t\t)\n\t) {\n\t\treturn ElementInteractivity.Interactive;\n\t}\n\tif (\n\t\tnon_interactive_element_ax_object_schemas.some((schema) =>\n\t\t\tmatch_schema(schema, tag_name, attribute_map)\n\t\t)\n\t) {\n\t\treturn ElementInteractivity.NonInteractive;\n\t}\n\treturn ElementInteractivity.Static;\n}\n\n/**\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n * @returns {boolean}\n */\nfunction is_interactive_element(tag_name, attribute_map) {\n\treturn element_interactivity(tag_name, attribute_map) === ElementInteractivity.Interactive;\n}\n\n/**\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n * @returns {boolean}\n */\nfunction is_non_interactive_element(tag_name, attribute_map) {\n\treturn element_interactivity(tag_name, attribute_map) === ElementInteractivity.NonInteractive;\n}\n\n/**\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n * @returns {boolean}\n */\nfunction is_static_element(tag_name, attribute_map) {\n\treturn element_interactivity(tag_name, attribute_map) === ElementInteractivity.Static;\n}\n\n/**\n * @param {ARIARoleDefinitionKey} role\n * @param {string} tag_name\n * @param {Map<string, AST.Attribute>} attribute_map\n */\nfunction is_semantic_role_element(role, tag_name, attribute_map) {\n\tfor (const [schema, ax_object] of elementAXObjects.entries()) {\n\t\tif (\n\t\t\tschema.name === tag_name &&\n\t\t\t(!schema.attributes ||\n\t\t\t\tschema.attributes.every(\n\t\t\t\t\t/** @param {any} attr */\n\t\t\t\t\t(attr) =>\n\t\t\t\t\t\tattribute_map.has(attr.name) &&\n\t\t\t\t\t\tget_static_value(attribute_map.get(attr.name)) === attr.value\n\t\t\t\t))\n\t\t) {\n\t\t\tfor (const name of ax_object) {\n\t\t\t\tconst roles = AXObjectRoles.get(name);\n\t\t\t\tif (roles) {\n\t\t\t\t\tfor (const { name } of roles) {\n\t\t\t\t\t\tif (name === role) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute\nconst address_type_tokens = ['shipping', 'billing'];\nconst autofill_field_name_tokens = [\n\t'',\n\t'on',\n\t'off',\n\t'name',\n\t'honorific-prefix',\n\t'given-name',\n\t'additional-name',\n\t'family-name',\n\t'honorific-suffix',\n\t'nickname',\n\t'username',\n\t'new-password',\n\t'current-password',\n\t'one-time-code',\n\t'organization-title',\n\t'organization',\n\t'street-address',\n\t'address-line1',\n\t'address-line2',\n\t'address-line3',\n\t'address-level4',\n\t'address-level3',\n\t'address-level2',\n\t'address-level1',\n\t'country',\n\t'country-name',\n\t'postal-code',\n\t'cc-name',\n\t'cc-given-name',\n\t'cc-additional-name',\n\t'cc-family-name',\n\t'cc-number',\n\t'cc-exp',\n\t'cc-exp-month',\n\t'cc-exp-year',\n\t'cc-csc',\n\t'cc-type',\n\t'transaction-currency',\n\t'transaction-amount',\n\t'language',\n\t'bday',\n\t'bday-day',\n\t'bday-month',\n\t'bday-year',\n\t'sex',\n\t'url',\n\t'photo'\n];\nconst contact_type_tokens = ['home', 'work', 'mobile', 'fax', 'pager'];\nconst autofill_contact_field_name_tokens = [\n\t'tel',\n\t'tel-country-code',\n\t'tel-national',\n\t'tel-area-code',\n\t'tel-local',\n\t'tel-local-prefix',\n\t'tel-local-suffix',\n\t'tel-extension',\n\t'email',\n\t'impp'\n];\n\n/**\n * @param {null | true | string} autocomplete\n */\nfunction is_valid_autocomplete(autocomplete) {\n\tif (autocomplete === true) {\n\t\treturn false;\n\t} else if (!autocomplete) {\n\t\treturn true; // dynamic value\n\t}\n\tconst tokens = autocomplete.trim().toLowerCase().split(regex_whitespaces);\n\tif (typeof tokens[0] === 'string' && tokens[0].startsWith('section-')) {\n\t\ttokens.shift();\n\t}\n\tif (address_type_tokens.includes(tokens[0])) {\n\t\ttokens.shift();\n\t}\n\tif (autofill_field_name_tokens.includes(tokens[0])) {\n\t\ttokens.shift();\n\t} else {\n\t\tif (contact_type_tokens.includes(tokens[0])) {\n\t\t\ttokens.shift();\n\t\t}\n\t\tif (autofill_contact_field_name_tokens.includes(tokens[0])) {\n\t\t\ttokens.shift();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (tokens[0] === 'webauthn') {\n\t\ttokens.shift();\n\t}\n\treturn tokens.length === 0;\n}\n\nconst aria_attributes =\n\t'activedescendant atomic autocomplete busy checked colcount colindex colspan controls current describedby description details disabled dropeffect errormessage expanded flowto grabbed haspopup hidden invalid keyshortcuts label labelledby level live modal multiline multiselectable orientation owns placeholder posinset pressed readonly relevant required roledescription rowcount rowindex rowspan selected setsize sort valuemax valuemin valuenow valuetext'.split(\n\t\t' '\n\t);\n/** @type {Record<string, string[]>} */\nconst a11y_required_attributes = {\n\ta: ['href'],\n\tarea: ['alt', 'aria-label', 'aria-labelledby'],\n\t// html-has-lang\n\thtml: ['lang'],\n\t// iframe-has-title\n\tiframe: ['title'],\n\timg: ['alt'],\n\tobject: ['title', 'aria-label', 'aria-labelledby']\n};\nconst a11y_distracting_elements = ['blink', 'marquee'];\n\n// this excludes `<a>` and `<button>` because they are handled separately\nconst a11y_required_content = [\n\t// heading-has-content\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6'\n];\nconst a11y_labelable = [\n\t'button',\n\t'input',\n\t'keygen',\n\t'meter',\n\t'output',\n\t'progress',\n\t'select',\n\t'textarea'\n];\nconst a11y_interactive_handlers = [\n\t// Keyboard events\n\t'keypress',\n\t'keydown',\n\t'keyup',\n\t// Click events\n\t'click',\n\t'contextmenu',\n\t'dblclick',\n\t'drag',\n\t'dragend',\n\t'dragenter',\n\t'dragexit',\n\t'dragleave',\n\t'dragover',\n\t'dragstart',\n\t'drop',\n\t'mousedown',\n\t'mouseenter',\n\t'mouseleave',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup'\n];\nconst a11y_recommended_interactive_handlers = [\n\t'click',\n\t'mousedown',\n\t'mouseup',\n\t'keypress',\n\t'keydown',\n\t'keyup'\n];\nconst a11y_nested_implicit_semantics = new Map([\n\t['header', 'banner'],\n\t['footer', 'contentinfo']\n]);\nconst a11y_implicit_semantics = new Map([\n\t['a', 'link'],\n\t['area', 'link'],\n\t['article', 'article'],\n\t['aside', 'complementary'],\n\t['body', 'document'],\n\t['button', 'button'],\n\t['datalist', 'listbox'],\n\t['dd', 'definition'],\n\t['dfn', 'term'],\n\t['dialog', 'dialog'],\n\t['details', 'group'],\n\t['dt', 'term'],\n\t['fieldset', 'group'],\n\t['figure', 'figure'],\n\t['form', 'form'],\n\t['h1', 'heading'],\n\t['h2', 'heading'],\n\t['h3', 'heading'],\n\t['h4', 'heading'],\n\t['h5', 'heading'],\n\t['h6', 'heading'],\n\t['hr', 'separator'],\n\t['img', 'img'],\n\t['li', 'listitem'],\n\t['link', 'link'],\n\t['main', 'main'],\n\t['menu', 'list'],\n\t['meter', 'progressbar'],\n\t['nav', 'navigation'],\n\t['ol', 'list'],\n\t['option', 'option'],\n\t['optgroup', 'group'],\n\t['output', 'status'],\n\t['progress', 'progressbar'],\n\t['section', 'region'],\n\t['summary', 'button'],\n\t['table', 'table'],\n\t['tbody', 'rowgroup'],\n\t['textarea', 'textbox'],\n\t['tfoot', 'rowgroup'],\n\t['thead', 'rowgroup'],\n\t['tr', 'row'],\n\t['ul', 'list']\n]);\nconst menuitem_type_to_implicit_role = new Map([\n\t['command', 'menuitem'],\n\t['checkbox', 'menuitemcheckbox'],\n\t['radio', 'menuitemradio']\n]);\nconst input_type_to_implicit_role = new Map([\n\t['button', 'button'],\n\t['image', 'button'],\n\t['reset', 'button'],\n\t['submit', 'button'],\n\t['checkbox', 'checkbox'],\n\t['radio', 'radio'],\n\t['range', 'slider'],\n\t['number', 'spinbutton'],\n\t['email', 'textbox'],\n\t['search', 'searchbox'],\n\t['tel', 'textbox'],\n\t['text', 'textbox'],\n\t['url', 'textbox']\n]);\n\n/**\n * Exceptions to the rule which follows common A11y conventions\n * TODO make this configurable by the user\n * @type {Record<string, string[]>}\n */\nconst a11y_non_interactive_element_to_interactive_role_exceptions = {\n\tul: ['listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid'],\n\tol: ['listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid'],\n\tli: ['menuitem', 'option', 'row', 'tab', 'treeitem'],\n\ttable: ['grid'],\n\ttd: ['gridcell'],\n\tfieldset: ['radiogroup', 'presentation']\n};\n\nconst combobox_if_list = ['email', 'search', 'tel', 'text', 'url'];\n\n/** @param {Map<string, AST.Attribute>} attribute_map */\nfunction input_implicit_role(attribute_map) {\n\tconst type_attribute = attribute_map.get('type');\n\tif (!type_attribute) return;\n\tconst type = get_static_text_value(type_attribute);\n\tif (!type) return;\n\tconst list_attribute_exists = attribute_map.has('list');\n\tif (list_attribute_exists && combobox_if_list.includes(type)) {\n\t\treturn 'combobox';\n\t}\n\treturn input_type_to_implicit_role.get(type);\n}\n\n/** @param {Map<string, AST.Attribute>} attribute_map */\nfunction menuitem_implicit_role(attribute_map) {\n\tconst type_attribute = attribute_map.get('type');\n\tif (!type_attribute) return;\n\tconst type = get_static_text_value(type_attribute);\n\tif (!type) return;\n\treturn menuitem_type_to_implicit_role.get(type);\n}\n\n/**\n * @param {string} name\n * @param {Map<string, AST.Attribute>} attribute_map\n */\nfunction get_implicit_role(name, attribute_map) {\n\tif (name === 'menuitem') {\n\t\treturn menuitem_implicit_role(attribute_map);\n\t} else if (name === 'input') {\n\t\treturn input_implicit_role(attribute_map);\n\t} else {\n\t\treturn a11y_implicit_semantics.get(name);\n\t}\n}\n\nconst invisible_elements = ['meta', 'html', 'script', 'style'];\n\n/**\n * @param {AST.SvelteNode[]} path\n * @param {string[]} elements\n */\nfunction is_parent(path, elements) {\n\tlet i = path.length;\n\twhile (i--) {\n\t\tconst parent = path[i];\n\t\tif (parent.type === 'SvelteElement') return true; // unknown, play it safe, so we don't warn\n\t\tif (parent.type === 'RegularElement') {\n\t\t\treturn elements.includes(parent.name);\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * @param {AST.Attribute} attribute\n * @param {ARIAProperty} name\n * @param {ARIAPropertyDefinition} schema\n * @param {string | true | null} value\n */\nfunction validate_aria_attribute_value(attribute, name, schema, value) {\n\tconst type = schema.type;\n\n\tif (value === null) return;\n\tif (value === true) value = '';\n\n\tif (type === 'boolean' && value !== 'true' && value !== 'false') {\n\t\tw.a11y_incorrect_aria_attribute_type_boolean(attribute, name);\n\t} else if (type === 'integer' && (value === '' || !Number.isInteger(+value))) {\n\t\tw.a11y_incorrect_aria_attribute_type_integer(attribute, name);\n\t} else if (type === 'number' && (value === '' || isNaN(+value))) {\n\t\tw.a11y_incorrect_aria_attribute_type(attribute, name, 'number');\n\t} else if ((type === 'string' || type === 'id') && value === '') {\n\t\tw.a11y_incorrect_aria_attribute_type(attribute, name, 'non-empty string');\n\t} else if (type === 'idlist' && value === '') {\n\t\tw.a11y_incorrect_aria_attribute_type_idlist(attribute, name);\n\t} else if (type === 'token') {\n\t\tconst values = (schema.values ?? []).map((value) => value.toString());\n\t\tif (!values.includes(value.toLowerCase())) {\n\t\t\tw.a11y_incorrect_aria_attribute_type_token(\n\t\t\t\tattribute,\n\t\t\t\tname,\n\t\t\t\tlist(values.map((v) => `\"${v}\"`))\n\t\t\t);\n\t\t}\n\t} else if (type === 'tokenlist') {\n\t\tconst values = (schema.values ?? []).map((value) => value.toString());\n\t\tif (\n\t\t\tvalue\n\t\t\t\t.toLowerCase()\n\t\t\t\t.split(regex_whitespaces)\n\t\t\t\t.some((value) => !values.includes(value))\n\t\t) {\n\t\t\tw.a11y_incorrect_aria_attribute_type_tokenlist(\n\t\t\t\tattribute,\n\t\t\t\tname,\n\t\t\t\tlist(values.map((v) => `\"${v}\"`))\n\t\t\t);\n\t\t}\n\t} else if (type === 'tristate' && value !== 'true' && value !== 'false' && value !== 'mixed') {\n\t\tw.a11y_incorrect_aria_attribute_type_tristate(attribute, name);\n\t}\n}\n\n/**\n * @param {AST.RegularElement |AST.SvelteElement} node\n * @param {string[]} attributes\n * @param {string} name\n */\nfunction warn_missing_attribute(node, attributes, name = node.name) {\n\tconst article =\n\t\tregex_starts_with_vowel.test(attributes[0]) || attributes[0] === 'href' ? 'an' : 'a';\n\tconst sequence =\n\t\tattributes.length > 1\n\t\t\t? attributes.slice(0, -1).join(', ') + ` or ${attributes[attributes.length - 1]}`\n\t\t\t: attributes[0];\n\n\tw.a11y_missing_attribute(node, name, article, sequence);\n}\n\n/**\n * @param {AST.Attribute | undefined} attribute\n */\nfunction get_static_value(attribute) {\n\tif (!attribute) return null;\n\tif (attribute.value === true) return true;\n\tif (is_text_attribute(attribute)) return attribute.value[0].data;\n\treturn null;\n}\n\n/**\n * @param {AST.Attribute | undefined} attribute\n */\nfunction get_static_text_value(attribute) {\n\tconst value = get_static_value(attribute);\n\tif (value === true) return null;\n\treturn value;\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} node\n * @param {Context} context\n */\nexport function check_element(node, context) {\n\t/** @type {Map<string, AST.Attribute>} */\n\tconst attribute_map = new Map();\n\n\t/** @type {Set<string>} */\n\tconst handlers = new Set();\n\n\t/** @type {AST.Attribute[]} */\n\tconst attributes = [];\n\n\tconst is_dynamic_element = node.type === 'SvelteElement';\n\n\tlet has_spread = false;\n\tlet has_contenteditable_attr = false;\n\tlet has_contenteditable_binding = false;\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'SpreadAttribute') {\n\t\t\thas_spread = true;\n\t\t} else if (attribute.type === 'OnDirective') {\n\t\t\thandlers.add(attribute.name);\n\t\t} else if (attribute.type === 'Attribute') {\n\t\t\tif (is_event_attribute(attribute)) {\n\t\t\t\thandlers.add(attribute.name.slice(2));\n\t\t\t} else {\n\t\t\t\tattributes.push(attribute);\n\t\t\t\tattribute_map.set(attribute.name, attribute);\n\t\t\t\tif (attribute.name === 'contenteditable') {\n\t\t\t\t\thas_contenteditable_attr = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (attribute.type === 'BindDirective' && is_content_editable_binding(attribute.name)) {\n\t\t\thas_contenteditable_binding = true;\n\t\t}\n\t}\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute') continue;\n\n\t\tconst name = attribute.name.toLowerCase();\n\t\t// aria-props\n\t\tif (name.startsWith('aria-')) {\n\t\t\tif (invisible_elements.includes(node.name)) {\n\t\t\t\t// aria-unsupported-elements\n\t\t\t\tw.a11y_aria_attributes(attribute, node.name);\n\t\t\t}\n\n\t\t\tconst type = name.slice(5);\n\t\t\tif (!aria_attributes.includes(type)) {\n\t\t\t\tconst match = fuzzymatch(type, aria_attributes);\n\t\t\t\tw.a11y_unknown_aria_attribute(attribute, type, match);\n\t\t\t}\n\n\t\t\tif (name === 'aria-hidden' && regex_heading_tags.test(node.name)) {\n\t\t\t\tw.a11y_hidden(attribute, node.name);\n\t\t\t}\n\n\t\t\t// aria-proptypes\n\t\t\tlet value = get_static_value(attribute);\n\n\t\t\tconst schema = aria.get(/** @type {ARIAProperty} */ (name));\n\t\t\tif (schema !== undefined) {\n\t\t\t\tvalidate_aria_attribute_value(attribute, /** @type {ARIAProperty} */ (name), schema, value);\n\t\t\t}\n\n\t\t\t// aria-activedescendant-has-tabindex\n\t\t\tif (\n\t\t\t\tname === 'aria-activedescendant' &&\n\t\t\t\t!is_dynamic_element &&\n\t\t\t\t!is_interactive_element(node.name, attribute_map) &&\n\t\t\t\t!attribute_map.has('tabindex') &&\n\t\t\t\t!has_spread\n\t\t\t) {\n\t\t\t\tw.a11y_aria_activedescendant_has_tabindex(attribute);\n\t\t\t}\n\t\t}\n\n\t\t// aria-role\n\t\tif (name === 'role') {\n\t\t\tif (invisible_elements.includes(node.name)) {\n\t\t\t\t// aria-unsupported-elements\n\t\t\t\tw.a11y_misplaced_role(attribute, node.name);\n\t\t\t}\n\n\t\t\tconst value = get_static_value(attribute);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tfor (const c_r of value.split(regex_whitespaces)) {\n\t\t\t\t\tconst current_role = /** @type {ARIARoleDefinitionKey} current_role */ (c_r);\n\n\t\t\t\t\tif (current_role && is_abstract_role(current_role)) {\n\t\t\t\t\t\tw.a11y_no_abstract_role(attribute, current_role);\n\t\t\t\t\t} else if (current_role && !aria_roles.includes(current_role)) {\n\t\t\t\t\t\tconst match = fuzzymatch(current_role, aria_roles);\n\t\t\t\t\t\tw.a11y_unknown_role(attribute, current_role, match);\n\t\t\t\t\t}\n\n\t\t\t\t\t// no-redundant-roles\n\t\t\t\t\tif (\n\t\t\t\t\t\tcurrent_role === get_implicit_role(node.name, attribute_map) &&\n\t\t\t\t\t\t// <ul role=\"list\"> is ok because CSS list-style:none removes the semantics and this is a way to bring them back\n\t\t\t\t\t\t!['ul', 'ol', 'li'].includes(node.name) &&\n\t\t\t\t\t\t// <a role=\"link\" /> is ok because without href the a tag doesn't have a role of link\n\t\t\t\t\t\t!(node.name === 'a' && !attribute_map.has('href'))\n\t\t\t\t\t) {\n\t\t\t\t\t\tw.a11y_no_redundant_roles(attribute, current_role);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Footers and headers are special cases, and should not have redundant roles unless they are the children of sections or articles.\n\t\t\t\t\tconst is_parent_section_or_article = is_parent(context.path, ['section', 'article']);\n\t\t\t\t\tif (!is_parent_section_or_article) {\n\t\t\t\t\t\tconst has_nested_redundant_role =\n\t\t\t\t\t\t\tcurrent_role === a11y_nested_implicit_semantics.get(node.name);\n\t\t\t\t\t\tif (has_nested_redundant_role) {\n\t\t\t\t\t\t\tw.a11y_no_redundant_roles(attribute, current_role);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// role-has-required-aria-props\n\t\t\t\t\tif (\n\t\t\t\t\t\t!is_dynamic_element &&\n\t\t\t\t\t\t!is_semantic_role_element(current_role, node.name, attribute_map)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst role = roles_map.get(current_role);\n\t\t\t\t\t\tif (role) {\n\t\t\t\t\t\t\tconst required_role_props = Object.keys(role.requiredProps);\n\t\t\t\t\t\t\tconst has_missing_props =\n\t\t\t\t\t\t\t\t!has_spread &&\n\t\t\t\t\t\t\t\trequired_role_props.some((prop) => !attributes.find((a) => a.name === prop));\n\t\t\t\t\t\t\tif (has_missing_props) {\n\t\t\t\t\t\t\t\tw.a11y_role_has_required_aria_props(\n\t\t\t\t\t\t\t\t\tattribute,\n\t\t\t\t\t\t\t\t\tcurrent_role,\n\t\t\t\t\t\t\t\t\tlist(\n\t\t\t\t\t\t\t\t\t\trequired_role_props.map((v) => `\"${v}\"`),\n\t\t\t\t\t\t\t\t\t\t'and'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// interactive-supports-focus\n\t\t\t\t\tif (\n\t\t\t\t\t\t!has_spread &&\n\t\t\t\t\t\t!has_disabled_attribute(attribute_map) &&\n\t\t\t\t\t\t!is_hidden_from_screen_reader(node.name, attribute_map) &&\n\t\t\t\t\t\t!is_presentation_role(current_role) &&\n\t\t\t\t\t\tis_interactive_roles(current_role) &&\n\t\t\t\t\t\tis_static_element(node.name, attribute_map) &&\n\t\t\t\t\t\t!attribute_map.get('tabindex')\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst has_interactive_handlers = [...handlers].some((handler) =>\n\t\t\t\t\t\t\ta11y_interactive_handlers.includes(handler)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (has_interactive_handlers) {\n\t\t\t\t\t\t\tw.a11y_interactive_supports_focus(node, current_role);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// no-interactive-element-to-noninteractive-role\n\t\t\t\t\tif (\n\t\t\t\t\t\t!has_spread &&\n\t\t\t\t\t\tis_interactive_element(node.name, attribute_map) &&\n\t\t\t\t\t\t(is_non_interactive_roles(current_role) || is_presentation_role(current_role))\n\t\t\t\t\t) {\n\t\t\t\t\t\tw.a11y_no_interactive_element_to_noninteractive_role(node, node.name, current_role);\n\t\t\t\t\t}\n\n\t\t\t\t\t// no-noninteractive-element-to-interactive-role\n\t\t\t\t\tif (\n\t\t\t\t\t\t!has_spread &&\n\t\t\t\t\t\tis_non_interactive_element(node.name, attribute_map) &&\n\t\t\t\t\t\tis_interactive_roles(current_role) &&\n\t\t\t\t\t\t!a11y_non_interactive_element_to_interactive_role_exceptions[node.name]?.includes(\n\t\t\t\t\t\t\tcurrent_role\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tw.a11y_no_noninteractive_element_to_interactive_role(node, node.name, current_role);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// no-access-key\n\t\tif (name === 'accesskey') {\n\t\t\tw.a11y_accesskey(attribute);\n\t\t}\n\n\t\t// no-autofocus\n\t\tif (name === 'autofocus') {\n\t\t\tw.a11y_autofocus(attribute);\n\t\t}\n\n\t\t// scope\n\t\tif (name === 'scope' && !is_dynamic_element && node.name !== 'th') {\n\t\t\tw.a11y_misplaced_scope(attribute);\n\t\t}\n\n\t\t// tabindex-no-positive\n\t\tif (name === 'tabindex') {\n\t\t\tconst value = get_static_value(attribute);\n\t\t\t// @ts-ignore todo is tabindex=true correct case?\n\t\t\tif (!isNaN(value) && +value > 0) {\n\t\t\t\tw.a11y_positive_tabindex(attribute);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst role = attribute_map.get('role');\n\tconst role_static_value = /** @type {ARIARoleDefinitionKey} */ (get_static_text_value(role));\n\n\t// click-events-have-key-events\n\tif (handlers.has('click')) {\n\t\tconst is_non_presentation_role =\n\t\t\trole_static_value !== null && !is_presentation_role(role_static_value);\n\t\tif (\n\t\t\t!is_dynamic_element &&\n\t\t\t!is_hidden_from_screen_reader(node.name, attribute_map) &&\n\t\t\t(!role || is_non_presentation_role) &&\n\t\t\t!is_interactive_element(node.name, attribute_map) &&\n\t\t\t!has_spread\n\t\t) {\n\t\t\tconst has_key_event =\n\t\t\t\thandlers.has('keydown') || handlers.has('keyup') || handlers.has('keypress');\n\t\t\tif (!has_key_event) {\n\t\t\t\tw.a11y_click_events_have_key_events(node);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst role_value = /** @type {ARIARoleDefinitionKey} */ (\n\t\trole ? role_static_value : get_implicit_role(node.name, attribute_map)\n\t);\n\n\t// no-noninteractive-tabindex\n\tif (\n\t\t!is_dynamic_element &&\n\t\t!is_interactive_element(node.name, attribute_map) &&\n\t\t!is_interactive_roles(role_static_value)\n\t) {\n\t\tconst tab_index = attribute_map.get('tabindex');\n\t\tconst tab_index_value = get_static_text_value(tab_index);\n\t\tif (tab_index && (tab_index_value === null || Number(tab_index_value) >= 0)) {\n\t\t\tw.a11y_no_noninteractive_tabindex(node);\n\t\t}\n\t}\n\n\t// role-supports-aria-props\n\tif (typeof role_value === 'string' && roles_map.has(role_value)) {\n\t\tconst { props } = /** @type {ARIARoleDefinition} */ (roles_map.get(role_value));\n\t\tconst invalid_aria_props = aria.keys().filter((attribute) => !(attribute in props));\n\t\tconst is_implicit = role_value && role === undefined;\n\t\tfor (const attr of attributes) {\n\t\t\tif (invalid_aria_props.includes(/** @type {ARIAProperty} */ (attr.name))) {\n\t\t\t\tif (is_implicit) {\n\t\t\t\t\tw.a11y_role_supports_aria_props_implicit(attr, attr.name, role_value, node.name);\n\t\t\t\t} else {\n\t\t\t\t\tw.a11y_role_supports_aria_props(attr, attr.name, role_value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// no-noninteractive-element-interactions\n\tif (\n\t\t!has_spread &&\n\t\t!has_contenteditable_attr &&\n\t\t!is_hidden_from_screen_reader(node.name, attribute_map) &&\n\t\t!is_presentation_role(role_static_value) &&\n\t\t((!is_interactive_element(node.name, attribute_map) &&\n\t\t\tis_non_interactive_roles(role_static_value)) ||\n\t\t\t(is_non_interactive_element(node.name, attribute_map) && !role))\n\t) {\n\t\tconst has_interactive_handlers = [...handlers].some((handler) =>\n\t\t\ta11y_recommended_interactive_handlers.includes(handler)\n\t\t);\n\t\tif (has_interactive_handlers) {\n\t\t\tw.a11y_no_noninteractive_element_interactions(node, node.name);\n\t\t}\n\t}\n\n\t// no-static-element-interactions\n\tif (\n\t\t!has_spread &&\n\t\t(!role || role_static_value !== null) &&\n\t\t!is_hidden_from_screen_reader(node.name, attribute_map) &&\n\t\t!is_presentation_role(role_static_value) &&\n\t\t!is_interactive_element(node.name, attribute_map) &&\n\t\t!is_interactive_roles(role_static_value) &&\n\t\t!is_non_interactive_element(node.name, attribute_map) &&\n\t\t!is_non_interactive_roles(role_static_value) &&\n\t\t!is_abstract_role(role_static_value)\n\t) {\n\t\tconst interactive_handlers = [...handlers].filter((handler) =>\n\t\t\ta11y_interactive_handlers.includes(handler)\n\t\t);\n\t\tif (interactive_handlers.length > 0) {\n\t\t\tw.a11y_no_static_element_interactions(node, node.name, list(interactive_handlers));\n\t\t}\n\t}\n\n\tif (!has_spread && handlers.has('mouseover') && !handlers.has('focus')) {\n\t\tw.a11y_mouse_events_have_key_events(node, 'mouseover', 'focus');\n\t}\n\n\tif (!has_spread && handlers.has('mouseout') && !handlers.has('blur')) {\n\t\tw.a11y_mouse_events_have_key_events(node, 'mouseout', 'blur');\n\t}\n\n\t// element-specific checks\n\tconst is_labelled = attribute_map.has('aria-label') || attribute_map.has('aria-labelledby');\n\n\tif (node.name === 'a' || node.name === 'button') {\n\t\tconst is_hidden = get_static_value(attribute_map.get('aria-hidden')) === 'true';\n\n\t\tif (!has_spread && !is_hidden && !is_labelled && !has_content(node)) {\n\t\t\tw.a11y_consider_explicit_label(node);\n\t\t}\n\t}\n\n\tif (node.name === 'a') {\n\t\tconst href = attribute_map.get('href') || attribute_map.get('xlink:href');\n\t\tif (href) {\n\t\t\tconst href_value = get_static_text_value(href);\n\t\t\tif (href_value !== null) {\n\t\t\t\tif (href_value === '' || href_value === '#' || /^\\W*javascript:/i.test(href_value)) {\n\t\t\t\t\tw.a11y_invalid_attribute(href, href_value, href.name);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!has_spread) {\n\t\t\tconst id_attribute = get_static_value(attribute_map.get('id'));\n\t\t\tconst name_attribute = get_static_value(attribute_map.get('name'));\n\t\t\tconst aria_disabled_attribute = get_static_value(attribute_map.get('aria-disabled'));\n\t\t\tif (!id_attribute && !name_attribute && aria_disabled_attribute !== 'true') {\n\t\t\t\twarn_missing_attribute(node, ['href']);\n\t\t\t}\n\t\t}\n\t} else if (!has_spread) {\n\t\tconst required_attributes = a11y_required_attributes[node.name];\n\t\tif (required_attributes) {\n\t\t\tconst has_attribute = required_attributes.some((name) => attribute_map.has(name));\n\t\t\tif (!has_attribute) {\n\t\t\t\twarn_missing_attribute(node, required_attributes);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (node.name === 'input') {\n\t\tconst type = attribute_map.get('type');\n\t\tconst type_value = get_static_text_value(type);\n\t\tif (type_value === 'image' && !has_spread) {\n\t\t\tconst required_attributes = ['alt', 'aria-label', 'aria-labelledby'];\n\t\t\tconst has_attribute = required_attributes.some((name) => attribute_map.has(name));\n\t\t\tif (!has_attribute) {\n\t\t\t\twarn_missing_attribute(node, required_attributes, 'input type=\"image\"');\n\t\t\t}\n\t\t}\n\t\t// autocomplete-valid\n\t\tconst autocomplete = attribute_map.get('autocomplete');\n\t\tif (type && autocomplete) {\n\t\t\tconst autocomplete_value = get_static_value(autocomplete);\n\t\t\tif (!is_valid_autocomplete(autocomplete_value)) {\n\t\t\t\tw.a11y_autocomplete_valid(\n\t\t\t\t\tautocomplete,\n\t\t\t\t\t/** @type {string} */ (autocomplete_value),\n\t\t\t\t\ttype_value ?? '...'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (node.name === 'img') {\n\t\tconst alt_attribute = get_static_text_value(attribute_map.get('alt'));\n\t\tconst aria_hidden = get_static_value(attribute_map.get('aria-hidden'));\n\t\tif (alt_attribute && !aria_hidden && !has_spread) {\n\t\t\tif (/\\b(image|picture|photo)\\b/i.test(alt_attribute)) {\n\t\t\t\tw.a11y_img_redundant_alt(node);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (node.name === 'label') {\n\t\t/** @param {AST.TemplateNode} node */\n\t\tconst has_input_child = (node) => {\n\t\t\tlet has = false;\n\t\t\twalk(\n\t\t\t\tnode,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t_(node, { next }) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnode.type === 'SvelteElement' ||\n\t\t\t\t\t\t\tnode.type === 'SlotElement' ||\n\t\t\t\t\t\t\tnode.type === 'Component' ||\n\t\t\t\t\t\t\tnode.type === 'RenderTag' ||\n\t\t\t\t\t\t\t(node.type === 'RegularElement' &&\n\t\t\t\t\t\t\t\t(a11y_labelable.includes(node.name) || node.name === 'slot'))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\thas = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn has;\n\t\t};\n\t\tif (!has_spread && !attribute_map.has('for') && !has_input_child(node)) {\n\t\t\tw.a11y_label_has_associated_control(node);\n\t\t}\n\t}\n\n\tif (node.name === 'video') {\n\t\tconst aria_hidden_attribute = attribute_map.get('aria-hidden');\n\t\tconst aria_hidden_exist = aria_hidden_attribute && get_static_value(aria_hidden_attribute);\n\t\tif (attribute_map.has('muted') || aria_hidden_exist === 'true' || has_spread) {\n\t\t\treturn;\n\t\t}\n\t\tlet has_caption = false;\n\t\tconst track = /** @type {AST.RegularElement | undefined} */ (\n\t\t\tnode.fragment.nodes.find((i) => i.type === 'RegularElement' && i.name === 'track')\n\t\t);\n\t\tif (track) {\n\t\t\thas_caption = track.attributes.some(\n\t\t\t\t(a) =>\n\t\t\t\t\ta.type === 'SpreadAttribute' ||\n\t\t\t\t\t(a.type === 'Attribute' && a.name === 'kind' && get_static_value(a) === 'captions')\n\t\t\t);\n\t\t}\n\t\tif (!has_caption) {\n\t\t\tw.a11y_media_has_caption(node);\n\t\t}\n\t}\n\n\tif (node.name === 'figcaption') {\n\t\tif (!is_parent(context.path, ['figure'])) {\n\t\t\tw.a11y_figcaption_parent(node);\n\t\t}\n\t}\n\n\tif (node.name === 'figure') {\n\t\tconst children = node.fragment.nodes.filter((node) => {\n\t\t\tif (node.type === 'Comment') return false;\n\t\t\tif (node.type === 'Text') return regex_not_whitespace.test(node.data);\n\t\t\treturn true;\n\t\t});\n\t\tconst index = children.findIndex(\n\t\t\t(child) => child.type === 'RegularElement' && child.name === 'figcaption'\n\t\t);\n\t\tif (index !== -1 && index !== 0 && index !== children.length - 1) {\n\t\t\tw.a11y_figcaption_index(children[index]);\n\t\t}\n\t}\n\n\tif (a11y_distracting_elements.includes(node.name)) {\n\t\t// no-distracting-elements\n\t\tw.a11y_distracting_elements(node, node.name);\n\t}\n\n\t// Check content\n\tif (\n\t\t!has_spread &&\n\t\t!is_labelled &&\n\t\t!has_contenteditable_binding &&\n\t\ta11y_required_content.includes(node.name) &&\n\t\t!has_content(node)\n\t) {\n\t\tw.a11y_missing_content(node, node.name);\n\t}\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} element\n */\nfunction has_content(element) {\n\tfor (const node of element.fragment.nodes) {\n\t\tif (node.type === 'Text') {\n\t\t\tif (node.data.trim() === '') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (node.type === 'RegularElement' || node.type === 'SvelteElement') {\n\t\t\tif (\n\t\t\t\tnode.name === 'img' &&\n\t\t\t\tnode.attributes.some((node) => node.type === 'Attribute' && node.name === 'alt')\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (!has_content(node)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// assume everything else has content — this will result in false positives\n\t\t// (e.g. an empty `{#if ...}{/if}`) but that's probably fine\n\t\treturn true;\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../../types' */\nimport { get_attribute_expression, is_expression_attribute } from '../../../../utils/ast.js';\nimport { regex_illegal_attribute_character } from '../../../patterns.js';\nimport * as e from '../../../../errors.js';\nimport * as w from '../../../../warnings.js';\nimport {\n\tvalidate_attribute,\n\tvalidate_attribute_name,\n\tvalidate_slot_attribute\n} from './attribute.js';\n\nconst EVENT_MODIFIERS = [\n\t'preventDefault',\n\t'stopPropagation',\n\t'stopImmediatePropagation',\n\t'capture',\n\t'once',\n\t'passive',\n\t'nonpassive',\n\t'self',\n\t'trusted'\n];\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} node\n * @param {Context} context\n */\nexport function validate_element(node, context) {\n\tlet has_animate_directive = false;\n\n\t/** @type {AST.TransitionDirective | null} */\n\tlet in_transition = null;\n\n\t/** @type {AST.TransitionDirective | null} */\n\tlet out_transition = null;\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tconst is_expression = is_expression_attribute(attribute);\n\n\t\t\tif (context.state.analysis.runes) {\n\t\t\t\tvalidate_attribute(attribute, node);\n\n\t\t\t\tif (is_expression) {\n\t\t\t\t\tconst expression = get_attribute_expression(attribute);\n\t\t\t\t\tif (expression.type === 'SequenceExpression') {\n\t\t\t\t\t\tlet i = /** @type {number} */ (expression.start);\n\t\t\t\t\t\twhile (--i > 0) {\n\t\t\t\t\t\t\tconst char = context.state.analysis.source[i];\n\t\t\t\t\t\t\tif (char === '(') break; // parenthesized sequence expressions are ok\n\t\t\t\t\t\t\tif (char === '{') e.attribute_invalid_sequence_expression(expression);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (regex_illegal_attribute_character.test(attribute.name)) {\n\t\t\t\te.attribute_invalid_name(attribute, attribute.name);\n\t\t\t}\n\n\t\t\tif (attribute.name.startsWith('on') && attribute.name.length > 2) {\n\t\t\t\tif (!is_expression) {\n\t\t\t\t\te.attribute_invalid_event_handler(attribute);\n\t\t\t\t}\n\n\t\t\t\tconst value = get_attribute_expression(attribute);\n\t\t\t\tif (\n\t\t\t\t\tvalue.type === 'Identifier' &&\n\t\t\t\t\tvalue.name === attribute.name &&\n\t\t\t\t\t!context.state.scope.get(value.name)\n\t\t\t\t) {\n\t\t\t\t\tw.attribute_global_event_reference(attribute, attribute.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (attribute.name === 'slot') {\n\t\t\t\t/** @type {AST.RegularElement | AST.SvelteElement | AST.Component | AST.SvelteComponent | AST.SvelteSelf | undefined} */\n\t\t\t\tvalidate_slot_attribute(context, attribute);\n\t\t\t}\n\n\t\t\tif (attribute.name === 'is') {\n\t\t\t\tw.attribute_avoid_is(attribute);\n\t\t\t}\n\n\t\t\tconst correct_name = react_attributes.get(attribute.name);\n\t\t\tif (correct_name) {\n\t\t\t\tw.attribute_invalid_property_name(attribute, attribute.name, correct_name);\n\t\t\t}\n\n\t\t\tvalidate_attribute_name(attribute);\n\t\t} else if (attribute.type === 'AnimateDirective') {\n\t\t\tconst parent = context.path.at(-2);\n\t\t\tif (parent?.type !== 'EachBlock') {\n\t\t\t\te.animation_invalid_placement(attribute);\n\t\t\t} else if (!parent.key) {\n\t\t\t\te.animation_missing_key(attribute);\n\t\t\t} else if (\n\t\t\t\tparent.body.nodes.filter(\n\t\t\t\t\t(n) =>\n\t\t\t\t\t\tn.type !== 'Comment' &&\n\t\t\t\t\t\tn.type !== 'ConstTag' &&\n\t\t\t\t\t\t(n.type !== 'Text' || n.data.trim() !== '')\n\t\t\t\t).length > 1\n\t\t\t) {\n\t\t\t\te.animation_invalid_placement(attribute);\n\t\t\t}\n\n\t\t\tif (has_animate_directive) {\n\t\t\t\te.animation_duplicate(attribute);\n\t\t\t} else {\n\t\t\t\thas_animate_directive = true;\n\t\t\t}\n\t\t} else if (attribute.type === 'TransitionDirective') {\n\t\t\tconst existing = /** @type {AST.TransitionDirective | null} */ (\n\t\t\t\t(attribute.intro && in_transition) || (attribute.outro && out_transition)\n\t\t\t);\n\n\t\t\tif (existing) {\n\t\t\t\tconst a = existing.intro ? (existing.outro ? 'transition' : 'in') : 'out';\n\t\t\t\tconst b = attribute.intro ? (attribute.outro ? 'transition' : 'in') : 'out';\n\n\t\t\t\tif (a === b) {\n\t\t\t\t\te.transition_duplicate(attribute, a);\n\t\t\t\t} else {\n\t\t\t\t\te.transition_conflict(attribute, a, b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (attribute.intro) in_transition = attribute;\n\t\t\tif (attribute.outro) out_transition = attribute;\n\t\t} else if (attribute.type === 'OnDirective') {\n\t\t\tlet has_passive_modifier = false;\n\t\t\tlet conflicting_passive_modifier = '';\n\t\t\tfor (const modifier of attribute.modifiers) {\n\t\t\t\tif (!EVENT_MODIFIERS.includes(modifier)) {\n\t\t\t\t\tconst list = `${EVENT_MODIFIERS.slice(0, -1).join(', ')} or ${EVENT_MODIFIERS.at(-1)}`;\n\t\t\t\t\te.event_handler_invalid_modifier(attribute, list);\n\t\t\t\t}\n\t\t\t\tif (modifier === 'passive') {\n\t\t\t\t\thas_passive_modifier = true;\n\t\t\t\t} else if (modifier === 'nonpassive' || modifier === 'preventDefault') {\n\t\t\t\t\tconflicting_passive_modifier = modifier;\n\t\t\t\t}\n\t\t\t\tif (has_passive_modifier && conflicting_passive_modifier) {\n\t\t\t\t\te.event_handler_invalid_modifier_combination(\n\t\t\t\t\t\tattribute,\n\t\t\t\t\t\t'passive',\n\t\t\t\t\t\tconflicting_passive_modifier\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst react_attributes = new Map([\n\t['className', 'class'],\n\t['htmlFor', 'for']\n]);\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { is_mathml, is_svg, is_void } from '../../../../utils.js';\nimport {\n\tis_tag_valid_with_ancestor,\n\tis_tag_valid_with_parent\n} from '../../../../html-tree-validation.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { create_attribute, is_custom_element_node } from '../../nodes.js';\nimport { regex_starts_with_newline } from '../../patterns.js';\nimport { check_element } from './shared/a11y.js';\nimport { validate_element } from './shared/element.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.RegularElement} node\n * @param {Context} context\n */\nexport function RegularElement(node, context) {\n\tvalidate_element(node, context);\n\tcheck_element(node, context);\n\n\tnode.metadata.path = [...context.path];\n\tcontext.state.analysis.elements.push(node);\n\n\t// Special case: Move the children of <textarea> into a value attribute if they are dynamic\n\tif (node.name === 'textarea' && node.fragment.nodes.length > 0) {\n\t\tfor (const attribute of node.attributes) {\n\t\t\tif (attribute.type === 'Attribute' && attribute.name === 'value') {\n\t\t\t\te.textarea_invalid_content(node);\n\t\t\t}\n\t\t}\n\n\t\tif (node.fragment.nodes.length > 1 || node.fragment.nodes[0].type !== 'Text') {\n\t\t\tconst first = node.fragment.nodes[0];\n\t\t\tif (first.type === 'Text') {\n\t\t\t\t// The leading newline character needs to be stripped because of a qirk:\n\t\t\t\t// It is ignored by browsers if the tag and its contents are set through\n\t\t\t\t// innerHTML, but we're now setting it through the value property at which\n\t\t\t\t// point it is _not_ ignored, so we need to strip it ourselves.\n\t\t\t\t// see https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n\t\t\t\t// see https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n\t\t\t\tfirst.data = first.data.replace(regex_starts_with_newline, '');\n\t\t\t\tfirst.raw = first.raw.replace(regex_starts_with_newline, '');\n\t\t\t}\n\n\t\t\tnode.attributes.push(\n\t\t\t\tcreate_attribute(\n\t\t\t\t\t'value',\n\t\t\t\t\t/** @type {AST.Text} */ (node.fragment.nodes.at(0)).start,\n\t\t\t\t\t/** @type {AST.Text} */ (node.fragment.nodes.at(-1)).end,\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tnode.fragment.nodes\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tnode.fragment.nodes = [];\n\t\t}\n\t}\n\n\t// Special case: single expression tag child of option element -> add \"fake\" attribute\n\t// to ensure that value types are the same (else for example numbers would be strings)\n\tif (\n\t\tnode.name === 'option' &&\n\t\tnode.fragment.nodes?.length === 1 &&\n\t\tnode.fragment.nodes[0].type === 'ExpressionTag' &&\n\t\t!node.attributes.some(\n\t\t\t(attribute) => attribute.type === 'Attribute' && attribute.name === 'value'\n\t\t)\n\t) {\n\t\tconst child = node.fragment.nodes[0];\n\t\tnode.attributes.push(create_attribute('value', child.start, child.end, [child]));\n\t}\n\n\tconst binding = context.state.scope.get(node.name);\n\tif (\n\t\tbinding !== null &&\n\t\tbinding.declaration_kind === 'import' &&\n\t\tbinding.references.length === 0\n\t) {\n\t\tw.component_name_lowercase(node, node.name);\n\t}\n\n\tnode.metadata.has_spread = node.attributes.some(\n\t\t(attribute) => attribute.type === 'SpreadAttribute'\n\t);\n\n\tconst is_svg_element = () => {\n\t\tif (is_svg(node.name)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (node.name === 'a' || node.name === 'title') {\n\t\t\tlet i = context.path.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tconst ancestor = context.path[i];\n\t\t\t\tif (ancestor.type === 'RegularElement') {\n\t\t\t\t\treturn ancestor.metadata.svg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tnode.metadata.svg = is_svg_element();\n\tnode.metadata.mathml = is_mathml(node.name);\n\n\tif (is_custom_element_node(node) && node.attributes.length > 0) {\n\t\t// we're setting all attributes on custom elements through properties\n\t\tmark_subtree_dynamic(context.path);\n\t}\n\n\tif (context.state.parent_element) {\n\t\tlet past_parent = false;\n\t\tlet only_warn = false;\n\t\tconst ancestors = [context.state.parent_element];\n\n\t\tfor (let i = context.path.length - 1; i >= 0; i--) {\n\t\t\tconst ancestor = context.path[i];\n\n\t\t\tif (\n\t\t\t\tancestor.type === 'IfBlock' ||\n\t\t\t\tancestor.type === 'EachBlock' ||\n\t\t\t\tancestor.type === 'AwaitBlock' ||\n\t\t\t\tancestor.type === 'KeyBlock'\n\t\t\t) {\n\t\t\t\t// We're creating a separate template string inside blocks, which means client-side this would work\n\t\t\t\tonly_warn = true;\n\t\t\t}\n\n\t\t\tif (!past_parent) {\n\t\t\t\tif (ancestor.type === 'RegularElement' && ancestor.name === context.state.parent_element) {\n\t\t\t\t\tconst message = is_tag_valid_with_parent(node.name, context.state.parent_element);\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (only_warn) {\n\t\t\t\t\t\t\tw.node_invalid_placement_ssr(node, message);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\te.node_invalid_placement(node, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpast_parent = true;\n\t\t\t\t}\n\t\t\t} else if (ancestor.type === 'RegularElement') {\n\t\t\t\tancestors.push(ancestor.name);\n\n\t\t\t\tconst message = is_tag_valid_with_ancestor(node.name, ancestors);\n\t\t\t\tif (message) {\n\t\t\t\t\tif (only_warn) {\n\t\t\t\t\t\tw.node_invalid_placement_ssr(node, message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.node_invalid_placement(node, message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tancestor.type === 'Component' ||\n\t\t\t\tancestor.type === 'SvelteComponent' ||\n\t\t\t\tancestor.type === 'SvelteElement' ||\n\t\t\t\tancestor.type === 'SvelteSelf' ||\n\t\t\t\tancestor.type === 'SnippetBlock'\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Strip off any namespace from the beginning of the node name.\n\tconst node_name = node.name.replace(/[a-zA-Z-]*:/g, '');\n\n\tif (\n\t\tcontext.state.analysis.source[node.end - 2] === '/' &&\n\t\t!is_void(node_name) &&\n\t\t!is_svg(node_name) &&\n\t\t!is_mathml(node_name)\n\t) {\n\t\tw.element_invalid_self_closing_tag(node, node.name);\n\t}\n\n\tcontext.next({ ...context.state, parent_element: node.name });\n\n\t// Special case: <a> tags are valid in both the SVG and HTML namespace.\n\t// If there's no parent, look downwards to see if it's the parent of a SVG or HTML element.\n\tif (node.name === 'a' && !context.state.parent_element) {\n\t\tfor (const child of node.fragment.nodes) {\n\t\t\tif (child.type === 'RegularElement') {\n\t\t\t\tif (child.metadata.svg && child.name !== 'svg') {\n\t\t\t\t\tnode.metadata.svg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { unwrap_optional } from '../../../utils/ast.js';\nimport * as e from '../../../errors.js';\nimport { validate_opening_tag } from './shared/utils.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\nimport { is_resolved_snippet } from './shared/snippets.js';\nimport { create_expression_metadata } from '../../nodes.js';\n\n/**\n * @param {AST.RenderTag} node\n * @param {Context} context\n */\nexport function RenderTag(node, context) {\n\tvalidate_opening_tag(node, context.state, '@');\n\n\tnode.metadata.path = [...context.path];\n\n\tconst expression = unwrap_optional(node.expression);\n\tconst callee = expression.callee;\n\n\tconst binding = callee.type === 'Identifier' ? context.state.scope.get(callee.name) : null;\n\n\tnode.metadata.dynamic = binding?.kind !== 'normal';\n\n\t/**\n\t * If we can't unambiguously resolve this to a declaration, we\n\t * must assume the worst and link the render tag to every snippet\n\t */\n\tlet resolved = callee.type === 'Identifier' && is_resolved_snippet(binding);\n\n\tif (binding?.initial?.type === 'SnippetBlock') {\n\t\t// if this render tag unambiguously references a local snippet, our job is easy\n\t\tnode.metadata.snippets.add(binding.initial);\n\t}\n\n\tcontext.state.analysis.snippet_renderers.set(node, resolved);\n\tcontext.state.analysis.uses_render_tags = true;\n\n\tconst raw_args = unwrap_optional(node.expression).arguments;\n\tfor (const arg of raw_args) {\n\t\tif (arg.type === 'SpreadElement') {\n\t\t\te.render_tag_invalid_spread_argument(arg);\n\t\t}\n\t}\n\n\tif (\n\t\tcallee.type === 'MemberExpression' &&\n\t\tcallee.property.type === 'Identifier' &&\n\t\t['bind', 'apply', 'call'].includes(callee.property.name)\n\t) {\n\t\te.render_tag_invalid_call_expression(node);\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.visit(callee);\n\n\tfor (const arg of expression.arguments) {\n\t\tconst metadata = create_expression_metadata();\n\t\tnode.metadata.arguments.push(metadata);\n\n\t\tcontext.visit(arg, {\n\t\t\t...context.state,\n\t\t\texpression: metadata\n\t\t});\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { is_text_attribute } from '../../../utils/ast.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.SlotElement} node\n * @param {Context} context\n */\nexport function SlotElement(node, context) {\n\tif (context.state.analysis.runes && !context.state.analysis.custom_element) {\n\t\tw.slot_element_deprecated(node);\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\t/** @type {string} */\n\tlet name = 'default';\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name === 'name') {\n\t\t\t\tif (!is_text_attribute(attribute)) {\n\t\t\t\t\te.slot_element_invalid_name(attribute);\n\t\t\t\t}\n\n\t\t\t\tname = attribute.value[0].data;\n\t\t\t\tif (name === 'default') {\n\t\t\t\t\te.slot_element_invalid_name_default(attribute);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (attribute.type !== 'SpreadAttribute' && attribute.type !== 'LetDirective') {\n\t\t\te.slot_element_invalid_attribute(attribute);\n\t\t}\n\t}\n\n\tcontext.state.analysis.slot_names.set(name, node);\n\n\tcontext.next();\n}\n", "/** @import { AST, Binding } from '#compiler' */\n/** @import { Scope } from '../../scope' */\n/** @import { Context } from '../types' */\nimport { validate_block_not_empty, validate_opening_tag } from './shared/utils.js';\nimport * as e from '../../../errors.js';\n\n/**\n * @param {AST.SnippetBlock} node\n * @param {Context} context\n */\nexport function SnippetBlock(node, context) {\n\tcontext.state.analysis.snippets.add(node);\n\n\tvalidate_block_not_empty(node.body, context);\n\n\tif (context.state.analysis.runes) {\n\t\tvalidate_opening_tag(node, context.state, '#');\n\t}\n\n\tfor (const arg of node.parameters) {\n\t\tif (arg.type === 'RestElement') {\n\t\t\te.snippet_invalid_rest_parameter(arg);\n\t\t}\n\t}\n\n\tcontext.next({ ...context.state, parent_element: null });\n\n\tconst can_hoist =\n\t\tcontext.path.length === 1 &&\n\t\tcontext.path[0].type === 'Fragment' &&\n\t\tcan_hoist_snippet(context.state.scope, context.state.scopes);\n\n\tconst name = node.expression.name;\n\n\tif (can_hoist) {\n\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(name));\n\t\tcontext.state.analysis.module.scope.declarations.set(name, binding);\n\t} else {\n\t\tconst undefined_export = context.state.analysis.undefined_exports.get(name);\n\t\tif (undefined_export) {\n\t\t\te.snippet_invalid_export(undefined_export);\n\t\t}\n\t}\n\n\tnode.metadata.can_hoist = can_hoist;\n\n\tconst { path } = context;\n\tconst parent = path.at(-2);\n\tif (!parent) return;\n\n\tif (\n\t\tparent.type === 'Component' &&\n\t\tparent.attributes.some(\n\t\t\t(attribute) =>\n\t\t\t\t(attribute.type === 'Attribute' || attribute.type === 'BindDirective') &&\n\t\t\t\tattribute.name === node.expression.name\n\t\t)\n\t) {\n\t\te.snippet_shadowing_prop(node, node.expression.name);\n\t}\n\n\tif (node.expression.name !== 'children') return;\n\n\tif (\n\t\tparent.type === 'Component' ||\n\t\tparent.type === 'SvelteComponent' ||\n\t\tparent.type === 'SvelteSelf'\n\t) {\n\t\tif (\n\t\t\tparent.fragment.nodes.some(\n\t\t\t\t(node) =>\n\t\t\t\t\tnode.type !== 'SnippetBlock' &&\n\t\t\t\t\t(node.type !== 'Text' || node.data.trim()) &&\n\t\t\t\t\tnode.type !== 'Comment'\n\t\t\t)\n\t\t) {\n\t\t\te.snippet_conflict(node);\n\t\t}\n\t}\n}\n\n/**\n * @param {Map<AST.SvelteNode, Scope>} scopes\n * @param {Scope} scope\n */\nfunction can_hoist_snippet(scope, scopes, visited = new Set()) {\n\tfor (const [reference] of scope.references) {\n\t\tconst binding = scope.get(reference);\n\n\t\tif (!binding || binding.scope.function_depth === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// ignore bindings declared inside the snippet (e.g. the snippet's own parameters)\n\t\tif (binding.scope.function_depth >= scope.function_depth) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (binding.initial?.type === 'SnippetBlock') {\n\t\t\tif (visited.has(binding)) continue;\n\t\t\tvisited.add(binding);\n\t\t\tconst snippet_scope = /** @type {Scope} */ (scopes.get(binding.initial));\n\n\t\t\tif (can_hoist_snippet(snippet_scope, scopes, visited)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\n\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.SpreadAttribute} node\n * @param {Context} context\n */\nexport function SpreadAttribute(node, context) {\n\tmark_subtree_dynamic(context.path);\n\tcontext.next({ ...context.state, expression: node.metadata.expression });\n}\n", "/** @import { SpreadElement } from 'estree' */\n/** @import { Context } from '../types' */\n\n/**\n * @param {SpreadElement} node\n * @param {Context} context\n */\nexport function SpreadElement(node, context) {\n\tif (context.state.expression) {\n\t\t// treat e.g. `[...x]` the same as `[...x.values()]`\n\t\tcontext.state.expression.has_call = true;\n\t\tcontext.state.expression.has_state = true;\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { get_attribute_chunks } from '../../../utils/ast.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.StyleDirective} node\n * @param {Context} context\n */\nexport function StyleDirective(node, context) {\n\tif (node.modifiers.length > 1 || (node.modifiers.length && node.modifiers[0] !== 'important')) {\n\t\te.style_directive_invalid_modifier(node);\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tif (node.value === true) {\n\t\t// get the binding for node.name and change the binding to state\n\t\tlet binding = context.state.scope.get(node.name);\n\n\t\tif (binding) {\n\t\t\tif (binding.kind !== 'normal') {\n\t\t\t\tnode.metadata.expression.has_state = true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tcontext.next();\n\n\t\tfor (const chunk of get_attribute_chunks(node.value)) {\n\t\t\tif (chunk.type !== 'ExpressionTag') continue;\n\n\t\t\tnode.metadata.expression.has_state ||= chunk.metadata.expression.has_state;\n\t\t\tnode.metadata.expression.has_call ||= chunk.metadata.expression.has_call;\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { is_event_attribute } from '../../../utils/ast.js';\nimport { disallow_children } from './shared/special-element.js';\n\n/**\n * @param {AST.SvelteBody} node\n * @param {Context} context\n */\nexport function SvelteBody(node, context) {\n\tdisallow_children(node);\n\tfor (const attribute of node.attributes) {\n\t\tif (\n\t\t\tattribute.type === 'SpreadAttribute' ||\n\t\t\t(attribute.type === 'Attribute' && !is_event_attribute(attribute))\n\t\t) {\n\t\t\te.svelte_body_illegal_attribute(attribute);\n\t\t}\n\t}\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as w from '../../../warnings.js';\nimport { visit_component } from './shared/component.js';\n\n/**\n * @param {AST.SvelteComponent} node\n * @param {Context} context\n */\nexport function SvelteComponent(node, context) {\n\tif (context.state.analysis.runes) {\n\t\tw.svelte_component_deprecated(node);\n\t}\n\n\tcontext.visit(node.expression);\n\n\tvisit_component(node, context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { disallow_children } from './shared/special-element.js';\nimport * as e from '../../../errors.js';\nimport { is_event_attribute } from '../../../utils/ast.js';\n\n/**\n * @param {AST.SvelteDocument} node\n * @param {Context} context\n */\nexport function SvelteDocument(node, context) {\n\tdisallow_children(node);\n\n\tfor (const attribute of node.attributes) {\n\t\tif (\n\t\t\tattribute.type === 'SpreadAttribute' ||\n\t\t\t(attribute.type === 'Attribute' && !is_event_attribute(attribute))\n\t\t) {\n\t\t\te.illegal_element_attribute(attribute, 'svelte:document');\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { NAMESPACE_MATHML, NAMESPACE_SVG } from '../../../../constants.js';\nimport { is_text_attribute } from '../../../utils/ast.js';\nimport { check_element } from './shared/a11y.js';\nimport { validate_element } from './shared/element.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.SvelteElement} node\n * @param {Context} context\n */\nexport function SvelteElement(node, context) {\n\tvalidate_element(node, context);\n\tcheck_element(node, context);\n\n\tnode.metadata.path = [...context.path];\n\tcontext.state.analysis.elements.push(node);\n\n\tconst xmlns = /** @type {AST.Attribute & { value: [AST.Text] } | undefined} */ (\n\t\tnode.attributes.find(\n\t\t\t(a) => a.type === 'Attribute' && a.name === 'xmlns' && is_text_attribute(a)\n\t\t)\n\t);\n\n\tif (xmlns) {\n\t\tnode.metadata.svg = xmlns.value[0].data === NAMESPACE_SVG;\n\t\tnode.metadata.mathml = xmlns.value[0].data === NAMESPACE_MATHML;\n\t} else {\n\t\tlet i = context.path.length;\n\t\twhile (i--) {\n\t\t\tconst ancestor = context.path[i];\n\n\t\t\tif (\n\t\t\t\tancestor.type === 'Component' ||\n\t\t\t\tancestor.type === 'SvelteComponent' ||\n\t\t\t\tancestor.type === 'SvelteFragment' ||\n\t\t\t\tancestor.type === 'SnippetBlock' ||\n\t\t\t\ti === 0\n\t\t\t) {\n\t\t\t\t// Root element, or inside a slot or a snippet -> this resets the namespace, so assume the component namespace\n\t\t\t\tnode.metadata.svg = context.state.options.namespace === 'svg';\n\t\t\t\tnode.metadata.mathml = context.state.options.namespace === 'mathml';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (ancestor.type === 'SvelteElement' || ancestor.type === 'RegularElement') {\n\t\t\t\tnode.metadata.svg =\n\t\t\t\t\tancestor.type === 'RegularElement' && ancestor.name === 'foreignObject'\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: ancestor.metadata.svg;\n\n\t\t\t\tnode.metadata.mathml =\n\t\t\t\t\tancestor.type === 'RegularElement' && ancestor.name === 'foreignObject'\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: ancestor.metadata.mathml;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next({ ...context.state, parent_element: null });\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { validate_slot_attribute } from './shared/attribute.js';\n\n/**\n * @param {AST.SvelteFragment} node\n * @param {Context} context\n */\nexport function SvelteFragment(node, context) {\n\tconst parent = context.path.at(-2);\n\tif (parent?.type !== 'Component' && parent?.type !== 'SvelteComponent') {\n\t\te.svelte_fragment_invalid_placement(node);\n\t}\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name === 'slot') {\n\t\t\t\tvalidate_slot_attribute(context, attribute);\n\t\t\t}\n\t\t} else if (attribute.type !== 'LetDirective') {\n\t\t\te.svelte_fragment_invalid_attribute(attribute);\n\t\t}\n\t}\n\n\tcontext.next({ ...context.state, parent_element: null });\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.SvelteHead} node\n * @param {Context} context\n */\nexport function SvelteHead(node, context) {\n\tfor (const attribute of node.attributes) {\n\t\te.svelte_head_illegal_attribute(attribute);\n\t}\n\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { visit_component } from './shared/component.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { filename } from '../../../state.js';\n\n/**\n * @param {AST.SvelteSelf} node\n * @param {Context} context\n */\nexport function SvelteSelf(node, context) {\n\tconst valid = context.path.some(\n\t\t(node) =>\n\t\t\tnode.type === 'IfBlock' ||\n\t\t\tnode.type === 'EachBlock' ||\n\t\t\tnode.type === 'Component' ||\n\t\t\tnode.type === 'SnippetBlock'\n\t);\n\n\tif (!valid) {\n\t\te.svelte_self_invalid_placement(node);\n\t}\n\n\tif (context.state.analysis.runes) {\n\t\tconst name = filename === '(unknown)' ? 'Self' : context.state.analysis.name;\n\t\tconst basename =\n\t\t\tfilename === '(unknown)'\n\t\t\t\t? 'Self.svelte'\n\t\t\t\t: /** @type {string} */ (filename.split(/[/\\\\]/).pop());\n\n\t\tw.svelte_self_deprecated(node, name, basename);\n\t}\n\n\tvisit_component(node, context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { disallow_children } from './shared/special-element.js';\nimport * as e from '../../../errors.js';\nimport { is_event_attribute } from '../../../utils/ast.js';\n\n/**\n * @param {AST.SvelteWindow} node\n * @param {Context} context\n */\nexport function SvelteWindow(node, context) {\n\tdisallow_children(node);\n\n\tfor (const attribute of node.attributes) {\n\t\tif (\n\t\t\tattribute.type === 'SpreadAttribute' ||\n\t\t\t(attribute.type === 'Attribute' && !is_event_attribute(attribute))\n\t\t) {\n\t\t\te.illegal_element_attribute(attribute, 'svelte:window');\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\n\nconst valid = ['onerror', 'failed'];\n\n/**\n * @param {AST.SvelteBoundary} node\n * @param {Context} context\n */\nexport function SvelteBoundary(node, context) {\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute' || !valid.includes(attribute.name)) {\n\t\t\te.svelte_boundary_invalid_attribute(attribute);\n\t\t}\n\n\t\tif (\n\t\t\tattribute.value === true ||\n\t\t\t(Array.isArray(attribute.value) &&\n\t\t\t\t(attribute.value.length !== 1 || attribute.value[0].type !== 'ExpressionTag'))\n\t\t) {\n\t\t\te.svelte_boundary_invalid_attribute_value(attribute);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { TaggedTemplateExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { is_pure } from './shared/utils.js';\n\n/**\n * @param {TaggedTemplateExpression} node\n * @param {Context} context\n */\nexport function TaggedTemplateExpression(node, context) {\n\tif (context.state.expression && !is_pure(node.tag, context)) {\n\t\tcontext.state.expression.has_call = true;\n\t\tcontext.state.expression.has_state = true;\n\t}\n\n\tcontext.next();\n}\n", "/** @import { TemplateElement } from 'estree' */\nimport * as w from '../../../warnings.js';\nimport { regex_bidirectional_control_characters } from '../../patterns.js';\n\n/**\n * @param {TemplateElement} node\n */\nexport function TemplateElement(node) {\n\tif (regex_bidirectional_control_characters.test(node.value.cooked ?? '')) {\n\t\tw.bidirectional_control_characters(node);\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { is_tag_valid_with_parent } from '../../../../html-tree-validation.js';\nimport { regex_bidirectional_control_characters, regex_not_whitespace } from '../../patterns.js';\nimport * as e from '../../../errors.js';\nimport * as w from '../../../warnings.js';\nimport { extract_svelte_ignore } from '../../../utils/extract_svelte_ignore.js';\n\n/**\n * @param {AST.Text} node\n * @param {Context} context\n */\nexport function Text(node, context) {\n\tconst parent = /** @type {AST.SvelteNode} */ (context.path.at(-1));\n\n\tif (\n\t\tparent.type === 'Fragment' &&\n\t\tcontext.state.parent_element &&\n\t\tregex_not_whitespace.test(node.data)\n\t) {\n\t\tconst message = is_tag_valid_with_parent('#text', context.state.parent_element);\n\t\tif (message) {\n\t\t\te.node_invalid_placement(node, message);\n\t\t}\n\t}\n\n\tregex_bidirectional_control_characters.lastIndex = 0;\n\tfor (const match of node.data.matchAll(regex_bidirectional_control_characters)) {\n\t\tlet is_ignored = false;\n\n\t\t// if we have a svelte-ignore comment earlier in the text, bail\n\t\t// (otherwise we can only use svelte-ignore on parent elements/blocks)\n\t\tif (parent.type === 'Fragment') {\n\t\t\tfor (const child of parent.nodes) {\n\t\t\t\tif (child === node) break;\n\n\t\t\t\tif (child.type === 'Comment') {\n\t\t\t\t\tis_ignored ||= extract_svelte_ignore(\n\t\t\t\t\t\tchild.start + 4,\n\t\t\t\t\t\tchild.data,\n\t\t\t\t\t\tcontext.state.analysis.runes\n\t\t\t\t\t).includes('bidirectional_control_characters');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_ignored) {\n\t\t\tlet start = match.index + node.start;\n\t\t\tw.bidirectional_control_characters({ start, end: start + match[0].length });\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport * as e from '../../../errors.js';\n\n/**\n * @param {AST.TitleElement} node\n * @param {Context} context\n */\nexport function TitleElement(node, context) {\n\tfor (const attribute of node.attributes) {\n\t\te.title_illegal_attribute(attribute);\n\t}\n\n\tfor (const child of node.fragment.nodes) {\n\t\tif (child.type !== 'Text' && child.type !== 'ExpressionTag') {\n\t\t\te.title_invalid_content(child);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\n\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.TransitionDirective} node\n * @param {Context} context\n */\nexport function TransitionDirective(node, context) {\n\tmark_subtree_dynamic(context.path);\n\n\tcontext.next();\n}\n", "/** @import { UpdateExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { object } from '../../../utils/ast.js';\nimport { validate_assignment } from './shared/utils.js';\n\n/**\n * @param {UpdateExpression} node\n * @param {Context} context\n */\nexport function UpdateExpression(node, context) {\n\tvalidate_assignment(node, node.argument, context.state);\n\n\tif (context.state.reactive_statement) {\n\t\tconst id = node.argument.type === 'MemberExpression' ? object(node.argument) : node.argument;\n\t\tif (id?.type === 'Identifier') {\n\t\t\tconst binding = context.state.scope.get(id.name);\n\n\t\t\tif (binding) {\n\t\t\t\tcontext.state.reactive_statement.assignments.add(binding);\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { mark_subtree_dynamic } from './shared/fragment.js';\n\n/**\n * @param {AST.UseDirective} node\n * @param {Context} context\n */\nexport function UseDirective(node, context) {\n\tmark_subtree_dynamic(context.path);\n\tcontext.next();\n}\n", "/**\n * @template T\n * @param {any} actual\n * @param {T} expected\n * @returns {asserts actual is T}\n */\nexport function equal(actual, expected) {\n\tif (actual !== expected) throw new Error('Assertion failed');\n}\n", "/** @import { Expression, Identifier, Literal, VariableDeclarator } from 'estree' */\n/** @import { Binding } from '#compiler' */\n/** @import { Context } from '../types' */\nimport { get_rune } from '../../scope.js';\nimport { ensure_no_module_import_conflict, validate_identifier_name } from './shared/utils.js';\nimport * as e from '../../../errors.js';\nimport { extract_paths } from '../../../utils/ast.js';\nimport { equal } from '../../../utils/assert.js';\n\n/**\n * @param {VariableDeclarator} node\n * @param {Context} context\n */\nexport function VariableDeclarator(node, context) {\n\tensure_no_module_import_conflict(node, context.state);\n\n\tif (context.state.analysis.runes) {\n\t\tconst init = node.init;\n\t\tconst rune = get_rune(init, context.state.scope);\n\t\tconst paths = extract_paths(node.id);\n\n\t\tfor (const path of paths) {\n\t\t\tvalidate_identifier_name(context.state.scope.get(/** @type {Identifier} */ (path.node).name));\n\t\t}\n\n\t\t// TODO feels like this should happen during scope creation?\n\t\tif (\n\t\t\trune === '$state' ||\n\t\t\trune === '$state.raw' ||\n\t\t\trune === '$derived' ||\n\t\t\trune === '$derived.by' ||\n\t\t\trune === '$props'\n\t\t) {\n\t\t\tfor (const path of paths) {\n\t\t\t\t// @ts-ignore this fails in CI for some insane reason\n\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(path.node.name));\n\t\t\t\tbinding.kind =\n\t\t\t\t\trune === '$state'\n\t\t\t\t\t\t? 'state'\n\t\t\t\t\t\t: rune === '$state.raw'\n\t\t\t\t\t\t\t? 'raw_state'\n\t\t\t\t\t\t\t: rune === '$derived' || rune === '$derived.by'\n\t\t\t\t\t\t\t\t? 'derived'\n\t\t\t\t\t\t\t\t: path.is_rest\n\t\t\t\t\t\t\t\t\t? 'rest_prop'\n\t\t\t\t\t\t\t\t\t: 'prop';\n\t\t\t}\n\t\t}\n\n\t\tif (rune === '$props') {\n\t\t\tif (node.id.type !== 'ObjectPattern' && node.id.type !== 'Identifier') {\n\t\t\t\te.props_invalid_identifier(node);\n\t\t\t}\n\n\t\t\tcontext.state.analysis.needs_props = true;\n\n\t\t\tif (node.id.type === 'Identifier') {\n\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(node.id.name));\n\t\t\t\tbinding.initial = null; // else would be $props()\n\t\t\t\tbinding.kind = 'rest_prop';\n\t\t\t} else {\n\t\t\t\tequal(node.id.type, 'ObjectPattern');\n\n\t\t\t\tfor (const property of node.id.properties) {\n\t\t\t\t\tif (property.type !== 'Property') continue;\n\n\t\t\t\t\tif (property.computed) {\n\t\t\t\t\t\te.props_invalid_pattern(property);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (property.key.type === 'Identifier' && property.key.name.startsWith('$$')) {\n\t\t\t\t\t\te.props_illegal_name(property);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value =\n\t\t\t\t\t\tproperty.value.type === 'AssignmentPattern' ? property.value.left : property.value;\n\n\t\t\t\t\tif (value.type !== 'Identifier') {\n\t\t\t\t\t\te.props_invalid_pattern(property);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst alias =\n\t\t\t\t\t\tproperty.key.type === 'Identifier'\n\t\t\t\t\t\t\t? property.key.name\n\t\t\t\t\t\t\t: String(/** @type {Literal} */ (property.key).value);\n\n\t\t\t\t\tlet initial = property.value.type === 'AssignmentPattern' ? property.value.right : null;\n\n\t\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(value.name));\n\t\t\t\t\tbinding.prop_alias = alias;\n\n\t\t\t\t\t// rewire initial from $props() to the actual initial value, stripping $bindable() if necessary\n\t\t\t\t\tif (\n\t\t\t\t\t\tinitial?.type === 'CallExpression' &&\n\t\t\t\t\t\tinitial.callee.type === 'Identifier' &&\n\t\t\t\t\t\tinitial.callee.name === '$bindable'\n\t\t\t\t\t) {\n\t\t\t\t\t\tbinding.initial = /** @type {Expression | null} */ (initial.arguments[0] ?? null);\n\t\t\t\t\t\tbinding.kind = 'bindable_prop';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinding.initial = initial;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (node.init?.type === 'CallExpression') {\n\t\t\tconst callee = node.init.callee;\n\t\t\tif (\n\t\t\t\tcallee.type === 'Identifier' &&\n\t\t\t\t(callee.name === '$state' || callee.name === '$derived' || callee.name === '$props') &&\n\t\t\t\tcontext.state.scope.get(callee.name)?.kind !== 'store_sub'\n\t\t\t) {\n\t\t\t\te.rune_invalid_usage(node.init, callee.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { Expression, Node, Program } from 'estree' */\n/** @import { Binding, AST, ValidatedCompileOptions, ValidatedModuleCompileOptions } from '#compiler' */\n/** @import { AnalysisState, Visitors } from './types' */\n/** @import { Analysis, ComponentAnalysis, Js, ReactiveStatement, Template } from '../types' */\nimport { walk } from 'zimmerframe';\nimport * as e from '../../errors.js';\nimport * as w from '../../warnings.js';\nimport { extract_identifiers } from '../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { Scope, ScopeRoot, create_scopes, get_rune, set_scope } from '../scope.js';\nimport check_graph_for_cycles from './utils/check_graph_for_cycles.js';\nimport { create_attribute, is_custom_element_node } from '../nodes.js';\nimport { analyze_css } from './css/css-analyze.js';\nimport { prune } from './css/css-prune.js';\nimport { hash, is_rune } from '../../../utils.js';\nimport { warn_unused } from './css/css-warn.js';\nimport { extract_svelte_ignore } from '../../utils/extract_svelte_ignore.js';\nimport { ignore_map, ignore_stack, pop_ignore, push_ignore } from '../../state.js';\nimport { ArrowFunctionExpression } from './visitors/ArrowFunctionExpression.js';\nimport { AssignmentExpression } from './visitors/AssignmentExpression.js';\nimport { Attribute } from './visitors/Attribute.js';\nimport { AwaitBlock } from './visitors/AwaitBlock.js';\nimport { BindDirective } from './visitors/BindDirective.js';\nimport { CallExpression } from './visitors/CallExpression.js';\nimport { ClassBody } from './visitors/ClassBody.js';\nimport { ClassDeclaration } from './visitors/ClassDeclaration.js';\nimport { ClassDirective } from './visitors/ClassDirective.js';\nimport { Component } from './visitors/Component.js';\nimport { ConstTag } from './visitors/ConstTag.js';\nimport { DebugTag } from './visitors/DebugTag.js';\nimport { EachBlock } from './visitors/EachBlock.js';\nimport { ExportDefaultDeclaration } from './visitors/ExportDefaultDeclaration.js';\nimport { ExportNamedDeclaration } from './visitors/ExportNamedDeclaration.js';\nimport { ExportSpecifier } from './visitors/ExportSpecifier.js';\nimport { ExpressionStatement } from './visitors/ExpressionStatement.js';\nimport { ExpressionTag } from './visitors/ExpressionTag.js';\nimport { FunctionDeclaration } from './visitors/FunctionDeclaration.js';\nimport { FunctionExpression } from './visitors/FunctionExpression.js';\nimport { HtmlTag } from './visitors/HtmlTag.js';\nimport { Identifier } from './visitors/Identifier.js';\nimport { IfBlock } from './visitors/IfBlock.js';\nimport { ImportDeclaration } from './visitors/ImportDeclaration.js';\nimport { KeyBlock } from './visitors/KeyBlock.js';\nimport { LabeledStatement } from './visitors/LabeledStatement.js';\nimport { LetDirective } from './visitors/LetDirective.js';\nimport { Literal } from './visitors/Literal.js';\nimport { MemberExpression } from './visitors/MemberExpression.js';\nimport { NewExpression } from './visitors/NewExpression.js';\nimport { OnDirective } from './visitors/OnDirective.js';\nimport { RegularElement } from './visitors/RegularElement.js';\nimport { RenderTag } from './visitors/RenderTag.js';\nimport { SlotElement } from './visitors/SlotElement.js';\nimport { SnippetBlock } from './visitors/SnippetBlock.js';\nimport { SpreadAttribute } from './visitors/SpreadAttribute.js';\nimport { SpreadElement } from './visitors/SpreadElement.js';\nimport { StyleDirective } from './visitors/StyleDirective.js';\nimport { SvelteBody } from './visitors/SvelteBody.js';\nimport { SvelteComponent } from './visitors/SvelteComponent.js';\nimport { SvelteDocument } from './visitors/SvelteDocument.js';\nimport { SvelteElement } from './visitors/SvelteElement.js';\nimport { SvelteFragment } from './visitors/SvelteFragment.js';\nimport { SvelteHead } from './visitors/SvelteHead.js';\nimport { SvelteSelf } from './visitors/SvelteSelf.js';\nimport { SvelteWindow } from './visitors/SvelteWindow.js';\nimport { SvelteBoundary } from './visitors/SvelteBoundary.js';\nimport { TaggedTemplateExpression } from './visitors/TaggedTemplateExpression.js';\nimport { TemplateElement } from './visitors/TemplateElement.js';\nimport { Text } from './visitors/Text.js';\nimport { TitleElement } from './visitors/TitleElement.js';\nimport { TransitionDirective } from './visitors/TransitionDirective.js';\nimport { UpdateExpression } from './visitors/UpdateExpression.js';\nimport { UseDirective } from './visitors/UseDirective.js';\nimport { VariableDeclarator } from './visitors/VariableDeclarator.js';\nimport is_reference from 'is-reference';\nimport { mark_subtree_dynamic } from './visitors/shared/fragment.js';\n\n/**\n * @type {Visitors}\n */\nconst visitors = {\n\t_(node, { state, next, path }) {\n\t\tconst parent = path.at(-1);\n\n\t\t/** @type {string[]} */\n\t\tconst ignores = [];\n\n\t\tif (parent?.type === 'Fragment' && node.type !== 'Comment' && node.type !== 'Text') {\n\t\t\tconst idx = parent.nodes.indexOf(/** @type {any} */ (node));\n\n\t\t\tfor (let i = idx - 1; i >= 0; i--) {\n\t\t\t\tconst prev = parent.nodes[i];\n\n\t\t\t\tif (prev.type === 'Comment') {\n\t\t\t\t\tignores.push(\n\t\t\t\t\t\t...extract_svelte_ignore(\n\t\t\t\t\t\t\tprev.start + 4 /* '<!--'.length */,\n\t\t\t\t\t\t\tprev.data,\n\t\t\t\t\t\t\tstate.analysis.runes\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else if (prev.type !== 'Text') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst comments = /** @type {any} */ (node).leadingComments;\n\n\t\t\tif (comments) {\n\t\t\t\tfor (const comment of comments) {\n\t\t\t\t\tignores.push(\n\t\t\t\t\t\t...extract_svelte_ignore(\n\t\t\t\t\t\t\tcomment.start + 2 /* '//'.length */,\n\t\t\t\t\t\t\tcomment.value,\n\t\t\t\t\t\t\tstate.analysis.runes\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ignores.length > 0) {\n\t\t\tpush_ignore(ignores);\n\t\t}\n\n\t\tignore_map.set(node, structuredClone(ignore_stack));\n\n\t\tconst scope = state.scopes.get(node);\n\t\tnext(scope !== undefined && scope !== state.scope ? { ...state, scope } : state);\n\n\t\tif (ignores.length > 0) {\n\t\t\tpop_ignore();\n\t\t}\n\t},\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tAttribute,\n\tAwaitBlock,\n\tBindDirective,\n\tCallExpression,\n\tClassBody,\n\tClassDeclaration,\n\tClassDirective,\n\tComponent,\n\tConstTag,\n\tDebugTag,\n\tEachBlock,\n\tExportDefaultDeclaration,\n\tExportNamedDeclaration,\n\tExportSpecifier,\n\tExpressionStatement,\n\tExpressionTag,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tHtmlTag,\n\tIdentifier,\n\tIfBlock,\n\tImportDeclaration,\n\tKeyBlock,\n\tLabeledStatement,\n\tLetDirective,\n\tLiteral,\n\tMemberExpression,\n\tNewExpression,\n\tOnDirective,\n\tRegularElement,\n\tRenderTag,\n\tSlotElement,\n\tSnippetBlock,\n\tSpreadAttribute,\n\tSpreadElement,\n\tStyleDirective,\n\tSvelteBody,\n\tSvelteComponent,\n\tSvelteDocument,\n\tSvelteElement,\n\tSvelteFragment,\n\tSvelteHead,\n\tSvelteSelf,\n\tSvelteWindow,\n\tSvelteBoundary,\n\tTaggedTemplateExpression,\n\tTemplateElement,\n\tText,\n\tTransitionDirective,\n\tTitleElement,\n\tUpdateExpression,\n\tUseDirective,\n\tVariableDeclarator\n};\n\n/**\n * @param {AST.Script | null} script\n * @param {ScopeRoot} root\n * @param {boolean} allow_reactive_declarations\n * @param {Scope | null} parent\n * @returns {Js}\n */\nfunction js(script, root, allow_reactive_declarations, parent) {\n\t/** @type {Program} */\n\tconst ast = script?.content ?? {\n\t\ttype: 'Program',\n\t\tsourceType: 'module',\n\t\tstart: -1,\n\t\tend: -1,\n\t\tbody: []\n\t};\n\n\tconst { scope, scopes } = create_scopes(ast, root, allow_reactive_declarations, parent);\n\n\treturn { ast, scope, scopes };\n}\n\n/**\n * @param {string} filename\n */\nfunction get_component_name(filename) {\n\tconst parts = filename.split(/[/\\\\]/);\n\tconst basename = /** @type {string} */ (parts.pop());\n\tconst last_dir = /** @type {string} */ (parts.at(-1));\n\tlet name = basename.replace('.svelte', '');\n\tif (name === 'index' && last_dir && last_dir !== 'src') {\n\t\tname = last_dir;\n\t}\n\treturn name[0].toUpperCase() + name.slice(1);\n}\n\nconst RESERVED = ['$$props', '$$restProps', '$$slots'];\n\n/**\n * @param {Program} ast\n * @param {ValidatedModuleCompileOptions} options\n * @returns {Analysis}\n */\nexport function analyze_module(ast, options) {\n\tconst { scope, scopes } = create_scopes(ast, new ScopeRoot(), false, null);\n\n\tfor (const [name, references] of scope.references) {\n\t\tif (name[0] !== '$' || RESERVED.includes(name)) continue;\n\t\tif (name === '$' || name[1] === '$') {\n\t\t\te.global_reference_invalid(references[0].node, name);\n\t\t}\n\n\t\tconst binding = scope.get(name.slice(1));\n\n\t\tif (binding !== null && !is_rune(name)) {\n\t\t\te.store_invalid_subscription_module(references[0].node);\n\t\t}\n\t}\n\n\t/** @type {Analysis} */\n\tconst analysis = {\n\t\tmodule: { ast, scope, scopes },\n\t\tname: options.filename,\n\t\taccessors: false,\n\t\trunes: true,\n\t\timmutable: true,\n\t\ttracing: false\n\t};\n\n\twalk(\n\t\t/** @type {Node} */ (ast),\n\t\t{\n\t\t\tscope,\n\t\t\tscopes,\n\t\t\tanalysis: /** @type {ComponentAnalysis} */ (analysis),\n\t\t\tderived_state: [],\n\t\t\t// TODO the following are not needed for modules, but we have to pass them in order to avoid type error,\n\t\t\t// and reducing the type would result in a lot of tedious type casts elsewhere - find a good solution one day\n\t\t\tast_type: /** @type {any} */ (null),\n\t\t\tcomponent_slots: new Set(),\n\t\t\texpression: null,\n\t\t\tfunction_depth: 0,\n\t\t\thas_props_rune: false,\n\t\t\toptions: /** @type {ValidatedCompileOptions} */ (options),\n\t\t\tparent_element: null,\n\t\t\treactive_statement: null\n\t\t},\n\t\tvisitors\n\t);\n\n\treturn analysis;\n}\n\n/**\n * @param {AST.Root} root\n * @param {string} source\n * @param {ValidatedCompileOptions} options\n * @returns {ComponentAnalysis}\n */\nexport function analyze_component(root, source, options) {\n\tconst scope_root = new ScopeRoot();\n\n\tconst module = js(root.module, scope_root, false, null);\n\tconst instance = js(root.instance, scope_root, true, module.scope);\n\n\tconst { scope, scopes } = create_scopes(root.fragment, scope_root, false, instance.scope);\n\n\t/** @type {Template} */\n\tconst template = { ast: root.fragment, scope, scopes };\n\n\tlet synthetic_stores_legacy_check = [];\n\n\t// create synthetic bindings for store subscriptions\n\tfor (const [name, references] of module.scope.references) {\n\t\tif (name[0] !== '$' || RESERVED.includes(name)) continue;\n\t\tif (name === '$' || name[1] === '$') {\n\t\t\te.global_reference_invalid(references[0].node, name);\n\t\t}\n\n\t\tconst store_name = name.slice(1);\n\t\tconst declaration = instance.scope.get(store_name);\n\t\tconst init = /** @type {Node | undefined} */ (declaration?.initial);\n\n\t\t// If we're not in legacy mode through the compiler option, assume the user\n\t\t// is referencing a rune and not a global store.\n\t\tif (\n\t\t\toptions.runes === false ||\n\t\t\t!is_rune(name) ||\n\t\t\t(declaration !== null &&\n\t\t\t\t// const state = $state(0) is valid\n\t\t\t\t(get_rune(init, instance.scope) === null ||\n\t\t\t\t\t// rune-line names received as props are valid too (but we have to protect against $props as store)\n\t\t\t\t\t(store_name !== 'props' && get_rune(init, instance.scope) === '$props')) &&\n\t\t\t\t// allow `import { derived } from 'svelte/store'` in the same file as `const x = $derived(..)` because one is not a subscription to the other\n\t\t\t\t!(\n\t\t\t\t\tname === '$derived' &&\n\t\t\t\t\tdeclaration.initial?.type === 'ImportDeclaration' &&\n\t\t\t\t\tdeclaration.initial.source.value === 'svelte/store'\n\t\t\t\t))\n\t\t) {\n\t\t\tlet is_nested_store_subscription_node = undefined;\n\t\t\tsearch: for (const reference of references) {\n\t\t\t\tfor (let i = reference.path.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst scope =\n\t\t\t\t\t\tscopes.get(reference.path[i]) ||\n\t\t\t\t\t\tmodule.scopes.get(reference.path[i]) ||\n\t\t\t\t\t\tinstance.scopes.get(reference.path[i]);\n\t\t\t\t\tif (scope) {\n\t\t\t\t\t\tconst owner = scope?.owner(store_name);\n\t\t\t\t\t\tif (!!owner && owner !== module.scope && owner !== instance.scope) {\n\t\t\t\t\t\t\tis_nested_store_subscription_node = reference.node;\n\t\t\t\t\t\t\tbreak search;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_nested_store_subscription_node) {\n\t\t\t\te.store_invalid_scoped_subscription(is_nested_store_subscription_node);\n\t\t\t}\n\n\t\t\tif (options.runes !== false) {\n\t\t\t\tif (declaration === null && /[a-z]/.test(store_name[0])) {\n\t\t\t\t\te.global_reference_invalid(references[0].node, name);\n\t\t\t\t} else if (declaration !== null && is_rune(name)) {\n\t\t\t\t\tfor (const { node, path } of references) {\n\t\t\t\t\t\tif (path.at(-1)?.type === 'CallExpression') {\n\t\t\t\t\t\t\tw.store_rune_conflict(node, store_name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (module.ast) {\n\t\t\t\tfor (const { node, path } of references) {\n\t\t\t\t\t// if the reference is inside module, error. this is a bit hacky but it works\n\t\t\t\t\tif (\n\t\t\t\t\t\t/** @type {number} */ (node.start) > /** @type {number} */ (module.ast.start) &&\n\t\t\t\t\t\t/** @type {number} */ (node.end) < /** @type {number} */ (module.ast.end) &&\n\t\t\t\t\t\t// const state = $state(0) is valid\n\t\t\t\t\t\tget_rune(/** @type {Node} */ (path.at(-1)), module.scope) === null\n\t\t\t\t\t) {\n\t\t\t\t\t\te.store_invalid_subscription(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// we push to the array because at this moment in time we can't be sure if we are in legacy\n\t\t\t// mode yet because we are still changing the module scope\n\t\t\tsynthetic_stores_legacy_check.push(() => {\n\t\t\t\t// if we are creating a synthetic binding for a let declaration we should also declare\n\t\t\t\t// the declaration as state in case it's reassigned and we are not in runes mode (the function will\n\t\t\t\t// not be called if we are not in runes mode, that's why there's no !runes check here)\n\t\t\t\tif (\n\t\t\t\t\tdeclaration !== null &&\n\t\t\t\t\tdeclaration.kind === 'normal' &&\n\t\t\t\t\tdeclaration.declaration_kind === 'let' &&\n\t\t\t\t\tdeclaration.reassigned\n\t\t\t\t) {\n\t\t\t\t\tdeclaration.kind = 'state';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst binding = instance.scope.declare(b.id(name), 'store_sub', 'synthetic');\n\t\t\tbinding.references = references;\n\t\t\tinstance.scope.references.set(name, references);\n\t\t\tmodule.scope.references.delete(name);\n\t\t}\n\t}\n\n\tconst component_name = get_component_name(options.filename);\n\n\tconst runes = options.runes ?? Array.from(module.scope.references.keys()).some(is_rune);\n\n\tif (!runes) {\n\t\tfor (let check of synthetic_stores_legacy_check) {\n\t\t\tcheck();\n\t\t}\n\t}\n\n\tif (runes && root.module) {\n\t\tconst context = root.module.attributes.find((attribute) => attribute.name === 'context');\n\t\tif (context) {\n\t\t\tw.script_context_deprecated(context);\n\t\t}\n\t}\n\n\t// TODO remove all the ?? stuff, we don't need it now that we're validating the config\n\t/** @type {ComponentAnalysis} */\n\tconst analysis = {\n\t\tname: module.scope.generate(options.name ?? component_name),\n\t\troot: scope_root,\n\t\tmodule,\n\t\tinstance,\n\t\ttemplate,\n\t\telements: [],\n\t\trunes,\n\t\ttracing: false,\n\t\timmutable: runes || options.immutable,\n\t\texports: [],\n\t\tuses_props: false,\n\t\tprops_id: null,\n\t\tuses_rest_props: false,\n\t\tuses_slots: false,\n\t\tuses_component_bindings: false,\n\t\tuses_render_tags: false,\n\t\tneeds_context: false,\n\t\tneeds_mutation_validation: false,\n\t\tneeds_props: false,\n\t\tevent_directive_node: null,\n\t\tuses_event_attributes: false,\n\t\tcustom_element: options.customElementOptions ?? options.customElement,\n\t\tinject_styles: options.css === 'injected' || options.customElement,\n\t\taccessors: options.customElement\n\t\t\t? true\n\t\t\t: (runes ? false : !!options.accessors) ||\n\t\t\t\t// because $set method needs accessors\n\t\t\t\toptions.compatibility?.componentApi === 4,\n\t\treactive_statements: new Map(),\n\t\tbinding_groups: new Map(),\n\t\tslot_names: new Map(),\n\t\tcss: {\n\t\t\tast: root.css,\n\t\t\thash: root.css\n\t\t\t\t? options.cssHash({\n\t\t\t\t\t\tcss: root.css.content.styles,\n\t\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\t\tname: component_name,\n\t\t\t\t\t\thash\n\t\t\t\t\t})\n\t\t\t\t: '',\n\t\t\tkeyframes: [],\n\t\t\thas_global: false\n\t\t},\n\t\tsource,\n\t\tundefined_exports: new Map(),\n\t\tsnippet_renderers: new Map(),\n\t\tsnippets: new Set()\n\t};\n\n\tif (!runes) {\n\t\t// every exported `let` or `var` declaration becomes a prop, everything else becomes an export\n\t\tfor (const node of instance.ast.body) {\n\t\t\tif (node.type !== 'ExportNamedDeclaration') continue;\n\n\t\t\tanalysis.needs_props = true;\n\n\t\t\tif (node.declaration) {\n\t\t\t\tif (\n\t\t\t\t\tnode.declaration.type === 'FunctionDeclaration' ||\n\t\t\t\t\tnode.declaration.type === 'ClassDeclaration'\n\t\t\t\t) {\n\t\t\t\t\tanalysis.exports.push({\n\t\t\t\t\t\tname: /** @type {import('estree').Identifier} */ (node.declaration.id).name,\n\t\t\t\t\t\talias: null\n\t\t\t\t\t});\n\t\t\t\t} else if (node.declaration.type === 'VariableDeclaration') {\n\t\t\t\t\tif (node.declaration.kind === 'const') {\n\t\t\t\t\t\tfor (const declarator of node.declaration.declarations) {\n\t\t\t\t\t\t\tfor (const node of extract_identifiers(declarator.id)) {\n\t\t\t\t\t\t\t\tanalysis.exports.push({ name: node.name, alias: null });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const declarator of node.declaration.declarations) {\n\t\t\t\t\t\t\tfor (const id of extract_identifiers(declarator.id)) {\n\t\t\t\t\t\t\t\tconst binding = /** @type {Binding} */ (instance.scope.get(id.name));\n\t\t\t\t\t\t\t\tbinding.kind = 'bindable_prop';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const specifier of node.specifiers) {\n\t\t\t\t\tif (specifier.local.type !== 'Identifier' || specifier.exported.type !== 'Identifier') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst binding = instance.scope.get(specifier.local.name);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tbinding &&\n\t\t\t\t\t\t(binding.declaration_kind === 'var' || binding.declaration_kind === 'let')\n\t\t\t\t\t) {\n\t\t\t\t\t\tbinding.kind = 'bindable_prop';\n\n\t\t\t\t\t\tif (specifier.exported.name !== specifier.local.name) {\n\t\t\t\t\t\t\tbinding.prop_alias = specifier.exported.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanalysis.exports.push({ name: specifier.local.name, alias: specifier.exported.name });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if reassigned/mutated bindings are referenced in `$:` blocks\n\t\t// or the template, turn them into state\n\t\tfor (const binding of instance.scope.declarations.values()) {\n\t\t\tif (binding.kind !== 'normal') continue;\n\n\t\t\tfor (const { node, path } of binding.references) {\n\t\t\t\tif (node === binding.node) continue;\n\n\t\t\t\tif (binding.updated) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpath[path.length - 1].type === 'StyleDirective' ||\n\t\t\t\t\t\tpath.some((node) => node.type === 'Fragment') ||\n\t\t\t\t\t\t(path[1].type === 'LabeledStatement' && path[1].label.name === '$')\n\t\t\t\t\t) {\n\t\t\t\t\t\tbinding.kind = 'state';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more legacy nonsense: if an `each` binding is reassigned/mutated,\n\t\t// treat the expression as being mutated as well\n\t\twalk(/** @type {AST.SvelteNode} */ (template.ast), null, {\n\t\t\tEachBlock(node) {\n\t\t\t\tconst scope = /** @type {Scope} */ (template.scopes.get(node));\n\n\t\t\t\tfor (const binding of scope.declarations.values()) {\n\t\t\t\t\tif (binding.updated) {\n\t\t\t\t\t\tconst state = { scope: /** @type {Scope} */ (scope.parent), scopes: template.scopes };\n\n\t\t\t\t\t\twalk(node.expression, state, {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\t_: set_scope,\n\t\t\t\t\t\t\tIdentifier(node, context) {\n\t\t\t\t\t\t\t\tconst parent = /** @type {Expression} */ (context.path.at(-1));\n\n\t\t\t\t\t\t\t\tif (is_reference(node, parent)) {\n\t\t\t\t\t\t\t\t\tconst binding = context.state.scope.get(node.name);\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tbinding &&\n\t\t\t\t\t\t\t\t\t\tbinding.kind === 'normal' &&\n\t\t\t\t\t\t\t\t\t\tbinding.declaration_kind !== 'import'\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tbinding.kind = 'state';\n\t\t\t\t\t\t\t\t\t\tbinding.mutated = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (root.options) {\n\t\tfor (const attribute of root.options.attributes) {\n\t\t\tif (attribute.name === 'accessors' && analysis.runes) {\n\t\t\t\tw.options_deprecated_accessors(attribute);\n\t\t\t}\n\n\t\t\tif (attribute.name === 'customElement' && !options.customElement) {\n\t\t\t\tw.options_missing_custom_element(attribute);\n\t\t\t}\n\n\t\t\tif (attribute.name === 'immutable' && analysis.runes) {\n\t\t\t\tw.options_deprecated_immutable(attribute);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (analysis.runes) {\n\t\tconst props_refs = module.scope.references.get('$$props');\n\t\tif (props_refs) {\n\t\t\te.legacy_props_invalid(props_refs[0].node);\n\t\t}\n\n\t\tconst rest_props_refs = module.scope.references.get('$$restProps');\n\t\tif (rest_props_refs) {\n\t\t\te.legacy_rest_props_invalid(rest_props_refs[0].node);\n\t\t}\n\n\t\tfor (const { ast, scope, scopes } of [module, instance, template]) {\n\t\t\t/** @type {AnalysisState} */\n\t\t\tconst state = {\n\t\t\t\tscope,\n\t\t\t\tscopes,\n\t\t\t\tanalysis,\n\t\t\t\toptions,\n\t\t\t\tast_type: ast === instance.ast ? 'instance' : ast === template.ast ? 'template' : 'module',\n\t\t\t\tparent_element: null,\n\t\t\t\thas_props_rune: false,\n\t\t\t\tcomponent_slots: new Set(),\n\t\t\t\texpression: null,\n\t\t\t\tderived_state: [],\n\t\t\t\tfunction_depth: scope.function_depth,\n\t\t\t\treactive_statement: null\n\t\t\t};\n\n\t\t\twalk(/** @type {AST.SvelteNode} */ (ast), state, visitors);\n\t\t}\n\n\t\t// warn on any nonstate declarations that are a) reassigned and b) referenced in the template\n\t\tfor (const scope of [module.scope, instance.scope]) {\n\t\t\touter: for (const [name, binding] of scope.declarations) {\n\t\t\t\tif (binding.kind === 'normal' && binding.reassigned) {\n\t\t\t\t\tinner: for (const { path } of binding.references) {\n\t\t\t\t\t\tif (path[0].type !== 'Fragment') continue;\n\t\t\t\t\t\tfor (let i = 1; i < path.length; i += 1) {\n\t\t\t\t\t\t\tconst type = path[i].type;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttype === 'FunctionDeclaration' ||\n\t\t\t\t\t\t\t\ttype === 'FunctionExpression' ||\n\t\t\t\t\t\t\t\ttype === 'ArrowFunctionExpression'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcontinue inner;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// bind:this doesn't need to be a state reference if it will never change\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttype === 'BindDirective' &&\n\t\t\t\t\t\t\t\t/** @type {AST.BindDirective} */ (path[i]).name === 'this'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j -= 1) {\n\t\t\t\t\t\t\t\t\tconst type = path[j].type;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttype === 'IfBlock' ||\n\t\t\t\t\t\t\t\t\t\ttype === 'EachBlock' ||\n\t\t\t\t\t\t\t\t\t\ttype === 'AwaitBlock' ||\n\t\t\t\t\t\t\t\t\t\ttype === 'KeyBlock'\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tw.non_reactive_update(binding.node, name);\n\t\t\t\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontinue inner;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tw.non_reactive_update(binding.node, name);\n\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tinstance.scope.declare(b.id('$$props'), 'rest_prop', 'synthetic');\n\t\tinstance.scope.declare(b.id('$$restProps'), 'rest_prop', 'synthetic');\n\n\t\tfor (const { ast, scope, scopes } of [module, instance, template]) {\n\t\t\t/** @type {AnalysisState} */\n\t\t\tconst state = {\n\t\t\t\tscope,\n\t\t\t\tscopes,\n\t\t\t\tanalysis,\n\t\t\t\toptions,\n\t\t\t\tparent_element: null,\n\t\t\t\thas_props_rune: false,\n\t\t\t\tast_type: ast === instance.ast ? 'instance' : ast === template.ast ? 'template' : 'module',\n\t\t\t\treactive_statement: null,\n\t\t\t\tcomponent_slots: new Set(),\n\t\t\t\texpression: null,\n\t\t\t\tderived_state: [],\n\t\t\t\tfunction_depth: scope.function_depth\n\t\t\t};\n\n\t\t\twalk(/** @type {AST.SvelteNode} */ (ast), state, visitors);\n\t\t}\n\n\t\tfor (const [name, binding] of instance.scope.declarations) {\n\t\t\tif (\n\t\t\t\t(binding.kind === 'prop' || binding.kind === 'bindable_prop') &&\n\t\t\t\tbinding.node.name !== '$$props'\n\t\t\t) {\n\t\t\t\tconst references = binding.references.filter(\n\t\t\t\t\t(r) => r.node !== binding.node && r.path.at(-1)?.type !== 'ExportSpecifier'\n\t\t\t\t);\n\t\t\t\tif (!references.length && !instance.scope.declarations.has(`$${name}`)) {\n\t\t\t\t\tw.export_let_unused(binding.node, name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tanalysis.reactive_statements = order_reactive_statements(analysis.reactive_statements);\n\t}\n\n\tfor (const node of analysis.module.ast.body) {\n\t\tif (node.type === 'ExportNamedDeclaration' && node.specifiers !== null && node.source == null) {\n\t\t\tfor (const specifier of node.specifiers) {\n\t\t\t\tif (specifier.local.type !== 'Identifier') continue;\n\n\t\t\t\tconst binding = analysis.module.scope.get(specifier.local.name);\n\t\t\t\tif (!binding) e.export_undefined(specifier, specifier.local.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (analysis.event_directive_node && analysis.uses_event_attributes) {\n\t\te.mixed_event_handler_syntaxes(\n\t\t\tanalysis.event_directive_node,\n\t\t\tanalysis.event_directive_node.name\n\t\t);\n\t}\n\n\tfor (const [node, resolved] of analysis.snippet_renderers) {\n\t\tif (!resolved) {\n\t\t\tnode.metadata.snippets = analysis.snippets;\n\t\t}\n\n\t\tfor (const snippet of node.metadata.snippets) {\n\t\t\tsnippet.metadata.sites.add(node);\n\t\t}\n\t}\n\n\tif (\n\t\tanalysis.uses_render_tags &&\n\t\t(analysis.uses_slots || (!analysis.custom_element && analysis.slot_names.size > 0))\n\t) {\n\t\tconst pos = analysis.slot_names.values().next().value ?? analysis.source.indexOf('$$slot');\n\t\te.slot_snippet_conflict(pos);\n\t}\n\n\tif (analysis.css.ast) {\n\t\tanalyze_css(analysis.css.ast, analysis);\n\n\t\t// mark nodes as scoped/unused/empty etc\n\t\tfor (const node of analysis.elements) {\n\t\t\tprune(analysis.css.ast, node);\n\t\t}\n\n\t\tconst { comment } = analysis.css.ast.content;\n\t\tconst should_ignore_unused =\n\t\t\tcomment &&\n\t\t\textract_svelte_ignore(comment.start, comment.data, analysis.runes).includes(\n\t\t\t\t'css_unused_selector'\n\t\t\t);\n\n\t\tif (!should_ignore_unused) {\n\t\t\twarn_unused(analysis.css.ast);\n\t\t}\n\t}\n\n\tfor (const node of analysis.elements) {\n\t\tif (node.metadata.scoped && is_custom_element_node(node)) {\n\t\t\tmark_subtree_dynamic(node.metadata.path);\n\t\t}\n\n\t\tlet has_class = false;\n\t\tlet has_style = false;\n\t\tlet has_spread = false;\n\t\tlet has_class_directive = false;\n\t\tlet has_style_directive = false;\n\n\t\tfor (const attribute of node.attributes) {\n\t\t\t// The spread method appends the hash to the end of the class attribute on its own\n\t\t\tif (attribute.type === 'SpreadAttribute') {\n\t\t\t\thas_spread = true;\n\t\t\t\tbreak;\n\t\t\t} else if (attribute.type === 'Attribute') {\n\t\t\t\thas_class ||= attribute.name.toLowerCase() === 'class';\n\t\t\t\thas_style ||= attribute.name.toLowerCase() === 'style';\n\t\t\t} else if (attribute.type === 'ClassDirective') {\n\t\t\t\thas_class_directive = true;\n\t\t\t} else if (attribute.type === 'StyleDirective') {\n\t\t\t\thas_style_directive = true;\n\t\t\t}\n\t\t}\n\n\t\t// We need an empty class to generate the set_class() or class=\"\" correctly\n\t\tif (!has_spread && !has_class && (node.metadata.scoped || has_class_directive)) {\n\t\t\tnode.attributes.push(\n\t\t\t\tcreate_attribute('class', -1, -1, [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'Text',\n\t\t\t\t\t\tdata: '',\n\t\t\t\t\t\traw: '',\n\t\t\t\t\t\tstart: -1,\n\t\t\t\t\t\tend: -1\n\t\t\t\t\t}\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\n\t\t// We need an empty style to generate the set_style() correctly\n\t\tif (!has_spread && !has_style && has_style_directive) {\n\t\t\tnode.attributes.push(\n\t\t\t\tcreate_attribute('style', -1, -1, [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'Text',\n\t\t\t\t\t\tdata: '',\n\t\t\t\t\t\traw: '',\n\t\t\t\t\t\tstart: -1,\n\t\t\t\t\t\tend: -1\n\t\t\t\t\t}\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\t}\n\n\t// TODO\n\t// analysis.stylesheet.warn_on_unused_selectors(analysis);\n\n\treturn analysis;\n}\n\n/**\n * @param {Map<import('estree').LabeledStatement, ReactiveStatement>} unsorted_reactive_declarations\n */\nfunction order_reactive_statements(unsorted_reactive_declarations) {\n\t/** @typedef {[import('estree').LabeledStatement, ReactiveStatement]} Tuple */\n\n\t/** @type {Map<string, Array<Tuple>>} */\n\tconst lookup = new Map();\n\n\tfor (const [node, declaration] of unsorted_reactive_declarations) {\n\t\tfor (const binding of declaration.assignments) {\n\t\t\tconst statements = lookup.get(binding.node.name) ?? [];\n\t\t\tstatements.push([node, declaration]);\n\t\t\tlookup.set(binding.node.name, statements);\n\t\t}\n\t}\n\n\t/** @type {Array<[string, string]>} */\n\tconst edges = [];\n\n\tfor (const [, { assignments, dependencies }] of unsorted_reactive_declarations) {\n\t\tfor (const assignment of assignments) {\n\t\t\tfor (const dependency of dependencies) {\n\t\t\t\tif (!assignments.has(dependency)) {\n\t\t\t\t\tedges.push([assignment.node.name, dependency.node.name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst cycle = check_graph_for_cycles(edges);\n\tif (cycle?.length) {\n\t\tconst declaration = /** @type {Tuple[]} */ (lookup.get(cycle[0]))[0];\n\t\te.reactive_declaration_cycle(declaration[0], cycle.join(' → '));\n\t}\n\n\t// We use a map and take advantage of the fact that the spec says insertion order is preserved when iterating\n\t/** @type {Map<import('estree').LabeledStatement, ReactiveStatement>} */\n\tconst reactive_declarations = new Map();\n\n\t/**\n\t *\n\t * @param {import('estree').LabeledStatement} node\n\t * @param {ReactiveStatement} declaration\n\t * @returns\n\t */\n\tconst add_declaration = (node, declaration) => {\n\t\tif ([...reactive_declarations.values()].includes(declaration)) return;\n\n\t\tfor (const binding of declaration.dependencies) {\n\t\t\tif (declaration.assignments.has(binding)) continue;\n\t\t\tfor (const [node, earlier] of lookup.get(binding.node.name) ?? []) {\n\t\t\t\tadd_declaration(node, earlier);\n\t\t\t}\n\t\t}\n\n\t\treactive_declarations.set(node, declaration);\n\t};\n\n\tfor (const [node, declaration] of unsorted_reactive_declarations) {\n\t\tadd_declaration(node, declaration);\n\t}\n\n\treturn reactive_declarations;\n}\n", "/** @import { ValidatedCompileOptions } from '#compiler' */\n/** @import { Processed } from '../preprocess/public.js' */\n/** @import { SourceMap } from 'magic-string' */\n/** @import { Source } from '../preprocess/private.js' */\n/** @import { DecodedSourceMap, SourceMapSegment, RawSourceMap } from '@ampproject/remapping' */\nimport remapping from '@ampproject/remapping';\nimport { push_array } from './push_array.js';\n\n/**\n * @param {string} s\n */\nfunction last_line_length(s) {\n\treturn s.length - s.lastIndexOf('\\n') - 1;\n}\n// mutate map in-place\n\n/**\n * @param {DecodedSourceMap} map\n * @param {{ line: number; column: number; }} offset\n * @param {number} source_index\n */\nexport function sourcemap_add_offset(map, offset, source_index) {\n\tif (map.mappings.length == 0) return;\n\tfor (let line = 0; line < map.mappings.length; line++) {\n\t\tconst segment_list = map.mappings[line];\n\t\tfor (let segment = 0; segment < segment_list.length; segment++) {\n\t\t\tconst seg = segment_list[segment];\n\t\t\t// shift only segments that belong to component source file\n\t\t\tif (seg[1] === source_index) {\n\t\t\t\t// also ensures that seg.length >= 4\n\t\t\t\t// shift column if it points at the first line\n\t\t\t\tif (seg[2] === 0) {\n\t\t\t\t\t/** @type {any} */ (seg[3]) += offset.column;\n\t\t\t\t}\n\t\t\t\t// shift line\n\t\t\t\t/** @type {any} */ (seg[2]) += offset.line;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template T\n * @param {T[]} this_table\n * @param {T[]} other_table\n * @returns {[T[], number[], boolean, boolean]}\n */\nfunction merge_tables(this_table, other_table) {\n\tconst new_table = this_table.slice();\n\tconst idx_map = [];\n\tother_table = other_table || [];\n\tlet val_changed = false;\n\tfor (const [other_idx, other_val] of other_table.entries()) {\n\t\tconst this_idx = this_table.indexOf(other_val);\n\t\tif (this_idx >= 0) {\n\t\t\tidx_map[other_idx] = this_idx;\n\t\t} else {\n\t\t\tconst new_idx = new_table.length;\n\t\t\tnew_table[new_idx] = other_val;\n\t\t\tidx_map[other_idx] = new_idx;\n\t\t\tval_changed = true;\n\t\t}\n\t}\n\tlet idx_changed = val_changed;\n\tif (val_changed) {\n\t\tif (idx_map.find((val, idx) => val != idx) === undefined) {\n\t\t\t// idx_map is identity map [0, 1, 2, 3, 4, ....]\n\t\t\tidx_changed = false;\n\t\t}\n\t}\n\treturn [new_table, idx_map, val_changed, idx_changed];\n}\nconst regex_line_token = /([^\\w\\s]|\\s+)/g;\n/** */\nexport class MappedCode {\n\t/**\n\t * @type {string}\n\t */\n\tstring = /** @type {any} */ (undefined);\n\n\t/**\n\t * @type {DecodedSourceMap}\n\t */\n\tmap = /** @type {any} */ (undefined);\n\n\t/**\n\t * @param {string} string\n\t * @param {DecodedSourceMap | null} map\n\t */\n\tconstructor(string = '', map = null) {\n\t\tthis.string = string;\n\t\tif (map) {\n\t\t\tthis.map = map;\n\t\t} else {\n\t\t\tthis.map = {\n\t\t\t\tversion: 3,\n\t\t\t\tmappings: [],\n\t\t\t\tsources: [],\n\t\t\t\tnames: []\n\t\t\t};\n\t\t}\n\t}\n\t/**\n\t * concat in-place (mutable), return this (chainable)\n\t * will also mutate the `other` object\n\t * @param {MappedCode} other\n\t * @returns {MappedCode}\n\t */\n\tconcat(other) {\n\t\t// noop: if one is empty, return the other\n\t\tif (other.string == '') return this;\n\t\tif (this.string == '') {\n\t\t\tthis.string = other.string;\n\t\t\tthis.map = other.map;\n\t\t\treturn this;\n\t\t}\n\t\t// compute last line length before mutating\n\t\tconst column_offset = last_line_length(this.string);\n\t\tthis.string += other.string;\n\t\tconst m1 = this.map;\n\t\tconst m2 = other.map;\n\t\tif (m2.mappings.length == 0) return this;\n\t\t// combine sources and names\n\t\tconst [sources, new_source_idx, sources_changed, sources_idx_changed] = merge_tables(\n\t\t\tm1.sources,\n\t\t\tm2.sources\n\t\t);\n\t\tconst [names, new_name_idx, names_changed, names_idx_changed] = merge_tables(\n\t\t\tm1.names,\n\t\t\tm2.names\n\t\t);\n\t\tif (sources_changed) m1.sources = sources;\n\t\tif (names_changed) m1.names = names;\n\t\t// unswitched loops are faster\n\t\tif (sources_idx_changed && names_idx_changed) {\n\t\t\tfor (let line = 0; line < m2.mappings.length; line++) {\n\t\t\t\tconst segment_list = m2.mappings[line];\n\t\t\t\tfor (let segment = 0; segment < segment_list.length; segment++) {\n\t\t\t\t\tconst seg = segment_list[segment];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (seg[1] >= 0) seg[1] = new_source_idx[seg[1]];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (seg[4] >= 0) seg[4] = new_name_idx[seg[4]];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (sources_idx_changed) {\n\t\t\tfor (let line = 0; line < m2.mappings.length; line++) {\n\t\t\t\tconst segment_list = m2.mappings[line];\n\t\t\t\tfor (let segment = 0; segment < segment_list.length; segment++) {\n\t\t\t\t\tconst seg = segment_list[segment];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (seg[1] >= 0) seg[1] = new_source_idx[seg[1]];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (names_idx_changed) {\n\t\t\tfor (let line = 0; line < m2.mappings.length; line++) {\n\t\t\t\tconst segment_list = m2.mappings[line];\n\t\t\t\tfor (let segment = 0; segment < segment_list.length; segment++) {\n\t\t\t\t\tconst seg = segment_list[segment];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (seg[4] >= 0) seg[4] = new_name_idx[seg[4]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// combine the mappings\n\t\t// combine\n\t\t// 1. last line of first map\n\t\t// 2. first line of second map\n\t\t// columns of 2 must be shifted\n\t\tif (m2.mappings.length > 0 && column_offset > 0) {\n\t\t\tconst first_line = m2.mappings[0];\n\t\t\tfor (let i = 0; i < first_line.length; i++) {\n\t\t\t\tfirst_line[i][0] += column_offset;\n\t\t\t}\n\t\t}\n\t\t// combine last line + first line\n\t\tpush_array(\n\t\t\tm1.mappings[m1.mappings.length - 1],\n\t\t\t/** @type {SourceMapSegment[]} */ (m2.mappings.shift())\n\t\t);\n\t\t// append other lines\n\t\tpush_array(m1.mappings, m2.mappings);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @static\n\t * @param {string} string\n\t * @param {DecodedSourceMap} [map]\n\t * @returns {MappedCode}\n\t */\n\tstatic from_processed(string, map) {\n\t\tconst line_count = string.split('\\n').length;\n\t\tif (map) {\n\t\t\t// ensure that count of source map mappings lines\n\t\t\t// is equal to count of generated code lines\n\t\t\t// (some tools may produce less)\n\t\t\tconst missing_lines = line_count - map.mappings.length;\n\t\t\tfor (let i = 0; i < missing_lines; i++) {\n\t\t\t\tmap.mappings.push([]);\n\t\t\t}\n\t\t\treturn new MappedCode(string, map);\n\t\t}\n\t\tif (string == '') return new MappedCode();\n\t\tmap = { version: 3, names: [], sources: [], mappings: [] };\n\t\t// add empty SourceMapSegment[] for every line\n\t\tfor (let i = 0; i < line_count; i++) map.mappings.push([]);\n\t\treturn new MappedCode(string, map);\n\t}\n\n\t/**\n\t * @static\n\t * @param {Source} opts\n\t * @returns {MappedCode}\n\t */\n\tstatic from_source({ source, file_basename, get_location }) {\n\t\t/**\n\t\t * @type {{ line: number; column: number; }}\n\t\t */\n\t\tlet offset = get_location(0);\n\t\tif (!offset) offset = { line: 0, column: 0 };\n\n\t\t/**\n\t\t * @type {DecodedSourceMap}\n\t\t */\n\t\tconst map = { version: 3, names: [], sources: [file_basename], mappings: [] };\n\t\tif (source == '') return new MappedCode(source, map);\n\t\t// we create a high resolution identity map here,\n\t\t// we know that it will eventually be merged with svelte's map,\n\t\t// at which stage the resolution will decrease.\n\t\tconst line_list = source.split('\\n');\n\t\tfor (let line = 0; line < line_list.length; line++) {\n\t\t\tmap.mappings.push([]);\n\t\t\tconst token_list = line_list[line].split(regex_line_token);\n\t\t\tfor (let token = 0, column = 0; token < token_list.length; token++) {\n\t\t\t\tif (token_list[token] == '') continue;\n\t\t\t\tmap.mappings[line].push([column, 0, offset.line + line, column]);\n\t\t\t\tcolumn += token_list[token].length;\n\t\t\t}\n\t\t}\n\t\t// shift columns in first line\n\t\tconst segment_list = map.mappings[0];\n\t\tfor (let segment = 0; segment < segment_list.length; segment++) {\n\t\t\t// @ts-ignore\n\t\t\tsegment_list[segment][3] += offset.column;\n\t\t}\n\t\treturn new MappedCode(source, map);\n\t}\n}\n\n// browser vs node.js\nconst b64enc =\n\ttypeof window !== 'undefined' && typeof btoa === 'function'\n\t\t? /** @param {string} str */ (str) => btoa(unescape(encodeURIComponent(str)))\n\t\t: /** @param {string} str */ (str) => Buffer.from(str).toString('base64');\nconst b64dec =\n\ttypeof window !== 'undefined' && typeof atob === 'function'\n\t\t? atob\n\t\t: /** @param {any} a */ (a) => Buffer.from(a, 'base64').toString();\n\n/**\n * @param {string} filename Basename of the input file\n * @param {Array<DecodedSourceMap | RawSourceMap>} sourcemap_list\n */\nexport function combine_sourcemaps(filename, sourcemap_list) {\n\tif (sourcemap_list.length == 0) return null;\n\tlet map_idx = 1;\n\tconst map =\n\t\tsourcemap_list.slice(0, -1).find((m) => m.sources.length !== 1) === undefined\n\t\t\t? remapping(\n\t\t\t\t\t// use array interface\n\t\t\t\t\t// only the oldest sourcemap can have multiple sources\n\t\t\t\t\tsourcemap_list,\n\t\t\t\t\t() => null,\n\t\t\t\t\ttrue // skip optional field `sourcesContent`\n\t\t\t\t)\n\t\t\t: remapping(\n\t\t\t\t\t// use loader interface\n\t\t\t\t\tsourcemap_list[0], // last map\n\t\t\t\t\t(sourcefile) => {\n\t\t\t\t\t\t// TODO the equality check assumes that the preprocessor map has the input file as a relative path in sources,\n\t\t\t\t\t\t// e.g. when the input file is `src/foo/bar.svelte`, then sources is expected to contain just `bar.svelte`.\n\t\t\t\t\t\t// Therefore filename also needs to be the basename of the path. This feels brittle, investigate how we can\n\t\t\t\t\t\t// harden this (without breaking other tooling that assumes this behavior).\n\t\t\t\t\t\tif (sourcefile === filename && sourcemap_list[map_idx]) {\n\t\t\t\t\t\t\treturn sourcemap_list[map_idx++]; // idx 1, 2, ...\n\t\t\t\t\t\t\t// bundle file = branch node\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn null; // source file = leaf node\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\tif (!map.file) delete map.file; // skip optional field `file`\n\t// When source maps are combined and the leading map is empty, sources is not set.\n\t// Add the filename to the empty array in this case.\n\t// Further improvements to remapping may help address this as well https://github.com/ampproject/remapping/issues/116\n\tif (!map.sources.length) map.sources = [filename];\n\treturn map;\n}\n\n/**\n * @param {string} filename\n * @param {SourceMap} svelte_map\n * @param {string | DecodedSourceMap | RawSourceMap} preprocessor_map_input\n * @returns {SourceMap}\n */\nfunction apply_preprocessor_sourcemap(filename, svelte_map, preprocessor_map_input) {\n\tif (!svelte_map || !preprocessor_map_input) return svelte_map;\n\tconst preprocessor_map =\n\t\ttypeof preprocessor_map_input === 'string'\n\t\t\t? JSON.parse(preprocessor_map_input)\n\t\t\t: preprocessor_map_input;\n\tconst result_map = combine_sourcemaps(filename, [svelte_map, preprocessor_map]);\n\t// Svelte expects a SourceMap which includes toUrl and toString. Instead of wrapping our output in a class,\n\t// we just tack on the extra properties.\n\tObject.defineProperties(result_map, {\n\t\ttoString: {\n\t\t\tenumerable: false,\n\t\t\tvalue: function toString() {\n\t\t\t\treturn JSON.stringify(this);\n\t\t\t}\n\t\t},\n\t\ttoUrl: {\n\t\t\tenumerable: false,\n\t\t\tvalue: function toUrl() {\n\t\t\t\treturn 'data:application/json;charset=utf-8;base64,' + b64enc(this.toString());\n\t\t\t}\n\t\t}\n\t});\n\treturn /** @type {any} */ (result_map);\n}\nconst regex_data_uri = /data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(\\S*)/;\n// parse attached sourcemap in processed.code\n\n/**\n * @param {Processed} processed\n * @param {'script' | 'style'} tag_name\n * @returns {void}\n */\nexport function parse_attached_sourcemap(processed, tag_name) {\n\tconst r_in = '[#@]\\\\s*sourceMappingURL\\\\s*=\\\\s*(\\\\S*)';\n\tconst regex =\n\t\ttag_name == 'script'\n\t\t\t? new RegExp('(?://' + r_in + ')|(?:/\\\\*' + r_in + '\\\\s*\\\\*/)$')\n\t\t\t: new RegExp('/\\\\*' + r_in + '\\\\s*\\\\*/$');\n\n\t/**\n\t * @param {any} message\n\t */\n\tfunction log_warning(message) {\n\t\t// code_start: help to find preprocessor\n\t\tconst code_start =\n\t\t\tprocessed.code.length < 100 ? processed.code : processed.code.slice(0, 100) + ' [...]';\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(`warning: ${message}. processed.code = ${JSON.stringify(code_start)}`);\n\t}\n\tprocessed.code = processed.code.replace(regex, (_, match1, match2) => {\n\t\tconst map_url = tag_name == 'script' ? match1 || match2 : match1;\n\t\tconst map_data = (map_url.match(regex_data_uri) || [])[1];\n\t\tif (map_data) {\n\t\t\t// sourceMappingURL is data URL\n\t\t\tif (processed.map) {\n\t\t\t\tlog_warning(\n\t\t\t\t\t'Not implemented. ' +\n\t\t\t\t\t\t'Found sourcemap in both processed.code and processed.map. ' +\n\t\t\t\t\t\t'Please update your preprocessor to return only one sourcemap.'\n\t\t\t\t);\n\t\t\t\t// ignore attached sourcemap\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tprocessed.map = b64dec(map_data); // use attached sourcemap\n\t\t\treturn ''; // remove from processed.code\n\t\t}\n\t\t// sourceMappingURL is path or URL\n\t\tif (!processed.map) {\n\t\t\tlog_warning(\n\t\t\t\t`Found sourcemap path ${JSON.stringify(\n\t\t\t\t\tmap_url\n\t\t\t\t)} in processed.code, but no sourcemap data. ` +\n\t\t\t\t\t'Please update your preprocessor to return sourcemap data directly.'\n\t\t\t);\n\t\t}\n\t\t// ignore sourcemap path\n\t\treturn ''; // remove from processed.code\n\t});\n}\n\n/**\n * @param {{ code: string, map: SourceMap}} result\n * @param {ValidatedCompileOptions} options\n * @param {string} source_name\n */\nexport function merge_with_preprocessor_map(result, options, source_name) {\n\tif (options.sourcemap) {\n\t\tconst file_basename = get_basename(options.filename);\n\t\t// The preprocessor map is expected to contain `sources: [basename_of_filename]`, but our own\n\t\t// map may contain a different file name. Patch our map beforehand to align sources so merging\n\t\t// with the preprocessor map works correctly.\n\t\tresult.map.sources = [file_basename];\n\t\tresult.map = apply_preprocessor_sourcemap(\n\t\t\tfile_basename,\n\t\t\tresult.map,\n\t\t\t/** @type {any} */ (options.sourcemap)\n\t\t);\n\t\t// After applying the preprocessor map, we need to do the inverse and make the sources\n\t\t// relative to the input file again in case the output code is in a different directory.\n\t\tif (file_basename !== source_name) {\n\t\t\tresult.map.sources = result.map.sources.map(\n\t\t\t\t/** @param {string} source */ (source) => get_relative_path(source_name, source)\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * @param {string} from\n * @param {string} to\n */\nfunction get_relative_path(from, to) {\n\t// Don't use node's utils here to ensure the compiler is usable in a browser environment\n\tconst from_parts = from.split(/[/\\\\]/);\n\tconst to_parts = to.split(/[/\\\\]/);\n\tfrom_parts.pop(); // get dirname\n\twhile (from_parts[0] === to_parts[0]) {\n\t\tfrom_parts.shift();\n\t\tto_parts.shift();\n\t}\n\tif (from_parts.length) {\n\t\tlet i = from_parts.length;\n\t\twhile (i--) from_parts[i] = '..';\n\t}\n\treturn from_parts.concat(to_parts).join('/');\n}\n\n/**\n * Like node's `basename`, but doesn't use it to ensure the compiler is usable in a browser environment\n * @param {string} filename\n */\nexport function get_basename(filename) {\n\treturn /** @type {string} */ (filename.split(/[/\\\\]/).pop());\n}\n\n/**\n * @param {string} filename\n * @param {string | undefined} output_filename\n * @param {string} fallback\n */\nexport function get_source_name(filename, output_filename, fallback) {\n\treturn output_filename ? get_relative_path(output_filename, filename) : get_basename(filename);\n}\n", "/**\n * Pushes all `items` into `array` using `push`, therefore mutating the array.\n * We do this for memory and perf reasons, and because `array.push(...items)` would\n * run into a \"max call stack size exceeded\" error with too many items (~65k).\n * @template T\n * @param {T[]} array\n * @param {T[]} items\n */\nexport function push_array(array, items) {\n\tfor (let i = 0; i < items.length; i++) {\n\t\tarray.push(items[i]);\n\t}\n}\n", "/** @import { Visitors } from 'zimmerframe' */\n/** @import { AST, ValidatedCompileOptions } from '#compiler' */\n/** @import { ComponentAnalysis } from '../../types.js' */\nimport MagicString from 'magic-string';\nimport { walk } from 'zimmerframe';\nimport { is_keyframes_node, regex_css_name_boundary, remove_css_prefix } from '../../css.js';\nimport { merge_with_preprocessor_map } from '../../../utils/mapped_code.js';\nimport { dev } from '../../../state.js';\n\n/**\n * @typedef {{\n *   code: MagicString;\n *   hash: string;\n *   minify: boolean;\n *   selector: string;\n *   keyframes: string[];\n *   specificity: {\n *     bumped: boolean\n *   }\n * }} State\n */\n\n/**\n *\n * @param {string} source\n * @param {ComponentAnalysis} analysis\n * @param {ValidatedCompileOptions} options\n */\nexport function render_stylesheet(source, analysis, options) {\n\tconst code = new MagicString(source);\n\n\t/** @type {State} */\n\tconst state = {\n\t\tcode,\n\t\thash: analysis.css.hash,\n\t\tminify: analysis.inject_styles && !options.dev,\n\t\tselector: `.${analysis.css.hash}`,\n\t\tkeyframes: analysis.css.keyframes,\n\t\tspecificity: {\n\t\t\tbumped: false\n\t\t}\n\t};\n\n\tconst ast = /** @type {AST.CSS.StyleSheet} */ (analysis.css.ast);\n\n\twalk(/** @type {AST.CSS.Node} */ (ast), state, visitors);\n\n\tcode.remove(0, ast.content.start);\n\tcode.remove(/** @type {number} */ (ast.content.end), source.length);\n\tif (state.minify) {\n\t\tremove_preceding_whitespace(ast.content.end, state);\n\t}\n\n\tconst css = {\n\t\tcode: code.toString(),\n\t\tmap: code.generateMap({\n\t\t\t// include source content; makes it easier/more robust looking up the source map code\n\t\t\tincludeContent: true,\n\t\t\t// generateMap takes care of calculating source relative to file\n\t\t\tsource: options.filename,\n\t\t\tfile: options.cssOutputFilename || options.filename\n\t\t}),\n\t\thasGlobal: analysis.css.has_global\n\t};\n\n\tmerge_with_preprocessor_map(css, options, css.map.sources[0]);\n\n\tif (dev && options.css === 'injected' && css.code) {\n\t\tcss.code += `\\n/*# sourceMappingURL=${css.map.toUrl()} */`;\n\t}\n\n\treturn css;\n}\n\n/** @type {Visitors<AST.CSS.Node, State>} */\nconst visitors = {\n\t_: (node, context) => {\n\t\tcontext.state.code.addSourcemapLocation(node.start);\n\t\tcontext.state.code.addSourcemapLocation(node.end);\n\t\tcontext.next();\n\t},\n\tAtrule(node, { state, next, path }) {\n\t\tif (is_keyframes_node(node)) {\n\t\t\tlet start = node.start + node.name.length + 1;\n\t\t\twhile (state.code.original[start] === ' ') start += 1;\n\t\t\tlet end = start;\n\t\t\twhile (state.code.original[end] !== '{' && state.code.original[end] !== ' ') end += 1;\n\n\t\t\tif (node.prelude.startsWith('-global-')) {\n\t\t\t\tstate.code.remove(start, start + 8);\n\t\t\t} else if (!is_in_global_block(path)) {\n\t\t\t\tstate.code.prependRight(start, `${state.hash}-`);\n\t\t\t}\n\n\t\t\treturn; // don't transform anything within\n\t\t}\n\n\t\tnext();\n\t},\n\tDeclaration(node, { state }) {\n\t\tconst property = node.property && remove_css_prefix(node.property.toLowerCase());\n\t\tif (property === 'animation' || property === 'animation-name') {\n\t\t\tlet index = node.start + node.property.length + 1;\n\t\t\tlet name = '';\n\n\t\t\twhile (index < state.code.original.length) {\n\t\t\t\tconst character = state.code.original[index];\n\n\t\t\t\tif (regex_css_name_boundary.test(character)) {\n\t\t\t\t\tif (state.keyframes.includes(name)) {\n\t\t\t\t\t\tstate.code.prependRight(index - name.length, `${state.hash}-`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (character === ';' || character === '}') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tname = '';\n\t\t\t\t} else {\n\t\t\t\t\tname += character;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} else if (state.minify) {\n\t\t\tremove_preceding_whitespace(node.start, state);\n\n\t\t\t// Don't minify whitespace in custom properties, since some browsers (Chromium < 99)\n\t\t\t// treat --foo: ; and --foo:; differently\n\t\t\tif (!node.property.startsWith('--')) {\n\t\t\t\tlet start = node.start + node.property.length + 1;\n\t\t\t\tlet end = start;\n\t\t\t\twhile (/\\s/.test(state.code.original[end])) end++;\n\t\t\t\tif (end > start) state.code.remove(start, end);\n\t\t\t}\n\t\t}\n\t},\n\tRule(node, { state, next, visit, path }) {\n\t\tif (state.minify) {\n\t\t\tremove_preceding_whitespace(node.start, state);\n\t\t\tremove_preceding_whitespace(node.block.end - 1, state);\n\t\t}\n\n\t\t// keep empty rules in dev, because it's convenient to\n\t\t// see them in devtools\n\t\tif (!dev && is_empty(node, is_in_global_block(path))) {\n\t\t\tif (state.minify) {\n\t\t\t\tstate.code.remove(node.start, node.end);\n\t\t\t} else {\n\t\t\t\tstate.code.prependRight(node.start, '/* (empty) ');\n\t\t\t\tstate.code.appendLeft(node.end, '*/');\n\t\t\t\tescape_comment_close(node, state.code);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!is_used(node) && !is_in_global_block(path)) {\n\t\t\tif (state.minify) {\n\t\t\t\tstate.code.remove(node.start, node.end);\n\t\t\t} else {\n\t\t\t\tstate.code.prependRight(node.start, '/* (unused) ');\n\t\t\t\tstate.code.appendLeft(node.end, '*/');\n\t\t\t\tescape_comment_close(node, state.code);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (node.metadata.is_global_block) {\n\t\t\tconst selector = node.prelude.children[0];\n\n\t\t\tif (\n\t\t\t\tnode.prelude.children.length === 1 &&\n\t\t\t\tselector.children.length === 1 &&\n\t\t\t\tselector.children[0].selectors.length === 1\n\t\t\t) {\n\t\t\t\t// `:global {...}`\n\t\t\t\tif (state.minify) {\n\t\t\t\t\tstate.code.remove(node.start, node.block.start + 1);\n\t\t\t\t\tstate.code.remove(node.block.end - 1, node.end);\n\t\t\t\t} else {\n\t\t\t\t\tstate.code.prependRight(node.start, '/* ');\n\t\t\t\t\tstate.code.appendLeft(node.block.start + 1, '*/');\n\n\t\t\t\t\tstate.code.prependRight(node.block.end - 1, '/*');\n\t\t\t\t\tstate.code.appendLeft(node.block.end, '*/');\n\t\t\t\t}\n\n\t\t\t\t// don't recurse into selectors but visit the body\n\t\t\t\tvisit(node.block);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnext();\n\t},\n\tSelectorList(node, { state, next, path }) {\n\t\tconst parent = path.at(-1);\n\n\t\t// Only add comments if we're not inside a complex selector that itself is unused or a global block\n\t\tif (\n\t\t\t(!is_in_global_block(path) ||\n\t\t\t\t(node.children.length > 1 && parent?.type === 'Rule' && parent.metadata.is_global_block)) &&\n\t\t\t!path.find((n) => n.type === 'ComplexSelector' && !n.metadata.used)\n\t\t) {\n\t\t\tconst children = node.children;\n\t\t\tlet pruning = false;\n\t\t\tlet prune_start = children[0].start;\n\t\t\tlet last = prune_start;\n\t\t\tlet has_previous_used = false;\n\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst selector = children[i];\n\n\t\t\t\tif (selector.metadata.used === pruning) {\n\t\t\t\t\tif (pruning) {\n\t\t\t\t\t\tlet i = selector.start;\n\t\t\t\t\t\twhile (state.code.original[i] !== ',') i--;\n\n\t\t\t\t\t\tif (state.minify) {\n\t\t\t\t\t\t\tstate.code.remove(prune_start, has_previous_used ? i : i + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.code.appendRight(has_previous_used ? i : i + 1, '*/');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tif (state.minify) {\n\t\t\t\t\t\t\t\tprune_start = selector.start;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.code.prependRight(selector.start, '/* (unused) ');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (state.minify) {\n\t\t\t\t\t\t\t\tprune_start = last;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.code.overwrite(last, selector.start, ` /* (unused) `);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpruning = !pruning;\n\t\t\t\t}\n\n\t\t\t\tif (!pruning && selector.metadata.used) {\n\t\t\t\t\thas_previous_used = true;\n\t\t\t\t}\n\n\t\t\t\tlast = selector.end;\n\t\t\t}\n\n\t\t\tif (pruning) {\n\t\t\t\tif (state.minify) {\n\t\t\t\t\tstate.code.remove(prune_start, last);\n\t\t\t\t} else {\n\t\t\t\t\tstate.code.appendLeft(last, '*/');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're in a `:is(...)` or whatever, keep existing specificity bump state\n\t\tlet specificity = state.specificity;\n\n\t\t// if this selector list belongs to a rule, require a specificity bump for the\n\t\t// first scoped selector but only if we're at the top level\n\t\tif (parent?.type === 'Rule') {\n\t\t\tspecificity = { bumped: false };\n\n\t\t\t/** @type {AST.CSS.Rule | null} */\n\t\t\tlet rule = parent.metadata.parent_rule;\n\n\t\t\twhile (rule) {\n\t\t\t\tif (rule.metadata.has_local_selectors) {\n\t\t\t\t\tspecificity = { bumped: true };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\trule = rule.metadata.parent_rule;\n\t\t\t}\n\t\t}\n\n\t\tnext({ ...state, specificity });\n\t},\n\tComplexSelector(node, context) {\n\t\tconst before_bumped = context.state.specificity.bumped;\n\n\t\tfor (const relative_selector of node.children) {\n\t\t\tif (relative_selector.metadata.is_global) {\n\t\t\t\tconst global = /** @type {AST.CSS.PseudoClassSelector} */ (relative_selector.selectors[0]);\n\t\t\t\tremove_global_pseudo_class(global, relative_selector.combinator, context.state);\n\n\t\t\t\tconst parent_rule = node.metadata.rule?.metadata.parent_rule;\n\t\t\t\tif (parent_rule && global.args === null) {\n\t\t\t\t\tif (relative_selector.combinator === null) {\n\t\t\t\t\t\t// div { :global.x { ... } } becomes div { &.x { ... } }\n\t\t\t\t\t\tcontext.state.code.prependRight(global.start, '&');\n\t\t\t\t\t}\n\n\t\t\t\t\t// In case of multiple :global selectors in a selector list we gotta delete the comma, too, but only if\n\t\t\t\t\t// the next selector is used; if it's unused then the comma deletion happens as part of removal of that next selector\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent_rule.prelude.children.length > 1 &&\n\t\t\t\t\t\tnode.children.length === node.children.findIndex((s) => s === relative_selector) - 1\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst next_selector = parent_rule.prelude.children.find((s) => s.start > global.end);\n\t\t\t\t\t\tif (next_selector && next_selector.metadata.used) {\n\t\t\t\t\t\t\tcontext.state.code.update(global.end, next_selector.start, '');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// for any :global() or :global at the middle of compound selector\n\t\t\t\tfor (const selector of relative_selector.selectors) {\n\t\t\t\t\tif (selector.type === 'PseudoClassSelector' && selector.name === 'global') {\n\t\t\t\t\t\tremove_global_pseudo_class(selector, null, context.state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (relative_selector.metadata.scoped) {\n\t\t\t\tif (relative_selector.selectors.length === 1) {\n\t\t\t\t\t// skip standalone :is/:where/& selectors\n\t\t\t\t\tconst selector = relative_selector.selectors[0];\n\t\t\t\t\tif (\n\t\t\t\t\t\tselector.type === 'PseudoClassSelector' &&\n\t\t\t\t\t\t(selector.name === 'is' || selector.name === 'where')\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (relative_selector.selectors.some((s) => s.type === 'NestingSelector')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// for the first occurrence, we use a classname selector, so that every\n\t\t\t\t// encapsulated selector gets a +0-1-0 specificity bump. thereafter,\n\t\t\t\t// we use a `:where` selector, which does not affect specificity\n\t\t\t\tlet modifier = context.state.selector;\n\t\t\t\tif (context.state.specificity.bumped) modifier = `:where(${modifier})`;\n\n\t\t\t\tcontext.state.specificity.bumped = true;\n\n\t\t\t\tlet i = relative_selector.selectors.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst selector = relative_selector.selectors[i];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tselector.type === 'PseudoElementSelector' ||\n\t\t\t\t\t\tselector.type === 'PseudoClassSelector'\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (selector.name !== 'root' && selector.name !== 'host') {\n\t\t\t\t\t\t\tif (i === 0) context.state.code.prependRight(selector.start, modifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selector.type === 'TypeSelector' && selector.name === '*') {\n\t\t\t\t\t\tcontext.state.code.update(selector.start, selector.end, modifier);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.state.code.appendLeft(selector.end, modifier);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcontext.next();\n\n\t\tcontext.state.specificity.bumped = before_bumped;\n\t},\n\tPseudoClassSelector(node, context) {\n\t\tif (node.name === 'is' || node.name === 'where' || node.name === 'has' || node.name === 'not') {\n\t\t\tcontext.next();\n\t\t}\n\t}\n};\n\n/**\n * @param {Array<AST.CSS.Node>} path\n */\nfunction is_in_global_block(path) {\n\treturn path.some((node) => node.type === 'Rule' && node.metadata.is_global_block);\n}\n\n/**\n * @param {AST.CSS.PseudoClassSelector} selector\n * @param {AST.CSS.Combinator | null} combinator\n * @param {State} state\n */\nfunction remove_global_pseudo_class(selector, combinator, state) {\n\tif (selector.args === null) {\n\t\tlet start = selector.start;\n\t\tif (combinator?.name === ' ') {\n\t\t\t// div :global.x becomes div.x\n\t\t\twhile (/\\s/.test(state.code.original[start - 1])) start--;\n\t\t}\n\n\t\t// update(...), not remove(...) because there could be a closing unused comment at the end\n\t\tstate.code.update(start, selector.start + ':global'.length, '');\n\t} else {\n\t\tstate.code\n\t\t\t.remove(selector.start, selector.start + ':global('.length)\n\t\t\t.remove(selector.end - 1, selector.end);\n\t}\n}\n\n/**\n * Walk backwards until we find a non-whitespace character\n * @param {number} end\n * @param {State} state\n */\nfunction remove_preceding_whitespace(end, state) {\n\tlet start = end;\n\twhile (/\\s/.test(state.code.original[start - 1])) start--;\n\tif (start < end) state.code.remove(start, end);\n}\n\n/**\n *  @param {AST.CSS.Rule} rule\n * @param {boolean} is_in_global_block\n */\nfunction is_empty(rule, is_in_global_block) {\n\tif (rule.metadata.is_global_block) {\n\t\treturn rule.block.children.length === 0;\n\t}\n\n\tfor (const child of rule.block.children) {\n\t\tif (child.type === 'Declaration') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (child.type === 'Rule') {\n\t\t\tif ((is_used(child) || is_in_global_block) && !is_empty(child, is_in_global_block)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (child.type === 'Atrule') {\n\t\t\tif (child.block === null || child.block.children.length > 0) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/** @param {AST.CSS.Rule} rule */\nfunction is_used(rule) {\n\treturn rule.prelude.children.some((selector) => selector.metadata.used);\n}\n\n/**\n *\n * @param {AST.CSS.Rule} node\n * @param {MagicString} code\n */\nfunction escape_comment_close(node, code) {\n\tlet escaped = false;\n\tlet in_comment = false;\n\n\tfor (let i = node.start; i < node.end; i++) {\n\t\tif (escaped) {\n\t\t\tescaped = false;\n\t\t} else {\n\t\t\tconst char = code.original[i];\n\t\t\tif (in_comment) {\n\t\t\t\tif (char === '*' && code.original[i + 1] === '/') {\n\t\t\t\t\tcode.prependRight(++i, '\\\\');\n\t\t\t\t\tin_comment = false;\n\t\t\t\t}\n\t\t\t} else if (char === '\\\\') {\n\t\t\t\tescaped = true;\n\t\t\t} else if (char === '/' && code.original[++i] === '*') {\n\t\t\t\tin_comment = true;\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { AssignmentExpression, AssignmentOperator, Expression, Node, Pattern } from 'estree' */\n/** @import { Context as ClientContext } from '../client/types.js' */\n/** @import { Context as ServerContext } from '../server/types.js' */\nimport { extract_paths, is_expression_async } from '../../../utils/ast.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @template {ClientContext | ServerContext} Context\n * @param {AssignmentExpression} node\n * @param {Context} context\n * @param {(operator: AssignmentOperator, left: Pattern, right: Expression, context: Context) => Expression | null} build_assignment\n * @returns\n */\nexport function visit_assignment_expression(node, context, build_assignment) {\n\tif (\n\t\tnode.left.type === 'ArrayPattern' ||\n\t\tnode.left.type === 'ObjectPattern' ||\n\t\tnode.left.type === 'RestElement'\n\t) {\n\t\tconst value = /** @type {Expression} */ (context.visit(node.right));\n\t\tconst should_cache = value.type !== 'Identifier';\n\t\tconst rhs = should_cache ? b.id('$$value') : value;\n\n\t\tlet changed = false;\n\n\t\tconst assignments = extract_paths(node.left).map((path) => {\n\t\t\tconst value = path.expression?.(rhs);\n\n\t\t\tlet assignment = build_assignment('=', path.node, value, context);\n\t\t\tif (assignment !== null) changed = true;\n\n\t\t\treturn (\n\t\t\t\tassignment ??\n\t\t\t\tb.assignment(\n\t\t\t\t\t'=',\n\t\t\t\t\t/** @type {Pattern} */ (context.visit(path.node)),\n\t\t\t\t\t/** @type {Expression} */ (context.visit(value))\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tif (!changed) {\n\t\t\t// No change to output -> nothing to transform -> we can keep the original assignment\n\t\t\treturn null;\n\t\t}\n\n\t\tconst is_standalone = /** @type {Node} */ (context.path.at(-1)).type.endsWith('Statement');\n\t\tconst sequence = b.sequence(assignments);\n\n\t\tif (!is_standalone) {\n\t\t\t// this is part of an expression, we need the sequence to end with the value\n\t\t\tsequence.expressions.push(rhs);\n\t\t}\n\n\t\tif (should_cache) {\n\t\t\t// the right hand side is a complex expression, wrap in an IIFE to cache it\n\t\t\tconst iife = b.arrow([rhs], sequence);\n\n\t\t\tconst iife_is_async =\n\t\t\t\tis_expression_async(value) ||\n\t\t\t\tassignments.some((assignment) => is_expression_async(assignment));\n\n\t\t\treturn iife_is_async ? b.await(b.call(b.async(iife), value)) : b.call(iife, value);\n\t\t}\n\n\t\treturn sequence;\n\t}\n\n\tif (node.left.type !== 'Identifier' && node.left.type !== 'MemberExpression') {\n\t\tthrow new Error(`Unexpected assignment type ${node.left.type}`);\n\t}\n\n\treturn build_assignment(node.operator, node.left, node.right, context);\n}\n", "/** @import { AssignmentExpression, AssignmentOperator, Expression, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Context, ServerTransformState } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { build_assignment_value } from '../../../../utils/ast.js';\nimport { visit_assignment_expression } from '../../shared/assignments.js';\n\n/**\n * @param {AssignmentExpression} node\n * @param {Context} context\n */\nexport function AssignmentExpression(node, context) {\n\treturn visit_assignment_expression(node, context, build_assignment) ?? context.next();\n}\n\n/**\n * Only returns an expression if this is not a `$store` assignment, as others can be kept as-is\n * @param {AssignmentOperator} operator\n * @param {Pattern} left\n * @param {Expression} right\n * @param {import('zimmerframe').Context<AST.SvelteNode, ServerTransformState>} context\n * @returns {Expression | null}\n */\nfunction build_assignment(operator, left, right, context) {\n\tlet object = left;\n\n\twhile (object.type === 'MemberExpression') {\n\t\t// @ts-expect-error\n\t\tobject = object.object;\n\t}\n\n\tif (object.type !== 'Identifier' || !is_store_name(object.name)) {\n\t\treturn null;\n\t}\n\n\tconst name = object.name.slice(1);\n\n\tif (!context.state.scope.get(name)) {\n\t\treturn null;\n\t}\n\n\tif (object === left) {\n\t\tlet value = /** @type {Expression} */ (\n\t\t\tcontext.visit(build_assignment_value(operator, left, right))\n\t\t);\n\n\t\treturn b.call('$.store_set', b.id(name), value);\n\t}\n\n\treturn b.call(\n\t\t'$.store_mutate',\n\t\tb.assignment('??=', b.id('$$store_subs'), b.object([])),\n\t\tb.literal(object.name),\n\t\tb.id(name),\n\t\tb.assignment(\n\t\t\toperator,\n\t\t\t/** @type {Pattern} */ (context.visit(left)),\n\t\t\t/** @type {Expression} */ (context.visit(right))\n\t\t)\n\t);\n}\n\n/**\n * @param {string} name\n */\nfunction is_store_name(name) {\n\treturn name[0] === '$' && /[A-Za-z_]/.test(name[1]);\n}\n", "import { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../constants.js';\n\nexport const BLOCK_OPEN = `<!--${HYDRATION_START}-->`;\nexport const BLOCK_OPEN_ELSE = `<!--${HYDRATION_START_ELSE}-->`;\nexport const BLOCK_CLOSE = `<!--${HYDRATION_END}-->`;\nexport const EMPTY_COMMENT = `<!---->`;\n", "/** @import { AssignmentOperator, Expression, Identifier, Node, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext, ServerTransformState } from '../../types.js' */\n\nimport { escape_html } from '../../../../../../escaping.js';\nimport {\n\tBLOCK_CLOSE,\n\tBLOCK_OPEN,\n\tEMPTY_COMMENT\n} from '../../../../../../internal/server/hydration.js';\nimport * as b from '#compiler/builders';\nimport { sanitize_template_string } from '../../../../../utils/sanitize_template_string.js';\nimport { regex_whitespaces_strict } from '../../../../patterns.js';\n\n/** Opens an if/each block, so that we can remove nodes in the case of a mismatch */\nexport const block_open = b.literal(BLOCK_OPEN);\n\n/** Closes an if/each block, so that we can remove nodes in the case of a mismatch. Also serves as an anchor for these blocks */\nexport const block_close = b.literal(BLOCK_CLOSE);\n\n/** Empty comment to keep text nodes separate, or provide an anchor node for blocks */\nexport const empty_comment = b.literal(EMPTY_COMMENT);\n\n/**\n * Processes an array of template nodes, joining sibling text/expression nodes and\n * recursing into child nodes.\n * @param {Array<AST.SvelteNode>} nodes\n * @param {ComponentContext} context\n */\nexport function process_children(nodes, { visit, state }) {\n\t/** @type {Array<AST.Text | AST.Comment | AST.ExpressionTag>} */\n\tlet sequence = [];\n\n\tfunction flush() {\n\t\tlet quasi = b.quasi('', false);\n\t\tconst quasis = [quasi];\n\n\t\t/** @type {Expression[]} */\n\t\tconst expressions = [];\n\n\t\tfor (let i = 0; i < sequence.length; i++) {\n\t\t\tconst node = sequence[i];\n\n\t\t\tif (node.type === 'Text' || node.type === 'Comment') {\n\t\t\t\tquasi.value.cooked +=\n\t\t\t\t\tnode.type === 'Comment' ? `<!--${node.data}-->` : escape_html(node.data);\n\t\t\t} else {\n\t\t\t\tconst evaluated = state.scope.evaluate(node.expression);\n\n\t\t\t\tif (evaluated.is_known) {\n\t\t\t\t\tquasi.value.cooked += escape_html((evaluated.value ?? '') + '');\n\t\t\t\t} else {\n\t\t\t\t\texpressions.push(b.call('$.escape', /** @type {Expression} */ (visit(node.expression))));\n\n\t\t\t\t\tquasi = b.quasi('', i + 1 === sequence.length);\n\t\t\t\t\tquasis.push(quasi);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const quasi of quasis) {\n\t\t\tquasi.value.raw = sanitize_template_string(/** @type {string} */ (quasi.value.cooked));\n\t\t}\n\n\t\tstate.template.push(b.template(quasis, expressions));\n\t}\n\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\n\t\tif (node.type === 'Text' || node.type === 'Comment' || node.type === 'ExpressionTag') {\n\t\t\tsequence.push(node);\n\t\t} else {\n\t\t\tif (sequence.length > 0) {\n\t\t\t\tflush();\n\t\t\t\tsequence = [];\n\t\t\t}\n\n\t\t\tvisit(node, { ...state });\n\t\t}\n\t}\n\n\tif (sequence.length > 0) {\n\t\tflush();\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {node is Statement}\n */\nfunction is_statement(node) {\n\treturn node.type.endsWith('Statement') || node.type.endsWith('Declaration');\n}\n\n/**\n * @param {Array<Statement | Expression>} template\n * @param {Identifier} out\n * @param {AssignmentOperator} operator\n * @returns {Statement[]}\n */\nexport function build_template(template, out = b.id('$$payload.out'), operator = '+=') {\n\t/** @type {string[]} */\n\tlet strings = [];\n\n\t/** @type {Expression[]} */\n\tlet expressions = [];\n\n\t/** @type {Statement[]} */\n\tconst statements = [];\n\n\tconst flush = () => {\n\t\tstatements.push(\n\t\t\tb.stmt(\n\t\t\t\tb.assignment(\n\t\t\t\t\toperator,\n\t\t\t\t\tout,\n\t\t\t\t\tb.template(\n\t\t\t\t\t\tstrings.map((cooked, i) => b.quasi(cooked, i === strings.length - 1)),\n\t\t\t\t\t\texpressions\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tstrings = [];\n\t\texpressions = [];\n\t};\n\n\tfor (let i = 0; i < template.length; i++) {\n\t\tconst node = template[i];\n\n\t\tif (is_statement(node)) {\n\t\t\tif (strings.length !== 0) {\n\t\t\t\tflush();\n\t\t\t}\n\n\t\t\tstatements.push(node);\n\t\t} else {\n\t\t\tif (strings.length === 0) {\n\t\t\t\tstrings.push('');\n\t\t\t}\n\n\t\t\tif (node.type === 'Literal') {\n\t\t\t\tstrings[strings.length - 1] += node.value;\n\t\t\t} else if (node.type === 'TemplateLiteral') {\n\t\t\t\tstrings[strings.length - 1] += node.quasis[0].value.cooked;\n\t\t\t\tstrings.push(...node.quasis.slice(1).map((q) => /** @type {string} */ (q.value.cooked)));\n\t\t\t\texpressions.push(...node.expressions);\n\t\t\t} else {\n\t\t\t\texpressions.push(node);\n\t\t\t\tstrings.push('');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (strings.length !== 0) {\n\t\tflush();\n\t}\n\n\treturn statements;\n}\n\n/**\n *\n * @param {AST.Attribute['value']} value\n * @param {ComponentContext} context\n * @param {boolean} trim_whitespace\n * @param {boolean} is_component\n * @returns {Expression}\n */\nexport function build_attribute_value(\n\tvalue,\n\tcontext,\n\ttrim_whitespace = false,\n\tis_component = false\n) {\n\tif (value === true) {\n\t\treturn b.true;\n\t}\n\n\tif (!Array.isArray(value) || value.length === 1) {\n\t\tconst chunk = Array.isArray(value) ? value[0] : value;\n\n\t\tif (chunk.type === 'Text') {\n\t\t\tconst data = trim_whitespace\n\t\t\t\t? chunk.data.replace(regex_whitespaces_strict, ' ').trim()\n\t\t\t\t: chunk.data;\n\n\t\t\treturn b.literal(is_component ? data : escape_html(data, true));\n\t\t}\n\n\t\treturn /** @type {Expression} */ (context.visit(chunk.expression));\n\t}\n\n\tlet quasi = b.quasi('', false);\n\tconst quasis = [quasi];\n\n\t/** @type {Expression[]} */\n\tconst expressions = [];\n\n\tfor (let i = 0; i < value.length; i++) {\n\t\tconst node = value[i];\n\n\t\tif (node.type === 'Text') {\n\t\t\tquasi.value.raw += trim_whitespace\n\t\t\t\t? node.data.replace(regex_whitespaces_strict, ' ')\n\t\t\t\t: node.data;\n\t\t} else {\n\t\t\texpressions.push(\n\t\t\t\tb.call('$.stringify', /** @type {Expression} */ (context.visit(node.expression)))\n\t\t\t);\n\n\t\t\tquasi = b.quasi('', i + 1 === value.length);\n\t\t\tquasis.push(quasi);\n\t\t}\n\t}\n\n\treturn b.template(quasis, expressions);\n}\n\n/**\n * @param {Identifier} node\n * @param {ServerTransformState} state\n * @returns {Expression}\n */\nexport function build_getter(node, state) {\n\tconst binding = state.scope.get(node.name);\n\n\tif (binding === null || node === binding.node) {\n\t\t// No associated binding or the declaration itself which shouldn't be transformed\n\t\treturn node;\n\t}\n\n\tif (binding.kind === 'store_sub') {\n\t\tconst store_id = b.id(node.name.slice(1));\n\t\treturn b.call(\n\t\t\t'$.store_get',\n\t\t\tb.assignment('??=', b.id('$$store_subs'), b.object([])),\n\t\t\tb.literal(node.name),\n\t\t\tbuild_getter(store_id, state)\n\t\t);\n\t}\n\n\treturn node;\n}\n", "/** @import { BlockStatement, Expression, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { block_close } from './shared/utils.js';\n\n/**\n * @param {AST.AwaitBlock} node\n * @param {ComponentContext} context\n */\nexport function AwaitBlock(node, context) {\n\tcontext.state.template.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.await',\n\t\t\t\tb.id('$$payload'),\n\t\t\t\t/** @type {Expression} */ (context.visit(node.expression)),\n\t\t\t\tb.thunk(\n\t\t\t\t\tnode.pending ? /** @type {BlockStatement} */ (context.visit(node.pending)) : b.block([])\n\t\t\t\t),\n\t\t\t\tb.arrow(\n\t\t\t\t\tnode.value ? [/** @type {Pattern} */ (context.visit(node.value))] : [],\n\t\t\t\t\tnode.then ? /** @type {BlockStatement} */ (context.visit(node.then)) : b.block([])\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tblock_close\n\t);\n}\n", "/** @import { Context } from 'zimmerframe' */\n/** @import { TransformState } from './types.js' */\n/** @import { AST, Binding, Namespace, ValidatedCompileOptions } from '#compiler' */\n/** @import { Node, Expression, CallExpression } from 'estree' */\nimport {\n\tregex_ends_with_whitespaces,\n\tregex_not_whitespace,\n\tregex_starts_with_newline,\n\tregex_starts_with_whitespaces\n} from '../patterns.js';\nimport * as b from '#compiler/builders';\nimport * as e from '../../errors.js';\nimport { walk } from 'zimmerframe';\nimport { extract_identifiers } from '../../utils/ast.js';\nimport check_graph_for_cycles from '../2-analyze/utils/check_graph_for_cycles.js';\nimport is_reference from 'is-reference';\nimport { set_scope } from '../scope.js';\nimport { dev } from '../../state.js';\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nexport function is_hoisted_function(node) {\n\tif (\n\t\tnode.type === 'ArrowFunctionExpression' ||\n\t\tnode.type === 'FunctionExpression' ||\n\t\tnode.type === 'FunctionDeclaration'\n\t) {\n\t\treturn node.metadata?.hoisted === true;\n\t}\n\treturn false;\n}\n\n/**\n * Match Svelte 4 behaviour by sorting ConstTag nodes in topological order\n * @param {AST.SvelteNode[]} nodes\n * @param {TransformState} state\n */\nfunction sort_const_tags(nodes, state) {\n\t/**\n\t * @typedef {{\n\t *   node: AST.ConstTag;\n\t *   deps: Set<Binding>;\n\t * }} Tag\n\t */\n\n\tconst other = [];\n\n\t/** @type {Map<Binding, Tag>} */\n\tconst tags = new Map();\n\n\tfor (const node of nodes) {\n\t\tif (node.type === 'ConstTag') {\n\t\t\tconst declaration = node.declaration.declarations[0];\n\n\t\t\tconst bindings = extract_identifiers(declaration.id).map((id) => {\n\t\t\t\treturn /** @type {Binding} */ (state.scope.get(id.name));\n\t\t\t});\n\n\t\t\t/** @type {Set<Binding>} */\n\t\t\tconst deps = new Set();\n\n\t\t\twalk(declaration.init, state, {\n\t\t\t\t// @ts-expect-error don't know, don't care\n\t\t\t\t_: set_scope,\n\t\t\t\tIdentifier(node, context) {\n\t\t\t\t\tconst parent = /** @type {Expression} */ (context.path.at(-1));\n\n\t\t\t\t\tif (is_reference(node, parent)) {\n\t\t\t\t\t\tconst binding = context.state.scope.get(node.name);\n\t\t\t\t\t\tif (binding) deps.add(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const binding of bindings) {\n\t\t\t\ttags.set(binding, { node, deps });\n\t\t\t}\n\t\t} else {\n\t\t\tother.push(node);\n\t\t}\n\t}\n\n\tif (tags.size === 0) {\n\t\treturn nodes;\n\t}\n\n\t/** @type {Array<[Binding, Binding]>} */\n\tconst edges = [];\n\n\tfor (const [id, tag] of tags) {\n\t\tfor (const dep of tag.deps) {\n\t\t\tif (tags.has(dep)) {\n\t\t\t\tedges.push([id, dep]);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst cycle = check_graph_for_cycles(edges);\n\tif (cycle?.length) {\n\t\tconst tag = /** @type {Tag} */ (tags.get(cycle[0]));\n\t\te.const_tag_cycle(tag.node, cycle.map((binding) => binding.node.name).join(' → '));\n\t}\n\n\t/** @type {AST.ConstTag[]} */\n\tconst sorted = [];\n\n\t/** @param {Tag} tag */\n\tfunction add(tag) {\n\t\tif (sorted.includes(tag.node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const dep of tag.deps) {\n\t\t\tconst dep_tag = tags.get(dep);\n\t\t\tif (dep_tag) add(dep_tag);\n\t\t}\n\n\t\tsorted.push(tag.node);\n\t}\n\n\tfor (const tag of tags.values()) {\n\t\tadd(tag);\n\t}\n\n\treturn [...sorted, ...other];\n}\n\n/**\n * Extract nodes that are hoisted and trim whitespace according to the following rules:\n * - trim leading and trailing whitespace, regardless of surroundings\n * - keep leading / trailing whitespace of inbetween text nodes,\n *   unless it's whitespace-only, in which case collapse to a single whitespace for all cases\n *   except when it's children of certain elements where we know ignore whitespace (like td/option/head),\n *   in which case we remove it entirely\n * @param {AST.SvelteNode} parent\n * @param {AST.SvelteNode[]} nodes\n * @param {AST.SvelteNode[]} path\n * @param {Namespace} namespace\n * @param {TransformState & { options: ValidatedCompileOptions }} state\n * @param {boolean} preserve_whitespace\n * @param {boolean} preserve_comments\n */\nexport function clean_nodes(\n\tparent,\n\tnodes,\n\tpath,\n\tnamespace = 'html',\n\tstate,\n\t// TODO give these defaults (state.options.preserveWhitespace and state.options.preserveComments).\n\t// first, we need to make `Component(Client|Server)TransformState` inherit from a new `ComponentTransformState`\n\t// rather than from `ClientTransformState` and `ServerTransformState`\n\tpreserve_whitespace,\n\tpreserve_comments\n) {\n\tif (!state.analysis.runes) {\n\t\tnodes = sort_const_tags(nodes, state);\n\t}\n\n\t/** @type {AST.SvelteNode[]} */\n\tconst hoisted = [];\n\n\t/** @type {AST.SvelteNode[]} */\n\tconst regular = [];\n\n\tfor (const node of nodes) {\n\t\tif (node.type === 'Comment' && !preserve_comments) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tnode.type === 'ConstTag' ||\n\t\t\tnode.type === 'DebugTag' ||\n\t\t\tnode.type === 'SvelteBody' ||\n\t\t\tnode.type === 'SvelteWindow' ||\n\t\t\tnode.type === 'SvelteDocument' ||\n\t\t\tnode.type === 'SvelteHead' ||\n\t\t\tnode.type === 'TitleElement' ||\n\t\t\tnode.type === 'SnippetBlock'\n\t\t) {\n\t\t\t// TODO others?\n\t\t\thoisted.push(node);\n\t\t} else {\n\t\t\tregular.push(node);\n\t\t}\n\t}\n\n\tlet trimmed = regular;\n\n\tif (!preserve_whitespace) {\n\t\ttrimmed = [];\n\n\t\tlet first, last;\n\n\t\twhile (\n\t\t\t(first = regular[0]) &&\n\t\t\tfirst.type === 'Text' &&\n\t\t\t!regex_not_whitespace.test(first.data)\n\t\t) {\n\t\t\tregular.shift();\n\t\t}\n\n\t\tif (first?.type === 'Text') {\n\t\t\tfirst.raw = first.raw.replace(regex_starts_with_whitespaces, '');\n\t\t\tfirst.data = first.data.replace(regex_starts_with_whitespaces, '');\n\t\t}\n\n\t\twhile (\n\t\t\t(last = regular.at(-1)) &&\n\t\t\tlast.type === 'Text' &&\n\t\t\t!regex_not_whitespace.test(last.data)\n\t\t) {\n\t\t\tregular.pop();\n\t\t}\n\n\t\tif (last?.type === 'Text') {\n\t\t\tlast.raw = last.raw.replace(regex_ends_with_whitespaces, '');\n\t\t\tlast.data = last.data.replace(regex_ends_with_whitespaces, '');\n\t\t}\n\n\t\tconst can_remove_entirely =\n\t\t\t(namespace === 'svg' &&\n\t\t\t\t(parent.type !== 'RegularElement' || parent.name !== 'text') &&\n\t\t\t\t!path.some((n) => n.type === 'RegularElement' && n.name === 'text')) ||\n\t\t\t(parent.type === 'RegularElement' &&\n\t\t\t\t// TODO others?\n\t\t\t\t(parent.name === 'select' ||\n\t\t\t\t\tparent.name === 'tr' ||\n\t\t\t\t\tparent.name === 'table' ||\n\t\t\t\t\tparent.name === 'tbody' ||\n\t\t\t\t\tparent.name === 'thead' ||\n\t\t\t\t\tparent.name === 'tfoot' ||\n\t\t\t\t\tparent.name === 'colgroup' ||\n\t\t\t\t\tparent.name === 'datalist'));\n\n\t\t// Replace any whitespace between a text and non-text node with a single spaceand keep whitespace\n\t\t// as-is within text nodes, or between text nodes and expression tags (because in the end they count\n\t\t// as one text). This way whitespace is mostly preserved when using CSS with `white-space: pre-line`\n\t\t// and default slot content going into a pre tag (which we can't see).\n\t\tfor (let i = 0; i < regular.length; i++) {\n\t\t\tconst prev = regular[i - 1];\n\t\t\tconst node = regular[i];\n\t\t\tconst next = regular[i + 1];\n\n\t\t\tif (node.type === 'Text') {\n\t\t\t\tif (prev?.type !== 'ExpressionTag') {\n\t\t\t\t\tconst prev_is_text_ending_with_whitespace =\n\t\t\t\t\t\tprev?.type === 'Text' && regex_ends_with_whitespaces.test(prev.data);\n\t\t\t\t\tnode.data = node.data.replace(\n\t\t\t\t\t\tregex_starts_with_whitespaces,\n\t\t\t\t\t\tprev_is_text_ending_with_whitespace ? '' : ' '\n\t\t\t\t\t);\n\t\t\t\t\tnode.raw = node.raw.replace(\n\t\t\t\t\t\tregex_starts_with_whitespaces,\n\t\t\t\t\t\tprev_is_text_ending_with_whitespace ? '' : ' '\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (next?.type !== 'ExpressionTag') {\n\t\t\t\t\tnode.data = node.data.replace(regex_ends_with_whitespaces, ' ');\n\t\t\t\t\tnode.raw = node.raw.replace(regex_ends_with_whitespaces, ' ');\n\t\t\t\t}\n\t\t\t\tif (node.data && (node.data !== ' ' || !can_remove_entirely)) {\n\t\t\t\t\ttrimmed.push(node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrimmed.push(node);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar first = trimmed[0];\n\n\t// initial newline inside a `<pre>` is disregarded, if not followed by another newline\n\tif (parent.type === 'RegularElement' && parent.name === 'pre' && first?.type === 'Text') {\n\t\tconst text = first.data.replace(regex_starts_with_newline, '');\n\t\tif (text !== first.data) {\n\t\t\tconst tmp = text.replace(regex_starts_with_newline, '');\n\t\t\tif (text === tmp) {\n\t\t\t\tfirst.data = text;\n\t\t\t\tfirst.raw = first.raw.replace(regex_starts_with_newline, '');\n\t\t\t\tif (first.data === '') {\n\t\t\t\t\ttrimmed.shift();\n\t\t\t\t\tfirst = trimmed[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Special case: Add a comment if this is a lone script tag. This ensures that our run_scripts logic in template.js\n\t// will always be able to call node.replaceWith() on the script tag in order to make it run. If we don't add this\n\t// and would still call node.replaceWith() on the script tag, it would be a no-op because the script tag has no parent.\n\tif (trimmed.length === 1 && first.type === 'RegularElement' && first.name === 'script') {\n\t\ttrimmed.push({\n\t\t\ttype: 'Comment',\n\t\t\tdata: '',\n\t\t\tstart: -1,\n\t\t\tend: -1\n\t\t});\n\t}\n\n\treturn {\n\t\thoisted,\n\t\ttrimmed,\n\t\t/**\n\t\t * In a case like `{#if x}<Foo />{/if}`, we don't need to wrap the child in\n\t\t * comments — we can just use the parent block's anchor for the component.\n\t\t * TODO extend this optimisation to other cases\n\t\t */\n\t\tis_standalone:\n\t\t\ttrimmed.length === 1 &&\n\t\t\t((first.type === 'RenderTag' && !first.metadata.dynamic) ||\n\t\t\t\t(first.type === 'Component' &&\n\t\t\t\t\t!state.options.hmr &&\n\t\t\t\t\t!first.metadata.dynamic &&\n\t\t\t\t\t!first.attributes.some(\n\t\t\t\t\t\t(attribute) => attribute.type === 'Attribute' && attribute.name.startsWith('--')\n\t\t\t\t\t))),\n\t\t/** if a component/snippet/each block starts with text, we need to add an anchor comment so that its text node doesn't get fused with its surroundings */\n\t\tis_text_first:\n\t\t\t(parent.type === 'Fragment' ||\n\t\t\t\tparent.type === 'SnippetBlock' ||\n\t\t\t\tparent.type === 'EachBlock' ||\n\t\t\t\tparent.type === 'SvelteComponent' ||\n\t\t\t\tparent.type === 'SvelteBoundary' ||\n\t\t\t\tparent.type === 'Component' ||\n\t\t\t\tparent.type === 'SvelteSelf') &&\n\t\t\tfirst &&\n\t\t\t(first?.type === 'Text' || first?.type === 'ExpressionTag')\n\t};\n}\n\n/**\n * Infers the namespace for the children of a node that should be used when creating the `$.template(...)`.\n * @param {Namespace} namespace\n * @param {AST.SvelteNode} parent\n * @param {AST.SvelteNode[]} nodes\n */\nexport function infer_namespace(namespace, parent, nodes) {\n\tif (parent.type === 'RegularElement' && parent.name === 'foreignObject') {\n\t\treturn 'html';\n\t}\n\n\tif (parent.type === 'RegularElement' || parent.type === 'SvelteElement') {\n\t\tif (parent.metadata.svg) {\n\t\t\treturn 'svg';\n\t\t}\n\t\treturn parent.metadata.mathml ? 'mathml' : 'html';\n\t}\n\n\t// Re-evaluate the namespace inside slot nodes that reset the namespace\n\tif (\n\t\tparent.type === 'Fragment' ||\n\t\tparent.type === 'Root' ||\n\t\tparent.type === 'Component' ||\n\t\tparent.type === 'SvelteComponent' ||\n\t\tparent.type === 'SvelteFragment' ||\n\t\tparent.type === 'SnippetBlock' ||\n\t\tparent.type === 'SlotElement'\n\t) {\n\t\tconst new_namespace = check_nodes_for_namespace(nodes, 'keep');\n\t\tif (new_namespace !== 'keep' && new_namespace !== 'maybe_html') {\n\t\t\treturn new_namespace;\n\t\t}\n\t}\n\n\t/** @type {Namespace | null} */\n\tlet new_namespace = null;\n\n\t// Check the elements within the fragment and look for consistent namespaces.\n\t// If we have no namespaces or they are mixed, then fallback to existing namespace\n\tfor (const node of nodes) {\n\t\tif (node.type !== 'RegularElement') continue;\n\n\t\tif (node.metadata.mathml) {\n\t\t\tnew_namespace = new_namespace === null || new_namespace === 'mathml' ? 'mathml' : 'html';\n\t\t} else if (node.metadata.svg) {\n\t\t\tnew_namespace = new_namespace === null || new_namespace === 'svg' ? 'svg' : 'html';\n\t\t} else {\n\t\t\treturn 'html';\n\t\t}\n\t}\n\n\treturn new_namespace ?? namespace;\n}\n\n/**\n * Heuristic: Keep current namespace, unless we find a regular element,\n * in which case we always want html, or we only find svg nodes,\n * in which case we assume svg.\n * @param {AST.SvelteNode[]} nodes\n * @param {Namespace | 'keep' | 'maybe_html'} namespace\n */\nfunction check_nodes_for_namespace(nodes, namespace) {\n\t/**\n\t * @param {AST.SvelteElement | AST.RegularElement} node}\n\t * @param {{stop: () => void}} context\n\t */\n\tconst RegularElement = (node, { stop }) => {\n\t\tif (!node.metadata.svg && !node.metadata.mathml) {\n\t\t\tnamespace = 'html';\n\t\t\tstop();\n\t\t} else if (namespace === 'keep') {\n\t\t\tnamespace = node.metadata.svg ? 'svg' : 'mathml';\n\t\t}\n\t};\n\n\tfor (const node of nodes) {\n\t\twalk(\n\t\t\tnode,\n\t\t\t{},\n\t\t\t{\n\t\t\t\t_(node, { next }) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.type === 'EachBlock' ||\n\t\t\t\t\t\tnode.type === 'IfBlock' ||\n\t\t\t\t\t\tnode.type === 'AwaitBlock' ||\n\t\t\t\t\t\tnode.type === 'Fragment' ||\n\t\t\t\t\t\tnode.type === 'KeyBlock' ||\n\t\t\t\t\t\tnode.type === 'RegularElement' ||\n\t\t\t\t\t\tnode.type === 'SvelteElement' ||\n\t\t\t\t\t\tnode.type === 'Text'\n\t\t\t\t\t) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tSvelteElement: RegularElement,\n\t\t\t\tRegularElement,\n\t\t\t\tText(node) {\n\t\t\t\t\tif (node.data.trim() !== '') {\n\t\t\t\t\t\tnamespace = 'maybe_html';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tif (namespace === 'html') return namespace;\n\t}\n\n\treturn namespace;\n}\n\n/**\n * Determines the namespace the children of this node are in.\n * @param {AST.RegularElement | AST.SvelteElement} node\n * @param {Namespace} namespace\n * @returns {Namespace}\n */\nexport function determine_namespace_for_children(node, namespace) {\n\tif (node.name === 'foreignObject') {\n\t\treturn 'html';\n\t}\n\n\tif (node.metadata.svg) {\n\t\treturn 'svg';\n\t}\n\n\treturn node.metadata.mathml ? 'mathml' : 'html';\n}\n\n/**\n * @template {TransformState} T\n * @param {CallExpression} node\n * @param {Context<any, T>} context\n */\nexport function transform_inspect_rune(node, context) {\n\tconst { state, visit } = context;\n\tconst as_fn = state.options.generate === 'client';\n\n\tif (!dev) return b.empty;\n\n\tif (node.callee.type === 'MemberExpression') {\n\t\tconst raw_inspect_args = /** @type {CallExpression} */ (node.callee.object).arguments;\n\t\tconst inspect_args =\n\t\t\t/** @type {Array<Expression>} */\n\t\t\t(raw_inspect_args.map((arg) => visit(arg)));\n\t\tconst with_arg = /** @type {Expression} */ (visit(node.arguments[0]));\n\n\t\treturn b.call(\n\t\t\t'$.inspect',\n\t\t\tas_fn ? b.thunk(b.array(inspect_args)) : b.array(inspect_args),\n\t\t\twith_arg\n\t\t);\n\t} else {\n\t\tconst arg = node.arguments.map((arg) => /** @type {Expression} */ (visit(arg)));\n\t\treturn b.call('$.inspect', as_fn ? b.thunk(b.array(arg)) : b.array(arg));\n\t}\n}\n", "/** @import { CallExpression, Expression } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport { is_ignored } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\nimport { transform_inspect_rune } from '../../utils.js';\n\n/**\n * @param {CallExpression} node\n * @param {Context} context\n */\nexport function CallExpression(node, context) {\n\tconst rune = get_rune(node, context.state.scope);\n\n\tif (rune === '$host') {\n\t\treturn b.void0;\n\t}\n\n\tif (rune === '$effect.tracking') {\n\t\treturn b.false;\n\t}\n\n\tif (rune === '$effect.root') {\n\t\t// ignore $effect.root() calls, just return a noop which mimics the cleanup function\n\t\treturn b.arrow([], b.block([]));\n\t}\n\n\tif (rune === '$state.snapshot') {\n\t\treturn b.call(\n\t\t\t'$.snapshot',\n\t\t\t/** @type {Expression} */ (context.visit(node.arguments[0])),\n\t\t\tis_ignored(node, 'state_snapshot_uncloneable') && b.true\n\t\t);\n\t}\n\n\tif (rune === '$inspect' || rune === '$inspect().with') {\n\t\treturn transform_inspect_rune(node, context);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { ClassBody, Expression, MethodDefinition, PropertyDefinition } from 'estree' */\n/** @import { Context } from '../types.js' */\n/** @import { StateField } from '../../client/types.js' */\nimport { dev } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\n\n/**\n * @param {ClassBody} node\n * @param {Context} context\n */\nexport function ClassBody(node, context) {\n\tif (!context.state.analysis.runes) {\n\t\tcontext.next();\n\t\treturn;\n\t}\n\n\t/** @type {Map<string, StateField>} */\n\tconst public_derived = new Map();\n\n\t/** @type {Map<string, StateField>} */\n\tconst private_derived = new Map();\n\n\t/** @type {string[]} */\n\tconst private_ids = [];\n\n\tfor (const definition of node.body) {\n\t\tif (\n\t\t\tdefinition.type === 'PropertyDefinition' &&\n\t\t\t(definition.key.type === 'Identifier' || definition.key.type === 'PrivateIdentifier')\n\t\t) {\n\t\t\tconst { type, name } = definition.key;\n\n\t\t\tconst is_private = type === 'PrivateIdentifier';\n\t\t\tif (is_private) private_ids.push(name);\n\n\t\t\tif (definition.value?.type === 'CallExpression') {\n\t\t\t\tconst rune = get_rune(definition.value, context.state.scope);\n\t\t\t\tif (rune === '$derived' || rune === '$derived.by') {\n\t\t\t\t\t/** @type {StateField} */\n\t\t\t\t\tconst field = {\n\t\t\t\t\t\tkind: rune === '$derived.by' ? 'derived_by' : 'derived',\n\t\t\t\t\t\t// @ts-expect-error this is set in the next pass\n\t\t\t\t\t\tid: is_private ? definition.key : null\n\t\t\t\t\t};\n\n\t\t\t\t\tif (is_private) {\n\t\t\t\t\t\tprivate_derived.set(name, field);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpublic_derived.set(name, field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// each `foo = $derived()` needs a backing `#foo` field\n\tfor (const [name, field] of public_derived) {\n\t\tlet deconflicted = name;\n\t\twhile (private_ids.includes(deconflicted)) {\n\t\t\tdeconflicted = '_' + deconflicted;\n\t\t}\n\n\t\tprivate_ids.push(deconflicted);\n\t\tfield.id = b.private_id(deconflicted);\n\t}\n\n\t/** @type {Array<MethodDefinition | PropertyDefinition>} */\n\tconst body = [];\n\n\tconst child_state = { ...context.state, private_derived };\n\n\t// Replace parts of the class body\n\tfor (const definition of node.body) {\n\t\tif (\n\t\t\tdefinition.type === 'PropertyDefinition' &&\n\t\t\t(definition.key.type === 'Identifier' || definition.key.type === 'PrivateIdentifier')\n\t\t) {\n\t\t\tconst name = definition.key.name;\n\n\t\t\tconst is_private = definition.key.type === 'PrivateIdentifier';\n\t\t\tconst field = (is_private ? private_derived : public_derived).get(name);\n\n\t\t\tif (definition.value?.type === 'CallExpression' && field !== undefined) {\n\t\t\t\tconst init = /** @type {Expression} **/ (\n\t\t\t\t\tcontext.visit(definition.value.arguments[0], child_state)\n\t\t\t\t);\n\t\t\t\tconst value =\n\t\t\t\t\tfield.kind === 'derived_by' ? b.call('$.once', init) : b.call('$.once', b.thunk(init));\n\n\t\t\t\tif (is_private) {\n\t\t\t\t\tbody.push(b.prop_def(field.id, value));\n\t\t\t\t} else {\n\t\t\t\t\t// #foo;\n\t\t\t\t\tconst member = b.member(b.this, field.id);\n\t\t\t\t\tbody.push(b.prop_def(field.id, value));\n\n\t\t\t\t\t// get foo() { return this.#foo; }\n\t\t\t\t\tbody.push(b.method('get', definition.key, [], [b.return(b.call(member))]));\n\n\t\t\t\t\tif (dev && (field.kind === 'derived' || field.kind === 'derived_by')) {\n\t\t\t\t\t\tbody.push(\n\t\t\t\t\t\t\tb.method(\n\t\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\t\tdefinition.key,\n\t\t\t\t\t\t\t\t[b.id('_')],\n\t\t\t\t\t\t\t\t[b.throw_error(`Cannot update a derived property ('${name}')`)]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tbody.push(/** @type {MethodDefinition} **/ (context.visit(definition, child_state)));\n\t}\n\n\treturn { ...node, body };\n}\n", "/** @import { BlockStatement, Expression, Pattern, Property, SequenceExpression, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../../types.js' */\nimport { empty_comment, build_attribute_value } from './utils.js';\nimport * as b from '#compiler/builders';\nimport { is_element_node } from '../../../../nodes.js';\nimport { dev } from '../../../../../state.js';\n\n/**\n * @param {AST.Component | AST.SvelteComponent | AST.SvelteSelf} node\n * @param {Expression} expression\n * @param {ComponentContext} context\n */\nexport function build_inline_component(node, expression, context) {\n\t/** @type {Array<Property[] | Expression>} */\n\tconst props_and_spreads = [];\n\t/** @type {Array<() => void>} */\n\tconst delayed_props = [];\n\n\t/** @type {Property[]} */\n\tconst custom_css_props = [];\n\n\t/** @type {Record<string, AST.LetDirective[]>} */\n\tconst lets = { default: [] };\n\n\t/**\n\t * Children in the default slot are evaluated in the component scope,\n\t * children in named slots are evaluated in the parent scope\n\t */\n\tconst child_state = {\n\t\t...context.state,\n\t\tscope: node.metadata.scopes.default\n\t};\n\n\t/** @type {Record<string, AST.TemplateNode[]>} */\n\tconst children = {};\n\n\t/**\n\t * If this component has a slot property, it is a named slot within another component. In this case\n\t * the slot scope applies to the component itself, too, and not just its children.\n\t */\n\tconst slot_scope_applies_to_itself = node.attributes.some(\n\t\t(node) => node.type === 'Attribute' && node.name === 'slot'\n\t);\n\n\t/**\n\t * Components may have a children prop and also have child nodes. In this case, we assume\n\t * that the child component isn't using render tags yet and pass the slot as $$slots.default.\n\t * We're not doing it for spread attributes, as this would result in too many false positives.\n\t */\n\tlet has_children_prop = false;\n\n\t/**\n\t * @param {Property} prop\n\t * @param {boolean} [delay]\n\t */\n\tfunction push_prop(prop, delay = false) {\n\t\tconst do_push = () => {\n\t\t\tconst current = props_and_spreads.at(-1);\n\t\t\tconst current_is_props = Array.isArray(current);\n\t\t\tconst props = current_is_props ? current : [];\n\t\t\tprops.push(prop);\n\t\t\tif (!current_is_props) {\n\t\t\t\tprops_and_spreads.push(props);\n\t\t\t}\n\t\t};\n\n\t\tif (delay) {\n\t\t\tdelayed_props.push(do_push);\n\t\t} else {\n\t\t\tdo_push();\n\t\t}\n\t}\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'LetDirective') {\n\t\t\tif (!slot_scope_applies_to_itself) {\n\t\t\t\tlets.default.push(attribute);\n\t\t\t}\n\t\t} else if (attribute.type === 'SpreadAttribute') {\n\t\t\tprops_and_spreads.push(/** @type {Expression} */ (context.visit(attribute)));\n\t\t} else if (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name.startsWith('--')) {\n\t\t\t\tconst value = build_attribute_value(attribute.value, context, false, true);\n\t\t\t\tcustom_css_props.push(b.init(attribute.name, value));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (attribute.name === 'children') {\n\t\t\t\thas_children_prop = true;\n\t\t\t}\n\n\t\t\tconst value = build_attribute_value(attribute.value, context, false, true);\n\t\t\tpush_prop(b.prop('init', b.key(attribute.name), value));\n\t\t} else if (attribute.type === 'BindDirective' && attribute.name !== 'this') {\n\t\t\tif (attribute.expression.type === 'SequenceExpression') {\n\t\t\t\tconst [get, set] = /** @type {SequenceExpression} */ (context.visit(attribute.expression))\n\t\t\t\t\t.expressions;\n\t\t\t\tconst get_id = b.id(context.state.scope.generate('bind_get'));\n\t\t\t\tconst set_id = b.id(context.state.scope.generate('bind_set'));\n\n\t\t\t\tcontext.state.init.push(b.var(get_id, get));\n\t\t\t\tcontext.state.init.push(b.var(set_id, set));\n\n\t\t\t\tpush_prop(b.get(attribute.name, [b.return(b.call(get_id))]));\n\t\t\t\tpush_prop(b.set(attribute.name, [b.stmt(b.call(set_id, b.id('$$value')))]));\n\t\t\t} else {\n\t\t\t\t// Delay prop pushes so bindings come at the end, to avoid spreads overwriting them\n\t\t\t\tpush_prop(\n\t\t\t\t\tb.get(attribute.name, [\n\t\t\t\t\t\tb.return(/** @type {Expression} */ (context.visit(attribute.expression)))\n\t\t\t\t\t]),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\tpush_prop(\n\t\t\t\t\tb.set(attribute.name, [\n\t\t\t\t\t\tb.stmt(\n\t\t\t\t\t\t\t/** @type {Expression} */ (\n\t\t\t\t\t\t\t\tcontext.visit(b.assignment('=', attribute.expression, b.id('$$value')))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tb.stmt(b.assignment('=', b.id('$$settled'), b.false))\n\t\t\t\t\t]),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelayed_props.forEach((fn) => fn());\n\n\t/** @type {Statement[]} */\n\tconst snippet_declarations = [];\n\n\t/** @type {Property[]} */\n\tconst serialized_slots = [];\n\n\t// Group children by slot\n\tfor (const child of node.fragment.nodes) {\n\t\tif (child.type === 'SnippetBlock') {\n\t\t\t// the SnippetBlock visitor adds a declaration to `init`, but if it's directly\n\t\t\t// inside a component then we want to hoist them into a block so that they\n\t\t\t// can be used as props without creating conflicts\n\t\t\tcontext.visit(child, {\n\t\t\t\t...context.state,\n\t\t\t\tinit: snippet_declarations\n\t\t\t});\n\n\t\t\tpush_prop(b.prop('init', child.expression, child.expression));\n\n\t\t\t// Interop: allows people to pass snippets when component still uses slots\n\t\t\tserialized_slots.push(\n\t\t\t\tb.init(child.expression.name === 'children' ? 'default' : child.expression.name, b.true)\n\t\t\t);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet slot_name = 'default';\n\t\tif (is_element_node(child)) {\n\t\t\tconst slot = /** @type {AST.Attribute | undefined} */ (\n\t\t\t\tchild.attributes.find(\n\t\t\t\t\t(attribute) => attribute.type === 'Attribute' && attribute.name === 'slot'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (slot !== undefined) {\n\t\t\t\tslot_name = /** @type {AST.Text[]} */ (slot.value)[0].data;\n\n\t\t\t\tlets[slot_name] = child.attributes.filter((attribute) => attribute.type === 'LetDirective');\n\t\t\t} else if (child.type === 'SvelteFragment') {\n\t\t\t\tlets.default.push(\n\t\t\t\t\t...child.attributes.filter((attribute) => attribute.type === 'LetDirective')\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tchildren[slot_name] = children[slot_name] || [];\n\t\tchildren[slot_name].push(child);\n\t}\n\n\t// Serialize each slot\n\tfor (const slot_name of Object.keys(children)) {\n\t\tconst block = /** @type {BlockStatement} */ (\n\t\t\tcontext.visit(\n\t\t\t\t{\n\t\t\t\t\t...node.fragment,\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tnodes: children[slot_name]\n\t\t\t\t},\n\t\t\t\tslot_name === 'default'\n\t\t\t\t\t? child_state\n\t\t\t\t\t: {\n\t\t\t\t\t\t\t...context.state,\n\t\t\t\t\t\t\tscope: node.metadata.scopes[slot_name]\n\t\t\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\tif (block.body.length === 0) continue;\n\n\t\t/** @type {Pattern[]} */\n\t\tconst params = [b.id('$$payload')];\n\n\t\tif (lets[slot_name].length > 0) {\n\t\t\tconst pattern = b.object_pattern(\n\t\t\t\tlets[slot_name].map((node) => {\n\t\t\t\t\tif (node.expression === null) {\n\t\t\t\t\t\treturn b.init(node.name, b.id(node.name));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node.expression.type === 'ObjectExpression') {\n\t\t\t\t\t\t// @ts-expect-error it gets parsed as an `ObjectExpression` but is really an `ObjectPattern`\n\t\t\t\t\t\treturn b.init(node.name, b.object_pattern(node.expression.properties));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node.expression.type === 'ArrayExpression') {\n\t\t\t\t\t\t// @ts-expect-error it gets parsed as an `ArrayExpression` but is really an `ArrayPattern`\n\t\t\t\t\t\treturn b.init(node.name, b.array_pattern(node.expression.elements));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn b.init(node.name, node.expression);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tparams.push(pattern);\n\t\t}\n\n\t\tconst slot_fn = b.arrow(params, b.block(block.body));\n\n\t\tif (slot_name === 'default' && !has_children_prop) {\n\t\t\tif (\n\t\t\t\tlets.default.length === 0 &&\n\t\t\t\tchildren.default.every(\n\t\t\t\t\t(node) =>\n\t\t\t\t\t\tnode.type !== 'SvelteFragment' ||\n\t\t\t\t\t\t!node.attributes.some((attr) => attr.type === 'LetDirective')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// create `children` prop...\n\t\t\t\tpush_prop(\n\t\t\t\t\tb.prop(\n\t\t\t\t\t\t'init',\n\t\t\t\t\t\tb.id('children'),\n\t\t\t\t\t\tdev ? b.call('$.prevent_snippet_stringification', slot_fn) : slot_fn\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// and `$$slots.default: true` so that `<slot>` on the child works\n\t\t\t\tserialized_slots.push(b.init(slot_name, b.true));\n\t\t\t} else {\n\t\t\t\t// create `$$slots.default`...\n\t\t\t\tserialized_slots.push(b.init(slot_name, slot_fn));\n\n\t\t\t\t// and a `children` prop that errors\n\t\t\t\tpush_prop(b.init('children', b.id('$.invalid_default_snippet')));\n\t\t\t}\n\t\t} else {\n\t\t\tserialized_slots.push(b.init(slot_name, slot_fn));\n\t\t}\n\t}\n\n\tif (serialized_slots.length > 0) {\n\t\tpush_prop(b.prop('init', b.id('$$slots'), b.object(serialized_slots)));\n\t}\n\n\tconst props_expression =\n\t\tprops_and_spreads.length === 0 ||\n\t\t(props_and_spreads.length === 1 && Array.isArray(props_and_spreads[0]))\n\t\t\t? b.object(/** @type {Property[]} */ (props_and_spreads[0] || []))\n\t\t\t: b.call(\n\t\t\t\t\t'$.spread_props',\n\t\t\t\t\tb.array(props_and_spreads.map((p) => (Array.isArray(p) ? b.object(p) : p)))\n\t\t\t\t);\n\n\t/** @type {Statement} */\n\tlet statement = b.stmt(\n\t\t(node.type === 'SvelteComponent' ? b.maybe_call : b.call)(\n\t\t\texpression,\n\t\t\tb.id('$$payload'),\n\t\t\tprops_expression\n\t\t)\n\t);\n\n\tif (snippet_declarations.length > 0) {\n\t\tstatement = b.block([...snippet_declarations, statement]);\n\t}\n\n\tconst dynamic =\n\t\tnode.type === 'SvelteComponent' || (node.type === 'Component' && node.metadata.dynamic);\n\n\tif (custom_css_props.length > 0) {\n\t\tcontext.state.template.push(\n\t\t\tb.stmt(\n\t\t\t\tb.call(\n\t\t\t\t\t'$.css_props',\n\t\t\t\t\tb.id('$$payload'),\n\t\t\t\t\tb.literal(context.state.namespace === 'svg' ? false : true),\n\t\t\t\t\tb.object(custom_css_props),\n\t\t\t\t\tb.thunk(b.block([statement])),\n\t\t\t\t\tdynamic && b.true\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else {\n\t\tif (dynamic) {\n\t\t\tcontext.state.template.push(empty_comment);\n\t\t}\n\n\t\tcontext.state.template.push(statement);\n\n\t\tif (!context.state.skip_hydration_boundaries) {\n\t\t\tcontext.state.template.push(empty_comment);\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { build_inline_component } from './shared/component.js';\n\n/**\n * @param {AST.Component} node\n * @param {ComponentContext} context\n */\nexport function Component(node, context) {\n\tbuild_inline_component(node, b.id(node.name), context);\n}\n", "/** @import { Expression, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.ConstTag} node\n * @param {ComponentContext} context\n */\nexport function ConstTag(node, context) {\n\tconst declaration = node.declaration.declarations[0];\n\tconst id = /** @type {Pattern} */ (context.visit(declaration.id));\n\tconst init = /** @type {Expression} */ (context.visit(declaration.init));\n\n\tcontext.state.init.push(b.const(id, init));\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.DebugTag} node\n * @param {ComponentContext} context\n */\nexport function DebugTag(node, context) {\n\tcontext.state.template.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'console.log',\n\t\t\t\tb.object(\n\t\t\t\t\tnode.identifiers.map((identifier) =>\n\t\t\t\t\t\tb.prop('init', identifier, /** @type {Expression} */ (context.visit(identifier)))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tb.debugger\n\t);\n}\n", "/** @import { BlockStatement, Expression, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { BLOCK_OPEN_ELSE } from '../../../../../internal/server/hydration.js';\nimport * as b from '#compiler/builders';\nimport { block_close, block_open } from './shared/utils.js';\n\n/**\n * @param {AST.EachBlock} node\n * @param {ComponentContext} context\n */\nexport function EachBlock(node, context) {\n\tconst state = context.state;\n\n\tconst each_node_meta = node.metadata;\n\tconst collection = /** @type {Expression} */ (context.visit(node.expression));\n\tconst index =\n\t\teach_node_meta.contains_group_binding || !node.index ? each_node_meta.index : b.id(node.index);\n\n\tconst array_id = state.scope.root.unique('each_array');\n\tstate.init.push(b.const(array_id, b.call('$.ensure_array_like', collection)));\n\n\t/** @type {Statement[]} */\n\tconst each = [];\n\n\tif (node.context) {\n\t\teach.push(b.let(node.context, b.member(array_id, index, true)));\n\t}\n\n\tif (index.name !== node.index && node.index != null) {\n\t\teach.push(b.let(node.index, index));\n\t}\n\n\teach.push(.../** @type {BlockStatement} */ (context.visit(node.body)).body);\n\n\tconst for_loop = b.for(\n\t\tb.declaration('let', [\n\t\t\tb.declarator(index, b.literal(0)),\n\t\t\tb.declarator('$$length', b.member(array_id, 'length'))\n\t\t]),\n\t\tb.binary('<', index, b.id('$$length')),\n\t\tb.update('++', index, false),\n\t\tb.block(each)\n\t);\n\n\tif (node.fallback) {\n\t\tconst open = b.stmt(b.assignment('+=', b.id('$$payload.out'), block_open));\n\n\t\tconst fallback = /** @type {BlockStatement} */ (context.visit(node.fallback));\n\n\t\tfallback.body.unshift(\n\t\t\tb.stmt(b.assignment('+=', b.id('$$payload.out'), b.literal(BLOCK_OPEN_ELSE)))\n\t\t);\n\n\t\tstate.template.push(\n\t\t\tb.if(\n\t\t\t\tb.binary('!==', b.member(array_id, 'length'), b.literal(0)),\n\t\t\t\tb.block([open, for_loop]),\n\t\t\t\tfallback\n\t\t\t),\n\t\t\tblock_close\n\t\t);\n\t} else {\n\t\tstate.template.push(block_open, for_loop, block_close);\n\t}\n}\n", "/** @import { ExpressionStatement } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\n\n/**\n * @param {ExpressionStatement} node\n * @param {Context} context\n */\nexport function ExpressionStatement(node, context) {\n\tconst rune = get_rune(node.expression, context.state.scope);\n\n\tif (\n\t\trune === '$effect' ||\n\t\trune === '$effect.pre' ||\n\t\trune === '$effect.root' ||\n\t\trune === '$inspect.trace'\n\t) {\n\t\treturn b.empty;\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext, ComponentServerTransformState } from '../types.js' */\nimport { clean_nodes, infer_namespace } from '../../utils.js';\nimport * as b from '#compiler/builders';\nimport { empty_comment, process_children, build_template } from './shared/utils.js';\n\n/**\n * @param {AST.Fragment} node\n * @param {ComponentContext} context\n */\nexport function Fragment(node, context) {\n\tconst parent = context.path.at(-1) ?? node;\n\tconst namespace = infer_namespace(context.state.namespace, parent, node.nodes);\n\n\tconst { hoisted, trimmed, is_standalone, is_text_first } = clean_nodes(\n\t\tparent,\n\t\tnode.nodes,\n\t\tcontext.path,\n\t\tnamespace,\n\t\tcontext.state,\n\t\tcontext.state.preserve_whitespace,\n\t\tcontext.state.options.preserveComments\n\t);\n\n\t/** @type {ComponentServerTransformState} */\n\tconst state = {\n\t\t...context.state,\n\t\tinit: [],\n\t\ttemplate: [],\n\t\tnamespace,\n\t\tskip_hydration_boundaries: is_standalone\n\t};\n\n\tfor (const node of hoisted) {\n\t\tcontext.visit(node, state);\n\t}\n\n\tif (is_text_first) {\n\t\t// insert `<!---->` to prevent this from being glued to the previous fragment\n\t\tstate.template.push(empty_comment);\n\t}\n\n\tprocess_children(trimmed, { ...context, state });\n\n\treturn b.block([...state.init, ...build_template(state.template)]);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.HtmlTag} node\n * @param {ComponentContext} context\n */\nexport function HtmlTag(node, context) {\n\tconst expression = /** @type {Expression} */ (context.visit(node.expression));\n\tcontext.state.template.push(b.call('$.html', expression));\n}\n", "/** @import { Identifier, Node } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport is_reference from 'is-reference';\nimport * as b from '#compiler/builders';\nimport { build_getter } from './shared/utils.js';\n\n/**\n * @param {Identifier} node\n * @param {Context} context\n */\nexport function Identifier(node, context) {\n\tif (is_reference(node, /** @type {Node} */ (context.path.at(-1)))) {\n\t\tif (node.name === '$$props') {\n\t\t\treturn b.id('$$sanitized_props');\n\t\t}\n\n\t\treturn build_getter(node, context.state);\n\t}\n}\n", "/** @import { BlockStatement, Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { BLOCK_OPEN_ELSE } from '../../../../../internal/server/hydration.js';\nimport * as b from '#compiler/builders';\nimport { block_close, block_open } from './shared/utils.js';\n\n/**\n * @param {AST.IfBlock} node\n * @param {ComponentContext} context\n */\nexport function IfBlock(node, context) {\n\tconst consequent = /** @type {BlockStatement} */ (context.visit(node.consequent));\n\tconsequent.body.unshift(b.stmt(b.assignment('+=', b.id('$$payload.out'), block_open)));\n\tlet if_statement = b.if(/** @type {Expression} */ (context.visit(node.test)), consequent);\n\n\tcontext.state.template.push(if_statement, block_close);\n\n\tlet index = 1;\n\tlet alt = node.alternate;\n\twhile (alt && alt.nodes.length === 1 && alt.nodes[0].type === 'IfBlock' && alt.nodes[0].elseif) {\n\t\tconst elseif = alt.nodes[0];\n\t\tconst alternate = /** @type {BlockStatement} */ (context.visit(elseif.consequent));\n\t\talternate.body.unshift(\n\t\t\tb.stmt(b.assignment('+=', b.id('$$payload.out'), b.literal(`<!--[${index++}-->`)))\n\t\t);\n\t\tif_statement = if_statement.alternate = b.if(\n\t\t\t/** @type {Expression} */ (context.visit(elseif.test)),\n\t\t\talternate\n\t\t);\n\t\talt = elseif.alternate;\n\t}\n\n\tif_statement.alternate = alt ? /** @type {BlockStatement} */ (context.visit(alt)) : b.block([]);\n\tif_statement.alternate.body.unshift(\n\t\tb.stmt(b.assignment('+=', b.id('$$payload.out'), b.literal(BLOCK_OPEN_ELSE)))\n\t);\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { empty_comment } from './shared/utils.js';\n\n/**\n * @param {AST.KeyBlock} node\n * @param {ComponentContext} context\n */\nexport function KeyBlock(node, context) {\n\tcontext.state.template.push(\n\t\tempty_comment,\n\t\t/** @type {BlockStatement} */ (context.visit(node.fragment)),\n\t\tempty_comment\n\t);\n}\n", "/** @import { ExpressionStatement, LabeledStatement } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {LabeledStatement} node\n * @param {Context} context\n */\nexport function LabeledStatement(node, context) {\n\tif (context.state.analysis.runes || context.path.length > 1 || node.label.name !== '$') {\n\t\treturn;\n\t}\n\n\t// TODO bail out if we're in module context\n\n\t// these statements will be topologically ordered later\n\tcontext.state.legacy_reactive_statements.set(\n\t\tnode,\n\t\t// people could do \"break $\" inside, so we need to keep the label\n\t\tb.labeled('$', /** @type {ExpressionStatement} */ (context.visit(node.body)))\n\t);\n\n\treturn b.empty;\n}\n", "/** @import { MemberExpression } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {MemberExpression} node\n * @param {Context} context\n */\nexport function MemberExpression(node, context) {\n\tif (\n\t\tcontext.state.analysis.runes &&\n\t\tnode.object.type === 'ThisExpression' &&\n\t\tnode.property.type === 'PrivateIdentifier'\n\t) {\n\t\tconst field = context.state.private_derived.get(node.property.name);\n\n\t\tif (field) {\n\t\t\treturn b.call(node);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { Expression, PropertyDefinition } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\n\n/**\n * @param {PropertyDefinition} node\n * @param {Context} context\n */\nexport function PropertyDefinition(node, context) {\n\tif (context.state.analysis.runes && node.value != null && node.value.type === 'CallExpression') {\n\t\tconst rune = get_rune(node.value, context.state.scope);\n\n\t\tif (rune === '$state' || rune === '$state.raw' || rune === '$derived') {\n\t\t\treturn {\n\t\t\t\t...node,\n\t\t\t\tvalue:\n\t\t\t\t\tnode.value.arguments.length === 0\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: /** @type {Expression} */ (context.visit(node.value.arguments[0]))\n\t\t\t};\n\t\t}\n\n\t\tif (rune === '$derived.by') {\n\t\t\treturn {\n\t\t\t\t...node,\n\t\t\t\tvalue:\n\t\t\t\t\tnode.value.arguments.length === 0\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: b.call(/** @type {Expression} */ (context.visit(node.value.arguments[0])))\n\t\t\t};\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { ArrayExpression, Expression, Literal, ObjectExpression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext, ComponentServerTransformState } from '../../types.js' */\nimport { is_event_attribute, is_text_attribute } from '../../../../../utils/ast.js';\nimport { binding_properties } from '../../../../bindings.js';\nimport {\n\tcreate_attribute,\n\tcreate_expression_metadata,\n\tis_custom_element_node\n} from '../../../../nodes.js';\nimport { regex_starts_with_newline } from '../../../../patterns.js';\nimport * as b from '#compiler/builders';\nimport {\n\tELEMENT_IS_NAMESPACED,\n\tELEMENT_PRESERVE_ATTRIBUTE_CASE\n} from '../../../../../../constants.js';\nimport { build_attribute_value } from './utils.js';\nimport {\n\tis_boolean_attribute,\n\tis_content_editable_binding,\n\tis_load_error_element\n} from '../../../../../../utils.js';\nimport { escape_html } from '../../../../../../escaping.js';\n\nconst WHITESPACE_INSENSITIVE_ATTRIBUTES = ['class', 'style'];\n\n/**\n * Writes the output to the template output. Some elements may have attributes on them that require the\n * their output to be the child content instead. In this case, an object is returned.\n * @param {AST.RegularElement | AST.SvelteElement} node\n * @param {import('zimmerframe').Context<AST.SvelteNode, ComponentServerTransformState>} context\n */\nexport function build_element_attributes(node, context) {\n\t/** @type {Array<AST.Attribute | AST.SpreadAttribute>} */\n\tconst attributes = [];\n\n\t/** @type {AST.ClassDirective[]} */\n\tconst class_directives = [];\n\n\t/** @type {AST.StyleDirective[]} */\n\tconst style_directives = [];\n\n\t/** @type {Expression | null} */\n\tlet content = null;\n\n\tlet has_spread = false;\n\tlet events_to_capture = new Set();\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name === 'value') {\n\t\t\t\tif (node.name === 'textarea') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tattribute.value !== true &&\n\t\t\t\t\t\tArray.isArray(attribute.value) &&\n\t\t\t\t\t\tattribute.value[0].type === 'Text' &&\n\t\t\t\t\t\tregex_starts_with_newline.test(attribute.value[0].data)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Two or more leading newlines are required to restore the leading newline immediately after `<textarea>`.\n\t\t\t\t\t\t// see https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n\t\t\t\t\t\t// also see related code in analysis phase\n\t\t\t\t\t\tattribute.value[0].data = '\\n' + attribute.value[0].data;\n\t\t\t\t\t}\n\t\t\t\t\tcontent = b.call('$.escape', build_attribute_value(attribute.value, context));\n\t\t\t\t} else if (node.name !== 'select') {\n\t\t\t\t\t// omit value attribute for select elements, it's irrelevant for the initially selected value and has no\n\t\t\t\t\t// effect on the selected value after the user interacts with the select element (the value _property_ does, but not the attribute)\n\t\t\t\t\tattributes.push(attribute);\n\t\t\t\t}\n\n\t\t\t\t// omit event handlers except for special cases\n\t\t\t} else if (is_event_attribute(attribute)) {\n\t\t\t\tif (\n\t\t\t\t\t(attribute.name === 'onload' || attribute.name === 'onerror') &&\n\t\t\t\t\tis_load_error_element(node.name)\n\t\t\t\t) {\n\t\t\t\t\tevents_to_capture.add(attribute.name);\n\t\t\t\t}\n\t\t\t\t// the defaultValue/defaultChecked properties don't exist as attributes\n\t\t\t} else if (attribute.name !== 'defaultValue' && attribute.name !== 'defaultChecked') {\n\t\t\t\tif (attribute.name === 'class') {\n\t\t\t\t\tif (attribute.metadata.needs_clsx) {\n\t\t\t\t\t\tattributes.push({\n\t\t\t\t\t\t\t...attribute,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t.../** @type {AST.ExpressionTag} */ (attribute.value),\n\t\t\t\t\t\t\t\texpression: b.call(\n\t\t\t\t\t\t\t\t\t'$.clsx',\n\t\t\t\t\t\t\t\t\t/** @type {AST.ExpressionTag} */ (attribute.value).expression\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattributes.push(attribute);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tattributes.push(attribute);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (attribute.type === 'BindDirective') {\n\t\t\tif (attribute.name === 'value' && node.name === 'select') continue;\n\t\t\tif (\n\t\t\t\tattribute.name === 'value' &&\n\t\t\t\tattributes.some(\n\t\t\t\t\t(attr) =>\n\t\t\t\t\t\tattr.type === 'Attribute' &&\n\t\t\t\t\t\tattr.name === 'type' &&\n\t\t\t\t\t\tis_text_attribute(attr) &&\n\t\t\t\t\t\tattr.value[0].data === 'file'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (attribute.name === 'this') continue;\n\n\t\t\tconst binding = binding_properties[attribute.name];\n\t\t\tif (binding?.omit_in_ssr) continue;\n\n\t\t\tlet expression = /** @type {Expression} */ (context.visit(attribute.expression));\n\n\t\t\tif (expression.type === 'SequenceExpression') {\n\t\t\t\texpression = b.call(expression.expressions[0]);\n\t\t\t}\n\n\t\t\tif (is_content_editable_binding(attribute.name)) {\n\t\t\t\tcontent = expression;\n\t\t\t} else if (attribute.name === 'value' && node.name === 'textarea') {\n\t\t\t\tcontent = b.call('$.escape', expression);\n\t\t\t} else if (attribute.name === 'group' && attribute.expression.type !== 'SequenceExpression') {\n\t\t\t\tconst value_attribute = /** @type {AST.Attribute | undefined} */ (\n\t\t\t\t\tnode.attributes.find((attr) => attr.type === 'Attribute' && attr.name === 'value')\n\t\t\t\t);\n\t\t\t\tif (!value_attribute) continue;\n\n\t\t\t\tconst is_checkbox = node.attributes.some(\n\t\t\t\t\t(attr) =>\n\t\t\t\t\t\tattr.type === 'Attribute' &&\n\t\t\t\t\t\tattr.name === 'type' &&\n\t\t\t\t\t\tis_text_attribute(attr) &&\n\t\t\t\t\t\tattr.value[0].data === 'checkbox'\n\t\t\t\t);\n\n\t\t\t\tattributes.push(\n\t\t\t\t\tcreate_attribute('checked', -1, -1, [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'ExpressionTag',\n\t\t\t\t\t\t\tstart: -1,\n\t\t\t\t\t\t\tend: -1,\n\t\t\t\t\t\t\texpression: is_checkbox\n\t\t\t\t\t\t\t\t? b.call(\n\t\t\t\t\t\t\t\t\t\tb.member(attribute.expression, 'includes'),\n\t\t\t\t\t\t\t\t\t\tbuild_attribute_value(value_attribute.value, context)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: b.binary(\n\t\t\t\t\t\t\t\t\t\t'===',\n\t\t\t\t\t\t\t\t\t\tattribute.expression,\n\t\t\t\t\t\t\t\t\t\tbuild_attribute_value(value_attribute.value, context)\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tattributes.push(\n\t\t\t\t\tcreate_attribute(attribute.name, -1, -1, [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'ExpressionTag',\n\t\t\t\t\t\t\tstart: -1,\n\t\t\t\t\t\t\tend: -1,\n\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\texpression: create_expression_metadata()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (attribute.type === 'SpreadAttribute') {\n\t\t\tattributes.push(attribute);\n\t\t\thas_spread = true;\n\t\t\tif (is_load_error_element(node.name)) {\n\t\t\t\tevents_to_capture.add('onload');\n\t\t\t\tevents_to_capture.add('onerror');\n\t\t\t}\n\t\t} else if (attribute.type === 'UseDirective') {\n\t\t\tif (is_load_error_element(node.name)) {\n\t\t\t\tevents_to_capture.add('onload');\n\t\t\t\tevents_to_capture.add('onerror');\n\t\t\t}\n\t\t} else if (attribute.type === 'ClassDirective') {\n\t\t\tclass_directives.push(attribute);\n\t\t} else if (attribute.type === 'StyleDirective') {\n\t\t\tstyle_directives.push(attribute);\n\t\t} else if (attribute.type === 'LetDirective') {\n\t\t\t// do nothing, these are handled inside `build_inline_component`\n\t\t} else {\n\t\t\tcontext.visit(attribute);\n\t\t}\n\t}\n\n\tif (has_spread) {\n\t\tbuild_element_spread_attributes(node, attributes, style_directives, class_directives, context);\n\t} else {\n\t\tconst css_hash = node.metadata.scoped ? context.state.analysis.css.hash : null;\n\n\t\tfor (const attribute of /** @type {AST.Attribute[]} */ (attributes)) {\n\t\t\tconst name = get_attribute_name(node, attribute);\n\t\t\tconst can_use_literal =\n\t\t\t\t(name !== 'class' || class_directives.length === 0) &&\n\t\t\t\t(name !== 'style' || style_directives.length === 0);\n\n\t\t\tif (can_use_literal && (attribute.value === true || is_text_attribute(attribute))) {\n\t\t\t\tlet literal_value = /** @type {Literal} */ (\n\t\t\t\t\tbuild_attribute_value(\n\t\t\t\t\t\tattribute.value,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tWHITESPACE_INSENSITIVE_ATTRIBUTES.includes(name)\n\t\t\t\t\t)\n\t\t\t\t).value;\n\n\t\t\t\tif (name === 'class' && css_hash) {\n\t\t\t\t\tliteral_value = (String(literal_value) + ' ' + css_hash).trim();\n\t\t\t\t}\n\n\t\t\t\tif (name !== 'class' || literal_value) {\n\t\t\t\t\tcontext.state.template.push(\n\t\t\t\t\t\tb.literal(\n\t\t\t\t\t\t\t` ${attribute.name}${\n\t\t\t\t\t\t\t\tis_boolean_attribute(name) && literal_value === true\n\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t: `=\"${literal_value === true ? '' : String(literal_value)}\"`\n\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst value = build_attribute_value(\n\t\t\t\tattribute.value,\n\t\t\t\tcontext,\n\t\t\t\tWHITESPACE_INSENSITIVE_ATTRIBUTES.includes(name)\n\t\t\t);\n\n\t\t\t// pre-escape and inline literal attributes :\n\t\t\tif (can_use_literal && value.type === 'Literal' && typeof value.value === 'string') {\n\t\t\t\tif (name === 'class' && css_hash) {\n\t\t\t\t\tvalue.value = (value.value + ' ' + css_hash).trim();\n\t\t\t\t}\n\t\t\t\tcontext.state.template.push(b.literal(` ${name}=\"${escape_html(value.value, true)}\"`));\n\t\t\t} else if (name === 'class') {\n\t\t\t\tcontext.state.template.push(build_attr_class(class_directives, value, context, css_hash));\n\t\t\t} else if (name === 'style') {\n\t\t\t\tcontext.state.template.push(build_attr_style(style_directives, value, context));\n\t\t\t} else {\n\t\t\t\tcontext.state.template.push(\n\t\t\t\t\tb.call('$.attr', b.literal(name), value, is_boolean_attribute(name) && b.true)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (events_to_capture.size !== 0) {\n\t\tfor (const event of events_to_capture) {\n\t\t\tcontext.state.template.push(b.literal(` ${event}=\"this.__e=event\"`));\n\t\t}\n\t}\n\n\treturn content;\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} element\n * @param {AST.Attribute} attribute\n */\nfunction get_attribute_name(element, attribute) {\n\tlet name = attribute.name;\n\tif (!element.metadata.svg && !element.metadata.mathml) {\n\t\tname = name.toLowerCase();\n\t\t// don't lookup boolean aliases here, the server runtime function does only\n\t\t// check for the lowercase variants of boolean attributes\n\t}\n\treturn name;\n}\n\n/**\n *\n * @param {AST.RegularElement | AST.SvelteElement} element\n * @param {Array<AST.Attribute | AST.SpreadAttribute>} attributes\n * @param {AST.StyleDirective[]} style_directives\n * @param {AST.ClassDirective[]} class_directives\n * @param {ComponentContext} context\n */\nfunction build_element_spread_attributes(\n\telement,\n\tattributes,\n\tstyle_directives,\n\tclass_directives,\n\tcontext\n) {\n\tlet classes;\n\tlet styles;\n\tlet flags = 0;\n\n\tif (class_directives.length) {\n\t\tconst properties = class_directives.map((directive) =>\n\t\t\tb.init(\n\t\t\t\tdirective.name,\n\t\t\t\tdirective.expression.type === 'Identifier' && directive.expression.name === directive.name\n\t\t\t\t\t? b.id(directive.name)\n\t\t\t\t\t: /** @type {Expression} */ (context.visit(directive.expression))\n\t\t\t)\n\t\t);\n\t\tclasses = b.object(properties);\n\t}\n\n\tif (style_directives.length > 0) {\n\t\tconst properties = style_directives.map((directive) =>\n\t\t\tb.init(\n\t\t\t\tdirective.name,\n\t\t\t\tdirective.value === true\n\t\t\t\t\t? b.id(directive.name)\n\t\t\t\t\t: build_attribute_value(directive.value, context, true)\n\t\t\t)\n\t\t);\n\n\t\tstyles = b.object(properties);\n\t}\n\n\tif (element.metadata.svg || element.metadata.mathml) {\n\t\tflags |= ELEMENT_IS_NAMESPACED | ELEMENT_PRESERVE_ATTRIBUTE_CASE;\n\t} else if (is_custom_element_node(element)) {\n\t\tflags |= ELEMENT_PRESERVE_ATTRIBUTE_CASE;\n\t}\n\n\tconst object = b.object(\n\t\tattributes.map((attribute) => {\n\t\t\tif (attribute.type === 'Attribute') {\n\t\t\t\tconst name = get_attribute_name(element, attribute);\n\t\t\t\tconst value = build_attribute_value(\n\t\t\t\t\tattribute.value,\n\t\t\t\t\tcontext,\n\t\t\t\t\tWHITESPACE_INSENSITIVE_ATTRIBUTES.includes(name)\n\t\t\t\t);\n\t\t\t\treturn b.prop('init', b.key(name), value);\n\t\t\t}\n\n\t\t\treturn b.spread(/** @type {Expression} */ (context.visit(attribute)));\n\t\t})\n\t);\n\n\tconst css_hash =\n\t\telement.metadata.scoped && context.state.analysis.css.hash\n\t\t\t? b.literal(context.state.analysis.css.hash)\n\t\t\t: b.null;\n\n\tconst args = [object, css_hash, classes, styles, flags ? b.literal(flags) : undefined];\n\tcontext.state.template.push(b.call('$.spread_attributes', ...args));\n}\n\n/**\n *\n * @param {AST.ClassDirective[]} class_directives\n * @param {Expression} expression\n * @param {ComponentContext} context\n * @param {string | null} hash\n */\nfunction build_attr_class(class_directives, expression, context, hash) {\n\t/** @type {ObjectExpression | undefined} */\n\tlet directives;\n\n\tif (class_directives.length) {\n\t\tdirectives = b.object(\n\t\t\tclass_directives.map((directive) =>\n\t\t\t\tb.prop(\n\t\t\t\t\t'init',\n\t\t\t\t\tb.literal(directive.name),\n\t\t\t\t\t/** @type {Expression} */ (context.visit(directive.expression, context.state))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tlet css_hash;\n\n\tif (hash) {\n\t\tif (expression.type === 'Literal' && typeof expression.value === 'string') {\n\t\t\texpression.value = (expression.value + ' ' + hash).trim();\n\t\t} else {\n\t\t\tcss_hash = b.literal(hash);\n\t\t}\n\t}\n\n\treturn b.call('$.attr_class', expression, css_hash, directives);\n}\n\n/**\n *\n * @param {AST.StyleDirective[]} style_directives\n * @param {Expression} expression\n * @param {ComponentContext} context\n */\nfunction build_attr_style(style_directives, expression, context) {\n\t/** @type {ArrayExpression | ObjectExpression | undefined} */\n\tlet directives;\n\n\tif (style_directives.length) {\n\t\tlet normal_properties = [];\n\t\tlet important_properties = [];\n\n\t\tfor (const directive of style_directives) {\n\t\t\tconst expression =\n\t\t\t\tdirective.value === true\n\t\t\t\t\t? b.id(directive.name)\n\t\t\t\t\t: build_attribute_value(directive.value, context, true);\n\n\t\t\tlet name = directive.name;\n\t\t\tif (name[0] !== '-' || name[1] !== '-') {\n\t\t\t\tname = name.toLowerCase();\n\t\t\t}\n\n\t\t\tconst property = b.init(directive.name, expression);\n\t\t\tif (directive.modifiers.includes('important')) {\n\t\t\t\timportant_properties.push(property);\n\t\t\t} else {\n\t\t\t\tnormal_properties.push(property);\n\t\t\t}\n\t\t}\n\n\t\tif (important_properties.length) {\n\t\t\tdirectives = b.array([b.object(normal_properties), b.object(important_properties)]);\n\t\t} else {\n\t\t\tdirectives = b.object(normal_properties);\n\t\t}\n\t}\n\n\treturn b.call('$.attr_style', expression, directives);\n}\n", "/** @import { Location } from 'locate-character' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext, ComponentServerTransformState } from '../types.js' */\n/** @import { Scope } from '../../../scope.js' */\nimport { is_void } from '../../../../../utils.js';\nimport { dev, locator } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { clean_nodes, determine_namespace_for_children } from '../../utils.js';\nimport { build_element_attributes } from './shared/element.js';\nimport { process_children, build_template } from './shared/utils.js';\n\n/**\n * @param {AST.RegularElement} node\n * @param {ComponentContext} context\n */\nexport function RegularElement(node, context) {\n\tconst namespace = determine_namespace_for_children(node, context.state.namespace);\n\n\t/** @type {ComponentServerTransformState} */\n\tconst state = {\n\t\t...context.state,\n\t\tnamespace,\n\t\tpreserve_whitespace:\n\t\t\tcontext.state.preserve_whitespace || node.name === 'pre' || node.name === 'textarea'\n\t};\n\n\tcontext.state.template.push(b.literal(`<${node.name}`));\n\tconst body = build_element_attributes(node, { ...context, state });\n\tcontext.state.template.push(b.literal('>'));\n\n\tif ((node.name === 'script' || node.name === 'style') && node.fragment.nodes.length === 1) {\n\t\tcontext.state.template.push(\n\t\t\tb.literal(/** @type {AST.Text} */ (node.fragment.nodes[0]).data),\n\t\t\tb.literal(`</${node.name}>`)\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst { hoisted, trimmed } = clean_nodes(\n\t\tnode,\n\t\tnode.fragment.nodes,\n\t\tcontext.path,\n\t\tnamespace,\n\t\t{\n\t\t\t...state,\n\t\t\tscope: /** @type {Scope} */ (state.scopes.get(node.fragment))\n\t\t},\n\t\tstate.preserve_whitespace,\n\t\tstate.options.preserveComments\n\t);\n\n\tfor (const node of hoisted) {\n\t\tcontext.visit(node, state);\n\t}\n\n\tif (dev) {\n\t\tconst location = /** @type {Location} */ (locator(node.start));\n\t\tstate.template.push(\n\t\t\tb.stmt(\n\t\t\t\tb.call(\n\t\t\t\t\t'$.push_element',\n\t\t\t\t\tb.id('$$payload'),\n\t\t\t\t\tb.literal(node.name),\n\t\t\t\t\tb.literal(location.line),\n\t\t\t\t\tb.literal(location.column)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tif (body === null) {\n\t\tprocess_children(trimmed, { ...context, state });\n\t} else {\n\t\tlet id = body;\n\n\t\tif (body.type !== 'Identifier') {\n\t\t\tid = b.id(state.scope.generate('$$body'));\n\t\t\tstate.template.push(b.const(id, body));\n\t\t}\n\n\t\t// if this is a `<textarea>` value or a contenteditable binding, we only add\n\t\t// the body if the attribute/binding is falsy\n\t\tconst inner_state = { ...state, template: [], init: [] };\n\t\tprocess_children(trimmed, { ...context, state: inner_state });\n\n\t\t// Use the body expression as the body if it's truthy, otherwise use the inner template\n\t\tstate.template.push(\n\t\t\tb.if(\n\t\t\t\tid,\n\t\t\t\tb.block(build_template([id])),\n\t\t\t\tb.block([...inner_state.init, ...build_template(inner_state.template)])\n\t\t\t)\n\t\t);\n\t}\n\n\tif (!is_void(node.name)) {\n\t\tstate.template.push(b.literal(`</${node.name}>`));\n\t}\n\n\tif (dev) {\n\t\tstate.template.push(b.stmt(b.call('$.pop_element')));\n\t}\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { unwrap_optional } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { empty_comment } from './shared/utils.js';\n\n/**\n * @param {AST.RenderTag} node\n * @param {ComponentContext} context\n */\nexport function RenderTag(node, context) {\n\tconst callee = unwrap_optional(node.expression).callee;\n\tconst raw_args = unwrap_optional(node.expression).arguments;\n\n\tconst snippet_function = /** @type {Expression} */ (context.visit(callee));\n\n\tconst snippet_args = raw_args.map((arg) => {\n\t\treturn /** @type {Expression} */ (context.visit(arg));\n\t});\n\n\tcontext.state.template.push(\n\t\tb.stmt(\n\t\t\t(node.expression.type === 'CallExpression' ? b.call : b.maybe_call)(\n\t\t\t\tsnippet_function,\n\t\t\t\tb.id('$$payload'),\n\t\t\t\t...snippet_args\n\t\t\t)\n\t\t)\n\t);\n\n\tif (!context.state.skip_hydration_boundaries) {\n\t\tcontext.state.template.push(empty_comment);\n\t}\n}\n", "/** @import { BlockStatement, Expression, Literal, Property } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { empty_comment, build_attribute_value } from './shared/utils.js';\n\n/**\n * @param {AST.SlotElement} node\n * @param {ComponentContext} context\n */\nexport function SlotElement(node, context) {\n\t/** @type {Property[]} */\n\tconst props = [];\n\n\t/** @type {Expression[]} */\n\tconst spreads = [];\n\n\tlet name = b.literal('default');\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'SpreadAttribute') {\n\t\t\tspreads.push(/** @type {Expression} */ (context.visit(attribute)));\n\t\t} else if (attribute.type === 'Attribute') {\n\t\t\tconst value = build_attribute_value(attribute.value, context, false, true);\n\n\t\t\tif (attribute.name === 'name') {\n\t\t\t\tname = /** @type {Literal} */ (value);\n\t\t\t} else if (attribute.name !== 'slot') {\n\t\t\t\tprops.push(b.init(attribute.name, value));\n\t\t\t}\n\t\t}\n\t}\n\n\tconst props_expression =\n\t\tspreads.length === 0\n\t\t\t? b.object(props)\n\t\t\t: b.call('$.spread_props', b.array([b.object(props), ...spreads]));\n\n\tconst fallback =\n\t\tnode.fragment.nodes.length === 0\n\t\t\t? b.null\n\t\t\t: b.thunk(/** @type {BlockStatement} */ (context.visit(node.fragment)));\n\n\tconst slot = b.call(\n\t\t'$.slot',\n\t\tb.id('$$payload'),\n\t\tb.id('$$props'),\n\t\tname,\n\t\tprops_expression,\n\t\tfallback\n\t);\n\n\tcontext.state.template.push(empty_comment, b.stmt(slot), empty_comment);\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { dev } from '../../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.SnippetBlock} node\n * @param {ComponentContext} context\n */\nexport function SnippetBlock(node, context) {\n\tlet fn = b.function_declaration(\n\t\tnode.expression,\n\t\t[b.id('$$payload'), ...node.parameters],\n\t\t/** @type {BlockStatement} */ (context.visit(node.body))\n\t);\n\n\t// @ts-expect-error - TODO remove this hack once $$render_inner for legacy bindings is gone\n\tfn.___snippet = true;\n\n\tconst statements = node.metadata.can_hoist ? context.state.hoisted : context.state.init;\n\n\tif (dev) {\n\t\tfn.body.body.unshift(b.stmt(b.call('$.validate_snippet_args', b.id('$$payload'))));\n\t\tstatements.push(b.stmt(b.call('$.prevent_snippet_stringification', fn.id)));\n\t}\n\n\tstatements.push(fn);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n\n/**\n * @param {AST.SpreadAttribute} node\n * @param {ComponentContext} context\n */\nexport function SpreadAttribute(node, context) {\n\treturn context.visit(node.expression);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { build_inline_component } from './shared/component.js';\n\n/**\n * @param {AST.SvelteComponent} node\n * @param {ComponentContext} context\n */\nexport function SvelteComponent(node, context) {\n\tbuild_inline_component(node, /** @type {Expression} */ (context.visit(node.expression)), context);\n}\n", "/** @import { Location } from 'locate-character' */\n/** @import { BlockStatement, Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport { dev, locator } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { determine_namespace_for_children } from '../../utils.js';\nimport { build_element_attributes } from './shared/element.js';\nimport { build_template } from './shared/utils.js';\n\n/**\n * @param {AST.SvelteElement} node\n * @param {ComponentContext} context\n */\nexport function SvelteElement(node, context) {\n\tlet tag = /** @type {Expression} */ (context.visit(node.tag));\n\n\tif (dev) {\n\t\t// Ensure getters/function calls aren't called multiple times.\n\t\t// If we ever start referencing `tag` more than once in prod, move this out of the if block.\n\t\tif (tag.type !== 'Identifier') {\n\t\t\tconst tag_id = context.state.scope.generate('$$tag');\n\t\t\tcontext.state.init.push(b.const(tag_id, tag));\n\t\t\ttag = b.id(tag_id);\n\t\t}\n\n\t\tif (node.fragment.nodes.length > 0) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.validate_void_dynamic_element', b.thunk(tag))));\n\t\t}\n\t\tcontext.state.init.push(b.stmt(b.call('$.validate_dynamic_element_tag', b.thunk(tag))));\n\t}\n\n\tconst state = {\n\t\t...context.state,\n\t\tnamespace: determine_namespace_for_children(node, context.state.namespace),\n\t\ttemplate: [],\n\t\tinit: []\n\t};\n\n\tbuild_element_attributes(node, { ...context, state });\n\n\tif (dev) {\n\t\tconst location = /** @type {Location} */ (locator(node.start));\n\t\tcontext.state.template.push(\n\t\t\tb.stmt(\n\t\t\t\tb.call(\n\t\t\t\t\t'$.push_element',\n\t\t\t\t\tb.id('$$payload'),\n\t\t\t\t\ttag,\n\t\t\t\t\tb.literal(location.line),\n\t\t\t\t\tb.literal(location.column)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tconst attributes = b.block([...state.init, ...build_template(state.template)]);\n\tconst children = /** @type {BlockStatement} */ (context.visit(node.fragment, state));\n\n\tcontext.state.template.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.element',\n\t\t\t\tb.id('$$payload'),\n\t\t\t\ttag,\n\t\t\t\tattributes.body.length > 0 && b.thunk(attributes),\n\t\t\t\tchildren.body.length > 0 && b.thunk(children)\n\t\t\t)\n\t\t)\n\t);\n\n\tif (dev) {\n\t\tcontext.state.template.push(b.stmt(b.call('$.pop_element')));\n\t}\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n\n/**\n * @param {AST.SvelteFragment} node\n * @param {ComponentContext} context\n */\nexport function SvelteFragment(node, context) {\n\tcontext.state.template.push(/** @type {BlockStatement} */ (context.visit(node.fragment)));\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.SvelteHead} node\n * @param {ComponentContext} context\n */\nexport function SvelteHead(node, context) {\n\tconst block = /** @type {BlockStatement} */ (context.visit(node.fragment));\n\n\tcontext.state.template.push(\n\t\tb.stmt(b.call('$.head', b.id('$$payload'), b.arrow([b.id('$$payload')], block)))\n\t);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { build_inline_component } from './shared/component.js';\n\n/**\n * @param {AST.SvelteSelf} node\n * @param {ComponentContext} context\n */\nexport function SvelteSelf(node, context) {\n\tbuild_inline_component(node, b.id(context.state.analysis.name), context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport { process_children, build_template } from './shared/utils.js';\n\n/**\n * @param {AST.TitleElement} node\n * @param {ComponentContext} context\n */\nexport function TitleElement(node, context) {\n\t// title is guaranteed to contain only text/expression tag children\n\tconst template = [b.literal('<title>')];\n\tprocess_children(node.fragment.nodes, { ...context, state: { ...context.state, template } });\n\ttemplate.push(b.literal('</title>'));\n\n\tcontext.state.init.push(...build_template(template, b.id('$$payload.title'), '='));\n}\n", "/** @import { UpdateExpression } from 'estree' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {UpdateExpression} node\n * @param {Context} context\n */\nexport function UpdateExpression(node, context) {\n\tconst argument = node.argument;\n\n\tif (\n\t\targument.type === 'Identifier' &&\n\t\tcontext.state.scope.get(argument.name)?.kind === 'store_sub'\n\t) {\n\t\treturn b.call(\n\t\t\tnode.prefix ? '$.update_store_pre' : '$.update_store',\n\t\t\tb.assignment('??=', b.id('$$store_subs'), b.object([])),\n\t\t\tb.literal(argument.name),\n\t\t\tb.id(argument.name.slice(1)),\n\t\t\tnode.operator === '--' && b.literal(-1)\n\t\t);\n\t}\n\n\treturn context.next();\n}\n", "/** @import { VariableDeclaration, VariableDeclarator, Expression, CallExpression, Pattern, Identifier } from 'estree' */\n/** @import { Binding } from '#compiler' */\n/** @import { Context } from '../types.js' */\n/** @import { ComponentAnalysis } from '../../../types.js' */\n/** @import { Scope } from '../../../scope.js' */\nimport { build_fallback, extract_paths } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\nimport { walk } from 'zimmerframe';\n\n/**\n * @param {VariableDeclaration} node\n * @param {Context} context\n */\nexport function VariableDeclaration(node, context) {\n\t/** @type {VariableDeclarator[]} */\n\tconst declarations = [];\n\n\tif (context.state.analysis.runes) {\n\t\tfor (const declarator of node.declarations) {\n\t\t\tconst init = declarator.init;\n\t\t\tconst rune = get_rune(init, context.state.scope);\n\t\t\tif (!rune || rune === '$effect.tracking' || rune === '$inspect' || rune === '$effect.root') {\n\t\t\t\tdeclarations.push(/** @type {VariableDeclarator} */ (context.visit(declarator)));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$props.id') {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$props') {\n\t\t\t\tlet has_rest = false;\n\t\t\t\t// remove $bindable() from props declaration\n\t\t\t\tlet id = walk(declarator.id, null, {\n\t\t\t\t\tRestElement(node, context) {\n\t\t\t\t\t\tif (context.path.at(-1) === declarator.id) {\n\t\t\t\t\t\t\thas_rest = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tAssignmentPattern(node) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnode.right.type === 'CallExpression' &&\n\t\t\t\t\t\t\tget_rune(node.right, context.state.scope) === '$bindable'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst right = node.right.arguments.length\n\t\t\t\t\t\t\t\t? /** @type {Expression} */ (context.visit(node.right.arguments[0]))\n\t\t\t\t\t\t\t\t: b.void0;\n\t\t\t\t\t\t\treturn b.assignment_pattern(node.left, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// if `$$slots` is declared separately, deconflict\n\t\t\t\tconst slots_name = /** @type {ComponentAnalysis} */ (context.state.analysis).uses_slots\n\t\t\t\t\t? b.id('$$slots_')\n\t\t\t\t\t: b.id('$$slots');\n\n\t\t\t\tif (id.type === 'ObjectPattern' && has_rest) {\n\t\t\t\t\t// If a rest pattern is used within an object pattern, we need to ensure we don't expose $$slots or $$events\n\t\t\t\t\tid.properties.splice(\n\t\t\t\t\t\tid.properties.length - 1,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tb.prop('init', b.id('$$slots'), slots_name),\n\t\t\t\t\t\tb.prop('init', b.id('$$events'), b.id('$$events'))\n\t\t\t\t\t);\n\t\t\t\t} else if (id.type === 'Identifier') {\n\t\t\t\t\t// If $props is referenced as an identifier, we need to ensure we don't expose $$slots or $$events as properties\n\t\t\t\t\t// on the identifier reference\n\t\t\t\t\tid = b.object_pattern([\n\t\t\t\t\t\tb.prop('init', b.id('$$slots'), slots_name),\n\t\t\t\t\t\tb.prop('init', b.id('$$events'), b.id('$$events')),\n\t\t\t\t\t\tb.rest(b.id(id.name))\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\tdeclarations.push(\n\t\t\t\t\tb.declarator(/** @type {Pattern} */ (context.visit(id)), b.id('$$props'))\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst args = /** @type {CallExpression} */ (init).arguments;\n\t\t\tconst value = args.length > 0 ? /** @type {Expression} */ (context.visit(args[0])) : b.void0;\n\n\t\t\tif (rune === '$derived.by') {\n\t\t\t\tdeclarations.push(\n\t\t\t\t\tb.declarator(/** @type {Pattern} */ (context.visit(declarator.id)), b.call(value))\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (declarator.id.type === 'Identifier') {\n\t\t\t\tdeclarations.push(b.declarator(declarator.id, value));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$derived') {\n\t\t\t\tdeclarations.push(\n\t\t\t\t\tb.declarator(/** @type {Pattern} */ (context.visit(declarator.id)), value)\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdeclarations.push(...create_state_declarators(declarator, context.state.scope, value));\n\t\t}\n\t} else {\n\t\tfor (const declarator of node.declarations) {\n\t\t\tconst bindings = /** @type {Binding[]} */ (context.state.scope.get_bindings(declarator));\n\t\t\tconst has_state = bindings.some((binding) => binding.kind === 'state');\n\t\t\tconst has_props = bindings.some((binding) => binding.kind === 'bindable_prop');\n\n\t\t\tif (!has_state && !has_props) {\n\t\t\t\tdeclarations.push(/** @type {VariableDeclarator} */ (context.visit(declarator)));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (has_props) {\n\t\t\t\tif (declarator.id.type !== 'Identifier') {\n\t\t\t\t\t// Turn export let into props. It's really really weird because export let { x: foo, z: [bar]} = ..\n\t\t\t\t\t// means that foo and bar are the props (i.e. the leafs are the prop names), not x and z.\n\t\t\t\t\tconst tmp = context.state.scope.generate('tmp');\n\t\t\t\t\tconst paths = extract_paths(declarator.id);\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\tb.declarator(\n\t\t\t\t\t\t\tb.id(tmp),\n\t\t\t\t\t\t\t/** @type {Expression} */ (context.visit(/** @type {Expression} */ (declarator.init)))\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tfor (const path of paths) {\n\t\t\t\t\t\tconst value = path.expression?.(b.id(tmp));\n\t\t\t\t\t\tconst name = /** @type {Identifier} */ (path.node).name;\n\t\t\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(name));\n\t\t\t\t\t\tconst prop = b.member(b.id('$$props'), b.literal(binding.prop_alias ?? name), true);\n\t\t\t\t\t\tdeclarations.push(b.declarator(path.node, build_fallback(prop, value)));\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(declarator.id.name));\n\t\t\t\tconst prop = b.member(\n\t\t\t\t\tb.id('$$props'),\n\t\t\t\t\tb.literal(binding.prop_alias ?? declarator.id.name),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\t/** @type {Expression} */\n\t\t\t\tlet init = prop;\n\t\t\t\tif (declarator.init) {\n\t\t\t\t\tconst default_value = /** @type {Expression} */ (context.visit(declarator.init));\n\t\t\t\t\tinit = build_fallback(prop, default_value);\n\t\t\t\t}\n\n\t\t\t\tdeclarations.push(b.declarator(declarator.id, init));\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdeclarations.push(\n\t\t\t\t...create_state_declarators(\n\t\t\t\t\tdeclarator,\n\t\t\t\t\tcontext.state.scope,\n\t\t\t\t\t/** @type {Expression} */ (declarator.init && context.visit(declarator.init))\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tif (declarations.length === 0) {\n\t\treturn b.empty;\n\t}\n\n\treturn {\n\t\t...node,\n\t\tdeclarations\n\t};\n}\n\n/**\n * @param {VariableDeclarator} declarator\n * @param {Scope} scope\n * @param {Expression} value\n * @returns {VariableDeclarator[]}\n */\nfunction create_state_declarators(declarator, scope, value) {\n\tif (declarator.id.type === 'Identifier') {\n\t\treturn [b.declarator(declarator.id, value)];\n\t}\n\n\tconst tmp = scope.generate('tmp');\n\tconst paths = extract_paths(declarator.id);\n\treturn [\n\t\tb.declarator(b.id(tmp), value), // TODO inject declarator for opts, so we can use it below\n\t\t...paths.map((path) => {\n\t\t\tconst value = path.expression?.(b.id(tmp));\n\t\t\treturn b.declarator(path.node, value);\n\t\t})\n\t];\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { BLOCK_CLOSE, BLOCK_OPEN } from '../../../../../internal/server/hydration.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.SvelteBoundary} node\n * @param {ComponentContext} context\n */\nexport function SvelteBoundary(node, context) {\n\tcontext.state.template.push(\n\t\tb.literal(BLOCK_OPEN),\n\t\t/** @type {BlockStatement} */ (context.visit(node.fragment)),\n\t\tb.literal(BLOCK_CLOSE)\n\t);\n}\n", "/** @import { Program, Property, Statement, VariableDeclarator } from 'estree' */\n/** @import { AST, ValidatedCompileOptions, ValidatedModuleCompileOptions } from '#compiler' */\n/** @import { ComponentServerTransformState, ComponentVisitors, ServerTransformState, Visitors } from './types.js' */\n/** @import { Analysis, ComponentAnalysis } from '../../types.js' */\nimport { walk } from 'zimmerframe';\nimport { set_scope } from '../../scope.js';\nimport { extract_identifiers } from '../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { dev, filename } from '../../../state.js';\nimport { render_stylesheet } from '../css/index.js';\nimport { AssignmentExpression } from './visitors/AssignmentExpression.js';\nimport { AwaitBlock } from './visitors/AwaitBlock.js';\nimport { CallExpression } from './visitors/CallExpression.js';\nimport { ClassBody } from './visitors/ClassBody.js';\nimport { Component } from './visitors/Component.js';\nimport { ConstTag } from './visitors/ConstTag.js';\nimport { DebugTag } from './visitors/DebugTag.js';\nimport { EachBlock } from './visitors/EachBlock.js';\nimport { ExpressionStatement } from './visitors/ExpressionStatement.js';\nimport { Fragment } from './visitors/Fragment.js';\nimport { HtmlTag } from './visitors/HtmlTag.js';\nimport { Identifier } from './visitors/Identifier.js';\nimport { IfBlock } from './visitors/IfBlock.js';\nimport { KeyBlock } from './visitors/KeyBlock.js';\nimport { LabeledStatement } from './visitors/LabeledStatement.js';\nimport { MemberExpression } from './visitors/MemberExpression.js';\nimport { PropertyDefinition } from './visitors/PropertyDefinition.js';\nimport { RegularElement } from './visitors/RegularElement.js';\nimport { RenderTag } from './visitors/RenderTag.js';\nimport { SlotElement } from './visitors/SlotElement.js';\nimport { SnippetBlock } from './visitors/SnippetBlock.js';\nimport { SpreadAttribute } from './visitors/SpreadAttribute.js';\nimport { SvelteComponent } from './visitors/SvelteComponent.js';\nimport { SvelteElement } from './visitors/SvelteElement.js';\nimport { SvelteFragment } from './visitors/SvelteFragment.js';\nimport { SvelteHead } from './visitors/SvelteHead.js';\nimport { SvelteSelf } from './visitors/SvelteSelf.js';\nimport { TitleElement } from './visitors/TitleElement.js';\nimport { UpdateExpression } from './visitors/UpdateExpression.js';\nimport { VariableDeclaration } from './visitors/VariableDeclaration.js';\nimport { SvelteBoundary } from './visitors/SvelteBoundary.js';\n\n/** @type {Visitors} */\nconst global_visitors = {\n\t_: set_scope,\n\tAssignmentExpression,\n\tCallExpression,\n\tClassBody,\n\tExpressionStatement,\n\tIdentifier,\n\tLabeledStatement,\n\tMemberExpression,\n\tPropertyDefinition,\n\tUpdateExpression,\n\tVariableDeclaration\n};\n\n/** @type {ComponentVisitors} */\nconst template_visitors = {\n\tAwaitBlock,\n\tComponent,\n\tConstTag,\n\tDebugTag,\n\tEachBlock,\n\tFragment,\n\tHtmlTag,\n\tIfBlock,\n\tKeyBlock,\n\tRegularElement,\n\tRenderTag,\n\tSlotElement,\n\tSnippetBlock,\n\tSpreadAttribute,\n\tSvelteComponent,\n\tSvelteElement,\n\tSvelteFragment,\n\tSvelteHead,\n\tSvelteSelf,\n\tTitleElement,\n\tSvelteBoundary\n};\n\n/**\n * @param {ComponentAnalysis} analysis\n * @param {ValidatedCompileOptions} options\n * @returns {Program}\n */\nexport function server_component(analysis, options) {\n\t/** @type {ComponentServerTransformState} */\n\tconst state = {\n\t\tanalysis,\n\t\toptions,\n\t\tscope: analysis.module.scope,\n\t\tscopes: analysis.module.scopes,\n\t\thoisted: [b.import_all('$', 'svelte/internal/server')],\n\t\tlegacy_reactive_statements: new Map(),\n\t\t// these are set inside the `Fragment` visitor, and cannot be used until then\n\t\tinit: /** @type {any} */ (null),\n\t\ttemplate: /** @type {any} */ (null),\n\t\tnamespace: options.namespace,\n\t\tpreserve_whitespace: options.preserveWhitespace,\n\t\tprivate_derived: new Map(),\n\t\tskip_hydration_boundaries: false\n\t};\n\n\tconst module = /** @type {Program} */ (\n\t\twalk(/** @type {AST.SvelteNode} */ (analysis.module.ast), state, global_visitors)\n\t);\n\n\tconst instance = /** @type {Program} */ (\n\t\twalk(\n\t\t\t/** @type {AST.SvelteNode} */ (analysis.instance.ast),\n\t\t\t{ ...state, scopes: analysis.instance.scopes },\n\t\t\t{\n\t\t\t\t...global_visitors,\n\t\t\t\tImportDeclaration(node) {\n\t\t\t\t\tstate.hoisted.push(node);\n\t\t\t\t\treturn b.empty;\n\t\t\t\t},\n\t\t\t\tExportNamedDeclaration(node, context) {\n\t\t\t\t\tif (node.declaration) {\n\t\t\t\t\t\treturn context.visit(node.declaration);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn b.empty;\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t);\n\n\tconst template = /** @type {Program} */ (\n\t\twalk(\n\t\t\t/** @type {AST.SvelteNode} */ (analysis.template.ast),\n\t\t\t{ ...state, scopes: analysis.template.scopes },\n\t\t\t// @ts-expect-error don't know, don't care\n\t\t\t{ ...global_visitors, ...template_visitors }\n\t\t)\n\t);\n\n\t/** @type {VariableDeclarator[]} */\n\tconst legacy_reactive_declarations = [];\n\n\tfor (const [node] of analysis.reactive_statements) {\n\t\tconst statement = [...state.legacy_reactive_statements].find(([n]) => n === node);\n\t\tif (statement === undefined) {\n\t\t\tthrow new Error('Could not find reactive statement');\n\t\t}\n\n\t\tif (\n\t\t\tnode.body.type === 'ExpressionStatement' &&\n\t\t\tnode.body.expression.type === 'AssignmentExpression'\n\t\t) {\n\t\t\tfor (const id of extract_identifiers(node.body.expression.left)) {\n\t\t\t\tconst binding = analysis.instance.scope.get(id.name);\n\t\t\t\tif (binding?.kind === 'legacy_reactive') {\n\t\t\t\t\tlegacy_reactive_declarations.push(b.declarator(id));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinstance.body.push(statement[1]);\n\t}\n\n\tif (legacy_reactive_declarations.length > 0) {\n\t\tinstance.body.unshift({\n\t\t\ttype: 'VariableDeclaration',\n\t\t\tkind: 'let',\n\t\t\tdeclarations: legacy_reactive_declarations\n\t\t});\n\t}\n\n\t// If the component binds to a child, we need to put the template in a loop and repeat until legacy bindings are stable.\n\t// We can remove this once the legacy syntax is gone.\n\tif (analysis.uses_component_bindings) {\n\t\tconst snippets = template.body.filter(\n\t\t\t// @ts-expect-error\n\t\t\t(node) => node.type === 'FunctionDeclaration' && node.___snippet\n\t\t);\n\n\t\tconst rest = template.body.filter(\n\t\t\t// @ts-expect-error\n\t\t\t(node) => node.type !== 'FunctionDeclaration' || !node.___snippet\n\t\t);\n\n\t\ttemplate.body = [\n\t\t\t...snippets,\n\t\t\tb.let('$$settled', b.true),\n\t\t\tb.let('$$inner_payload'),\n\t\t\tb.function_declaration(\n\t\t\t\tb.id('$$render_inner'),\n\t\t\t\t[b.id('$$payload')],\n\t\t\t\tb.block(/** @type {Statement[]} */ (rest))\n\t\t\t),\n\t\t\tb.do_while(\n\t\t\t\tb.unary('!', b.id('$$settled')),\n\t\t\t\tb.block([\n\t\t\t\t\tb.stmt(b.assignment('=', b.id('$$settled'), b.true)),\n\t\t\t\t\tb.stmt(\n\t\t\t\t\t\tb.assignment('=', b.id('$$inner_payload'), b.call('$.copy_payload', b.id('$$payload')))\n\t\t\t\t\t),\n\t\t\t\t\tb.stmt(b.call('$$render_inner', b.id('$$inner_payload')))\n\t\t\t\t])\n\t\t\t),\n\t\t\tb.stmt(b.call('$.assign_payload', b.id('$$payload'), b.id('$$inner_payload')))\n\t\t];\n\t}\n\n\tif (\n\t\t[...analysis.instance.scope.declarations.values()].some(\n\t\t\t(binding) => binding.kind === 'store_sub'\n\t\t)\n\t) {\n\t\tinstance.body.unshift(b.var('$$store_subs'));\n\t\ttemplate.body.push(\n\t\t\tb.if(b.id('$$store_subs'), b.stmt(b.call('$.unsubscribe_stores', b.id('$$store_subs'))))\n\t\t);\n\t}\n\n\t// Propagate values of bound props upwards if they're undefined in the parent and have a value.\n\t// Don't do this as part of the props retrieval because people could eagerly mutate the prop in the instance script.\n\t/** @type {Property[]} */\n\tconst props = [];\n\n\tfor (const [name, binding] of analysis.instance.scope.declarations) {\n\t\tif (binding.kind === 'bindable_prop' && !name.startsWith('$$')) {\n\t\t\tprops.push(b.init(binding.prop_alias ?? name, b.id(name)));\n\t\t}\n\t}\n\n\tfor (const { name, alias } of analysis.exports) {\n\t\tprops.push(b.init(alias ?? name, b.id(name)));\n\t}\n\n\tif (props.length > 0) {\n\t\t// This has no effect in runes mode other than throwing an error when someone passes\n\t\t// undefined to a binding that has a default value.\n\t\ttemplate.body.push(b.stmt(b.call('$.bind_props', b.id('$$props'), b.object(props))));\n\t}\n\n\tconst component_block = b.block([\n\t\t.../** @type {Statement[]} */ (instance.body),\n\t\t.../** @type {Statement[]} */ (template.body)\n\t]);\n\n\tif (analysis.props_id) {\n\t\t// need to be placed on first line of the component for hydration\n\t\tcomponent_block.body.unshift(\n\t\t\tb.const(analysis.props_id, b.call('$.props_id', b.id('$$payload')))\n\t\t);\n\t}\n\n\tlet should_inject_context = dev || analysis.needs_context;\n\n\tif (should_inject_context) {\n\t\tcomponent_block.body.unshift(b.stmt(b.call('$.push', dev && b.id(analysis.name))));\n\t\tcomponent_block.body.push(b.stmt(b.call('$.pop')));\n\t}\n\n\tif (analysis.uses_rest_props) {\n\t\t/** @type {string[]} */\n\t\tconst named_props = analysis.exports.map(({ name, alias }) => alias ?? name);\n\t\tfor (const [name, binding] of analysis.instance.scope.declarations) {\n\t\t\tif (binding.kind === 'bindable_prop') named_props.push(binding.prop_alias ?? name);\n\t\t}\n\n\t\tcomponent_block.body.unshift(\n\t\t\tb.const(\n\t\t\t\t'$$restProps',\n\t\t\t\tb.call(\n\t\t\t\t\t'$.rest_props',\n\t\t\t\t\tb.id('$$sanitized_props'),\n\t\t\t\t\tb.array(named_props.map((name) => b.literal(name)))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tif (analysis.uses_props || analysis.uses_rest_props) {\n\t\tcomponent_block.body.unshift(\n\t\t\tb.const('$$sanitized_props', b.call('$.sanitize_props', b.id('$$props')))\n\t\t);\n\t}\n\n\tif (analysis.uses_slots) {\n\t\tcomponent_block.body.unshift(b.const('$$slots', b.call('$.sanitize_slots', b.id('$$props'))));\n\t}\n\n\tconst body = [...state.hoisted, ...module.body];\n\n\tif (analysis.css.ast !== null && options.css === 'injected' && !options.customElement) {\n\t\tconst hash = b.literal(analysis.css.hash);\n\t\tconst code = b.literal(render_stylesheet(analysis.source, analysis, options).code);\n\n\t\tbody.push(b.const('$$css', b.object([b.init('hash', hash), b.init('code', code)])));\n\t\tcomponent_block.body.unshift(b.stmt(b.call('$$payload.css.add', b.id('$$css'))));\n\t}\n\n\tlet should_inject_props =\n\t\tshould_inject_context ||\n\t\tprops.length > 0 ||\n\t\tanalysis.needs_props ||\n\t\tanalysis.uses_props ||\n\t\tanalysis.uses_rest_props ||\n\t\tanalysis.uses_slots ||\n\t\tanalysis.slot_names.size > 0;\n\n\tconst component_function = b.function_declaration(\n\t\tb.id(analysis.name),\n\t\tshould_inject_props ? [b.id('$$payload'), b.id('$$props')] : [b.id('$$payload')],\n\t\tcomponent_block\n\t);\n\n\tif (options.compatibility.componentApi === 4) {\n\t\tbody.unshift(b.imports([['render', '$$_render']], 'svelte/server'));\n\t\tbody.push(\n\t\t\tcomponent_function,\n\t\t\tb.stmt(\n\t\t\t\tb.assignment(\n\t\t\t\t\t'=',\n\t\t\t\t\tb.member_id(`${analysis.name}.render`),\n\t\t\t\t\tb.function(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t[b.id('$$props'), b.id('$$opts')],\n\t\t\t\t\t\tb.block([\n\t\t\t\t\t\t\tb.return(\n\t\t\t\t\t\t\t\tb.call(\n\t\t\t\t\t\t\t\t\t'$$_render',\n\t\t\t\t\t\t\t\t\tb.id(analysis.name),\n\t\t\t\t\t\t\t\t\tb.object([\n\t\t\t\t\t\t\t\t\t\tb.init('props', b.id('$$props')),\n\t\t\t\t\t\t\t\t\t\tb.init('context', b.member(b.id('$$opts'), 'context', false, true))\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t])\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tb.export_default(b.id(analysis.name))\n\t\t);\n\t} else if (dev) {\n\t\tbody.push(\n\t\t\tcomponent_function,\n\t\t\tb.stmt(\n\t\t\t\tb.assignment(\n\t\t\t\t\t'=',\n\t\t\t\t\tb.member_id(`${analysis.name}.render`),\n\t\t\t\t\tb.function(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tb.block([\n\t\t\t\t\t\t\tb.throw_error(\n\t\t\t\t\t\t\t\t`Component.render(...) is no longer valid in Svelte 5. ` +\n\t\t\t\t\t\t\t\t\t'See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t])\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tb.export_default(b.id(analysis.name))\n\t\t);\n\t} else {\n\t\tbody.push(b.export_default(component_function));\n\t}\n\n\tif (dev) {\n\t\t// add `App[$.FILENAME] = 'App.svelte'` so that we can print useful messages later\n\t\tbody.unshift(\n\t\t\tb.stmt(\n\t\t\t\tb.assignment('=', b.member(b.id(analysis.name), '$.FILENAME', true), b.literal(filename))\n\t\t\t)\n\t\t);\n\t}\n\n\treturn {\n\t\ttype: 'Program',\n\t\tsourceType: 'module',\n\t\tbody\n\t};\n}\n\n/**\n * @param {Analysis} analysis\n * @param {ValidatedModuleCompileOptions} options\n * @returns {Program}\n */\nexport function server_module(analysis, options) {\n\t/** @type {ServerTransformState} */\n\tconst state = {\n\t\tanalysis,\n\t\toptions,\n\t\tscope: analysis.module.scope,\n\t\tscopes: analysis.module.scopes,\n\t\t// this is an anomaly — it can only be used in components, but it needs\n\t\t// to be present for `javascript_visitors_legacy` and so is included in module\n\t\t// transform state as well as component transform state\n\t\tlegacy_reactive_statements: new Map(),\n\t\tprivate_derived: new Map()\n\t};\n\n\tconst module = /** @type {Program} */ (\n\t\twalk(/** @type {AST.SvelteNode} */ (analysis.module.ast), state, global_visitors)\n\t);\n\n\treturn {\n\t\ttype: 'Program',\n\t\tsourceType: 'module',\n\t\tbody: [b.import_all('$', 'svelte/internal/server'), ...module.body]\n\t};\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { parse_directive_name } from './shared/utils.js';\n\n/**\n * @param {AST.AnimateDirective} node\n * @param {ComponentContext} context\n */\nexport function AnimateDirective(node, context) {\n\tconst expression =\n\t\tnode.expression === null\n\t\t\t? b.null\n\t\t\t: b.thunk(/** @type {Expression} */ (context.visit(node.expression)));\n\n\t// in after_update to ensure it always happens after bind:this\n\tcontext.state.after_update.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.animation',\n\t\t\t\tcontext.state.node,\n\t\t\t\tb.thunk(/** @type {Expression} */ (context.visit(parse_directive_name(node.name)))),\n\t\t\t\texpression\n\t\t\t)\n\t\t)\n\t);\n}\n", "/** @import { ArrowFunctionExpression, FunctionExpression, Node } from 'estree' */\n/** @import { ComponentContext } from '../../types' */\nimport { build_hoisted_params } from '../../utils.js';\n\n/**\n * @param {ArrowFunctionExpression | FunctionExpression} node\n * @param {ComponentContext} context\n */\nexport const visit_function = (node, context) => {\n\tconst metadata = node.metadata;\n\n\tlet state = { ...context.state, in_constructor: false };\n\n\tif (node.type === 'FunctionExpression') {\n\t\tconst parent = /** @type {Node} */ (context.path.at(-1));\n\t\tstate.in_constructor = parent.type === 'MethodDefinition' && parent.kind === 'constructor';\n\t}\n\n\tif (metadata?.hoisted === true) {\n\t\tconst params = build_hoisted_params(node, context);\n\n\t\treturn /** @type {FunctionExpression} */ ({\n\t\t\t...node,\n\t\t\tparams,\n\t\t\tbody: context.visit(node.body, state)\n\t\t});\n\t}\n\n\tcontext.next(state);\n};\n", "/** @import { ArrowFunctionExpression } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { visit_function } from './shared/function.js';\n\n/**\n * @param {ArrowFunctionExpression} node\n * @param {ComponentContext} context\n */\nexport function ArrowFunctionExpression(node, context) {\n\treturn visit_function(node, context);\n}\n", "/** @import { AssignmentExpression, AssignmentOperator, Expression, Identifier, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { Context } from '../types.js' */\nimport * as b from '#compiler/builders';\nimport {\n\tbuild_assignment_value,\n\tget_attribute_expression,\n\tis_event_attribute\n} from '../../../../utils/ast.js';\nimport { dev, locate_node } from '../../../../state.js';\nimport { should_proxy } from '../utils.js';\nimport { visit_assignment_expression } from '../../shared/assignments.js';\nimport { validate_mutation } from './shared/utils.js';\n\n/**\n * @param {AssignmentExpression} node\n * @param {Context} context\n */\nexport function AssignmentExpression(node, context) {\n\tconst expression = /** @type {Expression} */ (\n\t\tvisit_assignment_expression(node, context, build_assignment) ?? context.next()\n\t);\n\n\treturn validate_mutation(node, context, expression);\n}\n\n/**\n * Determines whether the value will be coerced on assignment (as with e.g. `+=`).\n * If not, we may need to proxify the value, or warn that the value will not be\n * proxified in time\n * @param {AssignmentOperator} operator\n */\nfunction is_non_coercive_operator(operator) {\n\treturn ['=', '||=', '&&=', '??='].includes(operator);\n}\n\n/** @type {Record<string, string>} */\nconst callees = {\n\t'=': '$.assign',\n\t'&&=': '$.assign_and',\n\t'||=': '$.assign_or',\n\t'??=': '$.assign_nullish'\n};\n\n/**\n * @param {AssignmentOperator} operator\n * @param {Pattern} left\n * @param {Expression} right\n * @param {Context} context\n * @returns {Expression | null}\n */\nfunction build_assignment(operator, left, right, context) {\n\t// Handle class private/public state assignment cases\n\tif (\n\t\tcontext.state.analysis.runes &&\n\t\tleft.type === 'MemberExpression' &&\n\t\tleft.property.type === 'PrivateIdentifier'\n\t) {\n\t\tconst private_state = context.state.private_state.get(left.property.name);\n\n\t\tif (private_state !== undefined) {\n\t\t\tlet value = /** @type {Expression} */ (\n\t\t\t\tcontext.visit(build_assignment_value(operator, left, right))\n\t\t\t);\n\n\t\t\tconst needs_proxy =\n\t\t\t\tprivate_state.kind === 'state' &&\n\t\t\t\tis_non_coercive_operator(operator) &&\n\t\t\t\tshould_proxy(value, context.state.scope);\n\n\t\t\treturn b.call('$.set', left, value, needs_proxy && b.true);\n\t\t}\n\t}\n\n\tlet object = left;\n\n\twhile (object.type === 'MemberExpression') {\n\t\t// @ts-expect-error\n\t\tobject = object.object;\n\t}\n\n\tif (object.type !== 'Identifier') {\n\t\treturn null;\n\t}\n\n\tconst binding = context.state.scope.get(object.name);\n\tif (!binding) return null;\n\n\tconst transform = Object.hasOwn(context.state.transform, object.name)\n\t\t? context.state.transform[object.name]\n\t\t: null;\n\n\tconst path = context.path.map((node) => node.type);\n\n\t// reassignment\n\tif (object === left && transform?.assign) {\n\t\t// special case — if an element binding, we know it's a primitive\n\n\t\tconst is_primitive = path.at(-1) === 'BindDirective' && path.at(-2) === 'RegularElement';\n\n\t\tlet value = /** @type {Expression} */ (\n\t\t\tcontext.visit(build_assignment_value(operator, left, right))\n\t\t);\n\n\t\treturn transform.assign(\n\t\t\tobject,\n\t\t\tvalue,\n\t\t\t!is_primitive &&\n\t\t\t\tbinding.kind !== 'prop' &&\n\t\t\t\tbinding.kind !== 'bindable_prop' &&\n\t\t\t\tbinding.kind !== 'raw_state' &&\n\t\t\t\tbinding.kind !== 'store_sub' &&\n\t\t\t\tcontext.state.analysis.runes &&\n\t\t\t\tshould_proxy(right, context.state.scope) &&\n\t\t\t\tis_non_coercive_operator(operator)\n\t\t);\n\t}\n\n\t// mutation\n\tif (transform?.mutate) {\n\t\treturn transform.mutate(\n\t\t\tobject,\n\t\t\tb.assignment(\n\t\t\t\toperator,\n\t\t\t\t/** @type {Pattern} */ (context.visit(left)),\n\t\t\t\t/** @type {Expression} */ (context.visit(right))\n\t\t\t)\n\t\t);\n\t}\n\n\t// in cases like `(object.items ??= []).push(value)`, we may need to warn\n\t// if the value gets proxified, since the proxy _isn't_ the thing that\n\t// will be pushed to. we do this by transforming it to something like\n\t// `$.assign_nullish(object, 'items', [])`\n\tlet should_transform =\n\t\tdev && path.at(-1) !== 'ExpressionStatement' && is_non_coercive_operator(operator);\n\n\t// special case — ignore `onclick={() => (...)}`\n\tif (\n\t\tpath.at(-1) === 'ArrowFunctionExpression' &&\n\t\t(path.at(-2) === 'RegularElement' || path.at(-2) === 'SvelteElement')\n\t) {\n\t\tconst element = /** @type {AST.RegularElement} */ (context.path.at(-2));\n\n\t\tconst attribute = element.attributes.find((attribute) => {\n\t\t\tif (attribute.type !== 'Attribute' || !is_event_attribute(attribute)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst expression = get_attribute_expression(attribute);\n\n\t\t\treturn expression === context.path.at(-1);\n\t\t});\n\n\t\tif (attribute) {\n\t\t\tshould_transform = false;\n\t\t}\n\t}\n\n\t// special case — ignore `bind:prop={getter, (v) => (...)}` / `bind:value={x.y}`\n\tif (\n\t\tpath.at(-1) === 'BindDirective' ||\n\t\tpath.at(-1) === 'Component' ||\n\t\tpath.at(-1) === 'SvelteComponent' ||\n\t\t(path.at(-1) === 'ArrowFunctionExpression' &&\n\t\t\tpath.at(-2) === 'SequenceExpression' &&\n\t\t\t(path.at(-3) === 'Component' ||\n\t\t\t\tpath.at(-3) === 'SvelteComponent' ||\n\t\t\t\tpath.at(-3) === 'BindDirective'))\n\t) {\n\t\tshould_transform = false;\n\t}\n\n\tif (left.type === 'MemberExpression' && should_transform) {\n\t\tconst callee = callees[operator];\n\n\t\treturn /** @type {Expression} */ (\n\t\t\tcontext.visit(\n\t\t\t\tb.call(\n\t\t\t\t\tcallee,\n\t\t\t\t\t/** @type {Expression} */ (left.object),\n\t\t\t\t\t/** @type {Expression} */ (\n\t\t\t\t\t\tleft.computed\n\t\t\t\t\t\t\t? left.property\n\t\t\t\t\t\t\t: b.literal(/** @type {Identifier} */ (left.property).name)\n\t\t\t\t\t),\n\t\t\t\t\tright,\n\t\t\t\t\tb.literal(locate_node(left))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\treturn null;\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST, ExpressionMetadata } from '#compiler' */\n/** @import { ComponentContext } from '../../types' */\nimport { is_capture_event, is_passive_event } from '../../../../../../utils.js';\nimport { dev, locator } from '../../../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.Attribute} node\n * @param {ComponentContext} context\n */\nexport function visit_event_attribute(node, context) {\n\tlet capture = false;\n\n\tlet event_name = node.name.slice(2);\n\tif (is_capture_event(event_name)) {\n\t\tevent_name = event_name.slice(0, -7);\n\t\tcapture = true;\n\t}\n\n\t// we still need to support the weird `onclick=\"{() => {...}}\" form\n\tconst tag = Array.isArray(node.value)\n\t\t? /** @type {AST.ExpressionTag} */ (node.value[0])\n\t\t: /** @type {AST.ExpressionTag} */ (node.value);\n\n\tlet handler = build_event_handler(tag.expression, tag.metadata.expression, context);\n\n\tif (node.metadata.delegated) {\n\t\tlet delegated_assignment;\n\n\t\tif (!context.state.events.has(event_name)) {\n\t\t\tcontext.state.events.add(event_name);\n\t\t}\n\n\t\t// Hoist function if we can, otherwise we leave the function as is\n\t\tif (node.metadata.delegated.hoisted) {\n\t\t\tif (node.metadata.delegated.function === tag.expression) {\n\t\t\t\tconst func_name = context.state.scope.root.unique('on_' + event_name);\n\t\t\t\tcontext.state.hoisted.push(b.var(func_name, handler));\n\t\t\t\thandler = func_name;\n\t\t\t}\n\n\t\t\tconst hoisted_params = /** @type {Expression[]} */ (\n\t\t\t\tnode.metadata.delegated.function.metadata.hoisted_params\n\t\t\t);\n\n\t\t\t// When we hoist a function we assign an array with the function and all\n\t\t\t// hoisted closure params.\n\t\t\tif (hoisted_params) {\n\t\t\t\tconst args = [handler, ...hoisted_params];\n\t\t\t\tdelegated_assignment = b.array(args);\n\t\t\t} else {\n\t\t\t\tdelegated_assignment = handler;\n\t\t\t}\n\t\t} else {\n\t\t\tdelegated_assignment = handler;\n\t\t}\n\n\t\tcontext.state.init.push(\n\t\t\tb.stmt(\n\t\t\t\tb.assignment('=', b.member(context.state.node, '__' + event_name), delegated_assignment)\n\t\t\t)\n\t\t);\n\t} else {\n\t\tconst statement = b.stmt(\n\t\t\tbuild_event(\n\t\t\t\tevent_name,\n\t\t\t\tcontext.state.node,\n\t\t\t\thandler,\n\t\t\t\tcapture,\n\t\t\t\tis_passive_event(event_name) ? true : undefined\n\t\t\t)\n\t\t);\n\n\t\tconst type = /** @type {AST.SvelteNode} */ (context.path.at(-1)).type;\n\n\t\tif (type === 'SvelteDocument' || type === 'SvelteWindow' || type === 'SvelteBody') {\n\t\t\t// These nodes are above the component tree, and its events should run parent first\n\t\t\tcontext.state.init.push(statement);\n\t\t} else {\n\t\t\tcontext.state.after_update.push(statement);\n\t\t}\n\t}\n}\n\n/**\n * Creates a `$.event(...)` call for non-delegated event handlers\n * @param {string} event_name\n * @param {Expression} node\n * @param {Expression} handler\n * @param {boolean} capture\n * @param {boolean | undefined} passive\n */\nexport function build_event(event_name, node, handler, capture, passive) {\n\treturn b.call(\n\t\t'$.event',\n\t\tb.literal(event_name),\n\t\tnode,\n\t\thandler,\n\t\tcapture && b.true,\n\t\tpassive === undefined ? undefined : b.literal(passive)\n\t);\n}\n\n/**\n * Creates an event handler\n * @param {Expression | null} node\n * @param {ExpressionMetadata} metadata\n * @param {ComponentContext} context\n * @returns {Expression}\n */\nexport function build_event_handler(node, metadata, context) {\n\tif (node === null) {\n\t\t// bubble event\n\t\treturn b.function(\n\t\t\tnull,\n\t\t\t[b.id('$$arg')],\n\t\t\tb.block([b.stmt(b.call('$.bubble_event.call', b.this, b.id('$$props'), b.id('$$arg')))])\n\t\t);\n\t}\n\n\tlet handler = /** @type {Expression} */ (context.visit(node));\n\n\t// inline handler\n\tif (handler.type === 'ArrowFunctionExpression' || handler.type === 'FunctionExpression') {\n\t\treturn handler;\n\t}\n\n\t// function declared in the script\n\tif (handler.type === 'Identifier') {\n\t\tconst binding = context.state.scope.get(handler.name);\n\n\t\tif (binding?.is_function()) {\n\t\t\treturn handler;\n\t\t}\n\n\t\t// local variable can be assigned directly\n\t\t// except in dev mode where when need $.apply()\n\t\t// in order to handle warnings.\n\t\tif (!dev && binding?.declaration_kind !== 'import') {\n\t\t\treturn handler;\n\t\t}\n\t}\n\n\tif (metadata.has_call) {\n\t\t// memoize where necessary\n\t\tconst id = b.id(context.state.scope.generate('event_handler'));\n\n\t\tcontext.state.init.push(b.var(id, b.call('$.derived', b.thunk(handler))));\n\t\thandler = b.call('$.get', id);\n\t}\n\n\t// wrap the handler in a function, so the expression is re-evaluated for each event\n\tlet call = b.call(b.member(handler, 'apply', false, true), b.this, b.id('$$args'));\n\n\tif (dev) {\n\t\tconst loc = locator(/** @type {number} */ (node.start));\n\n\t\tconst remove_parens =\n\t\t\tnode.type === 'CallExpression' &&\n\t\t\tnode.arguments.length === 0 &&\n\t\t\tnode.callee.type === 'Identifier';\n\n\t\tcall = b.call(\n\t\t\t'$.apply',\n\t\t\tb.thunk(handler),\n\t\t\tb.this,\n\t\t\tb.id('$$args'),\n\t\t\tb.id(context.state.analysis.name),\n\t\t\tloc && b.array([b.literal(loc.line), b.literal(loc.column)]),\n\t\t\thas_side_effects(node) && b.true,\n\t\t\tremove_parens && b.true\n\t\t);\n\t}\n\n\treturn b.function(null, [b.rest(b.id('$$args'))], b.block([b.stmt(call)]));\n}\n\n/**\n * @param {Expression} node\n */\nfunction has_side_effects(node) {\n\tif (\n\t\tnode.type === 'CallExpression' ||\n\t\tnode.type === 'NewExpression' ||\n\t\tnode.type === 'AssignmentExpression' ||\n\t\tnode.type === 'UpdateExpression'\n\t) {\n\t\treturn true;\n\t}\n\n\tif (node.type === 'SequenceExpression') {\n\t\treturn node.expressions.some(has_side_effects);\n\t}\n\n\treturn false;\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { is_event_attribute } from '../../../../utils/ast.js';\nimport { visit_event_attribute } from './shared/events.js';\n\n/**\n * @param {AST.Attribute} node\n * @param {ComponentContext} context\n */\nexport function Attribute(node, context) {\n\tif (is_event_attribute(node)) {\n\t\tvisit_event_attribute(node, context);\n\t}\n}\n", "/** @import { Identifier } from 'estree' */\n/** @import { ComponentContext, Context } from '../../types' */\nimport { is_state_source } from '../../utils.js';\nimport * as b from '#compiler/builders';\n\n/**\n * Turns `foo` into `$.get(foo)`\n * @param {Identifier} node\n */\nexport function get_value(node) {\n\treturn b.call('$.get', node);\n}\n\n/**\n *\n * @param {Context | ComponentContext} context\n */\nexport function add_state_transformers(context) {\n\tfor (const [name, binding] of context.state.scope.declarations) {\n\t\tif (\n\t\t\tis_state_source(binding, context.state.analysis) ||\n\t\t\tbinding.kind === 'derived' ||\n\t\t\tbinding.kind === 'legacy_reactive'\n\t\t) {\n\t\t\tcontext.state.transform[name] = {\n\t\t\t\tread: binding.declaration_kind === 'var' ? (node) => b.call('$.safe_get', node) : get_value,\n\t\t\t\tassign: (node, value, proxy = false) => {\n\t\t\t\t\tlet call = b.call('$.set', node, value, proxy && b.true);\n\n\t\t\t\t\tif (context.state.scope.get(`$${node.name}`)?.kind === 'store_sub') {\n\t\t\t\t\t\tcall = b.call('$.store_unsub', call, b.literal(`$${node.name}`), b.id('$$stores'));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn call;\n\t\t\t\t},\n\t\t\t\tmutate: (node, mutation) => {\n\t\t\t\t\tif (context.state.analysis.runes) {\n\t\t\t\t\t\treturn mutation;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn b.call('$.mutate', node, mutation);\n\t\t\t\t},\n\t\t\t\tupdate: (node) => {\n\t\t\t\t\treturn b.call(\n\t\t\t\t\t\tnode.prefix ? '$.update_pre' : '$.update',\n\t\t\t\t\t\tnode.argument,\n\t\t\t\t\t\tnode.operator === '--' && b.literal(-1)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n}\n", "/** @import { BlockStatement, Expression, Pattern, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentClientTransformState, ComponentContext } from '../types' */\nimport { extract_identifiers } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { create_derived } from '../utils.js';\nimport { get_value } from './shared/declarations.js';\n\n/**\n * @param {AST.AwaitBlock} node\n * @param {ComponentContext} context\n */\nexport function AwaitBlock(node, context) {\n\tcontext.state.template.push('<!>');\n\n\t// Visit {#await <expression>} first to ensure that scopes are in the correct order\n\tconst expression = b.thunk(/** @type {Expression} */ (context.visit(node.expression)));\n\n\tlet then_block;\n\tlet catch_block;\n\n\tif (node.then) {\n\t\tconst then_context = {\n\t\t\t...context,\n\t\t\tstate: { ...context.state, transform: { ...context.state.transform } }\n\t\t};\n\t\tconst argument = node.value && create_derived_block_argument(node.value, then_context);\n\n\t\t/** @type {Pattern[]} */\n\t\tconst args = [b.id('$$anchor')];\n\t\tif (argument) args.push(argument.id);\n\n\t\tconst declarations = argument?.declarations ?? [];\n\t\tconst block = /** @type {BlockStatement} */ (then_context.visit(node.then, then_context.state));\n\n\t\tthen_block = b.arrow(args, b.block([...declarations, ...block.body]));\n\t}\n\n\tif (node.catch) {\n\t\tconst catch_context = { ...context, state: { ...context.state } };\n\t\tconst argument = node.error && create_derived_block_argument(node.error, catch_context);\n\n\t\t/** @type {Pattern[]} */\n\t\tconst args = [b.id('$$anchor')];\n\t\tif (argument) args.push(argument.id);\n\n\t\tconst declarations = argument?.declarations ?? [];\n\t\tconst block = /** @type {BlockStatement} */ (\n\t\t\tcatch_context.visit(node.catch, catch_context.state)\n\t\t);\n\n\t\tcatch_block = b.arrow(args, b.block([...declarations, ...block.body]));\n\t}\n\n\tcontext.state.init.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.await',\n\t\t\t\tcontext.state.node,\n\t\t\t\texpression,\n\t\t\t\tnode.pending\n\t\t\t\t\t? b.arrow([b.id('$$anchor')], /** @type {BlockStatement} */ (context.visit(node.pending)))\n\t\t\t\t\t: b.null,\n\t\t\t\tthen_block,\n\t\t\t\tcatch_block\n\t\t\t)\n\t\t)\n\t);\n}\n\n/**\n * @param {Pattern} node\n * @param {import('zimmerframe').Context<AST.SvelteNode, ComponentClientTransformState>} context\n * @returns {{ id: Pattern, declarations: null | Statement[] }}\n */\nfunction create_derived_block_argument(node, context) {\n\tif (node.type === 'Identifier') {\n\t\tcontext.state.transform[node.name] = { read: get_value };\n\t\treturn { id: node, declarations: null };\n\t}\n\n\tconst pattern = /** @type {Pattern} */ (context.visit(node));\n\tconst identifiers = extract_identifiers(node);\n\n\tconst id = b.id('$$source');\n\tconst value = b.id('$$value');\n\n\tconst block = b.block([\n\t\tb.var(pattern, b.call('$.get', id)),\n\t\tb.return(b.object(identifiers.map((identifier) => b.prop('init', identifier, identifier))))\n\t]);\n\n\tconst declarations = [b.var(value, create_derived(context.state, b.thunk(block)))];\n\n\tfor (const id of identifiers) {\n\t\tcontext.state.transform[id.name] = { read: get_value };\n\n\t\tdeclarations.push(\n\t\t\tb.var(id, create_derived(context.state, b.thunk(b.member(b.call('$.get', value), id))))\n\t\t);\n\t}\n\n\treturn { id, declarations };\n}\n", "/** @import { Expression, BinaryExpression } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { dev } from '../../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {BinaryExpression} node\n * @param {ComponentContext} context\n */\nexport function BinaryExpression(node, context) {\n\tif (dev) {\n\t\tconst operator = node.operator;\n\n\t\tif (operator === '===' || operator === '!==') {\n\t\t\treturn b.call(\n\t\t\t\t'$.strict_equals',\n\t\t\t\t/** @type {Expression} */ (context.visit(node.left)),\n\t\t\t\t/** @type {Expression} */ (context.visit(node.right)),\n\t\t\t\toperator === '!==' && b.false\n\t\t\t);\n\t\t}\n\n\t\tif (operator === '==' || operator === '!=') {\n\t\t\treturn b.call(\n\t\t\t\t'$.equals',\n\t\t\t\t/** @type {Expression} */ (context.visit(node.left)),\n\t\t\t\t/** @type {Expression} */ (context.visit(node.right)),\n\t\t\t\toperator === '!=' && b.false\n\t\t\t);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../../types' */\nimport { cannot_be_set_statically } from '../../../../../../utils.js';\nimport { is_event_attribute, is_text_attribute } from '../../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { is_custom_element_node } from '../../../../nodes.js';\nimport { build_template_chunk } from './utils.js';\n\n/**\n * Processes an array of template nodes, joining sibling text/expression nodes\n * (e.g. `{a} b {c}`) into a single update function. Along the way it creates\n * corresponding template node references these updates are applied to.\n * @param {AST.SvelteNode[]} nodes\n * @param {(is_text: boolean) => Expression} initial\n * @param {boolean} is_element\n * @param {ComponentContext} context\n */\nexport function process_children(nodes, initial, is_element, { visit, state }) {\n\tconst within_bound_contenteditable = state.metadata.bound_contenteditable;\n\tlet prev = initial;\n\tlet skipped = 0;\n\n\t/** @typedef {Array<AST.Text | AST.ExpressionTag>} Sequence */\n\t/** @type {Sequence} */\n\tlet sequence = [];\n\n\t/** @param {boolean} is_text */\n\tfunction get_node(is_text) {\n\t\tif (skipped === 0) {\n\t\t\treturn prev(is_text);\n\t\t}\n\n\t\treturn b.call(\n\t\t\t'$.sibling',\n\t\t\tprev(false),\n\t\t\t(is_text || skipped !== 1) && b.literal(skipped),\n\t\t\tis_text && b.true\n\t\t);\n\t}\n\n\t/**\n\t * @param {boolean} is_text\n\t * @param {string} name\n\t */\n\tfunction flush_node(is_text, name) {\n\t\tconst expression = get_node(is_text);\n\t\tlet id = expression;\n\n\t\tif (id.type !== 'Identifier') {\n\t\t\tid = b.id(state.scope.generate(name));\n\t\t\tstate.init.push(b.var(id, expression));\n\t\t}\n\n\t\tprev = () => id;\n\t\tskipped = 1; // the next node is `$.sibling(id)`\n\n\t\treturn id;\n\t}\n\n\t/**\n\t * @param {Sequence} sequence\n\t */\n\tfunction flush_sequence(sequence) {\n\t\tif (sequence.every((node) => node.type === 'Text')) {\n\t\t\tskipped += 1;\n\t\t\tstate.template.push(sequence.map((node) => node.raw).join(''));\n\t\t\treturn;\n\t\t}\n\n\t\tstate.template.push(' ');\n\n\t\tconst { has_state, value } = build_template_chunk(sequence, visit, state);\n\n\t\t// if this is a standalone `{expression}`, make sure we handle the case where\n\t\t// no text node was created because the expression was empty during SSR\n\t\tconst is_text = sequence.length === 1;\n\t\tconst id = flush_node(is_text, 'text');\n\n\t\tconst update = b.stmt(b.call('$.set_text', id, value));\n\n\t\tif (has_state && !within_bound_contenteditable) {\n\t\t\tstate.update.push(update);\n\t\t} else {\n\t\t\tstate.init.push(b.stmt(b.assignment('=', b.member(id, 'nodeValue'), value)));\n\t\t}\n\t}\n\n\tfor (const node of nodes) {\n\t\tif (node.type === 'Text' || node.type === 'ExpressionTag') {\n\t\t\tsequence.push(node);\n\t\t} else {\n\t\t\tif (sequence.length > 0) {\n\t\t\t\tflush_sequence(sequence);\n\t\t\t\tsequence = [];\n\t\t\t}\n\n\t\t\tlet child_state = state;\n\n\t\t\tif (is_static_element(node, state)) {\n\t\t\t\tskipped += 1;\n\t\t\t} else if (node.type === 'EachBlock' && nodes.length === 1 && is_element) {\n\t\t\t\tnode.metadata.is_controlled = true;\n\t\t\t} else {\n\t\t\t\tconst id = flush_node(false, node.type === 'RegularElement' ? node.name : 'node');\n\t\t\t\tchild_state = { ...state, node: id };\n\t\t\t}\n\n\t\t\tvisit(node, child_state);\n\t\t}\n\t}\n\n\tif (sequence.length > 0) {\n\t\tflush_sequence(sequence);\n\t}\n\n\t// if there are trailing static text nodes/elements,\n\t// traverse to the last (n - 1) one when hydrating\n\tif (skipped > 1) {\n\t\tskipped -= 1;\n\t\tstate.init.push(b.stmt(b.call('$.next', skipped !== 1 && b.literal(skipped))));\n\t}\n}\n\n/**\n * @param {AST.SvelteNode} node\n * @param {ComponentContext[\"state\"]} state\n */\nfunction is_static_element(node, state) {\n\tif (node.type !== 'RegularElement') return false;\n\tif (node.fragment.metadata.dynamic) return false;\n\tif (is_custom_element_node(node)) return false; // we're setting all attributes on custom elements through properties\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (is_event_attribute(attribute)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (cannot_be_set_statically(attribute.name)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (attribute.name === 'dir') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\t['input', 'textarea'].includes(node.name) &&\n\t\t\t['value', 'checked'].includes(attribute.name)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (node.name === 'option' && attribute.name === 'value') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We need to apply src and loading after appending the img to the DOM for lazy loading to work\n\t\tif (node.name === 'img' && attribute.name === 'loading') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (attribute.value !== true && !is_text_attribute(attribute)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n", "/** @import { ArrayExpression, Expression, ExpressionStatement, Identifier, MemberExpression, ObjectExpression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { SourceLocation } from '#shared' */\n/** @import { ComponentClientTransformState, ComponentContext } from '../types' */\n/** @import { Scope } from '../../../scope' */\nimport {\n\tcannot_be_set_statically,\n\tis_boolean_attribute,\n\tis_dom_property,\n\tis_load_error_element,\n\tis_void\n} from '../../../../../utils.js';\nimport { escape_html } from '../../../../../escaping.js';\nimport { dev, is_ignored, locator } from '../../../../state.js';\nimport { is_event_attribute, is_text_attribute } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { is_custom_element_node } from '../../../nodes.js';\nimport { clean_nodes, determine_namespace_for_children } from '../../utils.js';\nimport { build_getter } from '../utils.js';\nimport {\n\tget_attribute_name,\n\tbuild_attribute_value,\n\tbuild_set_attributes,\n\tbuild_set_class,\n\tbuild_set_style\n} from './shared/element.js';\nimport { process_children } from './shared/fragment.js';\nimport {\n\tbuild_render_statement,\n\tbuild_template_chunk,\n\tbuild_update_assignment,\n\tget_expression_id,\n\tmemoize_expression\n} from './shared/utils.js';\nimport { visit_event_attribute } from './shared/events.js';\n\n/**\n * @param {AST.RegularElement} node\n * @param {ComponentContext} context\n */\nexport function RegularElement(node, context) {\n\t/** @type {SourceLocation} */\n\tlet location = [-1, -1];\n\n\tif (dev) {\n\t\tconst loc = locator(node.start);\n\t\tif (loc) {\n\t\t\tlocation[0] = loc.line;\n\t\t\tlocation[1] = loc.column;\n\t\t\tcontext.state.locations.push(location);\n\t\t}\n\t}\n\n\tif (node.name === 'noscript') {\n\t\tcontext.state.template.push('<noscript></noscript>');\n\t\treturn;\n\t}\n\n\tconst is_custom_element = is_custom_element_node(node);\n\n\tif (node.name === 'video' || is_custom_element) {\n\t\t// cloneNode is faster, but it does not instantiate the underlying class of the\n\t\t// custom element until the template is connected to the dom, which would\n\t\t// cause problems when setting properties on the custom element.\n\t\t// Therefore we need to use importNode instead, which doesn't have this caveat.\n\t\t// Additionally, Webkit browsers need importNode for video elements for autoplay\n\t\t// to work correctly.\n\t\tcontext.state.metadata.context.template_needs_import_node = true;\n\t}\n\n\tif (node.name === 'script') {\n\t\tcontext.state.metadata.context.template_contains_script_tag = true;\n\t}\n\n\tcontext.state.template.push(`<${node.name}`);\n\n\t/** @type {Array<AST.Attribute | AST.SpreadAttribute>} */\n\tconst attributes = [];\n\n\t/** @type {AST.ClassDirective[]} */\n\tconst class_directives = [];\n\n\t/** @type {AST.StyleDirective[]} */\n\tconst style_directives = [];\n\n\t/** @type {Array<AST.AnimateDirective | AST.BindDirective | AST.OnDirective | AST.TransitionDirective | AST.UseDirective>} */\n\tconst other_directives = [];\n\n\t/** @type {ExpressionStatement[]} */\n\tconst lets = [];\n\n\t/** @type {Map<string, AST.Attribute>} */\n\tconst lookup = new Map();\n\n\t/** @type {Map<string, AST.BindDirective>} */\n\tconst bindings = new Map();\n\n\tlet has_spread = node.metadata.has_spread;\n\tlet has_use = false;\n\n\tfor (const attribute of node.attributes) {\n\t\tswitch (attribute.type) {\n\t\t\tcase 'AnimateDirective':\n\t\t\t\tother_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Attribute':\n\t\t\t\t// `is` attributes need to be part of the template, otherwise they break\n\t\t\t\tif (attribute.name === 'is' && context.state.metadata.namespace === 'html') {\n\t\t\t\t\tconst { value } = build_attribute_value(attribute.value, context);\n\n\t\t\t\t\tif (value.type === 'Literal' && typeof value.value === 'string') {\n\t\t\t\t\t\tcontext.state.template.push(` is=\"${escape_html(value.value, true)}\"`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattributes.push(attribute);\n\t\t\t\tlookup.set(attribute.name, attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'BindDirective':\n\t\t\t\tbindings.set(attribute.name, attribute);\n\t\t\t\tother_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ClassDirective':\n\t\t\t\tclass_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'LetDirective':\n\t\t\t\t// visit let directives before everything else, to set state\n\t\t\t\tlets.push(/** @type {ExpressionStatement} */ (context.visit(attribute)));\n\t\t\t\tbreak;\n\n\t\t\tcase 'OnDirective':\n\t\t\t\tother_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpreadAttribute':\n\t\t\t\tattributes.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'StyleDirective':\n\t\t\t\tstyle_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'TransitionDirective':\n\t\t\t\tother_directives.push(attribute);\n\t\t\t\tbreak;\n\n\t\t\tcase 'UseDirective':\n\t\t\t\thas_use = true;\n\t\t\t\tother_directives.push(attribute);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @type {typeof state} */\n\tconst element_state = { ...context.state, init: [], after_update: [] };\n\n\tfor (const attribute of other_directives) {\n\t\tif (attribute.type === 'OnDirective') {\n\t\t\tconst handler = /** @type {Expression} */ (context.visit(attribute));\n\n\t\t\tif (has_use) {\n\t\t\t\telement_state.init.push(b.stmt(b.call('$.effect', b.thunk(handler))));\n\t\t\t} else {\n\t\t\t\telement_state.after_update.push(b.stmt(handler));\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.visit(attribute, element_state);\n\t\t}\n\t}\n\n\tif (node.name === 'input') {\n\t\tconst has_value_attribute = attributes.some(\n\t\t\t(attribute) =>\n\t\t\t\tattribute.type === 'Attribute' &&\n\t\t\t\t(attribute.name === 'value' || attribute.name === 'checked') &&\n\t\t\t\t!is_text_attribute(attribute)\n\t\t);\n\t\tconst has_default_value_attribute = attributes.some(\n\t\t\t(attribute) =>\n\t\t\t\tattribute.type === 'Attribute' &&\n\t\t\t\t(attribute.name === 'defaultValue' || attribute.name === 'defaultChecked')\n\t\t);\n\t\tif (\n\t\t\t!has_default_value_attribute &&\n\t\t\t(has_spread ||\n\t\t\t\tbindings.has('value') ||\n\t\t\t\tbindings.has('checked') ||\n\t\t\t\tbindings.has('group') ||\n\t\t\t\t(!bindings.has('group') && has_value_attribute))\n\t\t) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.remove_input_defaults', context.state.node)));\n\t\t}\n\t}\n\n\tif (node.name === 'textarea') {\n\t\tconst attribute = lookup.get('value') ?? lookup.get('checked');\n\t\tconst needs_content_reset = attribute && !is_text_attribute(attribute);\n\n\t\tif (has_spread || bindings.has('value') || needs_content_reset) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.remove_textarea_child', context.state.node)));\n\t\t}\n\t}\n\n\tif (node.name === 'select' && bindings.has('value')) {\n\t\tsetup_select_synchronization(/** @type {AST.BindDirective} */ (bindings.get('value')), context);\n\t}\n\n\t// Let bindings first, they can be used on attributes\n\tcontext.state.init.push(...lets);\n\n\tconst node_id = context.state.node;\n\n\tif (has_spread) {\n\t\tconst attributes_id = b.id(context.state.scope.generate('attributes'));\n\n\t\tbuild_set_attributes(\n\t\t\tattributes,\n\t\t\tclass_directives,\n\t\t\tstyle_directives,\n\t\t\tcontext,\n\t\t\tnode,\n\t\t\tnode_id,\n\t\t\tattributes_id\n\t\t);\n\n\t\t// If value binding exists, that one takes care of calling $.init_select\n\t\tif (node.name === 'select' && !bindings.has('value')) {\n\t\t\tcontext.state.init.push(\n\t\t\t\tb.stmt(b.call('$.init_select', node_id, b.thunk(b.member(attributes_id, 'value'))))\n\t\t\t);\n\n\t\t\tcontext.state.update.push(\n\t\t\t\tb.if(\n\t\t\t\t\tb.binary('in', b.literal('value'), attributes_id),\n\t\t\t\t\tb.block([\n\t\t\t\t\t\t// This ensures a one-way street to the DOM in case it's <select {value}>\n\t\t\t\t\t\t// and not <select bind:value>. We need it in addition to $.init_select\n\t\t\t\t\t\t// because the select value is not reflected as an attribute, so the\n\t\t\t\t\t\t// mutation observer wouldn't notice.\n\t\t\t\t\t\tb.stmt(b.call('$.select_option', node_id, b.member(attributes_id, 'value')))\n\t\t\t\t\t])\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t} else {\n\t\t/** If true, needs `__value` for inputs */\n\t\tconst needs_special_value_handling =\n\t\t\tnode.name === 'option' ||\n\t\t\tnode.name === 'select' ||\n\t\t\tbindings.has('group') ||\n\t\t\tbindings.has('checked');\n\n\t\tfor (const attribute of /** @type {AST.Attribute[]} */ (attributes)) {\n\t\t\tif (is_event_attribute(attribute)) {\n\t\t\t\tvisit_event_attribute(attribute, context);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (needs_special_value_handling && attribute.name === 'value') {\n\t\t\t\tbuild_element_special_value_attribute(node.name, node_id, attribute, context);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = get_attribute_name(node, attribute);\n\n\t\t\tif (\n\t\t\t\t!is_custom_element &&\n\t\t\t\t!cannot_be_set_statically(attribute.name) &&\n\t\t\t\t(attribute.value === true || is_text_attribute(attribute)) &&\n\t\t\t\t(name !== 'class' || class_directives.length === 0) &&\n\t\t\t\t(name !== 'style' || style_directives.length === 0)\n\t\t\t) {\n\t\t\t\tlet value = is_text_attribute(attribute) ? attribute.value[0].data : true;\n\n\t\t\t\tif (name === 'class' && node.metadata.scoped && context.state.analysis.css.hash) {\n\t\t\t\t\tif (value === true || value === '') {\n\t\t\t\t\t\tvalue = context.state.analysis.css.hash;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue += ' ' + context.state.analysis.css.hash;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name !== 'class' || value) {\n\t\t\t\t\tcontext.state.template.push(\n\t\t\t\t\t\t` ${attribute.name}${\n\t\t\t\t\t\t\tis_boolean_attribute(name) && value === true\n\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t: `=\"${value === true ? '' : escape_html(value, true)}\"`\n\t\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (name === 'autofocus') {\n\t\t\t\tlet { value } = build_attribute_value(attribute.value, context);\n\t\t\t\tcontext.state.init.push(b.stmt(b.call('$.autofocus', node_id, value)));\n\t\t\t} else if (name === 'class') {\n\t\t\t\tconst is_html = context.state.metadata.namespace === 'html' && node.name !== 'svg';\n\t\t\t\tbuild_set_class(node, node_id, attribute, class_directives, context, is_html);\n\t\t\t} else if (name === 'style') {\n\t\t\t\tbuild_set_style(node_id, attribute, style_directives, context);\n\t\t\t} else if (is_custom_element) {\n\t\t\t\tbuild_custom_element_attribute_update_assignment(node_id, attribute, context);\n\t\t\t} else {\n\t\t\t\tconst { value, has_state } = build_attribute_value(\n\t\t\t\t\tattribute.value,\n\t\t\t\t\tcontext,\n\t\t\t\t\t(value, metadata) => (metadata.has_call ? get_expression_id(context.state, value) : value)\n\t\t\t\t);\n\n\t\t\t\tconst update = build_element_attribute_update(node, node_id, name, value, attributes);\n\n\t\t\t\t(has_state ? context.state.update : context.state.init).push(b.stmt(update));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tis_load_error_element(node.name) &&\n\t\t(has_spread || has_use || lookup.has('onload') || lookup.has('onerror'))\n\t) {\n\t\tcontext.state.after_update.push(b.stmt(b.call('$.replay_events', node_id)));\n\t}\n\n\tcontext.state.template.push('>');\n\n\tconst metadata = {\n\t\t...context.state.metadata,\n\t\tnamespace: determine_namespace_for_children(node, context.state.metadata.namespace)\n\t};\n\n\tif (bindings.has('innerHTML') || bindings.has('innerText') || bindings.has('textContent')) {\n\t\tconst contenteditable = lookup.get('contenteditable');\n\n\t\tif (\n\t\t\tcontenteditable &&\n\t\t\t(contenteditable.value === true ||\n\t\t\t\t(is_text_attribute(contenteditable) && contenteditable.value[0].data === 'true'))\n\t\t) {\n\t\t\tmetadata.bound_contenteditable = true;\n\t\t}\n\t}\n\n\t/** @type {ComponentClientTransformState} */\n\tconst state = {\n\t\t...context.state,\n\t\tmetadata,\n\t\tlocations: [],\n\t\tscope: /** @type {Scope} */ (context.state.scopes.get(node.fragment)),\n\t\tpreserve_whitespace:\n\t\t\tcontext.state.preserve_whitespace || node.name === 'pre' || node.name === 'textarea'\n\t};\n\n\tconst { hoisted, trimmed } = clean_nodes(\n\t\tnode,\n\t\tnode.fragment.nodes,\n\t\tcontext.path,\n\t\tstate.metadata.namespace,\n\t\tstate,\n\t\tnode.name === 'script' || state.preserve_whitespace,\n\t\tstate.options.preserveComments\n\t);\n\n\t/** @type {typeof state} */\n\tconst child_state = { ...state, init: [], update: [], after_update: [] };\n\n\tfor (const node of hoisted) {\n\t\tcontext.visit(node, child_state);\n\t}\n\n\t// special case — if an element that only contains text, we don't need\n\t// to descend into it if the text is non-reactive\n\t// in the rare case that we have static text that can't be inlined\n\t// (e.g. `<span>{location}</span>`), set `textContent` programmatically\n\tconst use_text_content =\n\t\ttrimmed.every((node) => node.type === 'Text' || node.type === 'ExpressionTag') &&\n\t\ttrimmed.every((node) => node.type === 'Text' || !node.metadata.expression.has_state) &&\n\t\ttrimmed.some((node) => node.type === 'ExpressionTag');\n\n\tif (use_text_content) {\n\t\tconst { value } = build_template_chunk(trimmed, context.visit, child_state);\n\t\tconst empty_string = value.type === 'Literal' && value.value === '';\n\n\t\tif (!empty_string) {\n\t\t\tchild_state.init.push(\n\t\t\t\tb.stmt(b.assignment('=', b.member(context.state.node, 'textContent'), value))\n\t\t\t);\n\t\t}\n\t} else {\n\t\t/** @type {Expression} */\n\t\tlet arg = context.state.node;\n\n\t\t// If `hydrate_node` is set inside the element, we need to reset it\n\t\t// after the element has been hydrated\n\t\tlet needs_reset = trimmed.some((node) => node.type !== 'Text');\n\n\t\t// The same applies if it's a `<template>` element, since we need to\n\t\t// set the value of `hydrate_node` to `node.content`\n\t\tif (node.name === 'template') {\n\t\t\tneeds_reset = true;\n\t\t\tchild_state.init.push(b.stmt(b.call('$.hydrate_template', arg)));\n\t\t\targ = b.member(arg, 'content');\n\t\t}\n\n\t\tprocess_children(trimmed, (is_text) => b.call('$.child', arg, is_text && b.true), true, {\n\t\t\t...context,\n\t\t\tstate: child_state\n\t\t});\n\n\t\tif (needs_reset) {\n\t\t\tchild_state.init.push(b.stmt(b.call('$.reset', context.state.node)));\n\t\t}\n\t}\n\n\tif (node.fragment.nodes.some((node) => node.type === 'SnippetBlock')) {\n\t\t// Wrap children in `{...}` to avoid declaration conflicts\n\t\tcontext.state.init.push(\n\t\t\tb.block([\n\t\t\t\t...child_state.init,\n\t\t\t\t...element_state.init,\n\t\t\t\tchild_state.update.length > 0 ? build_render_statement(child_state) : b.empty,\n\t\t\t\t...child_state.after_update,\n\t\t\t\t...element_state.after_update\n\t\t\t])\n\t\t);\n\t} else if (node.fragment.metadata.dynamic) {\n\t\tcontext.state.init.push(...child_state.init, ...element_state.init);\n\t\tcontext.state.update.push(...child_state.update);\n\t\tcontext.state.after_update.push(...child_state.after_update, ...element_state.after_update);\n\t} else {\n\t\tcontext.state.init.push(...element_state.init);\n\t\tcontext.state.after_update.push(...element_state.after_update);\n\t}\n\n\tif (lookup.has('dir')) {\n\t\t// This fixes an issue with Chromium where updates to text content within an element\n\t\t// does not update the direction when set to auto. If we just re-assign the dir, this fixes it.\n\t\tconst dir = b.member(node_id, 'dir');\n\t\tcontext.state.update.push(b.stmt(b.assignment('=', dir, dir)));\n\t}\n\n\tif (state.locations.length > 0) {\n\t\t// @ts-expect-error\n\t\tlocation.push(state.locations);\n\t}\n\n\tif (!is_void(node.name)) {\n\t\tcontext.state.template.push(`</${node.name}>`);\n\t}\n}\n\n/**\n * Special case: if we have a value binding on a select element, we need to set up synchronization\n * between the value binding and inner signals, for indirect updates\n * @param {AST.BindDirective} value_binding\n * @param {ComponentContext} context\n */\nfunction setup_select_synchronization(value_binding, context) {\n\tif (context.state.analysis.runes) return;\n\n\tlet bound = value_binding.expression;\n\n\tif (bound.type === 'SequenceExpression') {\n\t\treturn;\n\t}\n\n\twhile (bound.type === 'MemberExpression') {\n\t\tbound = /** @type {Identifier | MemberExpression} */ (bound.object);\n\t}\n\n\t/** @type {string[]} */\n\tconst names = [];\n\n\tfor (const [name, refs] of context.state.scope.references) {\n\t\tif (\n\t\t\trefs.length > 0 &&\n\t\t\t// prevent infinite loop\n\t\t\tname !== bound.name\n\t\t) {\n\t\t\tnames.push(name);\n\t\t}\n\t}\n\n\tconst invalidator = b.call(\n\t\t'$.invalidate_inner_signals',\n\t\tb.thunk(\n\t\t\tb.block(\n\t\t\t\tnames.map((name) => {\n\t\t\t\t\tconst serialized = build_getter(b.id(name), context.state);\n\t\t\t\t\treturn b.stmt(serialized);\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t);\n\n\tcontext.state.init.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.template_effect',\n\t\t\t\tb.thunk(\n\t\t\t\t\tb.block([b.stmt(/** @type {Expression} */ (context.visit(bound))), b.stmt(invalidator)])\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n}\n\n/**\n * @param {AST.ClassDirective[]} class_directives\n * @param {ComponentContext} context\n * @return {ObjectExpression | Identifier}\n */\nexport function build_class_directives_object(class_directives, context) {\n\tlet properties = [];\n\tlet has_call_or_state = false;\n\n\tfor (const d of class_directives) {\n\t\tconst expression = /** @type Expression */ (context.visit(d.expression));\n\t\tproperties.push(b.init(d.name, expression));\n\t\thas_call_or_state ||= d.metadata.expression.has_call || d.metadata.expression.has_state;\n\t}\n\n\tconst directives = b.object(properties);\n\n\treturn has_call_or_state ? get_expression_id(context.state, directives) : directives;\n}\n\n/**\n * @param {AST.StyleDirective[]} style_directives\n * @param {ComponentContext} context\n * @return {ObjectExpression | ArrayExpression}}\n */\nexport function build_style_directives_object(style_directives, context) {\n\tlet normal_properties = [];\n\tlet important_properties = [];\n\n\tfor (const directive of style_directives) {\n\t\tconst expression =\n\t\t\tdirective.value === true\n\t\t\t\t? build_getter({ name: directive.name, type: 'Identifier' }, context.state)\n\t\t\t\t: build_attribute_value(directive.value, context, (value, metadata) =>\n\t\t\t\t\t\tmetadata.has_call ? get_expression_id(context.state, value) : value\n\t\t\t\t\t).value;\n\t\tconst property = b.init(directive.name, expression);\n\n\t\tif (directive.modifiers.includes('important')) {\n\t\t\timportant_properties.push(property);\n\t\t} else {\n\t\t\tnormal_properties.push(property);\n\t\t}\n\t}\n\n\treturn important_properties.length\n\t\t? b.array([b.object(normal_properties), b.object(important_properties)])\n\t\t: b.object(normal_properties);\n}\n\n/**\n * Serializes an assignment to an element property by adding relevant statements to either only\n * the init or the the init and update arrays, depending on whether or not the value is dynamic.\n * Resulting code for static looks something like this:\n * ```js\n * element.property = value;\n * // or\n * $.set_attribute(element, property, value);\n * });\n * ```\n * Resulting code for dynamic looks something like this:\n * ```js\n * let value;\n * $.template_effect(() => {\n * \tif (value !== (value = 'new value')) {\n * \t\telement.property = value;\n * \t\t// or\n * \t\t$.set_attribute(element, property, value);\n * \t}\n * });\n * ```\n * Returns true if attribute is deemed reactive, false otherwise.\n * @param {AST.RegularElement} element\n * @param {Identifier} node_id\n * @param {string} name\n * @param {Expression} value\n * @param {Array<AST.Attribute | AST.SpreadAttribute>} attributes\n */\nfunction build_element_attribute_update(element, node_id, name, value, attributes) {\n\tif (name === 'muted') {\n\t\t// Special case for Firefox who needs it set as a property in order to work\n\t\treturn b.assignment('=', b.member(node_id, b.id('muted')), value);\n\t}\n\n\tif (name === 'value') {\n\t\treturn b.call('$.set_value', node_id, value);\n\t}\n\n\tif (name === 'checked') {\n\t\treturn b.call('$.set_checked', node_id, value);\n\t}\n\n\tif (name === 'selected') {\n\t\treturn b.call('$.set_selected', node_id, value);\n\t}\n\n\tif (\n\t\t// If we would just set the defaultValue property, it would override the value property,\n\t\t// because it is set in the template which implicitly means it's also setting the default value,\n\t\t// and if one updates the default value while the input is pristine it will also update the\n\t\t// current value, which is not what we want, which is why we need to do some extra work.\n\t\tname === 'defaultValue' &&\n\t\t(attributes.some(\n\t\t\t(attr) => attr.type === 'Attribute' && attr.name === 'value' && is_text_attribute(attr)\n\t\t) ||\n\t\t\t(element.name === 'textarea' && element.fragment.nodes.length > 0))\n\t) {\n\t\treturn b.call('$.set_default_value', node_id, value);\n\t}\n\n\tif (\n\t\t// See defaultValue comment\n\t\tname === 'defaultChecked' &&\n\t\tattributes.some(\n\t\t\t(attr) => attr.type === 'Attribute' && attr.name === 'checked' && attr.value === true\n\t\t)\n\t) {\n\t\treturn b.call('$.set_default_checked', node_id, value);\n\t}\n\n\tif (is_dom_property(name)) {\n\t\treturn b.assignment('=', b.member(node_id, name), value);\n\t}\n\n\treturn b.call(\n\t\tname.startsWith('xlink') ? '$.set_xlink_attribute' : '$.set_attribute',\n\t\tnode_id,\n\t\tb.literal(name),\n\t\tvalue,\n\t\tis_ignored(element, 'hydration_attribute_changed') && b.true\n\t);\n}\n\n/**\n * Like `build_element_attribute_update` but without any special attribute treatment.\n * @param {Identifier}\tnode_id\n * @param {AST.Attribute} attribute\n * @param {ComponentContext} context\n */\nfunction build_custom_element_attribute_update_assignment(node_id, attribute, context) {\n\tconst { value, has_state } = build_attribute_value(attribute.value, context);\n\n\t// don't lowercase name, as we set the element's property, which might be case sensitive\n\tconst call = b.call('$.set_custom_element_data', node_id, b.literal(attribute.name), value);\n\n\t// this is different from other updates — it doesn't get grouped,\n\t// because set_custom_element_data may not be idempotent\n\tconst update = has_state ? b.call('$.template_effect', b.thunk(call)) : call;\n\n\tcontext.state.init.push(b.stmt(update));\n}\n\n/**\n * Serializes an assignment to the value property of a `<select>`, `<option>` or `<input>` element\n * that needs the hidden `__value` property.\n * Returns true if attribute is deemed reactive, false otherwise.\n * @param {string} element\n * @param {Identifier} node_id\n * @param {AST.Attribute} attribute\n * @param {ComponentContext} context\n */\nfunction build_element_special_value_attribute(element, node_id, attribute, context) {\n\tconst state = context.state;\n\tconst is_select_with_value =\n\t\t// attribute.metadata.dynamic would give false negatives because even if the value does not change,\n\t\t// the inner options could still change, so we need to always treat it as reactive\n\t\telement === 'select' && attribute.value !== true && !is_text_attribute(attribute);\n\n\tconst { value, has_state } = build_attribute_value(attribute.value, context, (value, metadata) =>\n\t\tmetadata.has_call\n\t\t\t? // if is a select with value we will also invoke `init_select` which need a reference before the template effect so we memoize separately\n\t\t\t\tis_select_with_value\n\t\t\t\t? memoize_expression(state, value)\n\t\t\t\t: get_expression_id(state, value)\n\t\t\t: value\n\t);\n\n\tconst evaluated = context.state.scope.evaluate(value);\n\tconst assignment = b.assignment('=', b.member(node_id, '__value'), value);\n\n\tconst inner_assignment = b.assignment(\n\t\t'=',\n\t\tb.member(node_id, 'value'),\n\t\tevaluated.is_defined ? assignment : b.logical('??', assignment, b.literal(''))\n\t);\n\n\tconst update = b.stmt(\n\t\tis_select_with_value\n\t\t\t? b.sequence([\n\t\t\t\t\tinner_assignment,\n\t\t\t\t\t// This ensures a one-way street to the DOM in case it's <select {value}>\n\t\t\t\t\t// and not <select bind:value>. We need it in addition to $.init_select\n\t\t\t\t\t// because the select value is not reflected as an attribute, so the\n\t\t\t\t\t// mutation observer wouldn't notice.\n\t\t\t\t\tb.call('$.select_option', node_id, value)\n\t\t\t\t])\n\t\t\t: inner_assignment\n\t);\n\n\tif (is_select_with_value) {\n\t\tstate.init.push(b.stmt(b.call('$.init_select', node_id, b.thunk(value))));\n\t}\n\n\tif (has_state) {\n\t\tconst id = state.scope.generate(`${node_id.name}_value`);\n\t\tbuild_update_assignment(\n\t\t\tstate,\n\t\t\tid,\n\t\t\t// `<option>` is a special case: The value property reflects to the DOM. If the value is set to undefined,\n\t\t\t// that means the value should be set to the empty string. To be able to do that when the value is\n\t\t\t// initially undefined, we need to set a value that is guaranteed to be different.\n\t\t\telement === 'option' ? b.object([]) : undefined,\n\t\t\tvalue,\n\t\t\tupdate\n\t\t);\n\t} else {\n\t\tstate.init.push(update);\n\t}\n}\n", "/** @import { ArrayExpression, Expression, Identifier, ObjectExpression } from 'estree' */\n/** @import { AST, ExpressionMetadata } from '#compiler' */\n/** @import { ComponentContext } from '../../types' */\nimport { escape_html } from '../../../../../../escaping.js';\nimport { normalize_attribute } from '../../../../../../utils.js';\nimport { is_ignored } from '../../../../../state.js';\nimport { is_event_attribute } from '../../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { build_class_directives_object, build_style_directives_object } from '../RegularElement.js';\nimport { build_template_chunk, get_expression_id } from './utils.js';\n\n/**\n * @param {Array<AST.Attribute | AST.SpreadAttribute>} attributes\n * @param {AST.ClassDirective[]} class_directives\n * @param {AST.StyleDirective[]} style_directives\n * @param {ComponentContext} context\n * @param {AST.RegularElement | AST.SvelteElement} element\n * @param {Identifier} element_id\n * @param {Identifier} attributes_id\n */\nexport function build_set_attributes(\n\tattributes,\n\tclass_directives,\n\tstyle_directives,\n\tcontext,\n\telement,\n\telement_id,\n\tattributes_id\n) {\n\tlet is_dynamic = false;\n\n\t/** @type {ObjectExpression['properties']} */\n\tconst values = [];\n\n\tfor (const attribute of attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tconst { value, has_state } = build_attribute_value(\n\t\t\t\tattribute.value,\n\t\t\t\tcontext,\n\t\t\t\t(value, metadata) => (metadata.has_call ? get_expression_id(context.state, value) : value)\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tis_event_attribute(attribute) &&\n\t\t\t\t(value.type === 'ArrowFunctionExpression' || value.type === 'FunctionExpression')\n\t\t\t) {\n\t\t\t\t// Give the event handler a stable ID so it isn't removed and readded on every update\n\t\t\t\tconst id = context.state.scope.generate('event_handler');\n\t\t\t\tcontext.state.init.push(b.var(id, value));\n\t\t\t\tvalues.push(b.init(attribute.name, b.id(id)));\n\t\t\t} else {\n\t\t\t\tvalues.push(b.init(attribute.name, value));\n\t\t\t}\n\n\t\t\tis_dynamic ||= has_state;\n\t\t} else {\n\t\t\t// objects could contain reactive getters -> play it safe and always assume spread attributes are reactive\n\t\t\tis_dynamic = true;\n\n\t\t\tlet value = /** @type {Expression} */ (context.visit(attribute));\n\n\t\t\tif (attribute.metadata.expression.has_call) {\n\t\t\t\tvalue = get_expression_id(context.state, value);\n\t\t\t}\n\n\t\t\tvalues.push(b.spread(value));\n\t\t}\n\t}\n\n\tif (class_directives.length) {\n\t\tvalues.push(\n\t\t\tb.prop(\n\t\t\t\t'init',\n\t\t\t\tb.array([b.id('$.CLASS')]),\n\t\t\t\tbuild_class_directives_object(class_directives, context)\n\t\t\t)\n\t\t);\n\n\t\tis_dynamic ||=\n\t\t\tclass_directives.find((directive) => directive.metadata.expression.has_state) !== null;\n\t}\n\n\tif (style_directives.length) {\n\t\tvalues.push(\n\t\t\tb.prop(\n\t\t\t\t'init',\n\t\t\t\tb.array([b.id('$.STYLE')]),\n\t\t\t\tbuild_style_directives_object(style_directives, context)\n\t\t\t)\n\t\t);\n\n\t\tis_dynamic ||= style_directives.some((directive) => directive.metadata.expression.has_state);\n\t}\n\n\tconst call = b.call(\n\t\t'$.set_attributes',\n\t\telement_id,\n\t\tis_dynamic ? attributes_id : b.null,\n\t\tb.object(values),\n\t\telement.metadata.scoped &&\n\t\t\tcontext.state.analysis.css.hash !== '' &&\n\t\t\tb.literal(context.state.analysis.css.hash),\n\t\tis_ignored(element, 'hydration_attribute_changed') && b.true\n\t);\n\n\tif (is_dynamic) {\n\t\tcontext.state.init.push(b.let(attributes_id));\n\t\tconst update = b.stmt(b.assignment('=', attributes_id, call));\n\t\tcontext.state.update.push(update);\n\t} else {\n\t\tcontext.state.init.push(b.stmt(call));\n\t}\n}\n\n/**\n * @param {AST.Attribute['value']} value\n * @param {ComponentContext} context\n * @param {(value: Expression, metadata: ExpressionMetadata) => Expression} memoize\n * @returns {{ value: Expression, has_state: boolean }}\n */\nexport function build_attribute_value(value, context, memoize = (value) => value) {\n\tif (value === true) {\n\t\treturn { value: b.true, has_state: false };\n\t}\n\n\tif (!Array.isArray(value) || value.length === 1) {\n\t\tconst chunk = Array.isArray(value) ? value[0] : value;\n\n\t\tif (chunk.type === 'Text') {\n\t\t\treturn { value: b.literal(chunk.data), has_state: false };\n\t\t}\n\n\t\tlet expression = /** @type {Expression} */ (context.visit(chunk.expression));\n\n\t\treturn {\n\t\t\tvalue: memoize(expression, chunk.metadata.expression),\n\t\t\thas_state: chunk.metadata.expression.has_state\n\t\t};\n\t}\n\n\treturn build_template_chunk(value, context.visit, context.state, memoize);\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} element\n * @param {AST.Attribute} attribute\n */\nexport function get_attribute_name(element, attribute) {\n\tif (!element.metadata.svg && !element.metadata.mathml) {\n\t\treturn normalize_attribute(attribute.name);\n\t}\n\n\treturn attribute.name;\n}\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement} element\n * @param {Identifier} node_id\n * @param {AST.Attribute} attribute\n * @param {AST.ClassDirective[]} class_directives\n * @param {ComponentContext} context\n * @param {boolean} is_html\n */\nexport function build_set_class(element, node_id, attribute, class_directives, context, is_html) {\n\tlet { value, has_state } = build_attribute_value(attribute.value, context, (value, metadata) => {\n\t\tif (attribute.metadata.needs_clsx) {\n\t\t\tvalue = b.call('$.clsx', value);\n\t\t}\n\n\t\treturn metadata.has_call ? get_expression_id(context.state, value) : value;\n\t});\n\n\t/** @type {Identifier | undefined} */\n\tlet previous_id;\n\n\t/** @type {ObjectExpression | Identifier | undefined} */\n\tlet prev;\n\n\t/** @type {ObjectExpression | Identifier | undefined} */\n\tlet next;\n\n\tif (class_directives.length) {\n\t\tnext = build_class_directives_object(class_directives, context);\n\t\thas_state ||= class_directives.some((d) => d.metadata.expression.has_state);\n\n\t\tif (has_state) {\n\t\t\tprevious_id = b.id(context.state.scope.generate('classes'));\n\t\t\tcontext.state.init.push(b.declaration('let', [b.declarator(previous_id)]));\n\t\t\tprev = previous_id;\n\t\t} else {\n\t\t\tprev = b.object([]);\n\t\t}\n\t}\n\n\t/** @type {Expression | undefined} */\n\tlet css_hash;\n\n\tif (element.metadata.scoped && context.state.analysis.css.hash) {\n\t\tif (value.type === 'Literal' && (value.value === '' || value.value === null)) {\n\t\t\tvalue = b.literal(context.state.analysis.css.hash);\n\t\t} else if (value.type === 'Literal' && typeof value.value === 'string') {\n\t\t\tvalue = b.literal(escape_html(value.value, true) + ' ' + context.state.analysis.css.hash);\n\t\t} else {\n\t\t\tcss_hash = b.literal(context.state.analysis.css.hash);\n\t\t}\n\t}\n\n\tif (!css_hash && next) {\n\t\tcss_hash = b.null;\n\t}\n\n\t/** @type {Expression} */\n\tlet set_class = b.call(\n\t\t'$.set_class',\n\t\tnode_id,\n\t\tis_html ? b.literal(1) : b.literal(0),\n\t\tvalue,\n\t\tcss_hash,\n\t\tprev,\n\t\tnext\n\t);\n\n\tif (previous_id) {\n\t\tset_class = b.assignment('=', previous_id, set_class);\n\t}\n\n\t(has_state ? context.state.update : context.state.init).push(b.stmt(set_class));\n}\n\n/**\n * @param {Identifier} node_id\n * @param {AST.Attribute} attribute\n * @param {AST.StyleDirective[]} style_directives\n * @param {ComponentContext} context\n */\nexport function build_set_style(node_id, attribute, style_directives, context) {\n\tlet { value, has_state } = build_attribute_value(attribute.value, context, (value, metadata) =>\n\t\tmetadata.has_call ? get_expression_id(context.state, value) : value\n\t);\n\n\t/** @type {Identifier | undefined} */\n\tlet previous_id;\n\n\t/** @type {ObjectExpression | Identifier | undefined} */\n\tlet prev;\n\n\t/** @type {ArrayExpression | ObjectExpression | undefined} */\n\tlet next;\n\n\tif (style_directives.length) {\n\t\tnext = build_style_directives_object(style_directives, context);\n\t\thas_state ||= style_directives.some((d) => d.metadata.expression.has_state);\n\n\t\tif (has_state) {\n\t\t\tprevious_id = b.id(context.state.scope.generate('styles'));\n\t\t\tcontext.state.init.push(b.declaration('let', [b.declarator(previous_id)]));\n\t\t\tprev = previous_id;\n\t\t} else {\n\t\t\tprev = b.object([]);\n\t\t}\n\t}\n\n\t/** @type {Expression} */\n\tlet set_style = b.call('$.set_style', node_id, value, prev, next);\n\n\tif (previous_id) {\n\t\tset_style = b.assignment('=', previous_id, set_style);\n\t}\n\n\t(has_state ? context.state.update : context.state.init).push(b.stmt(set_style));\n}\n", "/** @import { CallExpression, Expression, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { dev, is_ignored } from '../../../../state.js';\nimport { is_text_attribute } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { binding_properties } from '../../../bindings.js';\nimport { build_attribute_value } from './shared/element.js';\nimport { build_bind_this, validate_binding } from './shared/utils.js';\n\n/**\n * @param {AST.BindDirective} node\n * @param {ComponentContext} context\n */\nexport function BindDirective(node, context) {\n\tconst expression = /** @type {Expression} */ (context.visit(node.expression));\n\tconst property = binding_properties[node.name];\n\n\tconst parent = /** @type {AST.SvelteNode} */ (context.path.at(-1));\n\n\tlet get, set;\n\n\tif (expression.type === 'SequenceExpression') {\n\t\t[get, set] = expression.expressions;\n\t} else {\n\t\tif (\n\t\t\tdev &&\n\t\t\tcontext.state.analysis.runes &&\n\t\t\texpression.type === 'MemberExpression' &&\n\t\t\t(node.name !== 'this' ||\n\t\t\t\tcontext.path.some(\n\t\t\t\t\t({ type }) =>\n\t\t\t\t\t\ttype === 'IfBlock' ||\n\t\t\t\t\t\ttype === 'EachBlock' ||\n\t\t\t\t\t\ttype === 'AwaitBlock' ||\n\t\t\t\t\t\ttype === 'KeyBlock'\n\t\t\t\t)) &&\n\t\t\t!is_ignored(node, 'binding_property_non_reactive')\n\t\t) {\n\t\t\tvalidate_binding(context.state, node, expression);\n\t\t}\n\n\t\tget = b.thunk(expression);\n\n\t\t/** @type {Expression | undefined} */\n\t\tset = b.unthunk(\n\t\t\tb.arrow(\n\t\t\t\t[b.id('$$value')],\n\t\t\t\t/** @type {Expression} */ (\n\t\t\t\t\tcontext.visit(\n\t\t\t\t\t\tb.assignment('=', /** @type {Pattern} */ (node.expression), b.id('$$value'))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tif (get === set) {\n\t\t\tset = undefined;\n\t\t}\n\t}\n\n\t/** @type {CallExpression} */\n\tlet call;\n\n\tif (property?.event) {\n\t\tcall = b.call(\n\t\t\t'$.bind_property',\n\t\t\tb.literal(node.name),\n\t\t\tb.literal(property.event),\n\t\t\tcontext.state.node,\n\t\t\tset ?? get,\n\t\t\tproperty.bidirectional && get\n\t\t);\n\t} else {\n\t\t// special cases\n\t\tswitch (node.name) {\n\t\t\t// window\n\t\t\tcase 'online':\n\t\t\t\tcall = b.call(`$.bind_online`, set ?? get);\n\t\t\t\tbreak;\n\n\t\t\tcase 'scrollX':\n\t\t\tcase 'scrollY':\n\t\t\t\tcall = b.call(\n\t\t\t\t\t'$.bind_window_scroll',\n\t\t\t\t\tb.literal(node.name === 'scrollX' ? 'x' : 'y'),\n\t\t\t\t\tget,\n\t\t\t\t\tset\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase 'innerWidth':\n\t\t\tcase 'innerHeight':\n\t\t\tcase 'outerWidth':\n\t\t\tcase 'outerHeight':\n\t\t\t\tcall = b.call('$.bind_window_size', b.literal(node.name), set ?? get);\n\t\t\t\tbreak;\n\n\t\t\t// document\n\t\t\tcase 'activeElement':\n\t\t\t\tcall = b.call('$.bind_active_element', set ?? get);\n\t\t\t\tbreak;\n\n\t\t\t// media\n\t\t\tcase 'muted':\n\t\t\t\tcall = b.call(`$.bind_muted`, context.state.node, get, set);\n\t\t\t\tbreak;\n\t\t\tcase 'paused':\n\t\t\t\tcall = b.call(`$.bind_paused`, context.state.node, get, set);\n\t\t\t\tbreak;\n\t\t\tcase 'volume':\n\t\t\t\tcall = b.call(`$.bind_volume`, context.state.node, get, set);\n\t\t\t\tbreak;\n\t\t\tcase 'playbackRate':\n\t\t\t\tcall = b.call(`$.bind_playback_rate`, context.state.node, get, set);\n\t\t\t\tbreak;\n\t\t\tcase 'currentTime':\n\t\t\t\tcall = b.call(`$.bind_current_time`, context.state.node, get, set);\n\t\t\t\tbreak;\n\t\t\tcase 'buffered':\n\t\t\t\tcall = b.call(`$.bind_buffered`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\t\t\tcase 'played':\n\t\t\t\tcall = b.call(`$.bind_played`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\t\t\tcase 'seekable':\n\t\t\t\tcall = b.call(`$.bind_seekable`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\t\t\tcase 'seeking':\n\t\t\t\tcall = b.call(`$.bind_seeking`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\t\t\tcase 'ended':\n\t\t\t\tcall = b.call(`$.bind_ended`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\t\t\tcase 'readyState':\n\t\t\t\tcall = b.call(`$.bind_ready_state`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\n\t\t\t// dimensions\n\t\t\tcase 'contentRect':\n\t\t\tcase 'contentBoxSize':\n\t\t\tcase 'borderBoxSize':\n\t\t\tcase 'devicePixelContentBoxSize':\n\t\t\t\tcall = b.call(\n\t\t\t\t\t'$.bind_resize_observer',\n\t\t\t\t\tcontext.state.node,\n\t\t\t\t\tb.literal(node.name),\n\t\t\t\t\tset ?? get\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase 'clientWidth':\n\t\t\tcase 'clientHeight':\n\t\t\tcase 'offsetWidth':\n\t\t\tcase 'offsetHeight':\n\t\t\t\tcall = b.call('$.bind_element_size', context.state.node, b.literal(node.name), set ?? get);\n\t\t\t\tbreak;\n\n\t\t\t// various\n\t\t\tcase 'value': {\n\t\t\t\tif (parent?.type === 'RegularElement' && parent.name === 'select') {\n\t\t\t\t\tcall = b.call(`$.bind_select_value`, context.state.node, get, set);\n\t\t\t\t} else {\n\t\t\t\t\tcall = b.call(`$.bind_value`, context.state.node, get, set);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'files':\n\t\t\t\tcall = b.call(`$.bind_files`, context.state.node, get, set);\n\t\t\t\tbreak;\n\n\t\t\tcase 'this':\n\t\t\t\tcall = build_bind_this(node.expression, context.state.node, context);\n\t\t\t\tbreak;\n\n\t\t\tcase 'textContent':\n\t\t\tcase 'innerHTML':\n\t\t\tcase 'innerText':\n\t\t\t\tcall = b.call(\n\t\t\t\t\t'$.bind_content_editable',\n\t\t\t\t\tb.literal(node.name),\n\t\t\t\t\tcontext.state.node,\n\t\t\t\t\tget,\n\t\t\t\t\tset\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\t// checkbox/radio\n\t\t\tcase 'checked':\n\t\t\t\tcall = b.call(`$.bind_checked`, context.state.node, get, set);\n\t\t\t\tbreak;\n\n\t\t\tcase 'focused':\n\t\t\t\tcall = b.call(`$.bind_focused`, context.state.node, set ?? get);\n\t\t\t\tbreak;\n\n\t\t\tcase 'group': {\n\t\t\t\tconst indexes = node.metadata.parent_each_blocks.map((each) => {\n\t\t\t\t\t// if we have a keyed block with an index, the index is wrapped in a source\n\t\t\t\t\treturn each.metadata.keyed && each.index\n\t\t\t\t\t\t? b.call('$.get', each.metadata.index)\n\t\t\t\t\t\t: each.metadata.index;\n\t\t\t\t});\n\n\t\t\t\t// We need to additionally invoke the value attribute signal to register it as a dependency,\n\t\t\t\t// so that when the value is updated, the group binding is updated\n\t\t\t\tlet group_getter = get;\n\n\t\t\t\tif (parent?.type === 'RegularElement') {\n\t\t\t\t\tconst value = /** @type {any[]} */ (\n\t\t\t\t\t\t/** @type {AST.Attribute} */ (\n\t\t\t\t\t\t\tparent.attributes.find(\n\t\t\t\t\t\t\t\t(a) =>\n\t\t\t\t\t\t\t\t\ta.type === 'Attribute' &&\n\t\t\t\t\t\t\t\t\ta.name === 'value' &&\n\t\t\t\t\t\t\t\t\t!is_text_attribute(a) &&\n\t\t\t\t\t\t\t\t\ta.value !== true\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)?.value\n\t\t\t\t\t);\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\tgroup_getter = b.thunk(\n\t\t\t\t\t\t\tb.block([b.stmt(build_attribute_value(value, context).value), b.return(expression)])\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcall = b.call(\n\t\t\t\t\t'$.bind_group',\n\t\t\t\t\tnode.metadata.binding_group_name,\n\t\t\t\t\tb.array(indexes),\n\t\t\t\t\tcontext.state.node,\n\t\t\t\t\tgroup_getter,\n\t\t\t\t\tset ?? get\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('unknown binding ' + node.name);\n\t\t}\n\t}\n\n\t// Bindings need to happen after attribute updates, therefore after the render effect, and in order with events/actions.\n\t// bind:this is a special case as it's one-way and could influence the render effect.\n\tif (node.name === 'this') {\n\t\tcontext.state.init.push(b.stmt(call));\n\t} else {\n\t\tconst has_use =\n\t\t\tparent.type === 'RegularElement' && parent.attributes.find((a) => a.type === 'UseDirective');\n\n\t\tif (has_use) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.effect', b.thunk(call))));\n\t\t} else {\n\t\t\tcontext.state.after_update.push(b.stmt(call));\n\t\t}\n\t}\n}\n", "/** @import { ArrowFunctionExpression, BlockStatement, Expression, FunctionDeclaration, FunctionExpression, Statement } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { add_state_transformers } from './shared/declarations.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {BlockStatement} node\n * @param {ComponentContext} context\n */\nexport function BlockStatement(node, context) {\n\tadd_state_transformers(context);\n\tconst tracing = context.state.scope.tracing;\n\n\tif (tracing !== null) {\n\t\tconst parent =\n\t\t\t/** @type {ArrowFunctionExpression | FunctionDeclaration | FunctionExpression} */ (\n\t\t\t\tcontext.path.at(-1)\n\t\t\t);\n\n\t\tconst is_async = parent.async;\n\n\t\tconst call = b.call(\n\t\t\t'$.trace',\n\t\t\t/** @type {Expression} */ (tracing),\n\t\t\tb.thunk(b.block(node.body.map((n) => /** @type {Statement} */ (context.visit(n)))), is_async)\n\t\t);\n\n\t\treturn b.block([b.return(is_async ? b.await(call) : call)]);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { BreakStatement } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {BreakStatement} node\n * @param {ComponentContext} context\n */\nexport function BreakStatement(node, context) {\n\tif (context.state.analysis.runes || !node.label || node.label.name !== '$') {\n\t\treturn;\n\t}\n\n\tconst in_reactive_statement =\n\t\tcontext.path[1].type === 'LabeledStatement' && context.path[1].label.name === '$';\n\n\tif (in_reactive_statement) {\n\t\treturn b.return();\n\t}\n}\n", "/** @import { CallExpression, Expression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { dev, is_ignored } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\nimport { transform_inspect_rune } from '../../utils.js';\n\n/**\n * @param {CallExpression} node\n * @param {Context} context\n */\nexport function CallExpression(node, context) {\n\tswitch (get_rune(node, context.state.scope)) {\n\t\tcase '$host':\n\t\t\treturn b.id('$$props.$$host');\n\n\t\tcase '$effect.tracking':\n\t\t\treturn b.call('$.effect_tracking');\n\n\t\tcase '$state.snapshot':\n\t\t\treturn b.call(\n\t\t\t\t'$.snapshot',\n\t\t\t\t/** @type {Expression} */ (context.visit(node.arguments[0])),\n\t\t\t\tis_ignored(node, 'state_snapshot_uncloneable') && b.true\n\t\t\t);\n\n\t\tcase '$effect.root':\n\t\t\treturn b.call(\n\t\t\t\t'$.effect_root',\n\t\t\t\t.../** @type {Expression[]} */ (node.arguments.map((arg) => context.visit(arg)))\n\t\t\t);\n\n\t\tcase '$inspect':\n\t\tcase '$inspect().with':\n\t\t\treturn transform_inspect_rune(node, context);\n\t}\n\n\tif (\n\t\tdev &&\n\t\tnode.callee.type === 'MemberExpression' &&\n\t\tnode.callee.object.type === 'Identifier' &&\n\t\tnode.callee.object.name === 'console' &&\n\t\tcontext.state.scope.get('console') === null &&\n\t\tnode.callee.property.type === 'Identifier' &&\n\t\t['debug', 'dir', 'error', 'group', 'groupCollapsed', 'info', 'log', 'trace', 'warn'].includes(\n\t\t\tnode.callee.property.name\n\t\t) &&\n\t\tnode.arguments.some((arg) => arg.type !== 'Literal') // TODO more cases?\n\t) {\n\t\treturn b.call(\n\t\t\tnode.callee,\n\t\t\tb.spread(\n\t\t\t\tb.call(\n\t\t\t\t\t'$.log_if_contains_state',\n\t\t\t\t\tb.literal(node.callee.property.name),\n\t\t\t\t\t.../** @type {Expression[]} */ (node.arguments.map((arg) => context.visit(arg)))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tcontext.next();\n}\n", "/** @import { ClassBody, Expression, Identifier, Literal, MethodDefinition, PrivateIdentifier, PropertyDefinition } from 'estree' */\n/** @import { Context, StateField } from '../types' */\nimport * as b from '#compiler/builders';\nimport { regex_invalid_identifier_chars } from '../../../patterns.js';\nimport { get_rune } from '../../../scope.js';\nimport { should_proxy } from '../utils.js';\n\n/**\n * @param {ClassBody} node\n * @param {Context} context\n */\nexport function ClassBody(node, context) {\n\tif (!context.state.analysis.runes) {\n\t\tcontext.next();\n\t\treturn;\n\t}\n\n\t/** @type {Map<string, StateField>} */\n\tconst public_state = new Map();\n\n\t/** @type {Map<string, StateField>} */\n\tconst private_state = new Map();\n\n\t/** @type {Map<(MethodDefinition|PropertyDefinition)[\"key\"], string>} */\n\tconst definition_names = new Map();\n\n\t/** @type {string[]} */\n\tconst private_ids = [];\n\n\tfor (const definition of node.body) {\n\t\tif (\n\t\t\t(definition.type === 'PropertyDefinition' || definition.type === 'MethodDefinition') &&\n\t\t\t(definition.key.type === 'Identifier' ||\n\t\t\t\tdefinition.key.type === 'PrivateIdentifier' ||\n\t\t\t\tdefinition.key.type === 'Literal')\n\t\t) {\n\t\t\tconst type = definition.key.type;\n\t\t\tconst name = get_name(definition.key, public_state);\n\t\t\tif (!name) continue;\n\n\t\t\t// we store the deconflicted name in the map so that we can access it later\n\t\t\tdefinition_names.set(definition.key, name);\n\n\t\t\tconst is_private = type === 'PrivateIdentifier';\n\t\t\tif (is_private) private_ids.push(name);\n\n\t\t\tif (definition.value?.type === 'CallExpression') {\n\t\t\t\tconst rune = get_rune(definition.value, context.state.scope);\n\t\t\t\tif (\n\t\t\t\t\trune === '$state' ||\n\t\t\t\t\trune === '$state.raw' ||\n\t\t\t\t\trune === '$derived' ||\n\t\t\t\t\trune === '$derived.by'\n\t\t\t\t) {\n\t\t\t\t\t/** @type {StateField} */\n\t\t\t\t\tconst field = {\n\t\t\t\t\t\tkind:\n\t\t\t\t\t\t\trune === '$state'\n\t\t\t\t\t\t\t\t? 'state'\n\t\t\t\t\t\t\t\t: rune === '$state.raw'\n\t\t\t\t\t\t\t\t\t? 'raw_state'\n\t\t\t\t\t\t\t\t\t: rune === '$derived.by'\n\t\t\t\t\t\t\t\t\t\t? 'derived_by'\n\t\t\t\t\t\t\t\t\t\t: 'derived',\n\t\t\t\t\t\t// @ts-expect-error this is set in the next pass\n\t\t\t\t\t\tid: is_private ? definition.key : null\n\t\t\t\t\t};\n\n\t\t\t\t\tif (is_private) {\n\t\t\t\t\t\tprivate_state.set(name, field);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpublic_state.set(name, field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// each `foo = $state()` needs a backing `#foo` field\n\tfor (const [name, field] of public_state) {\n\t\tlet deconflicted = name;\n\t\twhile (private_ids.includes(deconflicted)) {\n\t\t\tdeconflicted = '_' + deconflicted;\n\t\t}\n\n\t\tprivate_ids.push(deconflicted);\n\t\tfield.id = b.private_id(deconflicted);\n\t}\n\n\t/** @type {Array<MethodDefinition | PropertyDefinition>} */\n\tconst body = [];\n\n\tconst child_state = { ...context.state, public_state, private_state };\n\n\t// Replace parts of the class body\n\tfor (const definition of node.body) {\n\t\tif (\n\t\t\tdefinition.type === 'PropertyDefinition' &&\n\t\t\t(definition.key.type === 'Identifier' ||\n\t\t\t\tdefinition.key.type === 'PrivateIdentifier' ||\n\t\t\t\tdefinition.key.type === 'Literal')\n\t\t) {\n\t\t\tconst name = definition_names.get(definition.key);\n\t\t\tif (!name) continue;\n\n\t\t\tconst is_private = definition.key.type === 'PrivateIdentifier';\n\t\t\tconst field = (is_private ? private_state : public_state).get(name);\n\n\t\t\tif (definition.value?.type === 'CallExpression' && field !== undefined) {\n\t\t\t\tlet value = null;\n\n\t\t\t\tif (definition.value.arguments.length > 0) {\n\t\t\t\t\tconst init = /** @type {Expression} **/ (\n\t\t\t\t\t\tcontext.visit(definition.value.arguments[0], child_state)\n\t\t\t\t\t);\n\n\t\t\t\t\tvalue =\n\t\t\t\t\t\tfield.kind === 'state'\n\t\t\t\t\t\t\t? b.call(\n\t\t\t\t\t\t\t\t\t'$.state',\n\t\t\t\t\t\t\t\t\tshould_proxy(init, context.state.scope) ? b.call('$.proxy', init) : init\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: field.kind === 'raw_state'\n\t\t\t\t\t\t\t\t? b.call('$.state', init)\n\t\t\t\t\t\t\t\t: field.kind === 'derived_by'\n\t\t\t\t\t\t\t\t\t? b.call('$.derived', init)\n\t\t\t\t\t\t\t\t\t: b.call('$.derived', b.thunk(init));\n\t\t\t\t} else {\n\t\t\t\t\t// if no arguments, we know it's state as `$derived()` is a compile error\n\t\t\t\t\tvalue = b.call('$.state');\n\t\t\t\t}\n\n\t\t\t\tif (is_private) {\n\t\t\t\t\tbody.push(b.prop_def(field.id, value));\n\t\t\t\t} else {\n\t\t\t\t\t// #foo;\n\t\t\t\t\tconst member = b.member(b.this, field.id);\n\t\t\t\t\tbody.push(b.prop_def(field.id, value));\n\n\t\t\t\t\t// get foo() { return this.#foo; }\n\t\t\t\t\tbody.push(b.method('get', definition.key, [], [b.return(b.call('$.get', member))]));\n\n\t\t\t\t\t// set foo(value) { this.#foo = value; }\n\t\t\t\t\tconst val = b.id('value');\n\n\t\t\t\t\tbody.push(\n\t\t\t\t\t\tb.method(\n\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\tdefinition.key,\n\t\t\t\t\t\t\t[val],\n\t\t\t\t\t\t\t[b.stmt(b.call('$.set', member, val, field.kind === 'state' && b.true))]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tbody.push(/** @type {MethodDefinition} **/ (context.visit(definition, child_state)));\n\t}\n\n\treturn { ...node, body };\n}\n\n/**\n * @param {Identifier | PrivateIdentifier | Literal} node\n * @param {Map<string, StateField>} public_state\n */\nfunction get_name(node, public_state) {\n\tif (node.type === 'Literal') {\n\t\tlet name = node.value?.toString().replace(regex_invalid_identifier_chars, '_');\n\n\t\t// the above could generate conflicts because it has to generate a valid identifier\n\t\t// so stuff like `0` and `1` or `state%` and `state^` will result in the same string\n\t\t// so we have to de-conflict. We can only check `public_state` because private state\n\t\t// can't have literal keys\n\t\twhile (name && public_state.has(name)) {\n\t\t\tname = '_' + name;\n\t\t}\n\t\treturn name;\n\t} else {\n\t\treturn node.name;\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n\n/**\n * @param {AST.Comment} node\n * @param {ComponentContext} context\n */\nexport function Comment(node, context) {\n\t// We'll only get here if comments are not filtered out, which they are unless preserveComments is true\n\tcontext.state.template.push(`<!--${node.data}-->`);\n}\n", "/** @import { BlockStatement, Expression, ExpressionStatement, Identifier, MemberExpression, Pattern, Property, SequenceExpression, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../../types.js' */\nimport { dev, is_ignored } from '../../../../../state.js';\nimport { get_attribute_chunks, object } from '../../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { build_bind_this, memoize_expression, validate_binding } from '../shared/utils.js';\nimport { build_attribute_value } from '../shared/element.js';\nimport { build_event_handler } from './events.js';\nimport { determine_slot } from '../../../../../utils/slot.js';\n\n/**\n * @param {AST.Component | AST.SvelteComponent | AST.SvelteSelf} node\n * @param {string} component_name\n * @param {ComponentContext} context\n * @param {Expression} anchor\n * @returns {Statement}\n */\nexport function build_component(node, component_name, context, anchor = context.state.node) {\n\t/** @type {Array<Property[] | Expression>} */\n\tconst props_and_spreads = [];\n\t/** @type {Array<() => void>} */\n\tconst delayed_props = [];\n\n\t/** @type {ExpressionStatement[]} */\n\tconst lets = [];\n\n\t/** @type {Record<string, typeof context.state>} */\n\tconst states = {\n\t\tdefault: {\n\t\t\t...context.state,\n\t\t\tscope: node.metadata.scopes.default,\n\t\t\ttransform: { ...context.state.transform }\n\t\t}\n\t};\n\n\t/** @type {Record<string, AST.TemplateNode[]>} */\n\tconst children = {};\n\n\t/** @type {Record<string, Expression[]>} */\n\tconst events = {};\n\n\t/** @type {Property[]} */\n\tconst custom_css_props = [];\n\n\t/** @type {Identifier | MemberExpression | SequenceExpression | null} */\n\tlet bind_this = null;\n\n\t/** @type {ExpressionStatement[]} */\n\tconst binding_initializers = [];\n\n\t/**\n\t * If this component has a slot property, it is a named slot within another component. In this case\n\t * the slot scope applies to the component itself, too, and not just its children.\n\t */\n\tlet slot_scope_applies_to_itself = !!determine_slot(node);\n\n\t/**\n\t * Components may have a children prop and also have child nodes. In this case, we assume\n\t * that the child component isn't using render tags yet and pass the slot as $$slots.default.\n\t * We're not doing it for spread attributes, as this would result in too many false positives.\n\t */\n\tlet has_children_prop = false;\n\n\t/**\n\t * @param {Property} prop\n\t * @param {boolean} [delay]\n\t */\n\tfunction push_prop(prop, delay = false) {\n\t\tconst do_push = () => {\n\t\t\tconst current = props_and_spreads.at(-1);\n\t\t\tconst current_is_props = Array.isArray(current);\n\t\t\tconst props = current_is_props ? current : [];\n\t\t\tprops.push(prop);\n\t\t\tif (!current_is_props) {\n\t\t\t\tprops_and_spreads.push(props);\n\t\t\t}\n\t\t};\n\n\t\tif (delay) {\n\t\t\tdelayed_props.push(do_push);\n\t\t} else {\n\t\t\tdo_push();\n\t\t}\n\t}\n\n\tif (slot_scope_applies_to_itself) {\n\t\tfor (const attribute of node.attributes) {\n\t\t\tif (attribute.type === 'LetDirective') {\n\t\t\t\tlets.push(/** @type {ExpressionStatement} */ (context.visit(attribute)));\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'LetDirective') {\n\t\t\tif (!slot_scope_applies_to_itself) {\n\t\t\t\tlets.push(/** @type {ExpressionStatement} */ (context.visit(attribute, states.default)));\n\t\t\t}\n\t\t} else if (attribute.type === 'OnDirective') {\n\t\t\tif (!attribute.expression) {\n\t\t\t\tcontext.state.analysis.needs_props = true;\n\t\t\t}\n\n\t\t\tlet handler = build_event_handler(\n\t\t\t\tattribute.expression,\n\t\t\t\tattribute.metadata.expression,\n\t\t\t\tcontext\n\t\t\t);\n\n\t\t\tif (attribute.modifiers.includes('once')) {\n\t\t\t\thandler = b.call('$.once', handler);\n\t\t\t}\n\n\t\t\t(events[attribute.name] ||= []).push(handler);\n\t\t} else if (attribute.type === 'SpreadAttribute') {\n\t\t\tconst expression = /** @type {Expression} */ (context.visit(attribute));\n\t\t\tif (attribute.metadata.expression.has_state) {\n\t\t\t\tlet value = expression;\n\n\t\t\t\tif (attribute.metadata.expression.has_call) {\n\t\t\t\t\tconst id = b.id(context.state.scope.generate('spread_element'));\n\t\t\t\t\tcontext.state.init.push(b.var(id, b.call('$.derived', b.thunk(value))));\n\t\t\t\t\tvalue = b.call('$.get', id);\n\t\t\t\t}\n\n\t\t\t\tprops_and_spreads.push(b.thunk(value));\n\t\t\t} else {\n\t\t\t\tprops_and_spreads.push(expression);\n\t\t\t}\n\t\t} else if (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name.startsWith('--')) {\n\t\t\t\tcustom_css_props.push(\n\t\t\t\t\tb.init(\n\t\t\t\t\t\tattribute.name,\n\t\t\t\t\t\tbuild_attribute_value(attribute.value, context, (value, metadata) =>\n\t\t\t\t\t\t\t// TODO put the derived in the local block\n\t\t\t\t\t\t\tmetadata.has_call ? memoize_expression(context.state, value) : value\n\t\t\t\t\t\t).value\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (attribute.name === 'slot') {\n\t\t\t\tslot_scope_applies_to_itself = true;\n\t\t\t}\n\n\t\t\tif (attribute.name === 'children') {\n\t\t\t\thas_children_prop = true;\n\t\t\t}\n\n\t\t\tconst { value, has_state } = build_attribute_value(\n\t\t\t\tattribute.value,\n\t\t\t\tcontext,\n\t\t\t\t(value, metadata) => {\n\t\t\t\t\tif (!metadata.has_state) return value;\n\n\t\t\t\t\t// When we have a non-simple computation, anything other than an Identifier or Member expression,\n\t\t\t\t\t// then there's a good chance it needs to be memoized to avoid over-firing when read within the\n\t\t\t\t\t// child component (e.g. `active={i === index}`)\n\t\t\t\t\tconst should_wrap_in_derived = get_attribute_chunks(attribute.value).some((n) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tn.type === 'ExpressionTag' &&\n\t\t\t\t\t\t\tn.expression.type !== 'Identifier' &&\n\t\t\t\t\t\t\tn.expression.type !== 'MemberExpression'\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn should_wrap_in_derived ? memoize_expression(context.state, value) : value;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (has_state) {\n\t\t\t\tpush_prop(b.get(attribute.name, [b.return(value)]));\n\t\t\t} else {\n\t\t\t\tpush_prop(b.init(attribute.name, value));\n\t\t\t}\n\t\t} else if (attribute.type === 'BindDirective') {\n\t\t\tconst expression = /** @type {Expression} */ (context.visit(attribute.expression));\n\n\t\t\tif (\n\t\t\t\tdev &&\n\t\t\t\tattribute.name !== 'this' &&\n\t\t\t\t!is_ignored(node, 'ownership_invalid_binding') &&\n\t\t\t\t// bind:x={() => x.y, y => x.y = y} will be handled by the assignment expression binding validation\n\t\t\t\tattribute.expression.type !== 'SequenceExpression'\n\t\t\t) {\n\t\t\t\tconst left = object(attribute.expression);\n\t\t\t\tconst binding = left && context.state.scope.get(left.name);\n\n\t\t\t\tif (binding?.kind === 'bindable_prop' || binding?.kind === 'prop') {\n\t\t\t\t\tcontext.state.analysis.needs_mutation_validation = true;\n\t\t\t\t\tbinding_initializers.push(\n\t\t\t\t\t\tb.stmt(\n\t\t\t\t\t\t\tb.call(\n\t\t\t\t\t\t\t\t'$$ownership_validator.binding',\n\t\t\t\t\t\t\t\tb.literal(binding.node.name),\n\t\t\t\t\t\t\t\tb.id(component_name),\n\t\t\t\t\t\t\t\tb.thunk(expression)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expression.type === 'SequenceExpression') {\n\t\t\t\tif (attribute.name === 'this') {\n\t\t\t\t\tbind_this = attribute.expression;\n\t\t\t\t} else {\n\t\t\t\t\tconst [get, set] = expression.expressions;\n\t\t\t\t\tconst get_id = b.id(context.state.scope.generate('bind_get'));\n\t\t\t\t\tconst set_id = b.id(context.state.scope.generate('bind_set'));\n\n\t\t\t\t\tcontext.state.init.push(b.var(get_id, get));\n\t\t\t\t\tcontext.state.init.push(b.var(set_id, set));\n\n\t\t\t\t\tpush_prop(b.get(attribute.name, [b.return(b.call(get_id))]));\n\t\t\t\t\tpush_prop(b.set(attribute.name, [b.stmt(b.call(set_id, b.id('$$value')))]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tdev &&\n\t\t\t\t\texpression.type === 'MemberExpression' &&\n\t\t\t\t\tcontext.state.analysis.runes &&\n\t\t\t\t\t!is_ignored(node, 'binding_property_non_reactive')\n\t\t\t\t) {\n\t\t\t\t\tvalidate_binding(context.state, attribute, expression);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name === 'this') {\n\t\t\t\t\tbind_this = attribute.expression;\n\t\t\t\t} else {\n\t\t\t\t\tconst is_store_sub =\n\t\t\t\t\t\tattribute.expression.type === 'Identifier' &&\n\t\t\t\t\t\tcontext.state.scope.get(attribute.expression.name)?.kind === 'store_sub';\n\n\t\t\t\t\t// Delay prop pushes so bindings come at the end, to avoid spreads overwriting them\n\t\t\t\t\tif (is_store_sub) {\n\t\t\t\t\t\tpush_prop(\n\t\t\t\t\t\t\tb.get(attribute.name, [b.stmt(b.call('$.mark_store_binding')), b.return(expression)]),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpush_prop(b.get(attribute.name, [b.return(expression)]), true);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst assignment = b.assignment(\n\t\t\t\t\t\t'=',\n\t\t\t\t\t\t/** @type {Pattern} */ (attribute.expression),\n\t\t\t\t\t\tb.id('$$value')\n\t\t\t\t\t);\n\n\t\t\t\t\tpush_prop(\n\t\t\t\t\t\tb.set(attribute.name, [b.stmt(/** @type {Expression} */ (context.visit(assignment)))]),\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdelayed_props.forEach((fn) => fn());\n\n\tif (slot_scope_applies_to_itself) {\n\t\tcontext.state.init.push(...lets);\n\t}\n\n\tif (Object.keys(events).length > 0) {\n\t\tconst events_expression = b.object(\n\t\t\tObject.keys(events).map((name) =>\n\t\t\t\tb.init(name, events[name].length > 1 ? b.array(events[name]) : events[name][0])\n\t\t\t)\n\t\t);\n\t\tpush_prop(b.init('$$events', events_expression));\n\t}\n\n\t/** @type {Statement[]} */\n\tconst snippet_declarations = [];\n\n\t/** @type {import('estree').Property[]} */\n\tconst serialized_slots = [];\n\n\t// Group children by slot\n\tfor (const child of node.fragment.nodes) {\n\t\tif (child.type === 'SnippetBlock') {\n\t\t\t// the SnippetBlock visitor adds a declaration to `init`, but if it's directly\n\t\t\t// inside a component then we want to hoist them into a block so that they\n\t\t\t// can be used as props without creating conflicts\n\t\t\tcontext.visit(child, {\n\t\t\t\t...context.state,\n\t\t\t\tinit: snippet_declarations\n\t\t\t});\n\n\t\t\tpush_prop(b.prop('init', child.expression, child.expression));\n\n\t\t\t// Interop: allows people to pass snippets when component still uses slots\n\t\t\tserialized_slots.push(\n\t\t\t\tb.init(child.expression.name === 'children' ? 'default' : child.expression.name, b.true)\n\t\t\t);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet slot_name = determine_slot(child) ?? 'default';\n\n\t\t(children[slot_name] ||= []).push(child);\n\t}\n\n\t// Serialize each slot\n\tfor (const slot_name of Object.keys(children)) {\n\t\tconst block = /** @type {BlockStatement} */ (\n\t\t\tcontext.visit(\n\t\t\t\t{\n\t\t\t\t\t...node.fragment,\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tnodes: children[slot_name]\n\t\t\t\t},\n\t\t\t\tslot_name === 'default'\n\t\t\t\t\t? slot_scope_applies_to_itself\n\t\t\t\t\t\t? context.state\n\t\t\t\t\t\t: states.default\n\t\t\t\t\t: {\n\t\t\t\t\t\t\t...context.state,\n\t\t\t\t\t\t\tscope: node.metadata.scopes[slot_name],\n\t\t\t\t\t\t\ttransform: { ...context.state.transform }\n\t\t\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\tif (block.body.length === 0) continue;\n\n\t\tconst slot_fn = b.arrow(\n\t\t\t[b.id('$$anchor'), b.id('$$slotProps')],\n\t\t\tb.block([\n\t\t\t\t...(slot_name === 'default' && !slot_scope_applies_to_itself ? lets : []),\n\t\t\t\t...block.body\n\t\t\t])\n\t\t);\n\n\t\tif (slot_name === 'default' && !has_children_prop) {\n\t\t\tif (\n\t\t\t\tlets.length === 0 &&\n\t\t\t\tchildren.default.every(\n\t\t\t\t\t(node) =>\n\t\t\t\t\t\tnode.type !== 'SvelteFragment' ||\n\t\t\t\t\t\t!node.attributes.some((attr) => attr.type === 'LetDirective')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// create `children` prop...\n\t\t\t\tpush_prop(\n\t\t\t\t\tb.init(\n\t\t\t\t\t\t'children',\n\t\t\t\t\t\tdev ? b.call('$.wrap_snippet', b.id(context.state.analysis.name), slot_fn) : slot_fn\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// and `$$slots.default: true` so that `<slot>` on the child works\n\t\t\t\tserialized_slots.push(b.init(slot_name, b.true));\n\t\t\t} else {\n\t\t\t\t// create `$$slots.default`...\n\t\t\t\tserialized_slots.push(b.init(slot_name, slot_fn));\n\n\t\t\t\t// and a `children` prop that errors\n\t\t\t\tpush_prop(b.init('children', b.id('$.invalid_default_snippet')));\n\t\t\t}\n\t\t} else {\n\t\t\tserialized_slots.push(b.init(slot_name, slot_fn));\n\t\t}\n\t}\n\n\tif (serialized_slots.length > 0) {\n\t\tpush_prop(b.init('$$slots', b.object(serialized_slots)));\n\t}\n\n\tif (\n\t\t!context.state.analysis.runes &&\n\t\tnode.attributes.some((attribute) => attribute.type === 'BindDirective')\n\t) {\n\t\tpush_prop(b.init('$$legacy', b.true));\n\t}\n\n\tconst props_expression =\n\t\tprops_and_spreads.length === 0 ||\n\t\t(props_and_spreads.length === 1 && Array.isArray(props_and_spreads[0]))\n\t\t\t? b.object(/** @type {Property[]} */ (props_and_spreads[0]) || [])\n\t\t\t: b.call(\n\t\t\t\t\t'$.spread_props',\n\t\t\t\t\t...props_and_spreads.map((p) => (Array.isArray(p) ? b.object(p) : p))\n\t\t\t\t);\n\n\t/** @param {Expression} node_id */\n\tlet fn = (node_id) => {\n\t\treturn b.call(\n\t\t\t// TODO We can remove this ternary once we remove legacy mode, since in runes mode dynamic components\n\t\t\t// will be handled separately through the `$.component` function, and then the component name will\n\t\t\t// always be referenced through just the identifier here.\n\t\t\tnode.type === 'SvelteComponent'\n\t\t\t\t? component_name\n\t\t\t\t: /** @type {Expression} */ (context.visit(b.member_id(component_name))),\n\t\t\tnode_id,\n\t\t\tprops_expression\n\t\t);\n\t};\n\n\tif (bind_this !== null) {\n\t\tconst prev = fn;\n\n\t\tfn = (node_id) => {\n\t\t\treturn build_bind_this(bind_this, prev(node_id), context);\n\t\t};\n\t}\n\n\tconst statements = [...snippet_declarations];\n\n\tif (node.type === 'SvelteComponent') {\n\t\tconst prev = fn;\n\n\t\tfn = (node_id) => {\n\t\t\treturn b.call(\n\t\t\t\t'$.component',\n\t\t\t\tnode_id,\n\t\t\t\tb.thunk(/** @type {Expression} */ (context.visit(node.expression))),\n\t\t\t\tb.arrow(\n\t\t\t\t\t[b.id('$$anchor'), b.id(component_name)],\n\t\t\t\t\tb.block([...binding_initializers, b.stmt(prev(b.id('$$anchor')))])\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\t} else {\n\t\tstatements.push(...binding_initializers);\n\t}\n\n\tif (Object.keys(custom_css_props).length > 0) {\n\t\tcontext.state.template.push(\n\t\t\tcontext.state.metadata.namespace === 'svg'\n\t\t\t\t? '<g><!></g>'\n\t\t\t\t: '<svelte-css-wrapper style=\"display: contents\"><!></svelte-css-wrapper>'\n\t\t);\n\n\t\tstatements.push(\n\t\t\tb.stmt(b.call('$.css_props', anchor, b.thunk(b.object(custom_css_props)))),\n\t\t\tb.stmt(fn(b.member(anchor, 'lastChild'))),\n\t\t\tb.stmt(b.call('$.reset', anchor))\n\t\t);\n\t} else {\n\t\tcontext.state.template.push('<!>');\n\t\tstatements.push(b.stmt(fn(anchor)));\n\t}\n\n\treturn statements.length > 1 ? b.block(statements) : statements[0];\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { build_component } from './shared/component.js';\n\n/**\n * @param {AST.Component} node\n * @param {ComponentContext} context\n */\nexport function Component(node, context) {\n\tif (node.metadata.dynamic) {\n\t\t// Handle dynamic references to what seems like static inline components\n\t\tconst component = build_component(node, '$$component', context, b.id('$$anchor'));\n\t\tcontext.state.init.push(\n\t\t\tb.stmt(\n\t\t\t\tb.call(\n\t\t\t\t\t'$.component',\n\t\t\t\t\tcontext.state.node,\n\t\t\t\t\t// TODO use untrack here to not update when binding changes?\n\t\t\t\t\t// Would align with Svelte 4 behavior, but it's arguably nicer/expected to update this\n\t\t\t\t\tb.thunk(/** @type {Expression} */ (context.visit(b.member_id(node.name)))),\n\t\t\t\t\tb.arrow([b.id('$$anchor'), b.id('$$component')], b.block([component]))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\treturn;\n\t}\n\n\tconst component = build_component(node, node.name, context);\n\tcontext.state.init.push(component);\n}\n", "/** @import { Expression, Pattern } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { dev } from '../../../../state.js';\nimport { extract_identifiers } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { create_derived } from '../utils.js';\nimport { get_value } from './shared/declarations.js';\n\n/**\n * @param {AST.ConstTag} node\n * @param {ComponentContext} context\n */\nexport function ConstTag(node, context) {\n\tconst declaration = node.declaration.declarations[0];\n\t// TODO we can almost certainly share some code with $derived(...)\n\tif (declaration.id.type === 'Identifier') {\n\t\tcontext.state.init.push(\n\t\t\tb.const(\n\t\t\t\tdeclaration.id,\n\t\t\t\tcreate_derived(\n\t\t\t\t\tcontext.state,\n\t\t\t\t\tb.thunk(/** @type {Expression} */ (context.visit(declaration.init)))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tcontext.state.transform[declaration.id.name] = { read: get_value };\n\n\t\t// we need to eagerly evaluate the expression in order to hit any\n\t\t// 'Cannot access x before initialization' errors\n\t\tif (dev) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.get', declaration.id)));\n\t\t}\n\t} else {\n\t\tconst identifiers = extract_identifiers(declaration.id);\n\t\tconst tmp = b.id(context.state.scope.generate('computed_const'));\n\n\t\tconst transform = { ...context.state.transform };\n\n\t\t// Make all identifiers that are declared within the following computed regular\n\t\t// variables, as they are not signals in that context yet\n\t\tfor (const node of identifiers) {\n\t\t\tdelete transform[node.name];\n\t\t}\n\n\t\tconst child_state = { ...context.state, transform };\n\n\t\t// TODO optimise the simple `{ x } = y` case — we can just return `y`\n\t\t// instead of destructuring it only to return a new object\n\t\tconst fn = b.arrow(\n\t\t\t[],\n\t\t\tb.block([\n\t\t\t\tb.const(\n\t\t\t\t\t/** @type {Pattern} */ (context.visit(declaration.id, child_state)),\n\t\t\t\t\t/** @type {Expression} */ (context.visit(declaration.init, child_state))\n\t\t\t\t),\n\t\t\t\tb.return(b.object(identifiers.map((node) => b.prop('init', node, node))))\n\t\t\t])\n\t\t);\n\n\t\tcontext.state.init.push(b.const(tmp, create_derived(context.state, fn)));\n\n\t\t// we need to eagerly evaluate the expression in order to hit any\n\t\t// 'Cannot access x before initialization' errors\n\t\tif (dev) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.get', tmp)));\n\t\t}\n\n\t\tfor (const node of identifiers) {\n\t\t\tcontext.state.transform[node.name] = {\n\t\t\t\tread: (node) => b.member(b.call('$.get', tmp), node)\n\t\t\t};\n\t\t}\n\t}\n}\n", "/** @import { Expression} from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.DebugTag} node\n * @param {ComponentContext} context\n */\nexport function DebugTag(node, context) {\n\tconst object = b.object(\n\t\tnode.identifiers.map((identifier) => {\n\t\t\tconst visited = b.call('$.snapshot', /** @type {Expression} */ (context.visit(identifier)));\n\n\t\t\treturn b.prop(\n\t\t\t\t'init',\n\t\t\t\tidentifier,\n\t\t\t\tcontext.state.analysis.runes ? visited : b.call('$.untrack', b.thunk(visited))\n\t\t\t);\n\t\t})\n\t);\n\n\tconst call = b.call('console.log', object);\n\n\tcontext.state.init.push(\n\t\tb.stmt(b.call('$.template_effect', b.thunk(b.block([b.stmt(call), b.debugger]))))\n\t);\n}\n", "/** @import { BlockStatement, Expression, Identifier, Pattern, Statement } from 'estree' */\n/** @import { AST, Binding } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n/** @import { Scope } from '../../../scope' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE\n} from '../../../../../constants.js';\nimport { dev } from '../../../../state.js';\nimport { extract_paths, object } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { build_getter } from '../utils.js';\nimport { get_value } from './shared/declarations.js';\n\n/**\n * @param {AST.EachBlock} node\n * @param {ComponentContext} context\n */\nexport function EachBlock(node, context) {\n\tconst each_node_meta = node.metadata;\n\n\t// expression should be evaluated in the parent scope, not the scope\n\t// created by the each block itself\n\tconst collection = /** @type {Expression} */ (\n\t\tcontext.visit(node.expression, {\n\t\t\t...context.state,\n\t\t\tscope: /** @type {Scope} */ (context.state.scope.parent)\n\t\t})\n\t);\n\n\tif (!each_node_meta.is_controlled) {\n\t\tcontext.state.template.push('<!>');\n\t}\n\n\tlet flags = 0;\n\n\tif (node.metadata.keyed && node.index) {\n\t\tflags |= EACH_INDEX_REACTIVE;\n\t}\n\n\tconst key_is_item =\n\t\tnode.key?.type === 'Identifier' &&\n\t\tnode.context?.type === 'Identifier' &&\n\t\tnode.context?.name === node.key.name;\n\n\t// if the each block expression references a store subscription, we need\n\t// to use mutable stores internally\n\tlet uses_store;\n\n\tfor (const binding of node.metadata.expression.dependencies) {\n\t\tif (binding.kind === 'store_sub') {\n\t\t\tuses_store = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (const binding of node.metadata.expression.dependencies) {\n\t\t// if the expression doesn't reference any external state, we don't need to\n\t\t// create a source for the item. TODO cover more cases (e.g. `x.filter(y)`\n\t\t// should also qualify if `y` doesn't reference state, and non-state\n\t\t// bindings should also be fine\n\t\tif (binding.scope.function_depth >= context.state.scope.function_depth) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!context.state.analysis.runes || !key_is_item || uses_store) {\n\t\t\tflags |= EACH_ITEM_REACTIVE;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (context.state.analysis.runes && !uses_store) {\n\t\tflags |= EACH_ITEM_IMMUTABLE;\n\t}\n\n\t// Since `animate:` can only appear on elements that are the sole child of a keyed each block,\n\t// we can determine at compile time whether the each block is animated or not (in which\n\t// case it should measure animated elements before and after reconciliation).\n\tif (\n\t\tnode.key &&\n\t\tnode.body.nodes.some((child) => {\n\t\t\tif (child.type !== 'RegularElement' && child.type !== 'SvelteElement') return false;\n\t\t\treturn child.attributes.some((attr) => attr.type === 'AnimateDirective');\n\t\t})\n\t) {\n\t\tflags |= EACH_IS_ANIMATED;\n\t}\n\n\tif (each_node_meta.is_controlled) {\n\t\tflags |= EACH_IS_CONTROLLED;\n\t}\n\n\t// If the array is a store expression, we need to invalidate it when the array is changed.\n\t// This doesn't catch all cases, but all the ones that Svelte 4 catches, too.\n\tlet store_to_invalidate = '';\n\tif (node.expression.type === 'Identifier' || node.expression.type === 'MemberExpression') {\n\t\tconst id = object(node.expression);\n\t\tif (id) {\n\t\t\tconst binding = context.state.scope.get(id.name);\n\t\t\tif (binding?.kind === 'store_sub') {\n\t\t\t\tstore_to_invalidate = id.name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Legacy mode: find the parent each blocks which contain the arrays to invalidate\n\tconst indirect_dependencies = collect_parent_each_blocks(context).flatMap((block) => {\n\t\tconst array = /** @type {Expression} */ (context.visit(block.expression));\n\t\tconst transitive_dependencies = build_transitive_dependencies(\n\t\t\tblock.metadata.expression.dependencies,\n\t\t\tcontext\n\t\t);\n\t\treturn [array, ...transitive_dependencies];\n\t});\n\n\t/** @type {Identifier | null} */\n\tlet collection_id = null;\n\n\t// Check if inner scope shadows something from outer scope.\n\t// This is necessary because we need access to the array expression of the each block\n\t// in the inner scope if bindings are used, in order to invalidate the array.\n\tfor (const [name] of context.state.scope.declarations) {\n\t\tif (context.state.scope.parent?.get(name) != null) {\n\t\t\tcollection_id = context.state.scope.root.unique('$$array');\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (collection_id) {\n\t\tindirect_dependencies.push(b.call(collection_id));\n\t} else {\n\t\tindirect_dependencies.push(collection);\n\n\t\tconst transitive_dependencies = build_transitive_dependencies(\n\t\t\teach_node_meta.expression.dependencies,\n\t\t\tcontext\n\t\t);\n\t\tindirect_dependencies.push(...transitive_dependencies);\n\t}\n\n\tconst child_state = {\n\t\t...context.state,\n\t\ttransform: { ...context.state.transform },\n\t\tstore_to_invalidate\n\t};\n\n\t/** The state used when generating the key function, if necessary */\n\tconst key_state = {\n\t\t...context.state,\n\t\ttransform: { ...context.state.transform }\n\t};\n\n\t// We need to generate a unique identifier in case there's a bind:group below\n\t// which needs a reference to the index\n\tconst index =\n\t\teach_node_meta.contains_group_binding || !node.index ? each_node_meta.index : b.id(node.index);\n\tconst item = node.context?.type === 'Identifier' ? node.context : b.id('$$item');\n\n\tlet uses_index = each_node_meta.contains_group_binding;\n\tlet key_uses_index = false;\n\n\tif (node.index) {\n\t\tchild_state.transform[node.index] = {\n\t\t\tread: (node) => {\n\t\t\t\tuses_index = true;\n\t\t\t\treturn (flags & EACH_INDEX_REACTIVE) !== 0 ? get_value(node) : node;\n\t\t\t}\n\t\t};\n\n\t\tkey_state.transform[node.index] = {\n\t\t\tread: (node) => {\n\t\t\t\tkey_uses_index = true;\n\t\t\t\treturn node;\n\t\t\t}\n\t\t};\n\t}\n\n\t/** @type {Statement[]} */\n\tconst declarations = [];\n\n\tconst invalidate = b.call(\n\t\t'$.invalidate_inner_signals',\n\t\tb.thunk(b.sequence(indirect_dependencies))\n\t);\n\n\tconst invalidate_store = store_to_invalidate\n\t\t? b.call('$.invalidate_store', b.id('$$stores'), b.literal(store_to_invalidate))\n\t\t: undefined;\n\n\t/** @type {Expression[]} */\n\tconst sequence = [];\n\tif (!context.state.analysis.runes) sequence.push(invalidate);\n\tif (invalidate_store) sequence.push(invalidate_store);\n\n\tif (node.context?.type === 'Identifier') {\n\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(node.context.name));\n\n\t\tchild_state.transform[node.context.name] = {\n\t\t\tread: (node) => {\n\t\t\t\tif (binding.reassigned) {\n\t\t\t\t\t// we need to do `array[$$index]` instead of `$$item` or whatever\n\t\t\t\t\t// TODO 6.0 this only applies in legacy mode, reassignments are\n\t\t\t\t\t// forbidden in runes mode\n\t\t\t\t\treturn b.member(\n\t\t\t\t\t\tcollection_id ? b.call(collection_id) : collection,\n\t\t\t\t\t\t(flags & EACH_INDEX_REACTIVE) !== 0 ? get_value(index) : index,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (flags & EACH_ITEM_REACTIVE) !== 0 ? get_value(node) : node;\n\t\t\t},\n\t\t\tassign: (_, value) => {\n\t\t\t\tuses_index = true;\n\n\t\t\t\tconst left = b.member(\n\t\t\t\t\tcollection_id ? b.call(collection_id) : collection,\n\t\t\t\t\t(flags & EACH_INDEX_REACTIVE) !== 0 ? get_value(index) : index,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\treturn b.sequence([b.assignment('=', left, value), ...sequence]);\n\t\t\t},\n\t\t\tmutate: (_, mutation) => {\n\t\t\t\tuses_index = true;\n\t\t\t\treturn b.sequence([mutation, ...sequence]);\n\t\t\t}\n\t\t};\n\n\t\tdelete key_state.transform[node.context.name];\n\t} else if (node.context) {\n\t\tconst unwrapped = (flags & EACH_ITEM_REACTIVE) !== 0 ? b.call('$.get', item) : item;\n\n\t\tfor (const path of extract_paths(node.context)) {\n\t\t\tconst name = /** @type {Identifier} */ (path.node).name;\n\t\t\tconst needs_derived = path.has_default_value; // to ensure that default value is only called once\n\n\t\t\tconst fn = b.thunk(\n\t\t\t\t/** @type {Expression} */ (context.visit(path.expression?.(unwrapped), child_state))\n\t\t\t);\n\n\t\t\tdeclarations.push(b.let(path.node, needs_derived ? b.call('$.derived_safe_equal', fn) : fn));\n\n\t\t\tconst read = needs_derived ? get_value : b.call;\n\n\t\t\tchild_state.transform[name] = {\n\t\t\t\tread,\n\t\t\t\tassign: (_, value) => {\n\t\t\t\t\tconst left = /** @type {Pattern} */ (path.update_expression(unwrapped));\n\t\t\t\t\treturn b.sequence([b.assignment('=', left, value), ...sequence]);\n\t\t\t\t},\n\t\t\t\tmutate: (_, mutation) => {\n\t\t\t\t\treturn b.sequence([mutation, ...sequence]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// we need to eagerly evaluate the expression in order to hit any\n\t\t\t// 'Cannot access x before initialization' errors\n\t\t\tif (dev) {\n\t\t\t\tdeclarations.push(b.stmt(read(b.id(name))));\n\t\t\t}\n\n\t\t\tdelete key_state.transform[name];\n\t\t}\n\t}\n\n\tconst block = /** @type {BlockStatement} */ (context.visit(node.body, child_state));\n\n\t/** @type {Expression} */\n\tlet key_function = b.id('$.index');\n\n\tif (node.metadata.keyed) {\n\t\tconst pattern = /** @type {Pattern} */ (node.context); // can only be keyed when a context is provided\n\t\tconst expression = /** @type {Expression} */ (\n\t\t\tcontext.visit(/** @type {Expression} */ (node.key), key_state)\n\t\t);\n\n\t\tkey_function = b.arrow(key_uses_index ? [pattern, index] : [pattern], expression);\n\t}\n\n\tif (node.index && each_node_meta.contains_group_binding) {\n\t\t// We needed to create a unique identifier for the index above, but we want to use the\n\t\t// original index name in the template, therefore create another binding\n\t\tdeclarations.push(b.let(node.index, index));\n\t}\n\n\tif (dev && node.metadata.keyed) {\n\t\tcontext.state.init.push(\n\t\t\tb.stmt(b.call('$.validate_each_keys', b.thunk(collection), key_function))\n\t\t);\n\t}\n\n\tconst render_args = [b.id('$$anchor'), item];\n\tif (uses_index || collection_id) render_args.push(index);\n\tif (collection_id) render_args.push(collection_id);\n\n\t/** @type {Expression[]} */\n\tconst args = [\n\t\tcontext.state.node,\n\t\tb.literal(flags),\n\t\tb.thunk(collection),\n\t\tkey_function,\n\t\tb.arrow(render_args, b.block(declarations.concat(block.body)))\n\t];\n\n\tif (node.fallback) {\n\t\targs.push(\n\t\t\tb.arrow([b.id('$$anchor')], /** @type {BlockStatement} */ (context.visit(node.fallback)))\n\t\t);\n\t}\n\n\tcontext.state.init.push(b.stmt(b.call('$.each', ...args)));\n}\n\n/**\n * @param {ComponentContext} context\n */\nfunction collect_parent_each_blocks(context) {\n\treturn /** @type {AST.EachBlock[]} */ (context.path.filter((node) => node.type === 'EachBlock'));\n}\n\n/**\n * @param {Set<Binding>} references\n * @param {ComponentContext} context\n */\nfunction build_transitive_dependencies(references, context) {\n\t/** @type {Set<Binding>} */\n\tconst dependencies = new Set();\n\n\tfor (const ref of references) {\n\t\tconst deps = collect_transitive_dependencies(ref);\n\t\tfor (const dep of deps) {\n\t\t\tdependencies.add(dep);\n\t\t}\n\t}\n\n\treturn [...dependencies].map((dep) => build_getter({ ...dep.node }, context.state));\n}\n\n/**\n * @param {Binding} binding\n * @param {Set<Binding>} seen\n * @returns {Binding[]}\n */\nfunction collect_transitive_dependencies(binding, seen = new Set()) {\n\tif (binding.kind !== 'legacy_reactive') return [];\n\n\tfor (const dep of binding.legacy_dependencies) {\n\t\tif (!seen.has(dep)) {\n\t\t\tseen.add(dep);\n\t\t\tfor (const transitive_dep of collect_transitive_dependencies(dep, seen)) {\n\t\t\t\tseen.add(transitive_dep);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [...seen];\n}\n", "/** @import { ExportNamedDeclaration } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {ExportNamedDeclaration} node\n * @param {ComponentContext} context\n */\nexport function ExportNamedDeclaration(node, context) {\n\tif (context.state.is_instance) {\n\t\tif (node.declaration) {\n\t\t\treturn context.visit(node.declaration);\n\t\t}\n\n\t\treturn b.empty;\n\t}\n\n\treturn context.next();\n}\n", "/** @import { Expression, ExpressionStatement } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { get_rune } from '../../../scope.js';\n\n/**\n * @param {ExpressionStatement} node\n * @param {ComponentContext} context\n */\nexport function ExpressionStatement(node, context) {\n\tif (node.expression.type === 'CallExpression') {\n\t\tconst rune = get_rune(node.expression, context.state.scope);\n\n\t\tif (rune === '$effect' || rune === '$effect.pre') {\n\t\t\tconst callee = rune === '$effect' ? '$.user_effect' : '$.user_pre_effect';\n\t\t\tconst func = /** @type {Expression} */ (context.visit(node.expression.arguments[0]));\n\n\t\t\tconst expr = b.call(callee, /** @type {Expression} */ (func));\n\t\t\texpr.callee.loc = node.expression.callee.loc; // ensure correct mapping\n\n\t\t\treturn b.stmt(expr);\n\t\t}\n\n\t\tif (rune === '$inspect.trace') {\n\t\t\treturn b.empty;\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { Expression, Identifier, Statement, TemplateElement } from 'estree' */\n/** @import { AST, Namespace } from '#compiler' */\n/** @import { SourceLocation } from '#shared' */\n/** @import { ComponentClientTransformState, ComponentContext } from '../types' */\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../../../constants.js';\nimport { dev } from '../../../../state.js';\nimport * as b from '#compiler/builders';\nimport { sanitize_template_string } from '../../../../utils/sanitize_template_string.js';\nimport { clean_nodes, infer_namespace } from '../../utils.js';\nimport { process_children } from './shared/fragment.js';\nimport { build_render_statement } from './shared/utils.js';\n\n/**\n * @param {AST.Fragment} node\n * @param {ComponentContext} context\n */\nexport function Fragment(node, context) {\n\t// Creates a new block which looks roughly like this:\n\t// ```js\n\t// // hoisted:\n\t// const block_name = $.template(`...`);\n\t//\n\t// // for the main block:\n\t// const id = block_name();\n\t// // init stuff and possibly render effect\n\t// $.append($$anchor, id);\n\t// ```\n\t// Adds the hoisted parts to `context.state.hoisted` and returns the statements of the main block.\n\n\tconst parent = context.path.at(-1) ?? node;\n\n\tconst namespace = infer_namespace(context.state.metadata.namespace, parent, node.nodes);\n\n\tconst { hoisted, trimmed, is_standalone, is_text_first } = clean_nodes(\n\t\tparent,\n\t\tnode.nodes,\n\t\tcontext.path,\n\t\tnamespace,\n\t\tcontext.state,\n\t\tcontext.state.preserve_whitespace,\n\t\tcontext.state.options.preserveComments\n\t);\n\n\tif (hoisted.length === 0 && trimmed.length === 0) {\n\t\treturn b.block([]);\n\t}\n\n\tconst is_single_element = trimmed.length === 1 && trimmed[0].type === 'RegularElement';\n\tconst is_single_child_not_needing_template =\n\t\ttrimmed.length === 1 &&\n\t\t(trimmed[0].type === 'SvelteFragment' ||\n\t\t\ttrimmed[0].type === 'TitleElement' ||\n\t\t\t(trimmed[0].type === 'IfBlock' && trimmed[0].elseif));\n\n\tconst template_name = context.state.scope.root.unique('root'); // TODO infer name from parent\n\n\t/** @type {Statement[]} */\n\tconst body = [];\n\n\t/** @type {Statement | undefined} */\n\tlet close = undefined;\n\n\t/** @type {ComponentClientTransformState} */\n\tconst state = {\n\t\t...context.state,\n\t\tinit: [],\n\t\tupdate: [],\n\t\texpressions: [],\n\t\tafter_update: [],\n\t\ttemplate: [],\n\t\tlocations: [],\n\t\ttransform: { ...context.state.transform },\n\t\tmetadata: {\n\t\t\tcontext: {\n\t\t\t\ttemplate_needs_import_node: false,\n\t\t\t\ttemplate_contains_script_tag: false\n\t\t\t},\n\t\t\tnamespace,\n\t\t\tbound_contenteditable: context.state.metadata.bound_contenteditable\n\t\t}\n\t};\n\n\tfor (const node of hoisted) {\n\t\tcontext.visit(node, state);\n\t}\n\n\tif (is_text_first) {\n\t\t// skip over inserted comment\n\t\tbody.push(b.stmt(b.call('$.next')));\n\t}\n\n\t/**\n\t * @param {Identifier} template_name\n\t * @param {Expression[]} args\n\t */\n\tconst add_template = (template_name, args) => {\n\t\tlet call = b.call(get_template_function(namespace, state), ...args);\n\t\tif (dev) {\n\t\t\tcall = b.call(\n\t\t\t\t'$.add_locations',\n\t\t\t\tcall,\n\t\t\t\tb.member(b.id(context.state.analysis.name), '$.FILENAME', true),\n\t\t\t\tbuild_locations(state.locations)\n\t\t\t);\n\t\t}\n\n\t\tcontext.state.hoisted.push(b.var(template_name, call));\n\t};\n\n\tif (is_single_element) {\n\t\tconst element = /** @type {AST.RegularElement} */ (trimmed[0]);\n\n\t\tconst id = b.id(context.state.scope.generate(element.name));\n\n\t\tcontext.visit(element, {\n\t\t\t...state,\n\t\t\tnode: id\n\t\t});\n\n\t\t/** @type {Expression[]} */\n\t\tconst args = [join_template(state.template)];\n\n\t\tif (state.metadata.context.template_needs_import_node) {\n\t\t\targs.push(b.literal(TEMPLATE_USE_IMPORT_NODE));\n\t\t}\n\n\t\tadd_template(template_name, args);\n\n\t\tbody.push(b.var(id, b.call(template_name)));\n\t\tclose = b.stmt(b.call('$.append', b.id('$$anchor'), id));\n\t} else if (is_single_child_not_needing_template) {\n\t\tcontext.visit(trimmed[0], state);\n\t} else if (trimmed.length === 1 && trimmed[0].type === 'Text') {\n\t\tconst id = b.id(context.state.scope.generate('text'));\n\t\tbody.push(b.var(id, b.call('$.text', b.literal(trimmed[0].data))));\n\t\tclose = b.stmt(b.call('$.append', b.id('$$anchor'), id));\n\t} else if (trimmed.length > 0) {\n\t\tconst id = b.id(context.state.scope.generate('fragment'));\n\n\t\tconst use_space_template =\n\t\t\ttrimmed.some((node) => node.type === 'ExpressionTag') &&\n\t\t\ttrimmed.every((node) => node.type === 'Text' || node.type === 'ExpressionTag');\n\n\t\tif (use_space_template) {\n\t\t\t// special case — we can use `$.text` instead of creating a unique template\n\t\t\tconst id = b.id(context.state.scope.generate('text'));\n\n\t\t\tprocess_children(trimmed, () => id, false, {\n\t\t\t\t...context,\n\t\t\t\tstate\n\t\t\t});\n\n\t\t\tbody.push(b.var(id, b.call('$.text')));\n\t\t\tclose = b.stmt(b.call('$.append', b.id('$$anchor'), id));\n\t\t} else {\n\t\t\tif (is_standalone) {\n\t\t\t\t// no need to create a template, we can just use the existing block's anchor\n\t\t\t\tprocess_children(trimmed, () => b.id('$$anchor'), false, { ...context, state });\n\t\t\t} else {\n\t\t\t\t/** @type {(is_text: boolean) => Expression} */\n\t\t\t\tconst expression = (is_text) => b.call('$.first_child', id, is_text && b.true);\n\n\t\t\t\tprocess_children(trimmed, expression, false, { ...context, state });\n\n\t\t\t\tlet flags = TEMPLATE_FRAGMENT;\n\n\t\t\t\tif (state.metadata.context.template_needs_import_node) {\n\t\t\t\t\tflags |= TEMPLATE_USE_IMPORT_NODE;\n\t\t\t\t}\n\n\t\t\t\tif (state.template.length === 1 && state.template[0] === '<!>') {\n\t\t\t\t\t// special case — we can use `$.comment` instead of creating a unique template\n\t\t\t\t\tbody.push(b.var(id, b.call('$.comment')));\n\t\t\t\t} else {\n\t\t\t\t\tadd_template(template_name, [join_template(state.template), b.literal(flags)]);\n\n\t\t\t\t\tbody.push(b.var(id, b.call(template_name)));\n\t\t\t\t}\n\n\t\t\t\tclose = b.stmt(b.call('$.append', b.id('$$anchor'), id));\n\t\t\t}\n\t\t}\n\t}\n\n\tbody.push(...state.init);\n\n\tif (state.update.length > 0) {\n\t\tbody.push(build_render_statement(state));\n\t}\n\n\tbody.push(...state.after_update);\n\n\tif (close !== undefined) {\n\t\t// It's important that close is the last statement in the block, as any previous statements\n\t\t// could contain element insertions into the template, which the close statement needs to\n\t\t// know of when constructing the list of current inner elements.\n\t\tbody.push(close);\n\t}\n\n\treturn b.block(body);\n}\n\n/**\n * @param {Array<string | Expression>} items\n */\nfunction join_template(items) {\n\tlet quasi = b.quasi('');\n\tconst template = b.template([quasi], []);\n\n\t/**\n\t * @param {Expression} expression\n\t */\n\tfunction push(expression) {\n\t\tif (expression.type === 'TemplateLiteral') {\n\t\t\tfor (let i = 0; i < expression.expressions.length; i += 1) {\n\t\t\t\tconst q = expression.quasis[i];\n\t\t\t\tconst e = expression.expressions[i];\n\n\t\t\t\tquasi.value.cooked += /** @type {string} */ (q.value.cooked);\n\t\t\t\tpush(e);\n\t\t\t}\n\n\t\t\tconst last = /** @type {TemplateElement} */ (expression.quasis.at(-1));\n\t\t\tquasi.value.cooked += /** @type {string} */ (last.value.cooked);\n\t\t} else if (expression.type === 'Literal') {\n\t\t\t/** @type {string} */ (quasi.value.cooked) += expression.value;\n\t\t} else {\n\t\t\ttemplate.expressions.push(expression);\n\t\t\ttemplate.quasis.push((quasi = b.quasi('')));\n\t\t}\n\t}\n\n\tfor (const item of items) {\n\t\tif (typeof item === 'string') {\n\t\t\tquasi.value.cooked += item;\n\t\t} else {\n\t\t\tpush(item);\n\t\t}\n\t}\n\n\tfor (const quasi of template.quasis) {\n\t\tquasi.value.raw = sanitize_template_string(/** @type {string} */ (quasi.value.cooked));\n\t}\n\n\tquasi.tail = true;\n\n\treturn template;\n}\n\n/**\n *\n * @param {Namespace} namespace\n * @param {ComponentClientTransformState} state\n * @returns\n */\nfunction get_template_function(namespace, state) {\n\tconst contains_script_tag = state.metadata.context.template_contains_script_tag;\n\treturn namespace === 'svg'\n\t\t? contains_script_tag\n\t\t\t? '$.svg_template_with_script'\n\t\t\t: '$.ns_template'\n\t\t: namespace === 'mathml'\n\t\t\t? '$.mathml_template'\n\t\t\t: contains_script_tag\n\t\t\t\t? '$.template_with_script'\n\t\t\t\t: '$.template';\n}\n\n/**\n * @param {SourceLocation[]} locations\n */\nfunction build_locations(locations) {\n\treturn b.array(\n\t\tlocations.map((loc) => {\n\t\t\tconst expression = b.array([b.literal(loc[0]), b.literal(loc[1])]);\n\n\t\t\tif (loc.length === 3) {\n\t\t\t\texpression.elements.push(build_locations(loc[2]));\n\t\t\t}\n\n\t\t\treturn expression;\n\t\t})\n\t);\n}\n", "/** @import { FunctionDeclaration } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { build_hoisted_params } from '../utils.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {FunctionDeclaration} node\n * @param {ComponentContext} context\n */\nexport function FunctionDeclaration(node, context) {\n\tconst state = { ...context.state, in_constructor: false };\n\n\tif (node.metadata?.hoisted === true) {\n\t\tconst params = build_hoisted_params(node, context);\n\t\tconst body = context.visit(node.body, state);\n\n\t\tcontext.state.hoisted.push(/** @type {FunctionDeclaration} */ ({ ...node, params, body }));\n\n\t\treturn b.empty;\n\t}\n\n\tcontext.next(state);\n}\n", "/** @import { FunctionExpression } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { visit_function } from './shared/function.js';\n\n/**\n * @param {FunctionExpression} node\n * @param {ComponentContext} context\n */\nexport function FunctionExpression(node, context) {\n\treturn visit_function(node, context);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { is_ignored } from '../../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.HtmlTag} node\n * @param {ComponentContext} context\n */\nexport function HtmlTag(node, context) {\n\tcontext.state.template.push('<!>');\n\n\tconst expression = /** @type {Expression} */ (context.visit(node.expression));\n\n\tconst is_svg = context.state.metadata.namespace === 'svg';\n\tconst is_mathml = context.state.metadata.namespace === 'mathml';\n\n\tconst statement = b.stmt(\n\t\tb.call(\n\t\t\t'$.html',\n\t\t\tcontext.state.node,\n\t\t\tb.thunk(expression),\n\t\t\tis_svg && b.true,\n\t\t\tis_mathml && b.true,\n\t\t\tis_ignored(node, 'hydration_html_changed') && b.true\n\t\t)\n\t);\n\n\t// push into init, so that bindings run afterwards, which might trigger another run and override hydration\n\tcontext.state.init.push(statement);\n}\n", "/** @import { Identifier, Node } from 'estree' */\n/** @import { Context } from '../types' */\nimport is_reference from 'is-reference';\nimport * as b from '#compiler/builders';\nimport { build_getter } from '../utils.js';\n\n/**\n * @param {Identifier} node\n * @param {Context} context\n */\nexport function Identifier(node, context) {\n\tconst parent = /** @type {Node} */ (context.path.at(-1));\n\n\tif (is_reference(node, parent)) {\n\t\tif (node.name === '$$props') {\n\t\t\treturn b.id('$$sanitized_props');\n\t\t}\n\n\t\t// Optimize prop access: If it's a member read access, we can use the $$props object directly\n\t\tconst binding = context.state.scope.get(node.name);\n\t\tif (\n\t\t\tcontext.state.analysis.runes && // can't do this in legacy mode because the proxy does more than just read/write\n\t\t\tbinding !== null &&\n\t\t\tnode !== binding.node &&\n\t\t\tbinding.kind === 'rest_prop'\n\t\t) {\n\t\t\tconst grand_parent = context.path.at(-2);\n\n\t\t\tif (\n\t\t\t\tparent?.type === 'MemberExpression' &&\n\t\t\t\t!parent.computed &&\n\t\t\t\tgrand_parent?.type !== 'AssignmentExpression' &&\n\t\t\t\tgrand_parent?.type !== 'UpdateExpression'\n\t\t\t) {\n\t\t\t\treturn b.id('$$props');\n\t\t\t}\n\t\t}\n\n\t\treturn build_getter(node, context.state);\n\t}\n}\n", "/** @import { BlockStatement, Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.IfBlock} node\n * @param {ComponentContext} context\n */\nexport function IfBlock(node, context) {\n\tcontext.state.template.push('<!>');\n\tconst statements = [];\n\n\tconst consequent = /** @type {BlockStatement} */ (context.visit(node.consequent));\n\tconst consequent_id = context.state.scope.generate('consequent');\n\n\tstatements.push(b.var(b.id(consequent_id), b.arrow([b.id('$$anchor')], consequent)));\n\n\tlet alternate_id;\n\n\tif (node.alternate) {\n\t\talternate_id = context.state.scope.generate('alternate');\n\t\tconst alternate = /** @type {BlockStatement} */ (context.visit(node.alternate));\n\t\tconst nodes = node.alternate.nodes;\n\n\t\tlet alternate_args = [b.id('$$anchor')];\n\t\tif (nodes.length === 1 && nodes[0].type === 'IfBlock' && nodes[0].elseif) {\n\t\t\talternate_args.push(b.id('$$elseif'));\n\t\t}\n\n\t\tstatements.push(b.var(b.id(alternate_id), b.arrow(alternate_args, alternate)));\n\t}\n\n\t/** @type {Expression[]} */\n\tconst args = [\n\t\tnode.elseif ? b.id('$$anchor') : context.state.node,\n\t\tb.arrow(\n\t\t\t[b.id('$$render')],\n\t\t\tb.block([\n\t\t\t\tb.if(\n\t\t\t\t\t/** @type {Expression} */ (context.visit(node.test)),\n\t\t\t\t\tb.stmt(b.call(b.id('$$render'), b.id(consequent_id))),\n\t\t\t\t\talternate_id ? b.stmt(b.call(b.id('$$render'), b.id(alternate_id), b.false)) : undefined\n\t\t\t\t)\n\t\t\t])\n\t\t)\n\t];\n\n\tif (node.elseif) {\n\t\t// We treat this...\n\t\t//\n\t\t//   {#if x}\n\t\t//     ...\n\t\t//   {:else}\n\t\t//     {#if y}\n\t\t//       <div transition:foo>...</div>\n\t\t//     {/if}\n\t\t//   {/if}\n\t\t//\n\t\t// ...slightly differently to this...\n\t\t//\n\t\t//   {#if x}\n\t\t//     ...\n\t\t//   {:else if y}\n\t\t//     <div transition:foo>...</div>\n\t\t//   {/if}\n\t\t//\n\t\t// ...even though they're logically equivalent. In the first case, the\n\t\t// transition will only play when `y` changes, but in the second it\n\t\t// should play when `x` or `y` change — both are considered 'local'\n\t\targs.push(b.id('$$elseif'));\n\t}\n\n\tstatements.push(b.stmt(b.call('$.if', ...args)));\n\n\tcontext.state.init.push(b.block(statements));\n}\n", "/** @import { ImportDeclaration } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {ImportDeclaration} node\n * @param {ComponentContext} context\n */\nexport function ImportDeclaration(node, context) {\n\tif ('hoisted' in context.state) {\n\t\tcontext.state.hoisted.push(node);\n\t\treturn b.empty;\n\t}\n\n\tcontext.next();\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.KeyBlock} node\n * @param {ComponentContext} context\n */\nexport function KeyBlock(node, context) {\n\tcontext.state.template.push('<!>');\n\n\tconst key = /** @type {Expression} */ (context.visit(node.expression));\n\tconst body = /** @type {Expression} */ (context.visit(node.fragment));\n\n\tcontext.state.init.push(\n\t\tb.stmt(b.call('$.key', context.state.node, b.thunk(key), b.arrow([b.id('$$anchor')], body)))\n\t);\n}\n", "/** @import { Expression, LabeledStatement, Statement } from 'estree' */\n/** @import { ReactiveStatement } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { build_getter } from '../utils.js';\n\n/**\n * @param {LabeledStatement} node\n * @param {ComponentContext} context\n */\nexport function LabeledStatement(node, context) {\n\tif (context.state.analysis.runes || context.path.length > 1 || node.label.name !== '$') {\n\t\tcontext.next();\n\t\treturn;\n\t}\n\n\t// To recreate Svelte 4 behaviour, we track the dependencies\n\t// the compiler can 'see', but we untrack the effect itself\n\tconst reactive_statement = /** @type {ReactiveStatement} */ (\n\t\tcontext.state.analysis.reactive_statements.get(node)\n\t);\n\n\tif (!reactive_statement) return; // not the instance context\n\n\tlet serialized_body = /** @type {Statement} */ (context.visit(node.body));\n\n\tif (serialized_body.type !== 'BlockStatement') {\n\t\tserialized_body = b.block([serialized_body]);\n\t}\n\n\tconst body = serialized_body.body;\n\n\t/** @type {Expression[]} */\n\tconst sequence = [];\n\n\tfor (const binding of reactive_statement.dependencies) {\n\t\tif (binding.kind === 'normal' && binding.declaration_kind !== 'import') continue;\n\n\t\tconst name = binding.node.name;\n\t\tlet serialized = build_getter(b.id(name), context.state);\n\n\t\t// If the binding is a prop, we need to deep read it because it could be fine-grained $state\n\t\t// from a runes-component, where mutations don't trigger an update on the prop as a whole.\n\t\tif (name === '$$props' || name === '$$restProps' || binding.kind === 'bindable_prop') {\n\t\t\tserialized = b.call('$.deep_read_state', serialized);\n\t\t}\n\n\t\tsequence.push(serialized);\n\t}\n\n\t// these statements will be topologically ordered later\n\tcontext.state.legacy_reactive_statements.set(\n\t\tnode,\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.legacy_pre_effect',\n\t\t\t\tsequence.length > 0 ? b.thunk(b.sequence(sequence)) : b.thunk(b.block([])),\n\t\t\t\tb.thunk(b.block(body))\n\t\t\t)\n\t\t)\n\t);\n\n\treturn b.empty;\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { create_derived } from '../utils.js';\n\n/**\n * @param {AST.LetDirective} node\n * @param {ComponentContext} context\n */\nexport function LetDirective(node, context) {\n\t// let:x        -->  const x = $.derived(() => $$slotProps.x);\n\t// let:x={{y, z}}  -->  const derived_x = $.derived(() => { const { y, z } = $$slotProps.x; return { y, z }));\n\tif (node.expression && node.expression.type !== 'Identifier') {\n\t\tconst name = context.state.scope.generate(node.name);\n\t\tconst bindings = context.state.scope.get_bindings(node);\n\n\t\tfor (const binding of bindings) {\n\t\t\tcontext.state.transform[binding.node.name] = {\n\t\t\t\tread: (node) => b.member(b.call('$.get', b.id(name)), node)\n\t\t\t};\n\t\t}\n\n\t\treturn b.const(\n\t\t\tname,\n\t\t\tb.call(\n\t\t\t\t'$.derived',\n\t\t\t\tb.thunk(\n\t\t\t\t\tb.block([\n\t\t\t\t\t\tb.let(\n\t\t\t\t\t\t\t/** @type {Expression} */ (node.expression).type === 'ObjectExpression'\n\t\t\t\t\t\t\t\t? // @ts-expect-error types don't match, but it can't contain spread elements and the structure is otherwise fine\n\t\t\t\t\t\t\t\t\tb.object_pattern(node.expression.properties)\n\t\t\t\t\t\t\t\t: // @ts-expect-error types don't match, but it can't contain spread elements and the structure is otherwise fine\n\t\t\t\t\t\t\t\t\tb.array_pattern(node.expression.elements),\n\t\t\t\t\t\t\tb.member(b.id('$$slotProps'), node.name)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tb.return(b.object(bindings.map((binding) => b.init(binding.node.name, binding.node))))\n\t\t\t\t\t])\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else {\n\t\tconst name = node.expression === null ? node.name : node.expression.name;\n\t\tcontext.state.transform[name] = {\n\t\t\tread: (node) => b.call('$.get', node)\n\t\t};\n\n\t\treturn b.const(\n\t\t\tname,\n\t\t\tcreate_derived(context.state, b.thunk(b.member(b.id('$$slotProps'), node.name)))\n\t\t);\n\t}\n}\n", "/** @import { MemberExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {MemberExpression} node\n * @param {Context} context\n */\nexport function MemberExpression(node, context) {\n\t// rewrite `this.#foo` as `this.#foo.v` inside a constructor\n\tif (node.property.type === 'PrivateIdentifier') {\n\t\tconst field = context.state.private_state.get(node.property.name);\n\t\tif (field) {\n\t\t\treturn context.state.in_constructor && (field.kind === 'raw_state' || field.kind === 'state')\n\t\t\t\t? b.member(node, 'v')\n\t\t\t\t: b.call('$.get', node);\n\t\t}\n\t}\n\n\tcontext.next();\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { build_event, build_event_handler } from './shared/events.js';\n\nconst modifiers = [\n\t'stopPropagation',\n\t'stopImmediatePropagation',\n\t'preventDefault',\n\t'self',\n\t'trusted',\n\t'once'\n];\n\n/**\n * @param {AST.OnDirective} node\n * @param {ComponentContext} context\n */\nexport function OnDirective(node, context) {\n\tif (!node.expression) {\n\t\tcontext.state.analysis.needs_props = true;\n\t}\n\n\tlet handler = build_event_handler(node.expression, node.metadata.expression, context);\n\n\tfor (const modifier of modifiers) {\n\t\tif (node.modifiers.includes(modifier)) {\n\t\t\thandler = b.call('$.' + modifier, handler);\n\t\t}\n\t}\n\n\tconst capture = node.modifiers.includes('capture');\n\tconst passive =\n\t\tnode.modifiers.includes('passive') ||\n\t\t(node.modifiers.includes('nonpassive') ? false : undefined);\n\n\treturn build_event(node.name, context.state.node, handler, capture, passive);\n}\n", "/** @import { Expression, ImportDeclaration, MemberExpression, Program } from 'estree' */\n/** @import { ComponentContext } from '../types' */\nimport { build_getter, is_prop_source } from '../utils.js';\nimport * as b from '#compiler/builders';\nimport { add_state_transformers } from './shared/declarations.js';\n\n/**\n * @param {Program} _\n * @param {ComponentContext} context\n */\nexport function Program(_, context) {\n\tif (!context.state.analysis.runes) {\n\t\tcontext.state.transform['$$props'] = {\n\t\t\tread: (node) => ({ ...node, name: '$$sanitized_props' })\n\t\t};\n\n\t\tfor (const [name, binding] of context.state.scope.declarations) {\n\t\t\tif (binding.declaration_kind === 'import' && binding.mutated) {\n\t\t\t\t// the declaration itself is hoisted to the module scope, so we need\n\t\t\t\t// to resort to cruder measures to differentiate instance/module imports\n\t\t\t\tconst { start, end } = context.state.analysis.instance.ast;\n\t\t\t\tconst node = /** @type {ImportDeclaration} */ (binding.initial);\n\t\t\t\tconst is_instance_import =\n\t\t\t\t\t/** @type {number} */ (node.start) > /** @type {number} */ (start) &&\n\t\t\t\t\t/** @type {number} */ (node.end) < /** @type {number} */ (end);\n\n\t\t\t\tif (is_instance_import) {\n\t\t\t\t\tconst id = b.id('$$_import_' + name);\n\n\t\t\t\t\tcontext.state.transform[name] = {\n\t\t\t\t\t\tread: (_) => b.call(id),\n\t\t\t\t\t\tmutate: (_, mutation) => b.call(id, mutation)\n\t\t\t\t\t};\n\n\t\t\t\t\tcontext.state.legacy_reactive_imports.push(\n\t\t\t\t\t\tb.var(id, b.call('$.reactive_import', b.thunk(b.id(name))))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const [name, binding] of context.state.scope.declarations) {\n\t\tif (binding.kind === 'store_sub') {\n\t\t\t// read lazily, so that transforms added later are still applied\n\t\t\t/** @type {Expression} */\n\t\t\tlet cached;\n\n\t\t\tconst get_store = () => {\n\t\t\t\treturn (cached ??= /** @type {Expression} */ (context.visit(b.id(name.slice(1)))));\n\t\t\t};\n\n\t\t\tcontext.state.transform[name] = {\n\t\t\t\tread: b.call,\n\t\t\t\tassign: (_, value) => b.call('$.store_set', get_store(), value),\n\t\t\t\tmutate: (node, mutation) => {\n\t\t\t\t\t// We need to untrack the store read, for consistency with Svelte 4\n\t\t\t\t\tconst untracked = b.call('$.untrack', node);\n\n\t\t\t\t\t/**\n\t\t\t\t\t *\n\t\t\t\t\t * @param {Expression} n\n\t\t\t\t\t * @returns {Expression}\n\t\t\t\t\t */\n\t\t\t\t\tfunction replace(n) {\n\t\t\t\t\t\tif (n.type === 'MemberExpression') {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...n,\n\t\t\t\t\t\t\t\tobject: replace(/** @type {Expression} */ (n.object)),\n\t\t\t\t\t\t\t\tproperty: n.property\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn untracked;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn b.call(\n\t\t\t\t\t\t'$.store_mutate',\n\t\t\t\t\t\tget_store(),\n\t\t\t\t\t\tmutation.type === 'AssignmentExpression'\n\t\t\t\t\t\t\t? b.assignment(\n\t\t\t\t\t\t\t\t\tmutation.operator,\n\t\t\t\t\t\t\t\t\t/** @type {MemberExpression} */ (\n\t\t\t\t\t\t\t\t\t\treplace(/** @type {MemberExpression} */ (mutation.left))\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tmutation.right\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: b.update(mutation.operator, replace(mutation.argument), mutation.prefix),\n\t\t\t\t\t\tuntracked\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tupdate: (node) => {\n\t\t\t\t\treturn b.call(\n\t\t\t\t\t\tnode.prefix ? '$.update_pre_store' : '$.update_store',\n\t\t\t\t\t\tbuild_getter(b.id(name.slice(1)), context.state),\n\t\t\t\t\t\tb.call(node.argument),\n\t\t\t\t\t\tnode.operator === '--' && b.literal(-1)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (binding.kind === 'prop' || binding.kind === 'bindable_prop') {\n\t\t\tif (is_prop_source(binding, context.state)) {\n\t\t\t\tcontext.state.transform[name] = {\n\t\t\t\t\tread: b.call,\n\t\t\t\t\tassign: (node, value) => b.call(node, value),\n\t\t\t\t\tmutate: (node, value) => {\n\t\t\t\t\t\tif (binding.kind === 'bindable_prop') {\n\t\t\t\t\t\t\t// only necessary for interop with legacy parent bindings\n\t\t\t\t\t\t\treturn b.call(node, value, b.true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\t\t\t\t\tupdate: (node) => {\n\t\t\t\t\t\treturn b.call(\n\t\t\t\t\t\t\tnode.prefix ? '$.update_pre_prop' : '$.update_prop',\n\t\t\t\t\t\t\tnode.argument,\n\t\t\t\t\t\t\tnode.operator === '--' && b.literal(-1)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else if (binding.prop_alias) {\n\t\t\t\tconst key = b.key(binding.prop_alias);\n\n\t\t\t\tcontext.state.transform[name] = {\n\t\t\t\t\tread: (_) => b.member(b.id('$$props'), key, key.type === 'Literal')\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcontext.state.transform[name] = {\n\t\t\t\t\tread: (node) => b.member(b.id('$$props'), node)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_state_transformers(context);\n\n\tcontext.next();\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { unwrap_optional } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.RenderTag} node\n * @param {ComponentContext} context\n */\nexport function RenderTag(node, context) {\n\tcontext.state.template.push('<!>');\n\n\tconst expression = unwrap_optional(node.expression);\n\n\tconst callee = expression.callee;\n\tconst raw_args = expression.arguments;\n\n\t/** @type {Expression[]} */\n\tlet args = [];\n\tfor (let i = 0; i < raw_args.length; i++) {\n\t\tlet thunk = b.thunk(/** @type {Expression} */ (context.visit(raw_args[i])));\n\t\tconst { has_call } = node.metadata.arguments[i];\n\n\t\tif (has_call) {\n\t\t\tconst id = b.id(context.state.scope.generate('render_arg'));\n\t\t\tcontext.state.init.push(b.var(id, b.call('$.derived_safe_equal', thunk)));\n\t\t\targs.push(b.thunk(b.call('$.get', id)));\n\t\t} else {\n\t\t\targs.push(thunk);\n\t\t}\n\t}\n\n\tlet snippet_function = /** @type {Expression} */ (context.visit(callee));\n\n\tif (node.metadata.dynamic) {\n\t\t// If we have a chain expression then ensure a nullish snippet function gets turned into an empty one\n\t\tif (node.expression.type === 'ChainExpression') {\n\t\t\tsnippet_function = b.logical('??', snippet_function, b.id('$.noop'));\n\t\t}\n\n\t\tcontext.state.init.push(\n\t\t\tb.stmt(b.call('$.snippet', context.state.node, b.thunk(snippet_function), ...args))\n\t\t);\n\t} else {\n\t\tcontext.state.init.push(\n\t\t\tb.stmt(\n\t\t\t\t(node.expression.type === 'CallExpression' ? b.call : b.maybe_call)(\n\t\t\t\t\tsnippet_function,\n\t\t\t\t\tcontext.state.node,\n\t\t\t\t\t...args\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n}\n", "/** @import { BlockStatement, Expression, ExpressionStatement, Literal, Property } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { build_attribute_value } from './shared/element.js';\nimport { memoize_expression } from './shared/utils.js';\n\n/**\n * @param {AST.SlotElement} node\n * @param {ComponentContext} context\n */\nexport function SlotElement(node, context) {\n\t// <slot {a}>fallback</slot>  -->   $.slot($$slots.default, { get a() { .. } }, () => ...fallback);\n\tcontext.state.template.push('<!>');\n\n\t/** @type {Property[]} */\n\tconst props = [];\n\n\t/** @type {Expression[]} */\n\tconst spreads = [];\n\n\t/** @type {ExpressionStatement[]} */\n\tconst lets = [];\n\n\tlet is_default = true;\n\n\tlet name = b.literal('default');\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'SpreadAttribute') {\n\t\t\tspreads.push(b.thunk(/** @type {Expression} */ (context.visit(attribute))));\n\t\t} else if (attribute.type === 'Attribute') {\n\t\t\tconst { value, has_state } = build_attribute_value(\n\t\t\t\tattribute.value,\n\t\t\t\tcontext,\n\t\t\t\t(value, metadata) => (metadata.has_call ? memoize_expression(context.state, value) : value)\n\t\t\t);\n\n\t\t\tif (attribute.name === 'name') {\n\t\t\t\tname = /** @type {Literal} */ (value);\n\t\t\t\tis_default = false;\n\t\t\t} else if (attribute.name !== 'slot') {\n\t\t\t\tif (has_state) {\n\t\t\t\t\tprops.push(b.get(attribute.name, [b.return(value)]));\n\t\t\t\t} else {\n\t\t\t\t\tprops.push(b.init(attribute.name, value));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (attribute.type === 'LetDirective') {\n\t\t\tlets.push(/** @type {ExpressionStatement} */ (context.visit(attribute)));\n\t\t}\n\t}\n\n\t// Let bindings first, they can be used on attributes\n\tcontext.state.init.push(...lets);\n\n\tconst props_expression =\n\t\tspreads.length === 0 ? b.object(props) : b.call('$.spread_props', b.object(props), ...spreads);\n\n\tconst fallback =\n\t\tnode.fragment.nodes.length === 0\n\t\t\t? b.null\n\t\t\t: b.arrow([b.id('$$anchor')], /** @type {BlockStatement} */ (context.visit(node.fragment)));\n\n\tconst slot = b.call(\n\t\t'$.slot',\n\t\tcontext.state.node,\n\t\tb.id('$$props'),\n\t\tname,\n\t\tprops_expression,\n\t\tfallback\n\t);\n\n\tcontext.state.init.push(b.stmt(slot));\n}\n", "/** @import { AssignmentPattern, BlockStatement, Expression, Identifier, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { dev } from '../../../../state.js';\nimport { extract_paths } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { get_value } from './shared/declarations.js';\n\n/**\n * @param {AST.SnippetBlock} node\n * @param {ComponentContext} context\n */\nexport function SnippetBlock(node, context) {\n\t// TODO hoist where possible\n\t/** @type {(Identifier | AssignmentPattern)[]} */\n\tconst args = [b.id('$$anchor')];\n\n\t/** @type {BlockStatement} */\n\tlet body;\n\n\t/** @type {Statement[]} */\n\tconst declarations = [];\n\n\tif (dev) {\n\t\tdeclarations.push(b.stmt(b.call('$.validate_snippet_args', b.spread(b.id('arguments')))));\n\t}\n\n\tconst transform = { ...context.state.transform };\n\tconst child_state = { ...context.state, transform };\n\n\tfor (let i = 0; i < node.parameters.length; i++) {\n\t\tconst argument = node.parameters[i];\n\n\t\tif (!argument) continue;\n\n\t\tif (argument.type === 'Identifier') {\n\t\t\targs.push(b.assignment_pattern(argument, b.id('$.noop')));\n\t\t\ttransform[argument.name] = { read: b.call };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet arg_alias = `$$arg${i}`;\n\t\targs.push(b.id(arg_alias));\n\n\t\tconst paths = extract_paths(argument);\n\n\t\tfor (const path of paths) {\n\t\t\tconst name = /** @type {Identifier} */ (path.node).name;\n\t\t\tconst needs_derived = path.has_default_value; // to ensure that default value is only called once\n\t\t\tconst fn = b.thunk(\n\t\t\t\t/** @type {Expression} */ (context.visit(path.expression?.(b.maybe_call(b.id(arg_alias)))))\n\t\t\t);\n\n\t\t\tdeclarations.push(b.let(path.node, needs_derived ? b.call('$.derived_safe_equal', fn) : fn));\n\n\t\t\ttransform[name] = {\n\t\t\t\tread: needs_derived ? get_value : b.call\n\t\t\t};\n\n\t\t\t// we need to eagerly evaluate the expression in order to hit any\n\t\t\t// 'Cannot access x before initialization' errors\n\t\t\tif (dev) {\n\t\t\t\tdeclarations.push(b.stmt(transform[name].read(b.id(name))));\n\t\t\t}\n\t\t}\n\t}\n\n\tbody = b.block([\n\t\t...declarations,\n\t\t.../** @type {BlockStatement} */ (context.visit(node.body, child_state)).body\n\t]);\n\n\t// in dev we use a FunctionExpression (not arrow function) so we can use `arguments`\n\tlet snippet = dev\n\t\t? b.call('$.wrap_snippet', b.id(context.state.analysis.name), b.function(null, args, body))\n\t\t: b.arrow(args, body);\n\n\tconst declaration = b.const(node.expression, snippet);\n\n\t// Top-level snippets are hoisted so they can be referenced in the `<script>`\n\tif (context.path.length === 1 && context.path[0].type === 'Fragment') {\n\t\tif (node.metadata.can_hoist) {\n\t\t\tcontext.state.module_level_snippets.push(declaration);\n\t\t} else {\n\t\t\tcontext.state.instance_level_snippets.push(declaration);\n\t\t}\n\t} else {\n\t\tcontext.state.init.push(declaration);\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n\n/**\n * @param {AST.SpreadAttribute} node\n * @param {ComponentContext} context\n */\nexport function SpreadAttribute(node, context) {\n\treturn context.visit(node.expression);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../../types' */\nimport * as b from '#compiler/builders';\n\n/**\n *\n * @param {AST.SvelteBody | AST.SvelteDocument | AST.SvelteWindow} node\n * @param {string} id\n * @param {ComponentContext} context\n */\nexport function visit_special_element(node, id, context) {\n\tconst state = { ...context.state, node: b.id(id) };\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'OnDirective') {\n\t\t\tcontext.state.init.push(b.stmt(/** @type {Expression} */ (context.visit(attribute, state))));\n\t\t} else {\n\t\t\tcontext.visit(attribute, state);\n\t\t}\n\t}\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { visit_special_element } from './shared/special_element.js';\n\n/**\n * @param {AST.SvelteBody} node\n * @param {ComponentContext} context\n */\nexport function SvelteBody(node, context) {\n\tvisit_special_element(node, '$.document.body', context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { build_component } from './shared/component.js';\n\n/**\n * @param {AST.SvelteComponent} node\n * @param {ComponentContext} context\n */\nexport function SvelteComponent(node, context) {\n\tconst component = build_component(node, '$$component', context);\n\tcontext.state.init.push(component);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { visit_special_element } from './shared/special_element.js';\n\n/**\n * @param {AST.SvelteDocument} node\n * @param {ComponentContext} context\n */\nexport function SvelteDocument(node, context) {\n\tvisit_special_element(node, '$.document', context);\n}\n", "/** @import { BlockStatement, Expression, ExpressionStatement, Statement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { dev, locator } from '../../../../state.js';\nimport { is_text_attribute } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { determine_namespace_for_children } from '../../utils.js';\nimport { build_attribute_value, build_set_attributes, build_set_class } from './shared/element.js';\nimport { build_render_statement } from './shared/utils.js';\n\n/**\n * @param {AST.SvelteElement} node\n * @param {ComponentContext} context\n */\nexport function SvelteElement(node, context) {\n\tcontext.state.template.push(`<!>`);\n\n\t/** @type {Array<AST.Attribute | AST.SpreadAttribute>} */\n\tconst attributes = [];\n\n\t/** @type {AST.Attribute['value'] | undefined} */\n\tlet dynamic_namespace = undefined;\n\n\t/** @type {AST.ClassDirective[]} */\n\tconst class_directives = [];\n\n\t/** @type {AST.StyleDirective[]} */\n\tconst style_directives = [];\n\n\t/** @type {ExpressionStatement[]} */\n\tconst lets = [];\n\n\t// Create a temporary context which picks up the init/update statements.\n\t// They'll then be added to the function parameter of $.element\n\tconst element_id = b.id(context.state.scope.generate('$$element'));\n\n\t/** @type {ComponentContext} */\n\tconst inner_context = {\n\t\t...context,\n\t\tstate: {\n\t\t\t...context.state,\n\t\t\tnode: element_id,\n\t\t\tinit: [],\n\t\t\tupdate: [],\n\t\t\texpressions: [],\n\t\t\tafter_update: []\n\t\t}\n\t};\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'Attribute') {\n\t\t\tif (attribute.name === 'xmlns' && !is_text_attribute(attribute)) {\n\t\t\t\tdynamic_namespace = attribute.value;\n\t\t\t}\n\t\t\tattributes.push(attribute);\n\t\t} else if (attribute.type === 'SpreadAttribute') {\n\t\t\tattributes.push(attribute);\n\t\t} else if (attribute.type === 'ClassDirective') {\n\t\t\tclass_directives.push(attribute);\n\t\t} else if (attribute.type === 'StyleDirective') {\n\t\t\tstyle_directives.push(attribute);\n\t\t} else if (attribute.type === 'LetDirective') {\n\t\t\tlets.push(/** @type {ExpressionStatement} */ (context.visit(attribute)));\n\t\t} else if (attribute.type === 'OnDirective') {\n\t\t\tconst handler = /** @type {Expression} */ (context.visit(attribute, inner_context.state));\n\t\t\tinner_context.state.after_update.push(b.stmt(handler));\n\t\t} else {\n\t\t\tcontext.visit(attribute, inner_context.state);\n\t\t}\n\t}\n\n\t// Let bindings first, they can be used on attributes\n\tcontext.state.init.push(...lets); // create computeds in the outer context; the dynamic element is the single child of this slot\n\n\tif (\n\t\tattributes.length === 1 &&\n\t\tattributes[0].type === 'Attribute' &&\n\t\tattributes[0].name.toLowerCase() === 'class' &&\n\t\tis_text_attribute(attributes[0])\n\t) {\n\t\tbuild_set_class(node, element_id, attributes[0], class_directives, inner_context, false);\n\t} else if (attributes.length) {\n\t\tconst attributes_id = b.id(context.state.scope.generate('attributes'));\n\n\t\t// Always use spread because we don't know whether the element is a custom element or not,\n\t\t// therefore we need to do the \"how to set an attribute\" logic at runtime.\n\t\tbuild_set_attributes(\n\t\t\tattributes,\n\t\t\tclass_directives,\n\t\t\tstyle_directives,\n\t\t\tinner_context,\n\t\t\tnode,\n\t\t\telement_id,\n\t\t\tattributes_id\n\t\t);\n\t}\n\n\tconst get_tag = b.thunk(/** @type {Expression} */ (context.visit(node.tag)));\n\n\tif (dev) {\n\t\tif (node.fragment.nodes.length > 0) {\n\t\t\tcontext.state.init.push(b.stmt(b.call('$.validate_void_dynamic_element', get_tag)));\n\t\t}\n\t\tcontext.state.init.push(b.stmt(b.call('$.validate_dynamic_element_tag', get_tag)));\n\t}\n\n\t/** @type {Statement[]} */\n\tconst inner = inner_context.state.init;\n\tif (inner_context.state.update.length > 0) {\n\t\tinner.push(build_render_statement(inner_context.state));\n\t}\n\tinner.push(...inner_context.state.after_update);\n\tinner.push(\n\t\t.../** @type {BlockStatement} */ (\n\t\t\tcontext.visit(node.fragment, {\n\t\t\t\t...context.state,\n\t\t\t\tmetadata: {\n\t\t\t\t\t...context.state.metadata,\n\t\t\t\t\tnamespace: determine_namespace_for_children(node, context.state.metadata.namespace)\n\t\t\t\t}\n\t\t\t})\n\t\t).body\n\t);\n\n\tconst location = dev && locator(node.start);\n\n\tcontext.state.init.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.element',\n\t\t\t\tcontext.state.node,\n\t\t\t\tget_tag,\n\t\t\t\tnode.metadata.svg || node.metadata.mathml ? b.true : b.false,\n\t\t\t\tinner.length > 0 && b.arrow([element_id, b.id('$$anchor')], b.block(inner)),\n\t\t\t\tdynamic_namespace && b.thunk(build_attribute_value(dynamic_namespace, context).value),\n\t\t\t\tlocation && b.array([b.literal(location.line), b.literal(location.column)])\n\t\t\t)\n\t\t)\n\t);\n}\n", "/** @import { BlockStatement, ExpressionStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\n\n/**\n * @param {AST.SvelteFragment} node\n * @param {ComponentContext} context\n */\nexport function SvelteFragment(node, context) {\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type === 'LetDirective') {\n\t\t\tcontext.state.init.push(/** @type {ExpressionStatement} */ (context.visit(attribute)));\n\t\t}\n\t}\n\n\tcontext.state.init.push(.../** @type {BlockStatement} */ (context.visit(node.fragment)).body);\n}\n", "/** @import { BlockStatement, Statement, Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { dev } from '../../../../state.js';\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.SvelteBoundary} node\n * @param {ComponentContext} context\n */\nexport function SvelteBoundary(node, context) {\n\tconst props = b.object([]);\n\n\tfor (const attribute of node.attributes) {\n\t\tif (attribute.type !== 'Attribute' || attribute.value === true) {\n\t\t\t// these can't exist, because they would have caused validation\n\t\t\t// to fail, but typescript doesn't know that\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst chunk = Array.isArray(attribute.value)\n\t\t\t? /** @type {AST.ExpressionTag} */ (attribute.value[0])\n\t\t\t: attribute.value;\n\n\t\tconst expression = /** @type {Expression} */ (context.visit(chunk.expression, context.state));\n\n\t\tif (chunk.metadata.expression.has_state) {\n\t\t\tprops.properties.push(b.get(attribute.name, [b.return(expression)]));\n\t\t} else {\n\t\t\tprops.properties.push(b.init(attribute.name, expression));\n\t\t}\n\t}\n\n\tconst nodes = [];\n\n\t/** @type {Statement[]} */\n\tconst external_statements = [];\n\n\t/** @type {Statement[]} */\n\tconst internal_statements = [];\n\n\tconst snippets_visits = [];\n\n\t// Capture the `failed` implicit snippet prop\n\tfor (const child of node.fragment.nodes) {\n\t\tif (child.type === 'SnippetBlock' && child.expression.name === 'failed') {\n\t\t\t// we need to delay the visit of the snippets in case they access a ConstTag that is declared\n\t\t\t// after the snippets so that the visitor for the const tag can be updated\n\t\t\tsnippets_visits.push(() => {\n\t\t\t\t/** @type {Statement[]} */\n\t\t\t\tconst init = [];\n\t\t\t\tcontext.visit(child, { ...context.state, init });\n\t\t\t\tprops.properties.push(b.prop('init', child.expression, child.expression));\n\t\t\t\texternal_statements.push(...init);\n\t\t\t});\n\t\t} else if (child.type === 'ConstTag') {\n\t\t\t/** @type {Statement[]} */\n\t\t\tconst init = [];\n\t\t\tcontext.visit(child, { ...context.state, init });\n\n\t\t\tif (dev) {\n\t\t\t\t// In dev we must separate the declarations from the code\n\t\t\t\t// that eagerly evaluate the expression...\n\t\t\t\tfor (const statement of init) {\n\t\t\t\t\tif (statement.type === 'VariableDeclaration') {\n\t\t\t\t\t\texternal_statements.push(statement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinternal_statements.push(statement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\texternal_statements.push(...init);\n\t\t\t}\n\t\t} else {\n\t\t\tnodes.push(child);\n\t\t}\n\t}\n\n\tsnippets_visits.forEach((visit) => visit());\n\n\tconst block = /** @type {BlockStatement} */ (context.visit({ ...node.fragment, nodes }));\n\n\tif (dev && internal_statements.length) {\n\t\tblock.body.unshift(...internal_statements);\n\t}\n\n\tconst boundary = b.stmt(\n\t\tb.call('$.boundary', context.state.node, props, b.arrow([b.id('$$anchor')], block))\n\t);\n\n\tcontext.state.template.push('<!>');\n\tcontext.state.init.push(\n\t\texternal_statements.length > 0 ? b.block([...external_statements, boundary]) : boundary\n\t);\n}\n", "/** @import { BlockStatement } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\n\n/**\n * @param {AST.SvelteHead} node\n * @param {ComponentContext} context\n */\nexport function SvelteHead(node, context) {\n\t// TODO attributes?\n\tcontext.state.init.push(\n\t\tb.stmt(\n\t\t\tb.call(\n\t\t\t\t'$.head',\n\t\t\t\tb.arrow([b.id('$$anchor')], /** @type {BlockStatement} */ (context.visit(node.fragment)))\n\t\t\t)\n\t\t)\n\t);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { build_component } from './shared/component.js';\n\n/**\n * @param {AST.SvelteSelf} node\n * @param {ComponentContext} context\n */\nexport function SvelteSelf(node, context) {\n\tconst component = build_component(node, context.state.analysis.name, context);\n\tcontext.state.init.push(component);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { visit_special_element } from './shared/special_element.js';\n\n/**\n * @param {AST.SvelteWindow} node\n * @param {ComponentContext} context\n */\nexport function SvelteWindow(node, context) {\n\tvisit_special_element(node, '$.window', context);\n}\n", "/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { build_template_chunk } from './shared/utils.js';\n\n/**\n * @param {AST.TitleElement} node\n * @param {ComponentContext} context\n */\nexport function TitleElement(node, context) {\n\tconst { has_state, value } = build_template_chunk(\n\t\t/** @type {any} */ (node.fragment.nodes),\n\t\tcontext.visit,\n\t\tcontext.state\n\t);\n\n\tconst statement = b.stmt(b.assignment('=', b.id('$.document.title'), value));\n\n\tif (has_state) {\n\t\tcontext.state.update.push(statement);\n\t} else {\n\t\tcontext.state.init.push(statement);\n\t}\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../../constants.js';\nimport * as b from '#compiler/builders';\nimport { parse_directive_name } from './shared/utils.js';\n\n/**\n * @param {AST.TransitionDirective} node\n * @param {ComponentContext} context\n */\nexport function TransitionDirective(node, context) {\n\tlet flags = node.modifiers.includes('global') ? TRANSITION_GLOBAL : 0;\n\tif (node.intro) flags |= TRANSITION_IN;\n\tif (node.outro) flags |= TRANSITION_OUT;\n\n\tconst args = [\n\t\tb.literal(flags),\n\t\tcontext.state.node,\n\t\tb.thunk(/** @type {Expression} */ (context.visit(parse_directive_name(node.name))))\n\t];\n\n\tif (node.expression) {\n\t\targs.push(b.thunk(/** @type {Expression} */ (context.visit(node.expression))));\n\t}\n\n\t// in after_update to ensure it always happens after bind:this\n\tcontext.state.after_update.push(b.stmt(b.call('$.transition', ...args)));\n}\n", "/** @import { AssignmentExpression, Expression, UpdateExpression } from 'estree' */\n/** @import { Context } from '../types' */\nimport { object } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport { validate_mutation } from './shared/utils.js';\n\n/**\n * @param {UpdateExpression} node\n * @param {Context} context\n */\nexport function UpdateExpression(node, context) {\n\tconst argument = node.argument;\n\n\tif (\n\t\targument.type === 'MemberExpression' &&\n\t\targument.object.type === 'ThisExpression' &&\n\t\targument.property.type === 'PrivateIdentifier' &&\n\t\tcontext.state.private_state.has(argument.property.name)\n\t) {\n\t\tlet fn = '$.update';\n\t\tif (node.prefix) fn += '_pre';\n\n\t\t/** @type {Expression[]} */\n\t\tconst args = [argument];\n\t\tif (node.operator === '--') {\n\t\t\targs.push(b.literal(-1));\n\t\t}\n\n\t\treturn b.call(fn, ...args);\n\t}\n\n\tif (argument.type !== 'Identifier' && argument.type !== 'MemberExpression') {\n\t\tthrow new Error('An impossible state was reached');\n\t}\n\n\tconst left = object(argument);\n\tconst transformers = left && context.state.transform[left.name];\n\n\tif (left === argument && transformers?.update) {\n\t\t// we don't need to worry about ownership_invalid_mutation here, because\n\t\t// we're not mutating but reassigning\n\t\treturn transformers.update(node);\n\t}\n\n\tlet update = /** @type {Expression} */ (context.next());\n\n\tif (left && transformers?.mutate) {\n\t\tupdate = transformers.mutate(\n\t\t\tleft,\n\t\t\t/** @type {AssignmentExpression | UpdateExpression} */ (update)\n\t\t);\n\t}\n\n\treturn validate_mutation(node, context, update);\n}\n", "/** @import { Expression } from 'estree' */\n/** @import { AST } from '#compiler' */\n/** @import { ComponentContext } from '../types' */\nimport * as b from '#compiler/builders';\nimport { parse_directive_name } from './shared/utils.js';\n\n/**\n * @param {AST.UseDirective} node\n * @param {ComponentContext} context\n */\nexport function UseDirective(node, context) {\n\tconst params = [b.id('$$node')];\n\n\tif (node.expression) {\n\t\tparams.push(b.id('$$action_arg'));\n\t}\n\n\t/** @type {Expression[]} */\n\tconst args = [\n\t\tcontext.state.node,\n\t\tb.arrow(\n\t\t\tparams,\n\t\t\tb.maybe_call(\n\t\t\t\t/** @type {Expression} */ (context.visit(parse_directive_name(node.name))),\n\t\t\t\t...params\n\t\t\t)\n\t\t)\n\t];\n\n\tif (node.expression) {\n\t\targs.push(b.thunk(/** @type {Expression} */ (context.visit(node.expression))));\n\t}\n\n\t// actions need to run after attribute updates in order with bindings/events\n\tcontext.state.init.push(b.stmt(b.call('$.action', ...args)));\n\tcontext.next();\n}\n", "/** @import { CallExpression, Expression, Identifier, Literal, VariableDeclaration, VariableDeclarator } from 'estree' */\n/** @import { Binding } from '#compiler' */\n/** @import { ComponentClientTransformState, ComponentContext } from '../types' */\nimport { dev } from '../../../../state.js';\nimport { extract_paths } from '../../../../utils/ast.js';\nimport * as b from '#compiler/builders';\nimport * as assert from '../../../../utils/assert.js';\nimport { get_rune } from '../../../scope.js';\nimport { get_prop_source, is_prop_source, is_state_source, should_proxy } from '../utils.js';\nimport { is_hoisted_function } from '../../utils.js';\n\n/**\n * @param {VariableDeclaration} node\n * @param {ComponentContext} context\n */\nexport function VariableDeclaration(node, context) {\n\t/** @type {VariableDeclarator[]} */\n\tconst declarations = [];\n\n\tif (context.state.analysis.runes) {\n\t\tfor (const declarator of node.declarations) {\n\t\t\tconst init = declarator.init;\n\t\t\tconst rune = get_rune(init, context.state.scope);\n\n\t\t\tif (\n\t\t\t\t!rune ||\n\t\t\t\trune === '$effect.tracking' ||\n\t\t\t\trune === '$effect.root' ||\n\t\t\t\trune === '$inspect' ||\n\t\t\t\trune === '$inspect.trace' ||\n\t\t\t\trune === '$state.snapshot' ||\n\t\t\t\trune === '$host'\n\t\t\t) {\n\t\t\t\tif (init != null && is_hoisted_function(init)) {\n\t\t\t\t\tcontext.state.hoisted.push(\n\t\t\t\t\t\tb.const(declarator.id, /** @type {Expression} */ (context.visit(init)))\n\t\t\t\t\t);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdeclarations.push(/** @type {VariableDeclarator} */ (context.visit(declarator)));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$props.id') {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$props') {\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tconst seen = ['$$slots', '$$events', '$$legacy'];\n\n\t\t\t\tif (context.state.analysis.custom_element) {\n\t\t\t\t\tseen.push('$$host');\n\t\t\t\t}\n\n\t\t\t\tif (declarator.id.type === 'Identifier') {\n\t\t\t\t\t/** @type {Expression[]} */\n\t\t\t\t\tconst args = [b.id('$$props'), b.array(seen.map((name) => b.literal(name)))];\n\n\t\t\t\t\tif (dev) {\n\t\t\t\t\t\t// include rest name, so we can provide informative error messages\n\t\t\t\t\t\targs.push(b.literal(declarator.id.name));\n\t\t\t\t\t}\n\n\t\t\t\t\tdeclarations.push(b.declarator(declarator.id, b.call('$.rest_props', ...args)));\n\t\t\t\t} else {\n\t\t\t\t\tassert.equal(declarator.id.type, 'ObjectPattern');\n\n\t\t\t\t\tfor (const property of declarator.id.properties) {\n\t\t\t\t\t\tif (property.type === 'Property') {\n\t\t\t\t\t\t\tconst key = /** @type {Identifier | Literal} */ (property.key);\n\t\t\t\t\t\t\tconst name = key.type === 'Identifier' ? key.name : /** @type {string} */ (key.value);\n\n\t\t\t\t\t\t\tseen.push(name);\n\n\t\t\t\t\t\t\tlet id =\n\t\t\t\t\t\t\t\tproperty.value.type === 'AssignmentPattern' ? property.value.left : property.value;\n\t\t\t\t\t\t\tassert.equal(id.type, 'Identifier');\n\t\t\t\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(id.name));\n\t\t\t\t\t\t\tlet initial =\n\t\t\t\t\t\t\t\tbinding.initial && /** @type {Expression} */ (context.visit(binding.initial));\n\t\t\t\t\t\t\t// We're adding proxy here on demand and not within the prop runtime function so that\n\t\t\t\t\t\t\t// people not using proxied state anywhere in their code don't have to pay the additional bundle size cost\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tinitial &&\n\t\t\t\t\t\t\t\tbinding.kind === 'bindable_prop' &&\n\t\t\t\t\t\t\t\tshould_proxy(initial, context.state.scope)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tinitial = b.call('$.proxy', initial);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (is_prop_source(binding, context.state)) {\n\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\tb.declarator(id, get_prop_source(binding, context.state, name, initial))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// RestElement\n\t\t\t\t\t\t\t/** @type {Expression[]} */\n\t\t\t\t\t\t\tconst args = [b.id('$$props'), b.array(seen.map((name) => b.literal(name)))];\n\n\t\t\t\t\t\t\tif (dev) {\n\t\t\t\t\t\t\t\t// include rest name, so we can provide informative error messages\n\t\t\t\t\t\t\t\targs.push(b.literal(/** @type {Identifier} */ (property.argument).name));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeclarations.push(b.declarator(property.argument, b.call('$.rest_props', ...args)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// TODO\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst args = /** @type {CallExpression} */ (init).arguments;\n\t\t\tconst value = args.length > 0 ? /** @type {Expression} */ (context.visit(args[0])) : b.void0;\n\n\t\t\tif (rune === '$state' || rune === '$state.raw') {\n\t\t\t\t/**\n\t\t\t\t * @param {Identifier} id\n\t\t\t\t * @param {Expression} value\n\t\t\t\t */\n\t\t\t\tconst create_state_declarator = (id, value) => {\n\t\t\t\t\tconst binding = /** @type {import('#compiler').Binding} */ (\n\t\t\t\t\t\tcontext.state.scope.get(id.name)\n\t\t\t\t\t);\n\t\t\t\t\tif (rune === '$state' && should_proxy(value, context.state.scope)) {\n\t\t\t\t\t\tvalue = b.call('$.proxy', value);\n\t\t\t\t\t}\n\t\t\t\t\tif (is_state_source(binding, context.state.analysis)) {\n\t\t\t\t\t\tvalue = b.call('$.state', value);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\n\t\t\t\tif (declarator.id.type === 'Identifier') {\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\tb.declarator(declarator.id, create_state_declarator(declarator.id, value))\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst tmp = context.state.scope.generate('tmp');\n\t\t\t\t\tconst paths = extract_paths(declarator.id);\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\tb.declarator(b.id(tmp), value),\n\t\t\t\t\t\t...paths.map((path) => {\n\t\t\t\t\t\t\tconst value = path.expression?.(b.id(tmp));\n\t\t\t\t\t\t\tconst binding = context.state.scope.get(/** @type {Identifier} */ (path.node).name);\n\t\t\t\t\t\t\treturn b.declarator(\n\t\t\t\t\t\t\t\tpath.node,\n\t\t\t\t\t\t\t\tbinding?.kind === 'state' || binding?.kind === 'raw_state'\n\t\t\t\t\t\t\t\t\t? create_state_declarator(binding.node, value)\n\t\t\t\t\t\t\t\t\t: value\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rune === '$derived' || rune === '$derived.by') {\n\t\t\t\tif (declarator.id.type === 'Identifier') {\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\tb.declarator(\n\t\t\t\t\t\t\tdeclarator.id,\n\t\t\t\t\t\t\tb.call('$.derived', rune === '$derived.by' ? value : b.thunk(value))\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst bindings = extract_paths(declarator.id);\n\n\t\t\t\t\tconst init = /** @type {CallExpression} */ (declarator.init);\n\n\t\t\t\t\t/** @type {Identifier} */\n\t\t\t\t\tlet id;\n\t\t\t\t\tlet rhs = value;\n\n\t\t\t\t\tif (rune === '$derived' && init.arguments[0].type === 'Identifier') {\n\t\t\t\t\t\tid = init.arguments[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tid = b.id(context.state.scope.generate('$$d'));\n\t\t\t\t\t\trhs = b.call('$.get', id);\n\n\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\tb.declarator(id, b.call('$.derived', rune === '$derived.by' ? value : b.thunk(value)))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < bindings.length; i++) {\n\t\t\t\t\t\tconst binding = bindings[i];\n\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\tb.declarator(binding.node, b.call('$.derived', b.thunk(binding.expression(rhs))))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (const declarator of node.declarations) {\n\t\t\tconst bindings = /** @type {Binding[]} */ (context.state.scope.get_bindings(declarator));\n\t\t\tconst has_state = bindings.some((binding) => binding.kind === 'state');\n\t\t\tconst has_props = bindings.some((binding) => binding.kind === 'bindable_prop');\n\n\t\t\tif (!has_state && !has_props) {\n\t\t\t\tconst init = declarator.init;\n\n\t\t\t\tif (init != null && is_hoisted_function(init)) {\n\t\t\t\t\tcontext.state.hoisted.push(\n\t\t\t\t\t\tb.const(declarator.id, /** @type {Expression} */ (context.visit(init)))\n\t\t\t\t\t);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tdeclarations.push(/** @type {VariableDeclarator} */ (context.visit(declarator)));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (has_props) {\n\t\t\t\tif (declarator.id.type !== 'Identifier') {\n\t\t\t\t\t// Turn export let into props. It's really really weird because export let { x: foo, z: [bar]} = ..\n\t\t\t\t\t// means that foo and bar are the props (i.e. the leafs are the prop names), not x and z.\n\t\t\t\t\tconst tmp = context.state.scope.generate('tmp');\n\t\t\t\t\tconst paths = extract_paths(declarator.id);\n\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\tb.declarator(\n\t\t\t\t\t\t\tb.id(tmp),\n\t\t\t\t\t\t\t/** @type {Expression} */ (context.visit(/** @type {Expression} */ (declarator.init)))\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tfor (const path of paths) {\n\t\t\t\t\t\tconst name = /** @type {Identifier} */ (path.node).name;\n\t\t\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(name));\n\t\t\t\t\t\tconst value = path.expression?.(b.id(tmp));\n\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\tb.declarator(\n\t\t\t\t\t\t\t\tpath.node,\n\t\t\t\t\t\t\t\tbinding.kind === 'bindable_prop'\n\t\t\t\t\t\t\t\t\t? get_prop_source(binding, context.state, binding.prop_alias ?? name, value)\n\t\t\t\t\t\t\t\t\t: value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst binding = /** @type {Binding} */ (context.state.scope.get(declarator.id.name));\n\n\t\t\t\tdeclarations.push(\n\t\t\t\t\tb.declarator(\n\t\t\t\t\t\tdeclarator.id,\n\t\t\t\t\t\tget_prop_source(\n\t\t\t\t\t\t\tbinding,\n\t\t\t\t\t\t\tcontext.state,\n\t\t\t\t\t\t\tbinding.prop_alias ?? declarator.id.name,\n\t\t\t\t\t\t\tdeclarator.init && /** @type {Expression} */ (context.visit(declarator.init))\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdeclarations.push(\n\t\t\t\t...create_state_declarators(\n\t\t\t\t\tdeclarator,\n\t\t\t\t\tcontext.state,\n\t\t\t\t\t/** @type {Expression} */ (declarator.init && context.visit(declarator.init))\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tif (declarations.length === 0) {\n\t\treturn b.empty;\n\t}\n\n\treturn {\n\t\t...node,\n\t\tdeclarations\n\t};\n}\n\n/**\n * Creates the output for a state declaration in legacy mode.\n * @param {VariableDeclarator} declarator\n * @param {ComponentClientTransformState} scope\n * @param {Expression} value\n */\nfunction create_state_declarators(declarator, { scope, analysis }, value) {\n\tif (declarator.id.type === 'Identifier') {\n\t\treturn [\n\t\t\tb.declarator(\n\t\t\t\tdeclarator.id,\n\t\t\t\tb.call('$.mutable_source', value, analysis.immutable ? b.true : undefined)\n\t\t\t)\n\t\t];\n\t}\n\n\tconst tmp = scope.generate('tmp');\n\tconst paths = extract_paths(declarator.id);\n\treturn [\n\t\tb.declarator(b.id(tmp), value),\n\t\t...paths.map((path) => {\n\t\t\tconst value = path.expression?.(b.id(tmp));\n\t\t\tconst binding = scope.get(/** @type {Identifier} */ (path.node).name);\n\t\t\treturn b.declarator(\n\t\t\t\tpath.node,\n\t\t\t\tbinding?.kind === 'state'\n\t\t\t\t\t? b.call('$.mutable_source', value, analysis.immutable ? b.true : undefined)\n\t\t\t\t\t: value\n\t\t\t);\n\t\t})\n\t];\n}\n", "/** @import * as ESTree from 'estree' */\n/** @import { AST, ValidatedCompileOptions, ValidatedModuleCompileOptions } from '#compiler' */\n/** @import { ComponentAnalysis, Analysis } from '../../types' */\n/** @import { Visitors, ComponentClientTransformState, ClientTransformState } from './types' */\nimport { walk } from 'zimmerframe';\nimport * as b from '#compiler/builders';\nimport { build_getter, is_state_source } from './utils.js';\nimport { render_stylesheet } from '../css/index.js';\nimport { dev, filename } from '../../../state.js';\nimport { AnimateDirective } from './visitors/AnimateDirective.js';\nimport { ArrowFunctionExpression } from './visitors/ArrowFunctionExpression.js';\nimport { AssignmentExpression } from './visitors/AssignmentExpression.js';\nimport { Attribute } from './visitors/Attribute.js';\nimport { AwaitBlock } from './visitors/AwaitBlock.js';\nimport { BinaryExpression } from './visitors/BinaryExpression.js';\nimport { BindDirective } from './visitors/BindDirective.js';\nimport { BlockStatement } from './visitors/BlockStatement.js';\nimport { BreakStatement } from './visitors/BreakStatement.js';\nimport { CallExpression } from './visitors/CallExpression.js';\nimport { ClassBody } from './visitors/ClassBody.js';\nimport { Comment } from './visitors/Comment.js';\nimport { Component } from './visitors/Component.js';\nimport { ConstTag } from './visitors/ConstTag.js';\nimport { DebugTag } from './visitors/DebugTag.js';\nimport { EachBlock } from './visitors/EachBlock.js';\nimport { ExportNamedDeclaration } from './visitors/ExportNamedDeclaration.js';\nimport { ExpressionStatement } from './visitors/ExpressionStatement.js';\nimport { Fragment } from './visitors/Fragment.js';\nimport { FunctionDeclaration } from './visitors/FunctionDeclaration.js';\nimport { FunctionExpression } from './visitors/FunctionExpression.js';\nimport { HtmlTag } from './visitors/HtmlTag.js';\nimport { Identifier } from './visitors/Identifier.js';\nimport { IfBlock } from './visitors/IfBlock.js';\nimport { ImportDeclaration } from './visitors/ImportDeclaration.js';\nimport { KeyBlock } from './visitors/KeyBlock.js';\nimport { LabeledStatement } from './visitors/LabeledStatement.js';\nimport { LetDirective } from './visitors/LetDirective.js';\nimport { MemberExpression } from './visitors/MemberExpression.js';\nimport { OnDirective } from './visitors/OnDirective.js';\nimport { Program } from './visitors/Program.js';\nimport { RegularElement } from './visitors/RegularElement.js';\nimport { RenderTag } from './visitors/RenderTag.js';\nimport { SlotElement } from './visitors/SlotElement.js';\nimport { SnippetBlock } from './visitors/SnippetBlock.js';\nimport { SpreadAttribute } from './visitors/SpreadAttribute.js';\nimport { SvelteBody } from './visitors/SvelteBody.js';\nimport { SvelteComponent } from './visitors/SvelteComponent.js';\nimport { SvelteDocument } from './visitors/SvelteDocument.js';\nimport { SvelteElement } from './visitors/SvelteElement.js';\nimport { SvelteFragment } from './visitors/SvelteFragment.js';\nimport { SvelteBoundary } from './visitors/SvelteBoundary.js';\nimport { SvelteHead } from './visitors/SvelteHead.js';\nimport { SvelteSelf } from './visitors/SvelteSelf.js';\nimport { SvelteWindow } from './visitors/SvelteWindow.js';\nimport { TitleElement } from './visitors/TitleElement.js';\nimport { TransitionDirective } from './visitors/TransitionDirective.js';\nimport { UpdateExpression } from './visitors/UpdateExpression.js';\nimport { UseDirective } from './visitors/UseDirective.js';\nimport { VariableDeclaration } from './visitors/VariableDeclaration.js';\n\n/** @type {Visitors} */\nconst visitors = {\n\t_: function set_scope(node, { next, state }) {\n\t\tconst scope = state.scopes.get(node);\n\n\t\tif (scope && scope !== state.scope) {\n\t\t\tconst transform = { ...state.transform };\n\n\t\t\tfor (const [name, binding] of scope.declarations) {\n\t\t\t\tif (\n\t\t\t\t\tbinding.kind === 'normal' ||\n\t\t\t\t\t// Reads of `$state(...)` declarations are not\n\t\t\t\t\t// transformed if they are never reassigned\n\t\t\t\t\t(binding.kind === 'state' && !is_state_source(binding, state.analysis))\n\t\t\t\t) {\n\t\t\t\t\tdelete transform[name];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext({ ...state, transform, scope });\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t},\n\tAnimateDirective,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tAttribute,\n\tAwaitBlock,\n\tBinaryExpression,\n\tBindDirective,\n\tBlockStatement,\n\tBreakStatement,\n\tCallExpression,\n\tClassBody,\n\tComment,\n\tComponent,\n\tConstTag,\n\tDebugTag,\n\tEachBlock,\n\tExportNamedDeclaration,\n\tExpressionStatement,\n\tFragment,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tHtmlTag,\n\tIdentifier,\n\tIfBlock,\n\tImportDeclaration,\n\tKeyBlock,\n\tLabeledStatement,\n\tLetDirective,\n\tMemberExpression,\n\tOnDirective,\n\tProgram,\n\tRegularElement,\n\tRenderTag,\n\tSlotElement,\n\tSnippetBlock,\n\tSpreadAttribute,\n\tSvelteBody,\n\tSvelteComponent,\n\tSvelteDocument,\n\tSvelteElement,\n\tSvelteFragment,\n\tSvelteBoundary,\n\tSvelteHead,\n\tSvelteSelf,\n\tSvelteWindow,\n\tTitleElement,\n\tTransitionDirective,\n\tUpdateExpression,\n\tUseDirective,\n\tVariableDeclaration\n};\n\n/**\n * @param {ComponentAnalysis} analysis\n * @param {ValidatedCompileOptions} options\n * @returns {ESTree.Program}\n */\nexport function client_component(analysis, options) {\n\t/** @type {ComponentClientTransformState} */\n\tconst state = {\n\t\tanalysis,\n\t\toptions,\n\t\tscope: analysis.module.scope,\n\t\tscopes: analysis.module.scopes,\n\t\tis_instance: false,\n\t\thoisted: [b.import_all('$', 'svelte/internal/client')],\n\t\tnode: /** @type {any} */ (null), // populated by the root node\n\t\tlegacy_reactive_imports: [],\n\t\tlegacy_reactive_statements: new Map(),\n\t\tmetadata: {\n\t\t\tcontext: {\n\t\t\t\ttemplate_needs_import_node: false,\n\t\t\t\ttemplate_contains_script_tag: false\n\t\t\t},\n\t\t\tnamespace: options.namespace,\n\t\t\tbound_contenteditable: false\n\t\t},\n\t\tevents: new Set(),\n\t\tpreserve_whitespace: options.preserveWhitespace,\n\t\tpublic_state: new Map(),\n\t\tprivate_state: new Map(),\n\t\ttransform: {},\n\t\tin_constructor: false,\n\t\tinstance_level_snippets: [],\n\t\tmodule_level_snippets: [],\n\n\t\t// these are set inside the `Fragment` visitor, and cannot be used until then\n\t\tinit: /** @type {any} */ (null),\n\t\tupdate: /** @type {any} */ (null),\n\t\texpressions: /** @type {any} */ (null),\n\t\tafter_update: /** @type {any} */ (null),\n\t\ttemplate: /** @type {any} */ (null),\n\t\tlocations: /** @type {any} */ (null)\n\t};\n\n\tconst module = /** @type {ESTree.Program} */ (\n\t\twalk(/** @type {AST.SvelteNode} */ (analysis.module.ast), state, visitors)\n\t);\n\n\tconst instance_state = {\n\t\t...state,\n\t\ttransform: { ...state.transform },\n\t\tscope: analysis.instance.scope,\n\t\tscopes: analysis.instance.scopes,\n\t\tis_instance: true\n\t};\n\n\tconst instance = /** @type {ESTree.Program} */ (\n\t\twalk(/** @type {AST.SvelteNode} */ (analysis.instance.ast), instance_state, visitors)\n\t);\n\n\tconst template = /** @type {ESTree.Program} */ (\n\t\twalk(\n\t\t\t/** @type {AST.SvelteNode} */ (analysis.template.ast),\n\t\t\t{\n\t\t\t\t...state,\n\t\t\t\ttransform: instance_state.transform,\n\t\t\t\tscope: analysis.instance.scope,\n\t\t\t\tscopes: analysis.template.scopes\n\t\t\t},\n\t\t\tvisitors\n\t\t)\n\t);\n\n\tmodule.body.unshift(...state.legacy_reactive_imports);\n\n\t/** @type {ESTree.Statement[]} */\n\tconst store_setup = [];\n\n\t/** @type {ESTree.VariableDeclaration[]} */\n\tconst legacy_reactive_declarations = [];\n\n\tlet needs_store_cleanup = false;\n\n\tfor (const [name, binding] of analysis.instance.scope.declarations) {\n\t\tif (binding.kind === 'legacy_reactive') {\n\t\t\tlegacy_reactive_declarations.push(\n\t\t\t\tb.const(\n\t\t\t\t\tname,\n\t\t\t\t\tb.call('$.mutable_source', undefined, analysis.immutable ? b.true : undefined)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tif (binding.kind === 'store_sub') {\n\t\t\tif (store_setup.length === 0) {\n\t\t\t\tneeds_store_cleanup = true;\n\t\t\t\tstore_setup.push(\n\t\t\t\t\tb.const(b.array_pattern([b.id('$$stores'), b.id('$$cleanup')]), b.call('$.setup_stores'))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// We're creating an arrow function that gets the store value which minifies better for two or more references\n\t\t\tconst store_reference = build_getter(b.id(name.slice(1)), instance_state);\n\t\t\tconst store_get = b.call('$.store_get', store_reference, b.literal(name), b.id('$$stores'));\n\t\t\tstore_setup.push(\n\t\t\t\tb.const(\n\t\t\t\t\tbinding.node,\n\t\t\t\t\tdev\n\t\t\t\t\t\t? b.thunk(\n\t\t\t\t\t\t\t\tb.sequence([\n\t\t\t\t\t\t\t\t\tb.call('$.validate_store', store_reference, b.literal(name.slice(1))),\n\t\t\t\t\t\t\t\t\tstore_get\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: b.thunk(store_get)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tfor (const [node] of analysis.reactive_statements) {\n\t\tconst statement = [...state.legacy_reactive_statements].find(([n]) => n === node);\n\t\tif (statement === undefined) {\n\t\t\tthrow new Error('Could not find reactive statement');\n\t\t}\n\t\tinstance.body.push(statement[1]);\n\t}\n\n\tif (analysis.reactive_statements.size > 0) {\n\t\tinstance.body.push(b.stmt(b.call('$.legacy_pre_effect_reset')));\n\t}\n\n\t/**\n\t * Used to store the group nodes\n\t * @type {ESTree.VariableDeclaration[]}\n\t */\n\tconst group_binding_declarations = [];\n\tfor (const group of analysis.binding_groups.values()) {\n\t\tgroup_binding_declarations.push(b.const(group.name, b.array([])));\n\t}\n\n\t/** @type {Array<ESTree.Property | ESTree.SpreadElement>} */\n\tconst component_returned_object = analysis.exports.flatMap(({ name, alias }) => {\n\t\tconst binding = instance_state.scope.get(name);\n\t\tconst expression = build_getter(b.id(name), instance_state);\n\t\tconst getter = b.get(alias ?? name, [b.return(expression)]);\n\n\t\tif (expression.type === 'Identifier') {\n\t\t\tif (binding?.declaration_kind === 'let' || binding?.declaration_kind === 'var') {\n\t\t\t\treturn [\n\t\t\t\t\tgetter,\n\t\t\t\t\tb.set(alias ?? name, [b.stmt(b.assignment('=', expression, b.id('$$value')))])\n\t\t\t\t];\n\t\t\t} else if (!dev) {\n\t\t\t\treturn b.init(alias ?? name, expression);\n\t\t\t}\n\t\t}\n\n\t\tif (binding?.kind === 'prop' || binding?.kind === 'bindable_prop') {\n\t\t\treturn [getter, b.set(alias ?? name, [b.stmt(b.call(name, b.id('$$value')))])];\n\t\t}\n\n\t\tif (binding?.kind === 'state' || binding?.kind === 'raw_state') {\n\t\t\tconst value = binding.kind === 'state' ? b.call('$.proxy', b.id('$$value')) : b.id('$$value');\n\t\t\treturn [getter, b.set(alias ?? name, [b.stmt(b.call('$.set', b.id(name), value))])];\n\t\t}\n\n\t\treturn getter;\n\t});\n\n\tconst properties = [...analysis.instance.scope.declarations].filter(\n\t\t([name, binding]) =>\n\t\t\t(binding.kind === 'prop' || binding.kind === 'bindable_prop') && !name.startsWith('$$')\n\t);\n\n\tif (analysis.accessors) {\n\t\tfor (const [name, binding] of properties) {\n\t\t\tconst key = binding.prop_alias ?? name;\n\n\t\t\tconst getter = b.get(key, [b.return(b.call(b.id(name)))]);\n\n\t\t\tconst setter = b.set(key, [\n\t\t\t\tb.stmt(b.call(b.id(name), b.id('$$value'))),\n\t\t\t\tb.stmt(b.call('$.flush'))\n\t\t\t]);\n\n\t\t\tif (analysis.runes && binding.initial) {\n\t\t\t\t// turn `set foo($$value)` into `set foo($$value = expression)`\n\t\t\t\tsetter.value.params[0] = {\n\t\t\t\t\ttype: 'AssignmentPattern',\n\t\t\t\t\tleft: b.id('$$value'),\n\t\t\t\t\tright: /** @type {ESTree.Expression} */ (binding.initial)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcomponent_returned_object.push(getter, setter);\n\t\t}\n\t}\n\n\tif (options.compatibility.componentApi === 4) {\n\t\tcomponent_returned_object.push(\n\t\t\tb.init('$set', b.id('$.update_legacy_props')),\n\t\t\tb.init(\n\t\t\t\t'$on',\n\t\t\t\tb.arrow(\n\t\t\t\t\t[b.id('$$event_name'), b.id('$$event_cb')],\n\t\t\t\t\tb.call(\n\t\t\t\t\t\t'$.add_legacy_event_listener',\n\t\t\t\t\t\tb.id('$$props'),\n\t\t\t\t\t\tb.id('$$event_name'),\n\t\t\t\t\t\tb.id('$$event_cb')\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else if (dev) {\n\t\tcomponent_returned_object.push(b.spread(b.call(b.id('$.legacy_api'))));\n\t}\n\n\tconst push_args = [b.id('$$props'), b.literal(analysis.runes)];\n\tif (dev) push_args.push(b.id(analysis.name));\n\n\tconst component_block = b.block([\n\t\t...store_setup,\n\t\t...legacy_reactive_declarations,\n\t\t...group_binding_declarations,\n\t\t...state.instance_level_snippets,\n\t\t.../** @type {ESTree.Statement[]} */ (instance.body),\n\t\tanalysis.runes || !analysis.needs_context\n\t\t\t? b.empty\n\t\t\t: b.stmt(b.call('$.init', analysis.immutable ? b.true : undefined)),\n\t\t.../** @type {ESTree.Statement[]} */ (template.body)\n\t]);\n\n\tif (!analysis.runes) {\n\t\t// Bind static exports to props so that people can access them with bind:x\n\t\tfor (const { name, alias } of analysis.exports) {\n\t\t\tcomponent_block.body.push(\n\t\t\t\tb.stmt(\n\t\t\t\t\tb.call(\n\t\t\t\t\t\t'$.bind_prop',\n\t\t\t\t\t\tb.id('$$props'),\n\t\t\t\t\t\tb.literal(alias ?? name),\n\t\t\t\t\t\tbuild_getter(b.id(name), instance_state)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tif (analysis.css.ast !== null && analysis.inject_styles) {\n\t\tconst hash = b.literal(analysis.css.hash);\n\t\tconst code = b.literal(render_stylesheet(analysis.source, analysis, options).code);\n\n\t\tstate.hoisted.push(b.const('$$css', b.object([b.init('hash', hash), b.init('code', code)])));\n\n\t\tcomponent_block.body.unshift(\n\t\t\tb.stmt(b.call('$.append_styles', b.id('$$anchor'), b.id('$$css')))\n\t\t);\n\t}\n\n\tif (analysis.needs_mutation_validation) {\n\t\tcomponent_block.body.unshift(\n\t\t\tb.var('$$ownership_validator', b.call('$.create_ownership_validator', b.id('$$props')))\n\t\t);\n\t}\n\n\tconst should_inject_context =\n\t\tdev ||\n\t\tanalysis.needs_context ||\n\t\tanalysis.reactive_statements.size > 0 ||\n\t\tcomponent_returned_object.length > 0;\n\n\t// we want the cleanup function for the stores to run as the very last thing\n\t// so that it can effectively clean up the store subscription even after the user effects runs\n\tif (should_inject_context) {\n\t\tcomponent_block.body.unshift(b.stmt(b.call('$.push', ...push_args)));\n\n\t\tlet to_push;\n\n\t\tif (component_returned_object.length > 0) {\n\t\t\tlet pop_call = b.call('$.pop', b.object(component_returned_object));\n\t\t\tto_push = needs_store_cleanup ? b.var('$$pop', pop_call) : b.return(pop_call);\n\t\t} else {\n\t\t\tto_push = b.stmt(b.call('$.pop'));\n\t\t}\n\n\t\tcomponent_block.body.push(to_push);\n\t}\n\n\tif (needs_store_cleanup) {\n\t\tcomponent_block.body.push(b.stmt(b.call('$$cleanup')));\n\t\tif (component_returned_object.length > 0) {\n\t\t\tcomponent_block.body.push(b.return(b.id('$$pop')));\n\t\t}\n\t}\n\n\tif (analysis.uses_rest_props) {\n\t\tconst named_props = analysis.exports.map(({ name, alias }) => alias ?? name);\n\t\tfor (const [name, binding] of analysis.instance.scope.declarations) {\n\t\t\tif (binding.kind === 'bindable_prop') named_props.push(binding.prop_alias ?? name);\n\t\t}\n\n\t\tcomponent_block.body.unshift(\n\t\t\tb.const(\n\t\t\t\t'$$restProps',\n\t\t\t\tb.call(\n\t\t\t\t\t'$.legacy_rest_props',\n\t\t\t\t\tb.id('$$sanitized_props'),\n\t\t\t\t\tb.array(named_props.map((name) => b.literal(name)))\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tif (analysis.uses_props || analysis.uses_rest_props) {\n\t\tconst to_remove = [\n\t\t\tb.literal('children'),\n\t\t\tb.literal('$$slots'),\n\t\t\tb.literal('$$events'),\n\t\t\tb.literal('$$legacy')\n\t\t];\n\t\tif (analysis.custom_element) {\n\t\t\tto_remove.push(b.literal('$$host'));\n\t\t}\n\n\t\tcomponent_block.body.unshift(\n\t\t\tb.const(\n\t\t\t\t'$$sanitized_props',\n\t\t\t\tb.call('$.legacy_rest_props', b.id('$$props'), b.array(to_remove))\n\t\t\t)\n\t\t);\n\t}\n\n\tif (analysis.uses_slots) {\n\t\tcomponent_block.body.unshift(b.const('$$slots', b.call('$.sanitize_slots', b.id('$$props'))));\n\t}\n\n\tlet should_inject_props =\n\t\tshould_inject_context ||\n\t\tanalysis.needs_props ||\n\t\tanalysis.uses_props ||\n\t\tanalysis.uses_rest_props ||\n\t\tanalysis.uses_slots ||\n\t\tanalysis.slot_names.size > 0;\n\n\t// Merge hoisted statements into module body.\n\t// Ensure imports are on top, with the order preserved, then module body, then hoisted statements\n\t/** @type {ESTree.ImportDeclaration[]} */\n\tconst imports = [];\n\t/** @type {ESTree.Program['body']} */\n\tlet body = [];\n\n\tfor (const entry of [...module.body, ...state.hoisted]) {\n\t\tif (entry.type === 'ImportDeclaration') {\n\t\t\timports.push(entry);\n\t\t} else {\n\t\t\tbody.push(entry);\n\t\t}\n\t}\n\n\tbody = [...imports, ...state.module_level_snippets, ...body];\n\n\tconst component = b.function_declaration(\n\t\tb.id(analysis.name),\n\t\tshould_inject_props ? [b.id('$$anchor'), b.id('$$props')] : [b.id('$$anchor')],\n\t\tcomponent_block\n\t);\n\n\tif (options.hmr) {\n\t\tconst id = b.id(analysis.name);\n\t\tconst HMR = b.id('$.HMR');\n\n\t\tconst existing = b.member(id, HMR, true);\n\t\tconst incoming = b.member(b.id('module.default'), HMR, true);\n\n\t\tconst accept_fn_body = [\n\t\t\tb.stmt(b.assignment('=', b.member(incoming, 'source'), b.member(existing, 'source'))),\n\t\t\tb.stmt(b.call('$.set', b.member(existing, 'source'), b.member(incoming, 'original')))\n\t\t];\n\n\t\tif (analysis.css.hash) {\n\t\t\t// remove existing `<style>` element, in case CSS changed\n\t\t\taccept_fn_body.unshift(b.stmt(b.call('$.cleanup_styles', b.literal(analysis.css.hash))));\n\t\t}\n\n\t\tconst hmr = b.block([\n\t\t\tb.stmt(b.assignment('=', id, b.call('$.hmr', id, b.thunk(b.member(existing, 'source'))))),\n\n\t\t\tb.stmt(b.call('import.meta.hot.accept', b.arrow([b.id('module')], b.block(accept_fn_body))))\n\t\t]);\n\n\t\tbody.push(component, b.if(b.id('import.meta.hot'), hmr), b.export_default(b.id(analysis.name)));\n\t} else {\n\t\tbody.push(b.export_default(component));\n\t}\n\n\tif (dev) {\n\t\t// add `App[$.FILENAME] = 'App.svelte'` so that we can print useful messages later\n\t\tbody.unshift(\n\t\t\tb.stmt(\n\t\t\t\tb.assignment('=', b.member(b.id(analysis.name), '$.FILENAME', true), b.literal(filename))\n\t\t\t)\n\t\t);\n\t}\n\n\tif (!analysis.runes) {\n\t\tbody.unshift(b.imports([], 'svelte/internal/flags/legacy'));\n\t}\n\n\tif (analysis.tracing) {\n\t\tbody.unshift(b.imports([], 'svelte/internal/flags/tracing'));\n\t}\n\n\tif (options.discloseVersion) {\n\t\tbody.unshift(b.imports([], 'svelte/internal/disclose-version'));\n\t}\n\n\tif (options.compatibility.componentApi === 4) {\n\t\tbody.unshift(b.imports([['createClassComponent', '$$_createClassComponent']], 'svelte/legacy'));\n\t\tcomponent_block.body.unshift(\n\t\t\tb.if(\n\t\t\t\tb.id('new.target'),\n\t\t\t\tb.return(\n\t\t\t\t\tb.call(\n\t\t\t\t\t\t'$$_createClassComponent',\n\t\t\t\t\t\t// When called with new, the first argument is the constructor options\n\t\t\t\t\t\tb.object([b.init('component', b.id(analysis.name)), b.spread(b.id('$$anchor'))])\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else if (dev) {\n\t\tcomponent_block.body.unshift(b.stmt(b.call('$.check_target', b.id('new.target'))));\n\t}\n\n\tif (analysis.props_id) {\n\t\t// need to be placed on first line of the component for hydration\n\t\tcomponent_block.body.unshift(b.const(analysis.props_id, b.call('$.props_id')));\n\t}\n\n\tif (state.events.size > 0) {\n\t\tbody.push(\n\t\t\tb.stmt(b.call('$.delegate', b.array(Array.from(state.events).map((name) => b.literal(name)))))\n\t\t);\n\t}\n\n\tif (analysis.custom_element) {\n\t\tconst ce = analysis.custom_element;\n\t\tconst ce_props = typeof ce === 'boolean' ? {} : ce.props || {};\n\n\t\t/** @type {ESTree.Property[]} */\n\t\tconst props_str = [];\n\n\t\tfor (const [name, prop_def] of Object.entries(ce_props)) {\n\t\t\tconst binding = analysis.instance.scope.get(name);\n\t\t\tconst key = binding?.prop_alias ?? name;\n\n\t\t\tif (\n\t\t\t\t!prop_def.type &&\n\t\t\t\tbinding?.initial?.type === 'Literal' &&\n\t\t\t\ttypeof binding?.initial.value === 'boolean'\n\t\t\t) {\n\t\t\t\tprop_def.type = 'Boolean';\n\t\t\t}\n\n\t\t\tconst value = b.object(\n\t\t\t\t/** @type {ESTree.Property[]} */ (\n\t\t\t\t\t[\n\t\t\t\t\t\tprop_def.attribute ? b.init('attribute', b.literal(prop_def.attribute)) : undefined,\n\t\t\t\t\t\tprop_def.reflect ? b.init('reflect', b.true) : undefined,\n\t\t\t\t\t\tprop_def.type ? b.init('type', b.literal(prop_def.type)) : undefined\n\t\t\t\t\t].filter(Boolean)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tprops_str.push(b.init(key, value));\n\t\t}\n\n\t\tfor (const [name, binding] of properties) {\n\t\t\tconst key = binding.prop_alias ?? name;\n\t\t\tif (ce_props[key]) continue;\n\n\t\t\tprops_str.push(b.init(key, b.object([])));\n\t\t}\n\n\t\tconst slots_str = b.array([...analysis.slot_names.keys()].map((name) => b.literal(name)));\n\t\tconst accessors_str = b.array(\n\t\t\tanalysis.exports.map(({ name, alias }) => b.literal(alias ?? name))\n\t\t);\n\t\tconst use_shadow_dom = typeof ce === 'boolean' || ce.shadow !== 'none' ? true : false;\n\n\t\tconst create_ce = b.call(\n\t\t\t'$.create_custom_element',\n\t\t\tb.id(analysis.name),\n\t\t\tb.object(props_str),\n\t\t\tslots_str,\n\t\t\taccessors_str,\n\t\t\tb.literal(use_shadow_dom),\n\t\t\t/** @type {any} */ (typeof ce !== 'boolean' ? ce.extend : undefined)\n\t\t);\n\n\t\t// If a tag name is provided, call `customElements.define`, otherwise leave to the user\n\t\tif (typeof ce !== 'boolean' && typeof ce.tag === 'string') {\n\t\t\tconst define = b.stmt(b.call('customElements.define', b.literal(ce.tag), create_ce));\n\n\t\t\tif (options.hmr) {\n\t\t\t\tbody.push(\n\t\t\t\t\tb.if(b.binary('==', b.call('customElements.get', b.literal(ce.tag)), b.null), define)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tbody.push(define);\n\t\t\t}\n\t\t} else {\n\t\t\tbody.push(b.stmt(create_ce));\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: 'Program',\n\t\tsourceType: 'module',\n\t\tbody\n\t};\n}\n\n/**\n * @param {Analysis} analysis\n * @param {ValidatedModuleCompileOptions} options\n * @returns {ESTree.Program}\n */\nexport function client_module(analysis, options) {\n\t/** @type {ClientTransformState} */\n\tconst state = {\n\t\tanalysis,\n\t\toptions,\n\t\tscope: analysis.module.scope,\n\t\tscopes: analysis.module.scopes,\n\t\tpublic_state: new Map(),\n\t\tprivate_state: new Map(),\n\t\ttransform: {},\n\t\tin_constructor: false\n\t};\n\n\tconst module = /** @type {ESTree.Program} */ (\n\t\twalk(/** @type {AST.SvelteNode} */ (analysis.module.ast), state, visitors)\n\t);\n\n\tconst body = [b.import_all('$', 'svelte/internal/client')];\n\n\tif (analysis.tracing) {\n\t\tbody.push(b.imports([], 'svelte/internal/flags/tracing'));\n\t}\n\n\treturn {\n\t\ttype: 'Program',\n\t\tsourceType: 'module',\n\t\tbody: [...body, ...module.body]\n\t};\n}\n", "/** @import { ValidatedCompileOptions, CompileResult, ValidatedModuleCompileOptions } from '#compiler' */\n/** @import { ComponentAnalysis, Analysis } from '../types' */\nimport { print } from 'esrap';\nimport { VERSION } from '../../../version.js';\nimport { server_component, server_module } from './server/transform-server.js';\nimport { client_component, client_module } from './client/transform-client.js';\nimport { render_stylesheet } from './css/index.js';\nimport { merge_with_preprocessor_map, get_source_name } from '../../utils/mapped_code.js';\nimport * as state from '../../state.js';\n\n/**\n * @param {ComponentAnalysis} analysis\n * @param {string} source\n * @param {ValidatedCompileOptions} options\n * @returns {CompileResult}\n */\nexport function transform_component(analysis, source, options) {\n\tif (options.generate === false) {\n\t\treturn {\n\t\t\tjs: /** @type {any} */ (null),\n\t\t\tcss: null,\n\t\t\twarnings: state.warnings, // set afterwards\n\t\t\tmetadata: {\n\t\t\t\trunes: analysis.runes\n\t\t\t},\n\t\t\tast: /** @type {any} */ (null) // set afterwards\n\t\t};\n\t}\n\n\tconst program =\n\t\toptions.generate === 'server'\n\t\t\t? server_component(analysis, options)\n\t\t\t: client_component(analysis, options);\n\n\tconst js_source_name = get_source_name(options.filename, options.outputFilename, 'input.svelte');\n\n\tconst js = print(program, {\n\t\t// include source content; makes it easier/more robust looking up the source map code\n\t\t// (else esrap does return null for source and sourceMapContent which may trip up tooling)\n\t\tsourceMapContent: source,\n\t\tsourceMapSource: js_source_name\n\t});\n\n\tmerge_with_preprocessor_map(js, options, js_source_name);\n\n\tconst css =\n\t\tanalysis.css.ast && !analysis.inject_styles\n\t\t\t? render_stylesheet(source, analysis, options)\n\t\t\t: null;\n\n\treturn {\n\t\tjs,\n\t\tcss,\n\t\twarnings: state.warnings, // set afterwards. TODO apply preprocessor sourcemap\n\t\tmetadata: {\n\t\t\trunes: analysis.runes\n\t\t},\n\t\tast: /** @type {any} */ (null) // set afterwards\n\t};\n}\n\n/**\n * @param {Analysis} analysis\n * @param {string} source\n * @param {ValidatedModuleCompileOptions} options\n * @returns {CompileResult}\n */\nexport function transform_module(analysis, source, options) {\n\tif (options.generate === false) {\n\t\treturn {\n\t\t\tjs: /** @type {any} */ (null),\n\t\t\tcss: null,\n\t\t\twarnings: state.warnings, // set afterwards\n\t\t\tmetadata: {\n\t\t\t\trunes: true\n\t\t\t},\n\t\t\tast: /** @type {any} */ (null) // set afterwards\n\t\t};\n\t}\n\n\tconst program =\n\t\toptions.generate === 'server'\n\t\t\t? server_module(analysis, options)\n\t\t\t: client_module(analysis, options);\n\n\tconst basename = options.filename.split(/[/\\\\]/).at(-1);\n\tif (program.body.length > 0) {\n\t\tprogram.body[0].leadingComments = [\n\t\t\t{\n\t\t\t\ttype: 'Block',\n\t\t\t\tvalue: ` ${basename} generated by Svelte v${VERSION} `\n\t\t\t}\n\t\t];\n\t}\n\n\treturn {\n\t\tjs: print(program, {\n\t\t\t// include source content; makes it easier/more robust looking up the source map code\n\t\t\t// (else esrap does return null for source and sourceMapContent which may trip up tooling)\n\t\t\tsourceMapContent: source,\n\t\t\tsourceMapSource: get_source_name(options.filename, undefined, 'input.svelte.js')\n\t\t}),\n\t\tcss: null,\n\t\tmetadata: {\n\t\t\trunes: true\n\t\t},\n\t\twarnings: state.warnings, // set afterwards\n\t\tast: /** @type {any} */ (null) // set afterwards\n\t};\n}\n", "/** @import { ModuleCompileOptions, ValidatedModuleCompileOptions, CompileOptions, ValidatedCompileOptions } from '#compiler' */\nimport * as e from './errors.js';\nimport * as w from './warnings.js';\n\n/**\n * @template [Input=any]\n * @template [Output=Input]\n * @typedef {(input: Input, keypath: string) => Required<Output>} Validator\n */\n\nconst common = {\n\tfilename: string('(unknown)'),\n\n\t// default to process.cwd() where it exists to replicate svelte4 behavior (and make Deno work with this as well)\n\t// see https://github.com/sveltejs/svelte/blob/b62fc8c8fd2640c9b99168f01b9d958cb2f7574f/packages/svelte/src/compiler/compile/Component.js#L211\n\t/* eslint-disable */\n\trootDir: string(\n\t\ttypeof process !== 'undefined'\n\t\t\t? process.cwd?.()\n\t\t\t: // @ts-expect-error\n\t\t\t\ttypeof Deno !== 'undefined'\n\t\t\t\t? // @ts-expect-error\n\t\t\t\t\tDeno.cwd()\n\t\t\t\t: undefined\n\t),\n\t/* eslint-enable */\n\n\tdev: boolean(false),\n\n\tgenerate: validator('client', (input, keypath) => {\n\t\tif (input === 'dom' || input === 'ssr') {\n\t\t\twarn_once(w.options_renamed_ssr_dom);\n\t\t\treturn input === 'dom' ? 'client' : 'server';\n\t\t}\n\n\t\t// TODO deprecate `false` in favour of `analyze`/`analyzeModule` https://github.com/sveltejs/svelte-octane/issues/655\n\t\tif (input !== 'client' && input !== 'server' && input !== false) {\n\t\t\tthrow_error(`${keypath} must be \"client\", \"server\" or false`);\n\t\t}\n\n\t\treturn input;\n\t}),\n\n\twarningFilter: fun(() => true)\n};\n\nexport const validate_module_options =\n\t/** @type {Validator<ModuleCompileOptions, ValidatedModuleCompileOptions>} */ (\n\t\tobject({\n\t\t\t...common\n\t\t})\n\t);\n\nexport const validate_component_options =\n\t/** @type {Validator<CompileOptions, ValidatedCompileOptions>} */ (\n\t\tobject({\n\t\t\t...common,\n\n\t\t\taccessors: deprecate(w.options_deprecated_accessors, boolean(false)),\n\n\t\t\tcss: validator('external', (input) => {\n\t\t\t\tif (input === true || input === false) {\n\t\t\t\t\tthrow_error(\n\t\t\t\t\t\t'The boolean options have been removed from the css option. Use \"external\" instead of false and \"injected\" instead of true'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (input === 'none') {\n\t\t\t\t\tthrow_error(\n\t\t\t\t\t\t'css: \"none\" is no longer a valid option. If this was crucial for you, please open an issue on GitHub with your use case.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (input !== 'external' && input !== 'injected') {\n\t\t\t\t\tthrow_error(`css should be either \"external\" (default, recommended) or \"injected\"`);\n\t\t\t\t}\n\n\t\t\t\treturn input;\n\t\t\t}),\n\n\t\t\tcssHash: fun(({ css, hash }) => {\n\t\t\t\treturn `svelte-${hash(css)}`;\n\t\t\t}),\n\n\t\t\t// TODO this is a sourcemap option, would be good to put under a sourcemap namespace\n\t\t\tcssOutputFilename: string(undefined),\n\n\t\t\tcustomElement: boolean(false),\n\n\t\t\tdiscloseVersion: boolean(true),\n\n\t\t\timmutable: deprecate(w.options_deprecated_immutable, boolean(false)),\n\n\t\t\tlegacy: removed(\n\t\t\t\t'The legacy option has been removed. If you are using this because of legacy.componentApi, use compatibility.componentApi instead'\n\t\t\t),\n\n\t\t\tcompatibility: object({\n\t\t\t\tcomponentApi: list([4, 5], 5)\n\t\t\t}),\n\n\t\t\tloopGuardTimeout: warn_removed(w.options_removed_loop_guard_timeout),\n\n\t\t\tname: string(undefined),\n\n\t\t\tnamespace: list(['html', 'mathml', 'svg']),\n\n\t\t\tmodernAst: boolean(false),\n\n\t\t\toutputFilename: string(undefined),\n\n\t\t\tpreserveComments: boolean(false),\n\n\t\t\tpreserveWhitespace: boolean(false),\n\n\t\t\trunes: boolean(undefined),\n\n\t\t\thmr: boolean(false),\n\n\t\t\tsourcemap: validator(undefined, (input) => {\n\t\t\t\t// Source maps can take on a variety of values, including string, JSON, map objects from magic-string and source-map,\n\t\t\t\t// so there's no good way to check type validity here\n\t\t\t\treturn input;\n\t\t\t}),\n\n\t\t\tenableSourcemap: warn_removed(w.options_removed_enable_sourcemap),\n\t\t\thydratable: warn_removed(w.options_removed_hydratable),\n\t\t\tformat: removed(\n\t\t\t\t'The format option has been removed in Svelte 4, the compiler only outputs ESM now. Remove \"format\" from your compiler options. ' +\n\t\t\t\t\t'If you did not set this yourself, bump the version of your bundler plugin (vite-plugin-svelte/rollup-plugin-svelte/svelte-loader)'\n\t\t\t),\n\t\t\ttag: removed(\n\t\t\t\t'The tag option has been removed in Svelte 5. Use `<svelte:options customElement=\"tag-name\" />` inside the component instead. ' +\n\t\t\t\t\t'If that does not solve your use case, please open an issue on GitHub with details.'\n\t\t\t),\n\t\t\tsveltePath: removed(\n\t\t\t\t'The sveltePath option has been removed in Svelte 5. ' +\n\t\t\t\t\t'If this option was crucial for you, please open an issue on GitHub with your use case.'\n\t\t\t),\n\t\t\t// These two were primarily created for svelte-preprocess (https://github.com/sveltejs/svelte/pull/6194),\n\t\t\t// but with new TypeScript compilation modes strictly separating types it's not necessary anymore\n\t\t\terrorMode: removed(\n\t\t\t\t'The errorMode option has been removed. If you are using this through svelte-preprocess with TypeScript, ' +\n\t\t\t\t\t'use the https://www.typescriptlang.org/tsconfig#verbatimModuleSyntax setting instead'\n\t\t\t),\n\t\t\tvarsReport: removed(\n\t\t\t\t'The vars option has been removed. If you are using this through svelte-preprocess with TypeScript, ' +\n\t\t\t\t\t'use the https://www.typescriptlang.org/tsconfig#verbatimModuleSyntax setting instead'\n\t\t\t)\n\t\t})\n\t);\n\n/**\n * @param {string} msg\n * @returns {Validator}\n */\nfunction removed(msg) {\n\treturn (input) => {\n\t\tif (input !== undefined) {\n\t\t\te.options_removed(null, msg);\n\t\t}\n\t\treturn /** @type {any} */ (undefined);\n\t};\n}\n\nconst warned = new Set();\n\n/** @param {(node: null) => void} fn */\nfunction warn_once(fn) {\n\tif (!warned.has(fn)) {\n\t\twarned.add(fn);\n\t\tfn(null);\n\t}\n}\n\n/**\n * @param {(node: null) => void} fn\n * @returns {Validator}\n */\nfunction warn_removed(fn) {\n\treturn (input) => {\n\t\tif (input !== undefined) warn_once(fn);\n\t\treturn /** @type {any} */ (undefined);\n\t};\n}\n\n/**\n * @param {(node: null) => void} fn\n * @param {Validator} validator\n * @returns {Validator}\n */\nfunction deprecate(fn, validator) {\n\treturn (input, keypath) => {\n\t\tif (input !== undefined) warn_once(fn);\n\t\treturn validator(input, keypath);\n\t};\n}\n\n/**\n * @param {Record<string, Validator>} children\n * @param {boolean} [allow_unknown]\n * @returns {Validator}\n */\nfunction object(children, allow_unknown = false) {\n\treturn (input, keypath) => {\n\t\t/** @type {Record<string, any>} */\n\t\tconst output = {};\n\n\t\tif ((input && typeof input !== 'object') || Array.isArray(input)) {\n\t\t\tthrow_error(`${keypath} should be an object`);\n\t\t}\n\n\t\tfor (const key in input) {\n\t\t\tif (!(key in children)) {\n\t\t\t\tif (allow_unknown) {\n\t\t\t\t\toutput[key] = input[key];\n\t\t\t\t} else {\n\t\t\t\t\te.options_unrecognised(null, `${keypath ? `${keypath}.${key}` : key}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const key in children) {\n\t\t\tconst validator = children[key];\n\t\t\toutput[key] = validator(input && input[key], keypath ? `${keypath}.${key}` : key);\n\t\t}\n\n\t\treturn output;\n\t};\n}\n\n/**\n * @param {any} fallback\n * @param {(value: any, keypath: string) => any} fn\n * @returns {Validator}\n */\nfunction validator(fallback, fn) {\n\treturn (input, keypath) => {\n\t\treturn input === undefined ? fallback : fn(input, keypath);\n\t};\n}\n\n/**\n * @param {number} fallback\n * @returns {Validator}\n */\nfunction number(fallback) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (typeof input !== 'number') {\n\t\t\tthrow_error(`${keypath} should be a number, if specified`);\n\t\t}\n\t\treturn input;\n\t});\n}\n\n/**\n * @param {string | undefined} fallback\n * @param {boolean} allow_empty\n * @returns {Validator}\n */\nfunction string(fallback, allow_empty = true) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (typeof input !== 'string') {\n\t\t\tthrow_error(`${keypath} should be a string, if specified`);\n\t\t}\n\n\t\tif (!allow_empty && input === '') {\n\t\t\tthrow_error(`${keypath} cannot be empty`);\n\t\t}\n\n\t\treturn input;\n\t});\n}\n\n/**\n * @param {string[]} fallback\n * @returns {Validator}\n */\nfunction string_array(fallback) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (input && !Array.isArray(input)) {\n\t\t\tthrow_error(`${keypath} should be a string array, if specified`);\n\t\t}\n\n\t\treturn input;\n\t});\n}\n\n/**\n * @param {boolean | undefined} fallback\n * @returns {Validator}\n */\nfunction boolean(fallback) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (typeof input !== 'boolean') {\n\t\t\tthrow_error(`${keypath} should be true or false, if specified`);\n\t\t}\n\t\treturn input;\n\t});\n}\n\n/**\n * @param {Array<boolean | string | number>} options\n * @returns {Validator}\n */\nfunction list(options, fallback = options[0]) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (!options.includes(input)) {\n\t\t\t// prettier-ignore\n\t\t\tconst msg = options.length > 2\n\t\t\t\t? `${keypath} should be one of ${options.slice(0, -1).map(input => `\"${input}\"`).join(', ')} or \"${options[options.length - 1]}\"`\n\t\t\t\t: `${keypath} should be either \"${options[0]}\" or \"${options[1]}\"`;\n\n\t\t\tthrow_error(msg);\n\t\t}\n\t\treturn input;\n\t});\n}\n\n/**\n * @param {(...args: any) => any} fallback\n * @returns {Validator}\n */\nfunction fun(fallback) {\n\treturn validator(fallback, (input, keypath) => {\n\t\tif (typeof input !== 'function') {\n\t\t\tthrow_error(`${keypath} should be a function, if specified`);\n\t\t}\n\t\treturn input;\n\t});\n}\n\n/** @param {string} msg */\nfunction throw_error(msg) {\n\te.options_invalid_value(null, msg);\n}\n", "/** @import { Processed } from './public.js' */\nimport { decode as decode_mappings } from '@jridgewell/sourcemap-codec';\n\n/**\n * Import decoded sourcemap from mozilla/source-map/SourceMapGenerator\n * Forked from source-map/lib/source-map-generator.js\n * from methods _serializeMappings and toJSON.\n * We cannot use source-map.d.ts types, because we access hidden properties.\n * @param {any} generator\n */\nfunction decoded_sourcemap_from_generator(generator) {\n\tlet previous_generated_line = 1;\n\t/** @type {number[][][]} */\n\tconst converted_mappings = [[]];\n\tlet result_line = converted_mappings[0];\n\tlet result_segment;\n\tlet mapping;\n\tconst source_idx = generator._sources\n\t\t.toArray()\n\t\t// @ts-ignore\n\t\t.reduce((acc, val, idx) => ((acc[val] = idx), acc), {});\n\tconst name_idx = generator._names\n\t\t.toArray()\n\t\t// @ts-ignore\n\t\t.reduce((acc, val, idx) => ((acc[val] = idx), acc), {});\n\tconst mappings = generator._mappings.toArray();\n\tfor (let i = 0, len = mappings.length; i < len; i++) {\n\t\tmapping = mappings[i];\n\t\tif (mapping.generatedLine > previous_generated_line) {\n\t\t\twhile (mapping.generatedLine > previous_generated_line) {\n\t\t\t\tconverted_mappings.push([]);\n\t\t\t\tprevious_generated_line++;\n\t\t\t}\n\t\t\tresult_line = converted_mappings[mapping.generatedLine - 1]; // line is one-based\n\t\t} else if (i > 0) {\n\t\t\tconst previous_mapping = mappings[i - 1];\n\t\t\tif (\n\t\t\t\t// sorted by selectivity\n\t\t\t\tmapping.generatedColumn === previous_mapping.generatedColumn &&\n\t\t\t\tmapping.originalColumn === previous_mapping.originalColumn &&\n\t\t\t\tmapping.name === previous_mapping.name &&\n\t\t\t\tmapping.generatedLine === previous_mapping.generatedLine &&\n\t\t\t\tmapping.originalLine === previous_mapping.originalLine &&\n\t\t\t\tmapping.source === previous_mapping.source\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tresult_line.push([mapping.generatedColumn]);\n\t\tresult_segment = result_line[result_line.length - 1];\n\t\tif (mapping.source != null) {\n\t\t\tresult_segment.push(\n\t\t\t\t...[source_idx[mapping.source], mapping.originalLine - 1, mapping.originalColumn]\n\t\t\t);\n\t\t\tif (mapping.name != null) {\n\t\t\t\tresult_segment.push(name_idx[mapping.name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @type {{\n\t *  version: number;\n\t * sources: string[];\n\t * names: string[];\n\t * mappings: number[][][];\n\t * file?: string;\n\t * }}\n\t */\n\tconst map = {\n\t\tversion: generator._version,\n\t\tsources: generator._sources.toArray(),\n\t\tnames: generator._names.toArray(),\n\t\tmappings: converted_mappings\n\t};\n\tif (generator._file != null) {\n\t\tmap.file = generator._file;\n\t}\n\t// not needed: map.sourcesContent and map.sourceRoot\n\treturn map;\n}\n\n/**\n * @param {Processed} processed\n */\nexport function decode_map(processed) {\n\tlet decoded_map = typeof processed.map === 'string' ? JSON.parse(processed.map) : processed.map;\n\tif (typeof decoded_map.mappings === 'string') {\n\t\tdecoded_map.mappings = decode_mappings(decoded_map.mappings);\n\t}\n\tif (decoded_map._mappings && decoded_map.constructor.name === 'SourceMapGenerator') {\n\t\t// import decoded sourcemap from mozilla/source-map/SourceMapGenerator\n\t\tdecoded_map = decoded_sourcemap_from_generator(decoded_map);\n\t}\n\treturn decoded_map;\n}\n", "/** @import { Source, Replacement } from './private.js' */\nimport { MappedCode } from '../utils/mapped_code.js';\n\n/**\n * @param {string} code_slice\n * @param {number} offset\n * @param {Source} opts\n * @returns {Source}\n */\nexport function slice_source(code_slice, offset, { file_basename, filename, get_location }) {\n\treturn {\n\t\tsource: code_slice,\n\t\tget_location: (index) => get_location(index + offset),\n\t\tfile_basename,\n\t\tfilename\n\t};\n}\n\n/**\n * @param {RegExp} re\n * @param {(...match: any[]) => Promise<MappedCode>} get_replacement\n * @param {string} source\n */\nfunction calculate_replacements(re, get_replacement, source) {\n\t/**\n\t * @type {Array<Promise<Replacement>>}\n\t */\n\tconst replacements = [];\n\tsource.replace(re, (...match) => {\n\t\treplacements.push(\n\t\t\tget_replacement(...match).then((replacement) => {\n\t\t\t\tconst matched_string = match[0];\n\t\t\t\tconst offset = match[match.length - 2];\n\t\t\t\treturn { offset, length: matched_string.length, replacement };\n\t\t\t})\n\t\t);\n\t\treturn '';\n\t});\n\treturn Promise.all(replacements);\n}\n\n/**\n * @param {Replacement[]} replacements\n * @param {Source} source\n * @returns {MappedCode}\n */\nfunction perform_replacements(replacements, source) {\n\tconst out = new MappedCode();\n\tlet last_end = 0;\n\tfor (const { offset, length, replacement } of replacements) {\n\t\tconst unchanged_prefix = MappedCode.from_source(\n\t\t\tslice_source(source.source.slice(last_end, offset), last_end, source)\n\t\t);\n\t\tout.concat(unchanged_prefix).concat(replacement);\n\t\tlast_end = offset + length;\n\t}\n\tconst unchanged_suffix = MappedCode.from_source(\n\t\tslice_source(source.source.slice(last_end), last_end, source)\n\t);\n\treturn out.concat(unchanged_suffix);\n}\n\n/**\n * @param {RegExp} regex\n * @param {(...match: any[]) => Promise<MappedCode>} get_replacement\n * @param {Source} location\n * @returns {Promise<MappedCode>}\n */\nexport async function replace_in_code(regex, get_replacement, location) {\n\tconst replacements = await calculate_replacements(regex, get_replacement, location.source);\n\treturn perform_replacements(replacements, location);\n}\n", "/** @import { Processed, Preprocessor, MarkupPreprocessor, PreprocessorGroup } from './public.js' */\n/** @import { SourceUpdate, Source } from './private.js' */\n/** @import { DecodedSourceMap, RawSourceMap } from '@ampproject/remapping' */\nimport { getLocator } from 'locate-character';\nimport {\n\tMappedCode,\n\tparse_attached_sourcemap,\n\tsourcemap_add_offset,\n\tcombine_sourcemaps,\n\tget_basename\n} from '../utils/mapped_code.js';\nimport { decode_map } from './decode_sourcemap.js';\nimport { replace_in_code, slice_source } from './replace_in_code.js';\n\n/**\n * Represents intermediate states of the preprocessing.\n * Implements the Source interface.\n */\nclass PreprocessResult {\n\t/** @type {string} */\n\tsource;\n\n\t/** @type {string | undefined} The filename passed as-is to preprocess */\n\tfilename;\n\n\t// sourcemap_list is sorted in reverse order from last map (index 0) to first map (index -1)\n\t// so we use sourcemap_list.unshift() to add new maps\n\t// https://github.com/ampproject/remapping#multiple-transformations-of-a-file\n\n\t/**\n\t * @default []\n\t * @type {Array<DecodedSourceMap | RawSourceMap>}\n\t */\n\tsourcemap_list = [];\n\n\t/**\n\t * @default []\n\t * @type {string[]}\n\t */\n\tdependencies = [];\n\n\t/**\n\t * @type {string | null} last part of the filename, as used for `sources` in sourcemaps\n\t */\n\tfile_basename = /** @type {any} */ (undefined);\n\n\t/**\n\t * @type {ReturnType<typeof getLocator>}\n\t */\n\tget_location = /** @type {any} */ (undefined);\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [filename]\n\t */\n\tconstructor(source, filename) {\n\t\tthis.source = source;\n\t\tthis.filename = filename;\n\t\tthis.update_source({ string: source });\n\t\t// preprocess source must be relative to itself or equal null\n\t\tthis.file_basename = filename == null ? null : get_basename(filename);\n\t}\n\n\t/**\n\t * @param {SourceUpdate} opts\n\t */\n\tupdate_source({ string: source, map, dependencies }) {\n\t\tif (source != null) {\n\t\t\tthis.source = source;\n\t\t\tthis.get_location = getLocator(source);\n\t\t}\n\t\tif (map) {\n\t\t\tthis.sourcemap_list.unshift(map);\n\t\t}\n\t\tif (dependencies) {\n\t\t\tthis.dependencies.push(...dependencies);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Processed}\n\t */\n\tto_processed() {\n\t\t// Combine all the source maps for each preprocessor function into one\n\t\t// @ts-expect-error TODO there might be a bug in hiding here\n\t\tconst map = combine_sourcemaps(this.file_basename, this.sourcemap_list);\n\t\treturn {\n\t\t\t// TODO return separated output, in future version where svelte.compile supports it:\n\t\t\t// style: { code: styleCode, map: styleMap },\n\t\t\t// script { code: scriptCode, map: scriptMap },\n\t\t\t// markup { code: markupCode, map: markupMap },\n\t\t\tcode: this.source,\n\t\t\tdependencies: [...new Set(this.dependencies)],\n\t\t\t// @ts-expect-error TODO there might be a bug in hiding here\n\t\t\tmap,\n\t\t\ttoString: () => this.source\n\t\t};\n\t}\n}\n/**\n * Convert preprocessor output for the tag content into MappedCode\n * @param {Processed} processed\n * @param {{ line: number; column: number; }} location\n * @param {string} file_basename\n * @returns {MappedCode}\n */\nfunction processed_content_to_code(processed, location, file_basename) {\n\t// Convert the preprocessed code and its sourcemap to a MappedCode\n\n\t/**\n\t * @type {DecodedSourceMap | undefined}\n\t */\n\tlet decoded_map = undefined;\n\tif (processed.map) {\n\t\tdecoded_map = decode_map(processed);\n\t\t// decoded map may not have sources for empty maps like `{ mappings: '' }`\n\t\tif (decoded_map?.sources) {\n\t\t\t// offset only segments pointing at original component source\n\t\t\tconst source_index = decoded_map.sources.indexOf(file_basename);\n\t\t\tif (source_index !== -1) {\n\t\t\t\tsourcemap_add_offset(decoded_map, location, source_index);\n\t\t\t}\n\t\t}\n\t}\n\treturn MappedCode.from_processed(processed.code, decoded_map);\n}\n/**\n * Given the whole tag including content, return a `MappedCode`\n * representing the tag content replaced with `processed`.\n * @param {Processed} processed\n * @param {'style' | 'script'} tag_name\n * @param {string} original_attributes\n * @param {string} generated_attributes\n * @param {Source} source\n * @returns {MappedCode}\n */\nfunction processed_tag_to_code(\n\tprocessed,\n\ttag_name,\n\toriginal_attributes,\n\tgenerated_attributes,\n\tsource\n) {\n\tconst { file_basename, get_location } = source;\n\n\t/**\n\t * @param {string} code\n\t * @param {number} offset\n\t */\n\tconst build_mapped_code = (code, offset) =>\n\t\tMappedCode.from_source(slice_source(code, offset, source));\n\n\t// To map the open/close tag and content starts positions correctly, we need to\n\t// differentiate between the original attributes and the generated attributes:\n\t// `source` contains the original attributes and its get_location maps accordingly.\n\tconst original_tag_open = `<${tag_name}${original_attributes}>`;\n\tconst tag_open = `<${tag_name}${generated_attributes}>`;\n\t/** @type {MappedCode} */\n\tlet tag_open_code;\n\n\tif (original_tag_open.length !== tag_open.length) {\n\t\t// Generate a source map for the open tag\n\t\t/** @type {DecodedSourceMap['mappings']} */\n\t\tconst mappings = [\n\t\t\t[\n\t\t\t\t// start of tag\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t// end of tag start\n\t\t\t\t[`<${tag_name}`.length, 0, 0, `<${tag_name}`.length]\n\t\t\t]\n\t\t];\n\n\t\tconst line = tag_open.split('\\n').length - 1;\n\t\tconst column = tag_open.length - (line === 0 ? 0 : tag_open.lastIndexOf('\\n')) - 1;\n\n\t\twhile (mappings.length <= line) {\n\t\t\t// end of tag start again, if this is a multi line mapping\n\t\t\tmappings.push([[0, 0, 0, `<${tag_name}`.length]]);\n\t\t}\n\n\t\t// end of tag\n\t\tmappings[line].push([\n\t\t\tcolumn,\n\t\t\t0,\n\t\t\toriginal_tag_open.split('\\n').length - 1,\n\t\t\toriginal_tag_open.length - original_tag_open.lastIndexOf('\\n') - 1\n\t\t]);\n\n\t\t/** @type {DecodedSourceMap} */\n\t\tconst map = {\n\t\t\tversion: 3,\n\t\t\tnames: [],\n\t\t\tsources: [file_basename],\n\t\t\tmappings\n\t\t};\n\t\tsourcemap_add_offset(map, get_location(0), 0);\n\t\ttag_open_code = MappedCode.from_processed(tag_open, map);\n\t} else {\n\t\ttag_open_code = build_mapped_code(tag_open, 0);\n\t}\n\n\tconst tag_close = `</${tag_name}>`;\n\tconst tag_close_code = build_mapped_code(\n\t\ttag_close,\n\t\toriginal_tag_open.length + source.source.length\n\t);\n\n\tparse_attached_sourcemap(processed, tag_name);\n\tconst content_code = processed_content_to_code(\n\t\tprocessed,\n\t\tget_location(original_tag_open.length),\n\t\tfile_basename\n\t);\n\n\treturn tag_open_code.concat(content_code).concat(tag_close_code);\n}\n\nconst attribute_pattern = /([\\w-$]+\\b)(?:=(?:\"([^\"]*)\"|'([^']*)'|(\\S+)))?/g;\n\n/**\n * @param {string} str\n */\nfunction parse_tag_attributes(str) {\n\t/** @type {Record<string, string | boolean>} */\n\tconst attrs = {};\n\n\t/** @type {RegExpMatchArray | null} */\n\tlet match;\n\twhile ((match = attribute_pattern.exec(str)) !== null) {\n\t\tconst name = match[1];\n\t\tconst value = match[2] || match[3] || match[4];\n\t\tattrs[name] = !value || value;\n\t}\n\n\treturn attrs;\n}\n\n/**\n * @param {Record<string, string | boolean> | undefined} attributes\n */\nfunction stringify_tag_attributes(attributes) {\n\tif (!attributes) return;\n\n\tlet value = Object.entries(attributes)\n\t\t.map(([key, value]) => (value === true ? key : `${key}=\"${value}\"`))\n\t\t.join(' ');\n\tif (value) {\n\t\tvalue = ' ' + value;\n\t}\n\treturn value;\n}\n\nconst regex_style_tags =\n\t/<!--[^]*?-->|<style((?:\\s+[^=>'\"/\\s]+=(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)|\\s+[^=>'\"/\\s]+)*\\s*)(?:\\/>|>([\\S\\s]*?)<\\/style>)/g;\nconst regex_script_tags =\n\t/<!--[^]*?-->|<script((?:\\s+[^=>'\"/\\s]+=(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)|\\s+[^=>'\"/\\s]+)*\\s*)(?:\\/>|>([\\S\\s]*?)<\\/script>)/g;\n\n/**\n * Calculate the updates required to process all instances of the specified tag.\n * @param {'style' | 'script'} tag_name\n * @param {Preprocessor} preprocessor\n * @param {Source} source\n * @returns {Promise<SourceUpdate>}\n */\nasync function process_tag(tag_name, preprocessor, source) {\n\tconst { filename, source: markup } = source;\n\tconst tag_regex = tag_name === 'style' ? regex_style_tags : regex_script_tags;\n\n\t/**\n\t * @type {string[]}\n\t */\n\tconst dependencies = [];\n\n\t/**\n\t * @param {string} tag_with_content\n\t * @param {number} tag_offset\n\t * @returns {Promise<MappedCode>}\n\t */\n\tasync function process_single_tag(tag_with_content, attributes = '', content = '', tag_offset) {\n\t\tconst no_change = () =>\n\t\t\tMappedCode.from_source(slice_source(tag_with_content, tag_offset, source));\n\t\tif (!attributes && !content) return no_change();\n\t\tconst processed = await preprocessor({\n\t\t\tcontent: content || '',\n\t\t\tattributes: parse_tag_attributes(attributes || ''),\n\t\t\tmarkup,\n\t\t\tfilename\n\t\t});\n\t\tif (!processed) return no_change();\n\t\tif (processed.dependencies) dependencies.push(...processed.dependencies);\n\t\tif (!processed.map && processed.code === content) return no_change();\n\t\treturn processed_tag_to_code(\n\t\t\tprocessed,\n\t\t\ttag_name,\n\t\t\tattributes,\n\t\t\tstringify_tag_attributes(processed.attributes) ?? attributes,\n\t\t\tslice_source(content, tag_offset, source)\n\t\t);\n\t}\n\tconst { string, map } = await replace_in_code(tag_regex, process_single_tag, source);\n\treturn { string, map, dependencies };\n}\n\n/**\n * @param {MarkupPreprocessor} process\n * @param {Source} source\n */\nasync function process_markup(process, source) {\n\tconst processed = await process({\n\t\tcontent: source.source,\n\t\tfilename: source.filename\n\t});\n\tif (processed) {\n\t\treturn {\n\t\t\tstring: processed.code,\n\t\t\tmap: processed.map\n\t\t\t\t? // TODO: can we use decode_sourcemap?\n\t\t\t\t\ttypeof processed.map === 'string'\n\t\t\t\t\t? JSON.parse(processed.map)\n\t\t\t\t\t: processed.map\n\t\t\t\t: undefined,\n\t\t\tdependencies: processed.dependencies\n\t\t};\n\t} else {\n\t\treturn {};\n\t}\n}\n\n/**\n * The preprocess function provides convenient hooks for arbitrarily transforming component source code.\n * For example, it can be used to convert a `<style lang=\"sass\">` block into vanilla CSS.\n *\n * @param {string} source\n * @param {PreprocessorGroup | PreprocessorGroup[]} preprocessor\n * @param {{ filename?: string }} [options]\n * @returns {Promise<Processed>}\n */\nexport default async function preprocess(source, preprocessor, options) {\n\t/**\n\t * @type {string | undefined}\n\t */\n\tconst filename = (options && options.filename) || /** @type {any} */ (preprocessor).filename; // legacy\n\tconst preprocessors = preprocessor\n\t\t? Array.isArray(preprocessor)\n\t\t\t? preprocessor\n\t\t\t: [preprocessor]\n\t\t: [];\n\tconst result = new PreprocessResult(source, filename);\n\n\t// TODO keep track: what preprocessor generated what sourcemap?\n\t// to make debugging easier = detect low-resolution sourcemaps in fn combine_mappings\n\tfor (const preprocessor of preprocessors) {\n\t\tif (preprocessor.markup) {\n\t\t\t// @ts-expect-error TODO there might be a bug in hiding here\n\t\t\tresult.update_source(await process_markup(preprocessor.markup, result));\n\t\t}\n\t\tif (preprocessor.script) {\n\t\t\t// @ts-expect-error TODO there might be a bug in hiding here\n\t\t\tresult.update_source(await process_tag('script', preprocessor.script, result));\n\t\t}\n\t\tif (preprocessor.style) {\n\t\t\t// @ts-expect-error TODO there might be a bug in hiding here\n\t\t\tresult.update_source(await process_tag('style', preprocessor.style, result));\n\t\t}\n\t}\n\n\treturn result.to_processed();\n}\n", "/** @import { VariableDeclarator, Node, Identifier, AssignmentExpression, LabeledStatement, ExpressionStatement } from 'estree' */\n/** @import { Visitors } from 'zimmerframe' */\n/** @import { ComponentAnalysis } from '../phases/types.js' */\n/** @import { Scope } from '../phases/scope.js' */\n/** @import { AST, Binding, ValidatedCompileOptions } from '#compiler' */\nimport MagicString from 'magic-string';\nimport { walk } from 'zimmerframe';\nimport { parse } from '../phases/1-parse/index.js';\nimport { regex_valid_component_name } from '../phases/1-parse/state/element.js';\nimport { analyze_component } from '../phases/2-analyze/index.js';\nimport { get_rune } from '../phases/scope.js';\nimport { reset, reset_warning_filter } from '../state.js';\nimport {\n\textract_identifiers,\n\textract_all_identifiers_from_expression,\n\tis_text_attribute\n} from '../utils/ast.js';\nimport { migrate_svelte_ignore } from '../utils/extract_svelte_ignore.js';\nimport { validate_component_options } from '../validate-options.js';\nimport { is_reserved, is_svg, is_void } from '../../utils.js';\nimport { regex_is_valid_identifier } from '../phases/patterns.js';\n\nconst regex_style_tags = /(<style[^>]+>)([\\S\\s]*?)(<\\/style>)/g;\nconst style_placeholder = '/*$$__STYLE_CONTENT__$$*/';\n\nlet has_migration_task = false;\n\nclass MigrationError extends Error {\n\t/**\n\t * @param {string} msg\n\t */\n\tconstructor(msg) {\n\t\tsuper(msg);\n\t}\n}\n\n/**\n *\n * @param {State} state\n */\nfunction migrate_css(state) {\n\tif (!state.analysis.css.ast?.start) return;\n\tconst css_contents = state.str\n\t\t.snip(state.analysis.css.ast.start, /** @type {number} */ (state.analysis.css.ast?.end))\n\t\t.toString();\n\tlet code = css_contents;\n\tlet starting = 0;\n\n\t// since we already blank css we can't work directly on `state.str` so we will create a copy that we can update\n\tconst str = new MagicString(code);\n\twhile (code) {\n\t\tif (\n\t\t\tcode.startsWith(':has') ||\n\t\t\tcode.startsWith(':is') ||\n\t\t\tcode.startsWith(':where') ||\n\t\t\tcode.startsWith(':not')\n\t\t) {\n\t\t\tlet start = code.indexOf('(') + 1;\n\t\t\tlet is_global = false;\n\n\t\t\tconst global_str = ':global';\n\t\t\tconst next_global = code.indexOf(global_str);\n\t\t\tconst str_between = code.substring(start, next_global);\n\t\t\tif (!str_between.trim()) {\n\t\t\t\tis_global = true;\n\t\t\t\tstart += global_str.length;\n\t\t\t} else {\n\t\t\t\tconst prev_global = css_contents.lastIndexOf(global_str, starting);\n\t\t\t\tif (prev_global > -1) {\n\t\t\t\t\tconst end =\n\t\t\t\t\t\tfind_closing_parenthesis(css_contents.indexOf('(', prev_global) + 1, css_contents) -\n\t\t\t\t\t\tstarting;\n\t\t\t\t\tif (end > start) {\n\t\t\t\t\t\tstarting += end;\n\t\t\t\t\t\tcode = code.substring(end);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst end = find_closing_parenthesis(start, code);\n\t\t\tif (start && end) {\n\t\t\t\tif (!is_global && !code.startsWith(':not')) {\n\t\t\t\t\tstr.prependLeft(starting + start, ':global(');\n\t\t\t\t\tstr.appendRight(starting + end - 1, ')');\n\t\t\t\t}\n\t\t\t\tstarting += end - 1;\n\t\t\t\tcode = code.substring(end - 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tstarting++;\n\t\tcode = code.substring(1);\n\t}\n\tstate.str.update(state.analysis.css.ast?.start, state.analysis.css.ast?.end, str.toString());\n}\n\n/**\n * @param {number} start\n * @param {string} code\n */\nfunction find_closing_parenthesis(start, code) {\n\tlet parenthesis = 1;\n\tlet end = start;\n\tlet char = code[end];\n\t// find the closing parenthesis\n\twhile (parenthesis !== 0 && char) {\n\t\tif (char === '(') parenthesis++;\n\t\tif (char === ')') parenthesis--;\n\t\tend++;\n\t\tchar = code[end];\n\t}\n\treturn end;\n}\n\n/**\n * Does a best-effort migration of Svelte code towards using runes, event attributes and render tags.\n * May throw an error if the code is too complex to migrate automatically.\n *\n * @param {string} source\n * @param {{ filename?: string, use_ts?: boolean }} [options]\n * @returns {{ code: string; }}\n */\nexport function migrate(source, { filename, use_ts } = {}) {\n\tlet og_source = source;\n\ttry {\n\t\thas_migration_task = false;\n\t\t// Blank CSS, could contain SCSS or similar that needs a preprocessor.\n\t\t// Since we don't care about CSS in this migration, we'll just ignore it.\n\t\t/** @type {Array<[number, string]>} */\n\t\tconst style_contents = [];\n\t\tsource = source.replace(regex_style_tags, (_, start, content, end, idx) => {\n\t\t\tstyle_contents.push([idx + start.length, content]);\n\t\t\treturn start + style_placeholder + end;\n\t\t});\n\n\t\treset_warning_filter(() => false);\n\t\treset(source, { filename: filename ?? '(unknown)' });\n\n\t\tlet parsed = parse(source);\n\n\t\tconst { customElement: customElementOptions, ...parsed_options } = parsed.options || {};\n\n\t\t/** @type {ValidatedCompileOptions} */\n\t\tconst combined_options = {\n\t\t\t...validate_component_options({}, ''),\n\t\t\t...parsed_options,\n\t\t\tcustomElementOptions,\n\t\t\tfilename: filename ?? '(unknown)'\n\t\t};\n\n\t\tconst str = new MagicString(source);\n\t\tconst analysis = analyze_component(parsed, source, combined_options);\n\t\tconst indent = guess_indent(source);\n\n\t\tstr.replaceAll(/(<svelte:options\\s.*?\\s?)accessors\\s?/g, (_, $1) => $1);\n\n\t\tfor (const content of style_contents) {\n\t\t\tstr.overwrite(content[0], content[0] + style_placeholder.length, content[1]);\n\t\t}\n\n\t\t/** @type {State} */\n\t\tlet state = {\n\t\t\tscope: analysis.instance.scope,\n\t\t\tanalysis,\n\t\t\tfilename,\n\t\t\tstr,\n\t\t\tindent,\n\t\t\tprops: [],\n\t\t\tprops_insertion_point: parsed.instance?.content.start ?? 0,\n\t\t\thas_props_rune: false,\n\t\t\thas_type_or_fallback: false,\n\t\t\tend: source.length,\n\t\t\tnames: {\n\t\t\t\tprops: analysis.root.unique('props').name,\n\t\t\t\trest: analysis.root.unique('rest').name,\n\n\t\t\t\t// event stuff\n\t\t\t\trun: analysis.root.unique('run').name,\n\t\t\t\thandlers: analysis.root.unique('handlers').name,\n\t\t\t\tstopImmediatePropagation: analysis.root.unique('stopImmediatePropagation').name,\n\t\t\t\tpreventDefault: analysis.root.unique('preventDefault').name,\n\t\t\t\tstopPropagation: analysis.root.unique('stopPropagation').name,\n\t\t\t\tonce: analysis.root.unique('once').name,\n\t\t\t\tself: analysis.root.unique('self').name,\n\t\t\t\ttrusted: analysis.root.unique('trusted').name,\n\t\t\t\tcreateBubbler: analysis.root.unique('createBubbler').name,\n\t\t\t\tbubble: analysis.root.unique('bubble').name,\n\t\t\t\tpassive: analysis.root.unique('passive').name,\n\t\t\t\tnonpassive: analysis.root.unique('nonpassive').name\n\t\t\t},\n\t\t\tlegacy_imports: new Set(),\n\t\t\tscript_insertions: new Set(),\n\t\t\tderived_components: new Map(),\n\t\t\tderived_conflicting_slots: new Map(),\n\t\t\tderived_labeled_statements: new Set(),\n\t\t\thas_svelte_self: false,\n\t\t\tuses_ts:\n\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n\t\t\t\t(use_ts && !source.includes('@type {')) ||\n\t\t\t\t!!parsed.instance?.attributes.some(\n\t\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n\t\t\t\t)\n\t\t};\n\n\t\tif (parsed.module) {\n\t\t\tconst context = parsed.module.attributes.find((attr) => attr.name === 'context');\n\t\t\tif (context) {\n\t\t\t\tstate.str.update(context.start, context.end, 'module');\n\t\t\t}\n\t\t}\n\n\t\tif (parsed.instance) {\n\t\t\twalk(parsed.instance.content, state, instance_script);\n\t\t}\n\n\t\tstate = { ...state, scope: analysis.template.scope };\n\t\twalk(parsed.fragment, state, template);\n\n\t\tlet insertion_point = parsed.instance\n\t\t\t? /** @type {number} */ (parsed.instance.content.start)\n\t\t\t: 0;\n\n\t\tconst need_script =\n\t\t\tstate.legacy_imports.size > 0 ||\n\t\t\tstate.derived_components.size > 0 ||\n\t\t\tstate.derived_conflicting_slots.size > 0 ||\n\t\t\tstate.script_insertions.size > 0 ||\n\t\t\tstate.props.length > 0 ||\n\t\t\tanalysis.uses_rest_props ||\n\t\t\tanalysis.uses_props ||\n\t\t\tstate.has_svelte_self;\n\n\t\tconst need_ts_tag =\n\t\t\tstate.uses_ts &&\n\t\t\t(!parsed.instance || !parsed.instance.attributes.some((attr) => attr.name === 'lang'));\n\n\t\tif (!parsed.instance && need_script) {\n\t\t\tstr.appendRight(0, need_ts_tag ? '<script lang=\"ts\">' : '<script>');\n\t\t}\n\n\t\tif (state.has_svelte_self && filename) {\n\t\t\tconst file = filename.split('/').pop();\n\t\t\tstr.appendRight(\n\t\t\t\tinsertion_point,\n\t\t\t\t`\\n${indent}import ${state.analysis.name} from './${file}';`\n\t\t\t);\n\t\t}\n\n\t\tconst specifiers = [...state.legacy_imports].map((imported) => {\n\t\t\tconst local = state.names[imported];\n\t\t\treturn imported === local ? imported : `${imported} as ${local}`;\n\t\t});\n\n\t\tconst legacy_import = `import { ${specifiers.join(', ')} } from 'svelte/legacy';\\n`;\n\n\t\tif (state.legacy_imports.size > 0) {\n\t\t\tstr.appendRight(insertion_point, `\\n${indent}${legacy_import}`);\n\t\t}\n\n\t\tif (state.script_insertions.size > 0) {\n\t\t\tstr.appendRight(\n\t\t\t\tinsertion_point,\n\t\t\t\t`\\n${indent}${[...state.script_insertions].join(`\\n${indent}`)}`\n\t\t\t);\n\t\t}\n\n\t\tinsertion_point = state.props_insertion_point;\n\n\t\t/**\n\t\t * @param {\"derived\"|\"props\"|\"bindable\"} rune\n\t\t */\n\t\tfunction check_rune_binding(rune) {\n\t\t\tconst has_rune_binding = !!state.scope.get(rune);\n\t\t\tif (has_rune_binding) {\n\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t`migrating this component would require adding a \\`$${rune}\\` rune but there's already a variable named ${rune}.\\n     Rename the variable and try again or migrate by hand.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (state.props.length > 0 || analysis.uses_rest_props || analysis.uses_props) {\n\t\t\tconst has_many_props = state.props.length > 3;\n\t\t\tconst newline_separator = `\\n${indent}${indent}`;\n\t\t\tconst props_separator = has_many_props ? newline_separator : ' ';\n\t\t\tlet props = '';\n\t\t\tif (analysis.uses_props) {\n\t\t\t\tprops = `...${state.names.props}`;\n\t\t\t} else {\n\t\t\t\tprops = state.props\n\t\t\t\t\t.filter((prop) => !prop.type_only)\n\t\t\t\t\t.map((prop) => {\n\t\t\t\t\t\tlet prop_str =\n\t\t\t\t\t\t\tprop.local === prop.exported ? prop.local : `${prop.exported}: ${prop.local}`;\n\t\t\t\t\t\tif (prop.bindable) {\n\t\t\t\t\t\t\tcheck_rune_binding('bindable');\n\t\t\t\t\t\t\tprop_str += ` = $bindable(${prop.init})`;\n\t\t\t\t\t\t} else if (prop.init) {\n\t\t\t\t\t\t\tprop_str += ` = ${prop.init}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prop_str;\n\t\t\t\t\t})\n\t\t\t\t\t.join(`,${props_separator}`);\n\n\t\t\t\tif (analysis.uses_rest_props) {\n\t\t\t\t\tprops += `${state.props.length > 0 ? `,${props_separator}` : ''}...${state.names.rest}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.has_props_rune) {\n\t\t\t\t// some render tags or forwarded event attributes to add\n\t\t\t\tstr.appendRight(insertion_point, ` ${props},`);\n\t\t\t} else {\n\t\t\t\tconst type_name = state.scope.root.unique('Props').name;\n\t\t\t\tlet type = '';\n\n\t\t\t\t// Try to infer when we don't want to add types (e.g. user doesn't use types, or this is a zero-types +page.svelte)\n\t\t\t\tif (state.has_type_or_fallback || state.props.every((prop) => prop.slot_name)) {\n\t\t\t\t\tif (state.uses_ts) {\n\t\t\t\t\t\ttype = `interface ${type_name} {${newline_separator}${state.props\n\t\t\t\t\t\t\t.map((prop) => {\n\t\t\t\t\t\t\t\tconst comment = prop.comment ? `${prop.comment}${newline_separator}` : '';\n\t\t\t\t\t\t\t\treturn `${comment}${prop.exported}${prop.optional ? '?' : ''}: ${prop.type};${prop.trailing_comment ? ' ' + prop.trailing_comment : ''}`;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.join(newline_separator)}`;\n\t\t\t\t\t\tif (analysis.uses_props || analysis.uses_rest_props) {\n\t\t\t\t\t\t\ttype += `${state.props.length > 0 ? newline_separator : ''}[key: string]: any`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype += `\\n${indent}}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = `/**\\n${indent} * @typedef {Object} ${type_name}${state.props\n\t\t\t\t\t\t\t.map((prop) => {\n\t\t\t\t\t\t\t\treturn `\\n${indent} * @property {${prop.type}} ${prop.optional ? `[${prop.exported}]` : prop.exported}${prop.comment ? ` - ${prop.comment}` : ''}${prop.trailing_comment ? ` - ${prop.trailing_comment.trim()}` : ''}`;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.join(``)}\\n${indent} */`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet props_declaration = `let {${props_separator}${props}${has_many_props ? `\\n${indent}` : ' '}}`;\n\t\t\t\tif (state.uses_ts) {\n\t\t\t\t\tif (type) {\n\t\t\t\t\t\tprops_declaration = `${type}\\n\\n${indent}${props_declaration}`;\n\t\t\t\t\t}\n\t\t\t\t\tcheck_rune_binding('props');\n\t\t\t\t\tprops_declaration = `${props_declaration}${type ? `: ${type_name}` : ''} = $props();`;\n\t\t\t\t} else {\n\t\t\t\t\tif (type) {\n\t\t\t\t\t\tprops_declaration = `${state.props.length > 0 ? `${type}\\n\\n${indent}` : ''}/** @type {${state.props.length > 0 ? type_name : ''}${analysis.uses_props || analysis.uses_rest_props ? `${state.props.length > 0 ? ' & ' : ''}{ [key: string]: any }` : ''}} */\\n${indent}${props_declaration}`;\n\t\t\t\t\t}\n\t\t\t\t\tcheck_rune_binding('props');\n\t\t\t\t\tprops_declaration = `${props_declaration} = $props();`;\n\t\t\t\t}\n\n\t\t\t\tprops_declaration = `\\n${indent}${props_declaration}`;\n\t\t\t\tstr.appendRight(insertion_point, props_declaration);\n\t\t\t}\n\n\t\t\tif (parsed.instance && need_ts_tag) {\n\t\t\t\tstr.appendRight(parsed.instance.start + '<script'.length, ' lang=\"ts\"');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * If true, then we need to move all reactive statements to the end of the script block,\n\t\t * in their correct order. Svelte 4 reordered reactive statements, $derived/$effect.pre\n\t\t * don't have this behavior.\n\t\t */\n\t\tlet needs_reordering = false;\n\n\t\tfor (const [node, { dependencies }] of state.analysis.reactive_statements) {\n\t\t\t/** @type {Binding[]} */\n\t\t\tlet ids = [];\n\t\t\tif (\n\t\t\t\tnode.body.type === 'ExpressionStatement' &&\n\t\t\t\tnode.body.expression.type === 'AssignmentExpression'\n\t\t\t) {\n\t\t\t\tids = extract_identifiers(node.body.expression.left)\n\t\t\t\t\t.map((id) => state.scope.get(id.name))\n\t\t\t\t\t.filter((id) => !!id);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tdependencies.some(\n\t\t\t\t\t(dep) =>\n\t\t\t\t\t\t!ids.includes(dep) &&\n\t\t\t\t\t\t(dep.kind === 'prop' || dep.kind === 'bindable_prop'\n\t\t\t\t\t\t\t? state.props_insertion_point\n\t\t\t\t\t\t\t: /** @type {number} */ (dep.node.start)) > /** @type {number} */ (node.start)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tneeds_reordering = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (needs_reordering) {\n\t\t\tconst nodes = Array.from(state.analysis.reactive_statements.keys());\n\t\t\tfor (const node of nodes) {\n\t\t\t\tconst { start, end } = get_node_range(source, node);\n\t\t\t\tstr.appendLeft(end, '\\n');\n\t\t\t\tstr.move(start, end, /** @type {number} */ (parsed.instance?.content.end));\n\t\t\t\tstr.update(start - (source[start - 2] === '\\r' ? 2 : 1), start, '');\n\t\t\t}\n\t\t}\n\n\t\tinsertion_point = parsed.instance\n\t\t\t? /** @type {number} */ (parsed.instance.content.end)\n\t\t\t: insertion_point;\n\n\t\tif (state.derived_components.size > 0) {\n\t\t\tcheck_rune_binding('derived');\n\t\t\tstr.appendRight(\n\t\t\t\tinsertion_point,\n\t\t\t\t`\\n${indent}${[...state.derived_components.entries()].map(([init, name]) => `const ${name} = $derived(${init});`).join(`\\n${indent}`)}\\n`\n\t\t\t);\n\t\t}\n\n\t\tif (state.derived_conflicting_slots.size > 0) {\n\t\t\tcheck_rune_binding('derived');\n\t\t\tstr.appendRight(\n\t\t\t\tinsertion_point,\n\t\t\t\t`\\n${indent}${[...state.derived_conflicting_slots.entries()].map(([name, init]) => `const ${name} = $derived(${init});`).join(`\\n${indent}`)}\\n`\n\t\t\t);\n\t\t}\n\n\t\tif (state.props.length > 0 && state.analysis.accessors) {\n\t\t\tstr.appendRight(\n\t\t\t\tinsertion_point,\n\t\t\t\t`\\n${indent}export {${state.props.reduce((acc, prop) => (prop.slot_name || prop.type_only ? acc : `${acc}\\n${indent}\\t${prop.local},`), '')}\\n${indent}}\\n`\n\t\t\t);\n\t\t}\n\n\t\tif (!parsed.instance && need_script) {\n\t\t\tstr.appendRight(insertion_point, '\\n</script>\\n\\n');\n\t\t}\n\t\tmigrate_css(state);\n\t\treturn {\n\t\t\tcode: str.toString()\n\t\t};\n\t} catch (e) {\n\t\tif (!(e instanceof MigrationError)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('Error while migrating Svelte code', e);\n\t\t}\n\t\thas_migration_task = true;\n\t\treturn {\n\t\t\tcode: `<!-- @migration-task Error while migrating Svelte code: ${/** @type {any} */ (e).message} -->\\n${og_source}`\n\t\t};\n\t} finally {\n\t\tif (has_migration_task) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(\n\t\t\t\t`One or more \\`@migration-task\\` comments were added to ${filename ? `\\`${filename}\\`` : \"a file (unfortunately we don't know the name)\"}, please check them and complete the migration manually.`\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * @typedef {{\n *  scope: Scope;\n *  str: MagicString;\n *  analysis: ComponentAnalysis;\n *  filename?: string;\n *  indent: string;\n *  props: Array<{ local: string; exported: string; init: string; bindable: boolean; slot_name?: string; optional: boolean; type: string; comment?: string; trailing_comment?: string; type_only?: boolean; needs_refine_type?: boolean; }>;\n *  props_insertion_point: number;\n *  has_props_rune: boolean;\n *  has_type_or_fallback: boolean;\n *  end: number;\n * \tnames: Record<string, string>;\n * \tlegacy_imports: Set<string>;\n * \tscript_insertions: Set<string>;\n *  derived_components: Map<string, string>;\n *  derived_conflicting_slots: Map<string, string>;\n * \tderived_labeled_statements: Set<LabeledStatement>;\n *  has_svelte_self: boolean;\n *  uses_ts: boolean;\n * }} State\n */\n\n/** @type {Visitors<AST.SvelteNode, State>} */\nconst instance_script = {\n\t_(node, { state, next }) {\n\t\t// @ts-expect-error\n\t\tconst comments = node.leadingComments;\n\t\tif (comments) {\n\t\t\tfor (const comment of comments) {\n\t\t\t\tif (comment.type === 'Line') {\n\t\t\t\t\tconst migrated = migrate_svelte_ignore(comment.value);\n\t\t\t\t\tif (migrated !== comment.value) {\n\t\t\t\t\t\tstate.str.overwrite(comment.start + '//'.length, comment.end, migrated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnext();\n\t},\n\tIdentifier(node, { state, path }) {\n\t\thandle_identifier(node, state, path);\n\t},\n\tImportDeclaration(node, { state }) {\n\t\tstate.props_insertion_point = node.end ?? state.props_insertion_point;\n\t\tif (node.source.value === 'svelte') {\n\t\t\tlet illegal_specifiers = [];\n\t\t\tlet removed_specifiers = 0;\n\t\t\tfor (let specifier of node.specifiers) {\n\t\t\t\tif (\n\t\t\t\t\tspecifier.type === 'ImportSpecifier' &&\n\t\t\t\t\tspecifier.imported.type === 'Identifier' &&\n\t\t\t\t\t['beforeUpdate', 'afterUpdate'].includes(specifier.imported.name)\n\t\t\t\t) {\n\t\t\t\t\tconst references = state.scope.references.get(specifier.local.name);\n\t\t\t\t\tif (!references) {\n\t\t\t\t\t\tlet end = /** @type {number} */ (\n\t\t\t\t\t\t\tstate.str.original.indexOf(',', specifier.end) !== -1 &&\n\t\t\t\t\t\t\tstate.str.original.indexOf(',', specifier.end) <\n\t\t\t\t\t\t\t\tstate.str.original.indexOf('}', specifier.end)\n\t\t\t\t\t\t\t\t? state.str.original.indexOf(',', specifier.end) + 1\n\t\t\t\t\t\t\t\t: specifier.end\n\t\t\t\t\t\t);\n\t\t\t\t\t\twhile (state.str.original[end].trim() === '') end++;\n\t\t\t\t\t\tstate.str.remove(/** @type {number} */ (specifier.start), end);\n\t\t\t\t\t\tremoved_specifiers++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tillegal_specifiers.push(specifier.imported.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (removed_specifiers === node.specifiers.length) {\n\t\t\t\tstate.str.remove(/** @type {number} */ (node.start), /** @type {number} */ (node.end));\n\t\t\t}\n\t\t\tif (illegal_specifiers.length > 0) {\n\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t`Can't migrate code with ${illegal_specifiers.join(' and ')}. Please migrate by hand.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tExportNamedDeclaration(node, { state, next }) {\n\t\tif (node.declaration) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tlet count_removed = 0;\n\t\tfor (const specifier of node.specifiers) {\n\t\t\tif (specifier.local.type !== 'Identifier') continue;\n\n\t\t\tconst binding = state.scope.get(specifier.local.name);\n\t\t\tif (binding?.kind === 'bindable_prop') {\n\t\t\t\tstate.str.remove(\n\t\t\t\t\t/** @type {number} */ (specifier.start),\n\t\t\t\t\t/** @type {number} */ (specifier.end)\n\t\t\t\t);\n\t\t\t\tcount_removed++;\n\t\t\t}\n\t\t}\n\t\tif (count_removed === node.specifiers.length) {\n\t\t\tstate.str.remove(/** @type {number} */ (node.start), /** @type {number} */ (node.end));\n\t\t}\n\t},\n\tVariableDeclaration(node, { state, path, visit, next }) {\n\t\tif (state.scope !== state.analysis.instance.scope) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet nr_of_props = 0;\n\n\t\tfor (let i = 0; i < node.declarations.length; i++) {\n\t\t\tconst declarator = node.declarations[i];\n\t\t\tif (state.analysis.runes) {\n\t\t\t\tif (get_rune(declarator.init, state.scope) === '$props') {\n\t\t\t\t\tstate.props_insertion_point = /** @type {number} */ (declarator.id.start) + 1;\n\t\t\t\t\tstate.has_props_rune = true;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet bindings;\n\t\t\ttry {\n\t\t\t\tbindings = state.scope.get_bindings(declarator);\n\t\t\t} catch (e) {\n\t\t\t\t// no bindings, so we can skip this\n\t\t\t\tnext();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst has_state = bindings.some((binding) => binding.kind === 'state');\n\t\t\tconst has_props = bindings.some((binding) => binding.kind === 'bindable_prop');\n\n\t\t\tif (!has_state && !has_props) {\n\t\t\t\tnext();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (has_props) {\n\t\t\t\tnr_of_props++;\n\n\t\t\t\tif (declarator.id.type !== 'Identifier') {\n\t\t\t\t\t// TODO invest time in this?\n\t\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t\t'Encountered an export declaration pattern that is not supported for automigration.'\n\t\t\t\t\t);\n\t\t\t\t\t// Turn export let into props. It's really really weird because export let { x: foo, z: [bar]} = ..\n\t\t\t\t\t// means that foo and bar are the props (i.e. the leafs are the prop names), not x and z.\n\t\t\t\t\t// const tmp = state.scope.generate('tmp');\n\t\t\t\t\t// const paths = extract_paths(declarator.id);\n\t\t\t\t\t// state.props_pre.push(\n\t\t\t\t\t// \tb.declaration('const', b.id(tmp), visit(declarator.init!) as Expression)\n\t\t\t\t\t// );\n\t\t\t\t\t// for (const path of paths) {\n\t\t\t\t\t// \tconst name = (path.node as Identifier).name;\n\t\t\t\t\t// \tconst binding = state.scope.get(name)!;\n\t\t\t\t\t// \tconst value = path.expression!(b.id(tmp));\n\t\t\t\t\t// \tif (binding.kind === 'bindable_prop' || binding.kind === 'rest_prop') {\n\t\t\t\t\t// \t\tstate.props.push({\n\t\t\t\t\t// \t\t\tlocal: name,\n\t\t\t\t\t// \t\t\texported: binding.prop_alias ? binding.prop_alias : name,\n\t\t\t\t\t// \t\t\tinit: value\n\t\t\t\t\t// \t\t});\n\t\t\t\t\t// \t\tstate.props_insertion_point = /** @type {number} */(declarator.end);\n\t\t\t\t\t// \t} else {\n\t\t\t\t\t// \t\tdeclarations.push(b.declarator(path.node, value));\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t}\n\n\t\t\t\tconst name = declarator.id.name;\n\t\t\t\tconst binding = /** @type {Binding} */ (state.scope.get(name));\n\n\t\t\t\tif (state.analysis.uses_props && (declarator.init || binding.updated)) {\n\t\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t\t'$$props is used together with named props in a way that cannot be automatically migrated.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst prop = state.props.find((prop) => prop.exported === (binding.prop_alias || name));\n\t\t\t\tif (prop) {\n\t\t\t\t\tnext();\n\t\t\t\t\t// $$Props type was used\n\t\t\t\t\tprop.init = declarator.init\n\t\t\t\t\t\t? state.str\n\t\t\t\t\t\t\t\t.snip(\n\t\t\t\t\t\t\t\t\t/** @type {number} */ (declarator.init.start),\n\t\t\t\t\t\t\t\t\t/** @type {number} */ (declarator.init.end)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t: '';\n\t\t\t\t\tprop.bindable = binding.updated;\n\t\t\t\t\tprop.exported = binding.prop_alias || name;\n\t\t\t\t\tprop.type_only = false;\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t\tstate.props.push({\n\t\t\t\t\t\tlocal: name,\n\t\t\t\t\t\texported: binding.prop_alias ? binding.prop_alias : name,\n\t\t\t\t\t\tinit: declarator.init\n\t\t\t\t\t\t\t? state.str\n\t\t\t\t\t\t\t\t\t.snip(\n\t\t\t\t\t\t\t\t\t\t/** @type {number} */ (declarator.init.start),\n\t\t\t\t\t\t\t\t\t\t/** @type {number} */ (declarator.init.end)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\toptional: !!declarator.init,\n\t\t\t\t\t\tbindable: binding.updated,\n\t\t\t\t\t\t...extract_type_and_comment(declarator, state, path)\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet start = /** @type {number} */ (declarator.start);\n\t\t\t\tlet end = /** @type {number} */ (declarator.end);\n\n\t\t\t\t// handle cases like let a,b,c; where only some are exported\n\t\t\t\tif (node.declarations.length > 1) {\n\t\t\t\t\t// move the insertion point after the node itself;\n\t\t\t\t\tstate.props_insertion_point = /** @type {number} */ (node.end);\n\t\t\t\t\t// if it's not the first declaration remove from the , of the previous declaration\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tstart = state.str.original.indexOf(\n\t\t\t\t\t\t\t',',\n\t\t\t\t\t\t\t/** @type {number} */ (node.declarations[i - 1].end)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// if it's not the last declaration remove either from up until the\n\t\t\t\t\t// start of the next declaration (if it's the first declaration) or\n\t\t\t\t\t// up until the last index of , from the next declaration\n\t\t\t\t\tif (i !== node.declarations.length - 1) {\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tend = /** @type {number} */ (node.declarations[i + 1].start);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tend = state.str.original.lastIndexOf(\n\t\t\t\t\t\t\t\t',',\n\t\t\t\t\t\t\t\t/** @type {number} */ (node.declarations[i + 1].start)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.props_insertion_point = /** @type {number} */ (declarator.end);\n\t\t\t\t}\n\n\t\t\t\tstate.str.update(start, end, '');\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {\"state\"|\"derived\"} rune\n\t\t\t */\n\t\t\tfunction check_rune_binding(rune) {\n\t\t\t\tconst has_rune_binding = !!state.scope.get(rune);\n\t\t\t\tif (has_rune_binding) {\n\t\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t\t`can't migrate \\`${state.str.original.substring(/** @type {number} */ (node.start), node.end)}\\` to \\`$${rune}\\` because there's a variable named ${rune}.\\n     Rename the variable and try again or migrate by hand.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// state\n\t\t\tif (declarator.init) {\n\t\t\t\tlet { start, end } = /** @type {{ start: number, end: number }} */ (declarator.init);\n\n\t\t\t\tif (declarator.init.type === 'SequenceExpression') {\n\t\t\t\t\twhile (state.str.original[start] !== '(') start -= 1;\n\t\t\t\t\twhile (state.str.original[end - 1] !== ')') end += 1;\n\t\t\t\t}\n\n\t\t\t\tcheck_rune_binding('state');\n\n\t\t\t\tstate.str.prependLeft(start, '$state(');\n\t\t\t\tstate.str.appendRight(end, ')');\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * @type {AssignmentExpression | undefined}\n\t\t\t\t */\n\t\t\t\tlet assignment_in_labeled;\n\t\t\t\t/**\n\t\t\t\t * @type {LabeledStatement | undefined}\n\t\t\t\t */\n\t\t\t\tlet labeled_statement;\n\n\t\t\t\t// Analyze declaration bindings to see if they're exclusively updated within a single reactive statement\n\t\t\t\tconst possible_derived = bindings.every((binding) =>\n\t\t\t\t\tbinding.references.every((reference) => {\n\t\t\t\t\t\tconst declaration = reference.path.find((el) => el.type === 'VariableDeclaration');\n\t\t\t\t\t\tconst assignment = reference.path.find((el) => el.type === 'AssignmentExpression');\n\t\t\t\t\t\tconst update = reference.path.find((el) => el.type === 'UpdateExpression');\n\t\t\t\t\t\tconst labeled = /** @type {LabeledStatement | undefined} */ (\n\t\t\t\t\t\t\treference.path.find((el) => el.type === 'LabeledStatement' && el.label.name === '$')\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tassignment &&\n\t\t\t\t\t\t\tlabeled &&\n\t\t\t\t\t\t\t// ensure that $: foo = bar * 2 is not counted as a reassignment of bar\n\t\t\t\t\t\t\t(labeled.body.type !== 'ExpressionStatement' ||\n\t\t\t\t\t\t\t\tlabeled.body.expression !== assignment ||\n\t\t\t\t\t\t\t\t(assignment.left.type === 'Identifier' &&\n\t\t\t\t\t\t\t\t\tassignment.left.name === binding.node.name))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (assignment_in_labeled) return false;\n\t\t\t\t\t\t\tassignment_in_labeled = /** @type {AssignmentExpression} */ (assignment);\n\t\t\t\t\t\t\tlabeled_statement = labeled;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t!update &&\n\t\t\t\t\t\t\t((declaration && binding.initial) ||\n\t\t\t\t\t\t\t\t(labeled && assignment) ||\n\t\t\t\t\t\t\t\t(!labeled && !assignment))\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tconst labeled_has_single_assignment =\n\t\t\t\t\tlabeled_statement?.body.type === 'BlockStatement' &&\n\t\t\t\t\tlabeled_statement.body.body.length === 1 &&\n\t\t\t\t\tlabeled_statement.body.body[0].type === 'ExpressionStatement';\n\n\t\t\t\tconst is_expression_assignment =\n\t\t\t\t\tlabeled_statement?.body.type === 'ExpressionStatement' &&\n\t\t\t\t\tlabeled_statement.body.expression.type === 'AssignmentExpression';\n\n\t\t\t\tlet should_be_state = false;\n\n\t\t\t\tif (is_expression_assignment) {\n\t\t\t\t\tconst body = /**@type {ExpressionStatement}*/ (labeled_statement?.body);\n\t\t\t\t\tconst expression = /**@type {AssignmentExpression}*/ (body.expression);\n\t\t\t\t\tconst [, ids] = extract_all_identifiers_from_expression(expression.right);\n\t\t\t\t\tif (ids.length === 0) {\n\t\t\t\t\t\tshould_be_state = true;\n\t\t\t\t\t\tstate.derived_labeled_statements.add(\n\t\t\t\t\t\t\t/** @type {LabeledStatement} */ (labeled_statement)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!should_be_state &&\n\t\t\t\t\tpossible_derived &&\n\t\t\t\t\tassignment_in_labeled &&\n\t\t\t\t\tlabeled_statement &&\n\t\t\t\t\t(labeled_has_single_assignment || is_expression_assignment)\n\t\t\t\t) {\n\t\t\t\t\tconst indent = state.str.original.substring(\n\t\t\t\t\t\tstate.str.original.lastIndexOf('\\n', /** @type {number} */ (node.start)) + 1,\n\t\t\t\t\t\t/** @type {number} */ (node.start)\n\t\t\t\t\t);\n\t\t\t\t\t// transfer all the leading comments\n\t\t\t\t\tif (\n\t\t\t\t\t\tlabeled_statement.body.type === 'BlockStatement' &&\n\t\t\t\t\t\tlabeled_statement.body.body[0].leadingComments\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let comment of labeled_statement.body.body[0].leadingComments) {\n\t\t\t\t\t\t\tstate.str.prependLeft(\n\t\t\t\t\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\t\t\t\t\tcomment.type === 'Block'\n\t\t\t\t\t\t\t\t\t? `/*${comment.value}*/\\n${indent}`\n\t\t\t\t\t\t\t\t\t: `// ${comment.value}\\n${indent}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcheck_rune_binding('derived');\n\n\t\t\t\t\t// Someone wrote a `$: { ... }` statement which we can turn into a `$derived`\n\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t' = $derived('\n\t\t\t\t\t);\n\t\t\t\t\tvisit(assignment_in_labeled.right);\n\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\tstate.str\n\t\t\t\t\t\t\t.snip(\n\t\t\t\t\t\t\t\t/** @type {number} */ (assignment_in_labeled.right.start),\n\t\t\t\t\t\t\t\t/** @type {number} */ (assignment_in_labeled.right.end)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t\tstate.str.remove(\n\t\t\t\t\t\t/** @type {number} */ (labeled_statement.start),\n\t\t\t\t\t\t/** @type {number} */ (labeled_statement.end)\n\t\t\t\t\t);\n\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t')'\n\t\t\t\t\t);\n\t\t\t\t\tstate.derived_labeled_statements.add(labeled_statement);\n\n\t\t\t\t\t// transfer all the trailing comments\n\t\t\t\t\tif (\n\t\t\t\t\t\tlabeled_statement.body.type === 'BlockStatement' &&\n\t\t\t\t\t\tlabeled_statement.body.body[0].trailingComments\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let comment of labeled_statement.body.body[0].trailingComments) {\n\t\t\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t\t\tcomment.type === 'Block'\n\t\t\t\t\t\t\t\t\t? `\\n${indent}/*${comment.value}*/`\n\t\t\t\t\t\t\t\t\t: `\\n${indent}// ${comment.value}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcheck_rune_binding('state');\n\n\t\t\t\t\tstate.str.prependLeft(\n\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t' = $state('\n\t\t\t\t\t);\n\t\t\t\t\tif (should_be_state) {\n\t\t\t\t\t\t// someone wrote a `$: foo = ...` statement which we can turn into `let foo = $state(...)`\n\t\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t\tstate.str\n\t\t\t\t\t\t\t\t.snip(\n\t\t\t\t\t\t\t\t\t/** @type {number} */ (\n\t\t\t\t\t\t\t\t\t\t/** @type {AssignmentExpression} */ (assignment_in_labeled).right.start\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t/** @type {number} */ (\n\t\t\t\t\t\t\t\t\t\t/** @type {AssignmentExpression} */ (assignment_in_labeled).right.end\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstate.str.remove(\n\t\t\t\t\t\t\t/** @type {number} */ (/** @type {LabeledStatement} */ (labeled_statement).start),\n\t\t\t\t\t\t\t/** @type {number} */ (/** @type {LabeledStatement} */ (labeled_statement).end)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\t/** @type {number} */ (declarator.id.typeAnnotation?.end ?? declarator.id.end),\n\t\t\t\t\t\t')'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nr_of_props === node.declarations.length) {\n\t\t\tlet start = /** @type {number} */ (node.start);\n\t\t\tlet end = /** @type {number} */ (node.end);\n\n\t\t\tconst parent = path.at(-1);\n\t\t\tif (parent?.type === 'ExportNamedDeclaration') {\n\t\t\t\tstart = /** @type {number} */ (parent.start);\n\t\t\t\tend = /** @type {number} */ (parent.end);\n\t\t\t}\n\t\t\twhile (state.str.original[start] !== '\\n') start--;\n\t\t\twhile (state.str.original[end] !== '\\n') end++;\n\t\t\tstate.str.update(start, end, '');\n\t\t}\n\t},\n\tBreakStatement(node, { state, path }) {\n\t\tif (path[1].type !== 'LabeledStatement') return;\n\t\tif (node.label?.name !== '$') return;\n\t\tstate.str.update(\n\t\t\t/** @type {number} */ (node.start),\n\t\t\t/** @type {number} */ (node.end),\n\t\t\t'return;'\n\t\t);\n\t},\n\tLabeledStatement(node, { path, state, next }) {\n\t\tif (state.analysis.runes) return;\n\t\tif (path.length > 1) return;\n\t\tif (node.label.name !== '$') return;\n\t\tif (state.derived_labeled_statements.has(node)) return;\n\n\t\tnext();\n\n\t\t/**\n\t\t * @param {\"state\"|\"derived\"} rune\n\t\t */\n\t\tfunction check_rune_binding(rune) {\n\t\t\tconst has_rune_binding = state.scope.get(rune);\n\t\t\tif (has_rune_binding) {\n\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t`can't migrate \\`$: ${state.str.original.substring(/** @type {number} */ (node.body.start), node.body.end)}\\` to \\`$${rune}\\` because there's a variable named ${rune}.\\n     Rename the variable and try again or migrate by hand.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tnode.body.type === 'ExpressionStatement' &&\n\t\t\tnode.body.expression.type === 'AssignmentExpression'\n\t\t) {\n\t\t\tconst { left, right } = node.body.expression;\n\n\t\t\tconst ids = extract_identifiers(left);\n\t\t\tconst [, expression_ids] = extract_all_identifiers_from_expression(right);\n\t\t\tconst bindings = ids.map((id) => /** @type {Binding} */ (state.scope.get(id.name)));\n\n\t\t\tif (bindings.every((b) => b.kind === 'legacy_reactive')) {\n\t\t\t\tif (\n\t\t\t\t\tright.type !== 'Literal' &&\n\t\t\t\t\tbindings.every((b) => b.kind !== 'store_sub') &&\n\t\t\t\t\tleft.type !== 'MemberExpression'\n\t\t\t\t) {\n\t\t\t\t\tlet { start, end } = /** @type {{ start: number, end: number }} */ (right);\n\n\t\t\t\t\tcheck_rune_binding('derived');\n\n\t\t\t\t\t// $derived\n\t\t\t\t\tstate.str.update(\n\t\t\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\t\t\t/** @type {number} */ (node.body.expression.start),\n\t\t\t\t\t\t'let '\n\t\t\t\t\t);\n\n\t\t\t\t\tif (right.type === 'SequenceExpression') {\n\t\t\t\t\t\twhile (state.str.original[start] !== '(') start -= 1;\n\t\t\t\t\t\twhile (state.str.original[end - 1] !== ')') end += 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.str.prependRight(start, `$derived(`);\n\n\t\t\t\t\t// in a case like `$: ({ a } = b())`, there's already a trailing parenthesis.\n\t\t\t\t\t// otherwise, we need to add one\n\t\t\t\t\tif (state.str.original[/** @type {number} */ (node.body.start)] !== '(') {\n\t\t\t\t\t\tstate.str.appendLeft(end, `)`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const binding of bindings) {\n\t\t\t\t\tif (binding.reassigned && (ids.includes(binding.node) || expression_ids.length === 0)) {\n\t\t\t\t\t\tcheck_rune_binding('state');\n\t\t\t\t\t\tconst init =\n\t\t\t\t\t\t\tbinding.kind === 'state'\n\t\t\t\t\t\t\t\t? ' = $state()'\n\t\t\t\t\t\t\t\t: expression_ids.length === 0\n\t\t\t\t\t\t\t\t\t? ` = $state(${state.str.original.substring(/** @type {number} */ (right.start), right.end)})`\n\t\t\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\t// implicitly-declared variable which we need to make explicit\n\t\t\t\t\t\tstate.str.prependLeft(\n\t\t\t\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\t\t\t\t`let ${binding.node.name}${init};\\n${state.indent}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (expression_ids.length === 0 && bindings.every((b) => b.kind !== 'store_sub')) {\n\t\t\t\t\tstate.str.remove(/** @type {number} */ (node.start), /** @type {number} */ (node.end));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstate.legacy_imports.add('run');\n\t\tconst is_block_stmt = node.body.type === 'BlockStatement';\n\t\tconst start_end = /** @type {number} */ (node.body.start);\n\t\t// TODO try to find out if we can use $derived.by instead?\n\t\tif (is_block_stmt) {\n\t\t\tstate.str.update(\n\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\tstart_end + 1,\n\t\t\t\t`${state.names.run}(() => {`\n\t\t\t);\n\t\t\tconst end = /** @type {number} */ (node.body.end);\n\t\t\tstate.str.update(end - 1, end, '});');\n\t\t} else {\n\t\t\tstate.str.update(\n\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\tstart_end,\n\t\t\t\t`${state.names.run}(() => {\\n${state.indent}`\n\t\t\t);\n\t\t\tstate.str.indent(state.indent, {\n\t\t\t\texclude: [\n\t\t\t\t\t[0, /** @type {number} */ (node.body.start)],\n\t\t\t\t\t[/** @type {number} */ (node.body.end), state.end]\n\t\t\t\t]\n\t\t\t});\n\t\t\tstate.str.appendLeft(/** @type {number} */ (node.end), `\\n${state.indent}});`);\n\t\t}\n\t}\n};\n\n/**\n *\n * @param {State} state\n * @param {number} start\n * @param {number} end\n */\nfunction trim_block(state, start, end) {\n\tconst original = state.str.snip(start, end).toString();\n\tconst without_parens = original.substring(1, original.length - 1);\n\tif (without_parens.trim().length !== without_parens.length) {\n\t\tstate.str.update(start + 1, end - 1, without_parens.trim());\n\t}\n}\n\n/** @type {Visitors<AST.SvelteNode, State>} */\nconst template = {\n\tIdentifier(node, { state, path }) {\n\t\thandle_identifier(node, state, path);\n\t},\n\tRegularElement(node, { state, path, next }) {\n\t\tmigrate_slot_usage(node, path, state);\n\t\thandle_events(node, state);\n\t\t// Strip off any namespace from the beginning of the node name.\n\t\tconst node_name = node.name.replace(/[a-zA-Z-]*:/g, '');\n\n\t\tif (state.analysis.source[node.end - 2] === '/' && !is_void(node_name) && !is_svg(node_name)) {\n\t\t\tlet trimmed_position = node.end - 2;\n\t\t\twhile (state.str.original.charAt(trimmed_position - 1) === ' ') trimmed_position--;\n\t\t\tstate.str.remove(trimmed_position, node.end - 1);\n\t\t\tstate.str.appendRight(node.end, `</${node.name}>`);\n\t\t}\n\t\tnext();\n\t},\n\tSvelteSelf(node, { state, next }) {\n\t\tconst source = state.str.original.substring(node.start, node.end);\n\t\tif (!state.filename) {\n\t\t\tconst indent = guess_indent(source);\n\t\t\thas_migration_task = true;\n\t\t\tstate.str.prependRight(\n\t\t\t\tnode.start,\n\t\t\t\t`<!-- @migration-task: svelte:self is deprecated, import this Svelte file into itself instead -->\\n${indent}`\n\t\t\t);\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\t\t// overwrite the open tag\n\t\tstate.str.overwrite(\n\t\t\tnode.start + 1,\n\t\t\tnode.start + 1 + 'svelte:self'.length,\n\t\t\t`${state.analysis.name}`\n\t\t);\n\t\t// if it has a fragment we need to overwrite the closing tag too\n\t\tif (node.fragment.nodes.length > 0) {\n\t\t\tstate.str.overwrite(\n\t\t\t\tstate.str.original.lastIndexOf('<', node.end) + 2,\n\t\t\t\tnode.end - 1,\n\t\t\t\t`${state.analysis.name}`\n\t\t\t);\n\t\t} else if (!source.endsWith('/>')) {\n\t\t\t// special case for case `<svelte:self></svelte:self>` it has no fragment but\n\t\t\t// we still need to overwrite the end tag\n\t\t\tstate.str.overwrite(\n\t\t\t\tnode.start + source.lastIndexOf('</', node.end) + 2,\n\t\t\t\tnode.end - 1,\n\t\t\t\t`${state.analysis.name}`\n\t\t\t);\n\t\t}\n\t\tstate.has_svelte_self = true;\n\t\tnext();\n\t},\n\tSvelteElement(node, { state, path, next }) {\n\t\tmigrate_slot_usage(node, path, state);\n\t\tif (node.tag.type === 'Literal') {\n\t\t\tlet is_static = true;\n\n\t\t\tlet a = /** @type {number} */ (node.tag.start);\n\t\t\tlet b = /** @type {number} */ (node.tag.end);\n\t\t\tlet quote_mark = state.str.original[a - 1];\n\n\t\t\twhile (state.str.original[--a] !== '=') {\n\t\t\t\tif (state.str.original[a] === '{') {\n\t\t\t\t\tis_static = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_static && state.str.original[b] === quote_mark) {\n\t\t\t\tstate.str.prependLeft(a + 1, '{');\n\t\t\t\tstate.str.appendRight(/** @type {number} */ (node.tag.end) + 1, '}');\n\t\t\t}\n\t\t}\n\n\t\thandle_events(node, state);\n\t\tnext();\n\t},\n\tComponent(node, { state, path, next }) {\n\t\tnext();\n\t\tmigrate_slot_usage(node, path, state);\n\t},\n\tSvelteComponent(node, { state, next, path }) {\n\t\tnext();\n\n\t\tmigrate_slot_usage(node, path, state);\n\n\t\tlet expression = state.str\n\t\t\t.snip(\n\t\t\t\t/** @type {number} */ (node.expression.start),\n\t\t\t\t/** @type {number} */ (node.expression.end)\n\t\t\t)\n\t\t\t.toString();\n\n\t\tif (\n\t\t\t(node.expression.type !== 'Identifier' && node.expression.type !== 'MemberExpression') ||\n\t\t\t!regex_valid_component_name.test(expression)\n\t\t) {\n\t\t\tlet current_expression = expression;\n\t\t\texpression = state.scope.generate('SvelteComponent');\n\t\t\tlet needs_derived = true;\n\t\t\tfor (let i = path.length - 1; i >= 0; i--) {\n\t\t\t\tconst part = path[i];\n\t\t\t\tif (\n\t\t\t\t\tpart.type === 'EachBlock' ||\n\t\t\t\t\tpart.type === 'AwaitBlock' ||\n\t\t\t\t\tpart.type === 'IfBlock' ||\n\t\t\t\t\tpart.type === 'SnippetBlock' ||\n\t\t\t\t\tpart.type === 'Component' ||\n\t\t\t\t\tpart.type === 'SvelteComponent'\n\t\t\t\t) {\n\t\t\t\t\tlet position = node.start;\n\t\t\t\t\tif (i !== path.length - 1) {\n\t\t\t\t\t\tfor (let modifier = 1; modifier < path.length - i; modifier++) {\n\t\t\t\t\t\t\tconst path_part = path[i + modifier];\n\t\t\t\t\t\t\tif ('start' in path_part) {\n\t\t\t\t\t\t\t\tposition = /** @type {number} */ (path_part.start);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst indent = state.str.original.substring(\n\t\t\t\t\t\tstate.str.original.lastIndexOf('\\n', position) + 1,\n\t\t\t\t\t\tposition\n\t\t\t\t\t);\n\t\t\t\t\tstate.str.appendRight(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\t`{@const ${expression} = ${current_expression}}\\n${indent}`\n\t\t\t\t\t);\n\t\t\t\t\tneeds_derived = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needs_derived) {\n\t\t\t\tif (state.derived_components.has(current_expression)) {\n\t\t\t\t\texpression = /** @type {string} */ (state.derived_components.get(current_expression));\n\t\t\t\t} else {\n\t\t\t\t\tstate.derived_components.set(current_expression, expression);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstate.str.overwrite(node.start + 1, node.start + node.name.length + 1, expression);\n\n\t\tif (state.str.original.substring(node.end - node.name.length - 1, node.end - 1) === node.name) {\n\t\t\tstate.str.overwrite(node.end - node.name.length - 1, node.end - 1, expression);\n\t\t}\n\t\tlet this_pos = state.str.original.lastIndexOf('this', node.expression.start);\n\t\twhile (!state.str.original.charAt(this_pos - 1).trim()) this_pos--;\n\t\tconst end_pos = state.str.original.indexOf('}', node.expression.end) + 1;\n\t\tstate.str.remove(this_pos, end_pos);\n\t},\n\tSvelteFragment(node, { state, path, next }) {\n\t\tmigrate_slot_usage(node, path, state);\n\t\tnext();\n\t},\n\tSvelteWindow(node, { state, next }) {\n\t\thandle_events(node, state);\n\t\tnext();\n\t},\n\tSvelteBody(node, { state, next }) {\n\t\thandle_events(node, state);\n\t\tnext();\n\t},\n\tSvelteDocument(node, { state, next }) {\n\t\thandle_events(node, state);\n\t\tnext();\n\t},\n\tSlotElement(node, { state, path, next, visit }) {\n\t\tmigrate_slot_usage(node, path, state);\n\n\t\tif (state.analysis.custom_element) return;\n\t\tlet name = 'children';\n\t\tlet slot_name = 'default';\n\t\tlet slot_props = '{ ';\n\t\tlet aliased_slot_name;\n\n\t\tfor (const attr of node.attributes) {\n\t\t\tif (attr.type === 'SpreadAttribute') {\n\t\t\t\tslot_props += `...${state.str.original.substring(/** @type {number} */ (attr.expression.start), attr.expression.end)}, `;\n\t\t\t} else if (attr.type === 'Attribute') {\n\t\t\t\tif (attr.name === 'slot') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (attr.name === 'name') {\n\t\t\t\t\tslot_name = /** @type {any} */ (attr.value)[0].data;\n\t\t\t\t\t// if some of the parents or this node itself har a slot\n\t\t\t\t\t// attribute with the sane name of this slot\n\t\t\t\t\t// we want to create a derived or the migrated snippet\n\t\t\t\t\t// will shadow the slot prop\n\t\t\t\t\tif (\n\t\t\t\t\t\tpath.some(\n\t\t\t\t\t\t\t(parent) =>\n\t\t\t\t\t\t\t\t(parent.type === 'RegularElement' ||\n\t\t\t\t\t\t\t\t\tparent.type === 'SvelteElement' ||\n\t\t\t\t\t\t\t\t\tparent.type === 'Component' ||\n\t\t\t\t\t\t\t\t\tparent.type === 'SvelteComponent' ||\n\t\t\t\t\t\t\t\t\tparent.type === 'SvelteFragment') &&\n\t\t\t\t\t\t\t\tparent.attributes.some(\n\t\t\t\t\t\t\t\t\t(attribute) =>\n\t\t\t\t\t\t\t\t\t\tattribute.type === 'Attribute' &&\n\t\t\t\t\t\t\t\t\t\tattribute.name === 'slot' &&\n\t\t\t\t\t\t\t\t\t\tis_text_attribute(attribute) &&\n\t\t\t\t\t\t\t\t\t\tattribute.value[0].data === slot_name\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) ||\n\t\t\t\t\t\tnode.attributes.some(\n\t\t\t\t\t\t\t(attribute) =>\n\t\t\t\t\t\t\t\tattribute.type === 'Attribute' &&\n\t\t\t\t\t\t\t\tattribute.name === 'slot' &&\n\t\t\t\t\t\t\t\tis_text_attribute(attribute) &&\n\t\t\t\t\t\t\t\tattribute.value[0].data === slot_name\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\taliased_slot_name = `${slot_name}_render`;\n\t\t\t\t\t\tstate.derived_conflicting_slots.set(aliased_slot_name, slot_name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst attr_value =\n\t\t\t\t\t\tattr.value === true || Array.isArray(attr.value) ? attr.value : [attr.value];\n\t\t\t\t\tlet value = 'true';\n\t\t\t\t\tif (attr_value !== true) {\n\t\t\t\t\t\tconst first = attr_value[0];\n\t\t\t\t\t\tconst last = attr_value[attr_value.length - 1];\n\t\t\t\t\t\tfor (const attr of attr_value) {\n\t\t\t\t\t\t\tvisit(attr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue = state.str\n\t\t\t\t\t\t\t.snip(\n\t\t\t\t\t\t\t\tfirst.type === 'Text'\n\t\t\t\t\t\t\t\t\t? first.start - 1\n\t\t\t\t\t\t\t\t\t: /** @type {number} */ (first.expression.start),\n\t\t\t\t\t\t\t\tlast.type === 'Text' ? last.end + 1 : /** @type {number} */ (last.expression.end)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toString();\n\t\t\t\t\t}\n\t\t\t\t\tslot_props += value === attr.name ? `${value}, ` : `${attr.name}: ${value}, `;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tslot_props += '}';\n\t\tif (slot_props === '{ }') {\n\t\t\tslot_props = '';\n\t\t}\n\n\t\tconst existing_prop = state.props.find((prop) => prop.slot_name === slot_name);\n\t\tif (existing_prop) {\n\t\t\tname = existing_prop.local;\n\t\t} else if (slot_name !== 'default') {\n\t\t\tname = state.scope.generate(slot_name);\n\t\t\tif (name !== slot_name) {\n\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t`This migration would change the name of a slot (${slot_name} to ${name}) making the component unusable`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (!existing_prop) {\n\t\t\tstate.props.push({\n\t\t\t\tlocal: name,\n\t\t\t\texported: name,\n\t\t\t\tinit: '',\n\t\t\t\tbindable: false,\n\t\t\t\toptional: true,\n\t\t\t\tslot_name,\n\t\t\t\ttype: `import('svelte').${slot_props ? 'Snippet<[any]>' : 'Snippet'}`\n\t\t\t});\n\t\t} else if (existing_prop.needs_refine_type) {\n\t\t\texisting_prop.type = `import('svelte').${slot_props ? 'Snippet<[any]>' : 'Snippet'}`;\n\t\t\texisting_prop.needs_refine_type = false;\n\t\t}\n\n\t\tif (\n\t\t\tslot_name === 'default' &&\n\t\t\tpath.some(\n\t\t\t\t(parent) =>\n\t\t\t\t\t(parent.type === 'SvelteComponent' ||\n\t\t\t\t\t\tparent.type === 'Component' ||\n\t\t\t\t\t\tparent.type === 'RegularElement' ||\n\t\t\t\t\t\tparent.type === 'SvelteElement' ||\n\t\t\t\t\t\tparent.type === 'SvelteFragment') &&\n\t\t\t\t\tparent.attributes.some((attr) => attr.type === 'LetDirective')\n\t\t\t)\n\t\t) {\n\t\t\taliased_slot_name = `${name}_render`;\n\t\t\tstate.derived_conflicting_slots.set(aliased_slot_name, name);\n\t\t}\n\t\tname = aliased_slot_name ?? name;\n\n\t\tif (node.fragment.nodes.length > 0) {\n\t\t\tnext();\n\t\t\tstate.str.update(\n\t\t\t\tnode.start,\n\t\t\t\tnode.fragment.nodes[0].start,\n\t\t\t\t`{#if ${name}}{@render ${state.analysis.uses_props ? `${state.names.props}.` : ''}${name}(${slot_props})}{:else}`\n\t\t\t);\n\t\t\tstate.str.update(node.fragment.nodes[node.fragment.nodes.length - 1].end, node.end, '{/if}');\n\t\t} else {\n\t\t\tstate.str.update(\n\t\t\t\tnode.start,\n\t\t\t\tnode.end,\n\t\t\t\t`{@render ${state.analysis.uses_props ? `${state.names.props}.` : ''}${name}?.(${slot_props})}`\n\t\t\t);\n\t\t}\n\t},\n\tComment(node, { state }) {\n\t\tconst migrated = migrate_svelte_ignore(node.data);\n\t\tif (migrated !== node.data) {\n\t\t\tstate.str.overwrite(node.start + '<!--'.length, node.end - '-->'.length, migrated);\n\t\t}\n\t},\n\tHtmlTag(node, { state, next }) {\n\t\ttrim_block(state, node.start, node.end);\n\t\tnext();\n\t},\n\tConstTag(node, { state, next }) {\n\t\ttrim_block(state, node.start, node.end);\n\t\tnext();\n\t},\n\tIfBlock(node, { state, next }) {\n\t\tconst start = node.start;\n\t\tconst end = state.str.original.indexOf('}', node.test.end) + 1;\n\t\ttrim_block(state, start, end);\n\t\tnext();\n\t},\n\tAwaitBlock(node, { state, next }) {\n\t\tconst start = node.start;\n\t\tconst end =\n\t\t\tstate.str.original.indexOf(\n\t\t\t\t'}',\n\t\t\t\tnode.pending !== null ? node.expression.end : node.value?.end\n\t\t\t) + 1;\n\t\ttrim_block(state, start, end);\n\t\tif (node.pending !== null) {\n\t\t\tconst start = state.str.original.lastIndexOf('{', node.value?.start);\n\t\t\tconst end = state.str.original.indexOf('}', node.value?.end) + 1;\n\t\t\ttrim_block(state, start, end);\n\t\t}\n\t\tif (node.catch !== null) {\n\t\t\tconst start = state.str.original.lastIndexOf('{', node.error?.start);\n\t\t\tconst end = state.str.original.indexOf('}', node.error?.end) + 1;\n\t\t\ttrim_block(state, start, end);\n\t\t}\n\t\tnext();\n\t},\n\tKeyBlock(node, { state, next }) {\n\t\tconst start = node.start;\n\t\tconst end = state.str.original.indexOf('}', node.expression.end) + 1;\n\t\ttrim_block(state, start, end);\n\t\tnext();\n\t}\n};\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement | AST.SvelteComponent | AST.Component | AST.SlotElement | AST.SvelteFragment} node\n * @param {AST.SvelteNode[]} path\n * @param {State} state\n */\nfunction migrate_slot_usage(node, path, state) {\n\tconst parent = path.at(-2);\n\t// Bail on custom element slot usage\n\tif (\n\t\tparent?.type !== 'Component' &&\n\t\tparent?.type !== 'SvelteComponent' &&\n\t\tnode.type !== 'Component' &&\n\t\tnode.type !== 'SvelteComponent'\n\t) {\n\t\treturn;\n\t}\n\n\tlet snippet_name = 'children';\n\tlet snippet_props = [];\n\n\t// if we stop the transform because the name is not correct we don't want to\n\t// remove the let directive and they could come before the name\n\tlet removal_queue = [];\n\n\tfor (let attribute of node.attributes) {\n\t\tif (\n\t\t\tattribute.type === 'Attribute' &&\n\t\t\tattribute.name === 'slot' &&\n\t\t\tis_text_attribute(attribute)\n\t\t) {\n\t\t\tsnippet_name = attribute.value[0].data;\n\t\t\t// the default slot in svelte 4 if what the children slot is for svelte 5\n\t\t\tif (snippet_name === 'default') {\n\t\t\t\tsnippet_name = 'children';\n\t\t\t}\n\t\t\tif (!regex_is_valid_identifier.test(snippet_name) || is_reserved(snippet_name)) {\n\t\t\t\thas_migration_task = true;\n\t\t\t\tstate.str.appendLeft(\n\t\t\t\t\tnode.start,\n\t\t\t\t\t`<!-- @migration-task: migrate this slot by hand, \\`${snippet_name}\\` is an invalid identifier -->\\n${state.indent}`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (parent?.type === 'Component' || parent?.type === 'SvelteComponent') {\n\t\t\t\tfor (let attribute of parent.attributes) {\n\t\t\t\t\tif (attribute.type === 'Attribute' || attribute.type === 'BindDirective') {\n\t\t\t\t\t\tif (attribute.name === snippet_name) {\n\t\t\t\t\t\t\tstate.str.appendLeft(\n\t\t\t\t\t\t\t\tnode.start,\n\t\t\t\t\t\t\t\t`<!-- @migration-task: migrate this slot by hand, \\`${snippet_name}\\` would shadow a prop on the parent component -->\\n${state.indent}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// flush the queue after we found the name\n\t\t\tfor (let remove_let of removal_queue) {\n\t\t\t\tremove_let();\n\t\t\t}\n\t\t\tstate.str.remove(attribute.start, attribute.end);\n\t\t}\n\t\tif (attribute.type === 'LetDirective') {\n\t\t\tsnippet_props.push(\n\t\t\t\tattribute.name +\n\t\t\t\t\t(attribute.expression\n\t\t\t\t\t\t? `: ${state.str.original.substring(/** @type {number} */ (attribute.expression.start), /** @type {number} */ (attribute.expression.end))}`\n\t\t\t\t\t\t: '')\n\t\t\t);\n\t\t\t// we just add to the queue to remove them after we found if we need to migrate or we bail\n\t\t\tremoval_queue.push(() => state.str.remove(attribute.start, attribute.end));\n\t\t}\n\t}\n\n\tif (removal_queue.length > 0) {\n\t\tfor (let remove_let of removal_queue) {\n\t\t\tremove_let();\n\t\t}\n\t}\n\n\tif (node.type === 'SvelteFragment' && node.fragment.nodes.length > 0) {\n\t\t// remove node itself, keep content\n\t\tstate.str.remove(node.start, node.fragment.nodes[0].start);\n\t\tstate.str.remove(node.fragment.nodes[node.fragment.nodes.length - 1].end, node.end);\n\t}\n\n\tconst props = snippet_props.length > 0 ? `{ ${snippet_props.join(', ')} }` : '';\n\n\tif (snippet_name === 'children' && node.type !== 'SvelteFragment') {\n\t\tif (snippet_props.length === 0) return; // nothing to do\n\n\t\tlet inner_start = 0;\n\t\tlet inner_end = 0;\n\t\tfor (let i = 0; i < node.fragment.nodes.length; i++) {\n\t\t\tconst inner = node.fragment.nodes[i];\n\t\t\tconst is_empty_text = inner.type === 'Text' && !inner.data.trim();\n\n\t\t\tif (\n\t\t\t\t(inner.type === 'RegularElement' ||\n\t\t\t\t\tinner.type === 'SvelteElement' ||\n\t\t\t\t\tinner.type === 'Component' ||\n\t\t\t\t\tinner.type === 'SvelteComponent' ||\n\t\t\t\t\tinner.type === 'SlotElement' ||\n\t\t\t\t\tinner.type === 'SvelteFragment') &&\n\t\t\t\tinner.attributes.some((attr) => attr.type === 'Attribute' && attr.name === 'slot')\n\t\t\t) {\n\t\t\t\tif (inner_start && !inner_end) {\n\t\t\t\t\t// End of default slot content\n\t\t\t\t\tinner_end = inner.start;\n\t\t\t\t}\n\t\t\t} else if (!inner_start && !is_empty_text) {\n\t\t\t\t// Start of default slot content\n\t\t\t\tinner_start = inner.start;\n\t\t\t} else if (inner_end && !is_empty_text) {\n\t\t\t\t// There was default slot content before, then some named slot content, now some default slot content again.\n\t\t\t\t// We're moving the last character back by one to avoid the closing {/snippet} tag inserted afterwards\n\t\t\t\t// to come before the opening {#snippet} tag of the named slot.\n\t\t\t\tstate.str.update(inner_end - 1, inner_end, '');\n\t\t\t\tstate.str.prependLeft(inner_end - 1, state.str.original[inner_end - 1]);\n\t\t\t\tstate.str.move(inner.start, inner.end, inner_end - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (!inner_end) {\n\t\t\tinner_end = node.fragment.nodes[node.fragment.nodes.length - 1].end;\n\t\t}\n\n\t\tstate.str.appendLeft(\n\t\t\tinner_start,\n\t\t\t`{#snippet ${snippet_name}(${props})}\\n${state.indent.repeat(path.length)}`\n\t\t);\n\t\tstate.str.indent(state.indent, {\n\t\t\texclude: [\n\t\t\t\t[0, inner_start],\n\t\t\t\t[inner_end, state.str.original.length]\n\t\t\t]\n\t\t});\n\t\tif (inner_end < node.fragment.nodes[node.fragment.nodes.length - 1].end) {\n\t\t\t// Named slots coming afterwards\n\t\t\tstate.str.prependLeft(inner_end, `{/snippet}\\n${state.indent.repeat(path.length)}`);\n\t\t} else {\n\t\t\t// No named slots coming afterwards\n\t\t\tstate.str.prependLeft(\n\t\t\t\tinner_end,\n\t\t\t\t`${state.indent.repeat(path.length)}{/snippet}\\n${state.indent.repeat(path.length - 1)}`\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// Named slot or `svelte:fragment`: wrap element itself in a snippet\n\t\tstate.str.prependLeft(\n\t\t\tnode.start,\n\t\t\t`{#snippet ${snippet_name}(${props})}\\n${state.indent.repeat(path.length - 2)}`\n\t\t);\n\t\tstate.str.indent(state.indent, {\n\t\t\texclude: [\n\t\t\t\t[0, node.start],\n\t\t\t\t[node.end, state.str.original.length]\n\t\t\t]\n\t\t});\n\t\tconst str = `\\n${state.indent.repeat(path.length - 2)}{/snippet}`;\n\n\t\tif (node.type === 'SlotElement') {\n\t\t\tstate.str.appendRight(node.end, str);\n\t\t} else {\n\t\t\tstate.str.appendLeft(node.end, str);\n\t\t}\n\t}\n}\n\n/**\n * @param {VariableDeclarator} declarator\n * @param {State} state\n * @param {AST.SvelteNode[]} path\n */\nfunction extract_type_and_comment(declarator, state, path) {\n\tconst str = state.str;\n\tconst parent = path.at(-1);\n\n\t// Try to find jsdoc above the declaration\n\tlet comment_node = /** @type {Node} */ (parent)?.leadingComments?.at(-1);\n\n\tconst comment_start = /** @type {any} */ (comment_node)?.start;\n\tconst comment_end = /** @type {any} */ (comment_node)?.end;\n\tlet comment = comment_node && str.original.substring(comment_start, comment_end);\n\tif (comment_node) {\n\t\tstr.update(comment_start, comment_end, '');\n\t}\n\n\t// Find trailing comments\n\tconst trailing_comment_node = /** @type {Node} */ (parent)?.trailingComments?.at(0);\n\tconst trailing_comment_start = /** @type {any} */ (trailing_comment_node)?.start;\n\tconst trailing_comment_end = /** @type {any} */ (trailing_comment_node)?.end;\n\tlet trailing_comment =\n\t\ttrailing_comment_node && str.original.substring(trailing_comment_start, trailing_comment_end);\n\n\tif (trailing_comment_node) {\n\t\tstr.update(trailing_comment_start, trailing_comment_end, '');\n\t}\n\n\tif (declarator.id.typeAnnotation) {\n\t\tstate.has_type_or_fallback = true;\n\t\tlet start = declarator.id.typeAnnotation.start + 1; // skip the colon\n\t\twhile (str.original[start] === ' ') {\n\t\t\tstart++;\n\t\t}\n\t\treturn {\n\t\t\ttype: str.original.substring(start, declarator.id.typeAnnotation.end),\n\t\t\tcomment,\n\t\t\ttrailing_comment\n\t\t};\n\t}\n\n\tlet cleaned_comment_arr = comment\n\t\t?.split('\\n')\n\t\t.map((line) =>\n\t\t\tline\n\t\t\t\t.trim()\n\t\t\t\t// replace `// ` for one liners\n\t\t\t\t.replace(/^\\/\\/\\s*/g, '')\n\t\t\t\t// replace `\\**` for the initial JSDoc\n\t\t\t\t.replace(/^\\/\\*\\*?\\s*/g, '')\n\t\t\t\t// migrate `*/` for the end of JSDoc\n\t\t\t\t.replace(/\\s*\\*\\/$/g, '')\n\t\t\t\t// remove any initial `* ` to clean the comment\n\t\t\t\t.replace(/^\\*\\s*/g, '')\n\t\t)\n\t\t.filter(Boolean);\n\tconst first_at_comment = cleaned_comment_arr?.findIndex((line) => line.startsWith('@'));\n\tlet cleaned_comment = cleaned_comment_arr\n\t\t?.slice(0, first_at_comment !== -1 ? first_at_comment : cleaned_comment_arr.length)\n\t\t.join('\\n');\n\n\tlet cleaned_comment_arr_trailing = trailing_comment\n\t\t?.split('\\n')\n\t\t.map((line) =>\n\t\t\tline\n\t\t\t\t.trim()\n\t\t\t\t// replace `// ` for one liners\n\t\t\t\t.replace(/^\\/\\/\\s*/g, '')\n\t\t\t\t// replace `\\**` for the initial JSDoc\n\t\t\t\t.replace(/^\\/\\*\\*?\\s*/g, '')\n\t\t\t\t// migrate `*/` for the end of JSDoc\n\t\t\t\t.replace(/\\s*\\*\\/$/g, '')\n\t\t\t\t// remove any initial `* ` to clean the comment\n\t\t\t\t.replace(/^\\*\\s*/g, '')\n\t\t)\n\t\t.filter(Boolean);\n\tconst first_at_comment_trailing = cleaned_comment_arr_trailing?.findIndex((line) =>\n\t\tline.startsWith('@')\n\t);\n\tlet cleaned_comment_trailing = cleaned_comment_arr_trailing\n\t\t?.slice(\n\t\t\t0,\n\t\t\tfirst_at_comment_trailing !== -1\n\t\t\t\t? first_at_comment_trailing\n\t\t\t\t: cleaned_comment_arr_trailing.length\n\t\t)\n\t\t.join('\\n');\n\n\t// try to find a comment with a type annotation, hinting at jsdoc\n\tif (parent?.type === 'ExportNamedDeclaration' && comment_node) {\n\t\tstate.has_type_or_fallback = true;\n\t\tconst match = /@type {(.+)}/.exec(comment_node.value);\n\t\tif (match) {\n\t\t\t// try to find JSDoc comments after a hyphen `-`\n\t\t\tconst jsdoc_comment = /@type {.+} (?:\\w+|\\[.*?\\]) - (.+)/.exec(comment_node.value);\n\t\t\tif (jsdoc_comment) {\n\t\t\t\tcleaned_comment += jsdoc_comment[1]?.trim();\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: match[1],\n\t\t\t\tcomment: cleaned_comment,\n\t\t\t\ttrailing_comment: cleaned_comment_trailing\n\t\t\t};\n\t\t}\n\t}\n\n\t// try to infer it from the init\n\tif (declarator.init?.type === 'Literal') {\n\t\tstate.has_type_or_fallback = true; // only assume type if it's trivial to infer - else someone would've added a type annotation\n\t\tconst type = typeof declarator.init.value;\n\t\tif (type === 'string' || type === 'number' || type === 'boolean') {\n\t\t\treturn {\n\t\t\t\ttype,\n\t\t\t\tcomment: state.uses_ts ? comment : cleaned_comment,\n\t\t\t\ttrailing_comment: state.uses_ts ? trailing_comment : cleaned_comment_trailing\n\t\t\t};\n\t\t}\n\t}\n\treturn {\n\t\ttype: 'any',\n\t\tcomment: state.uses_ts ? comment : cleaned_comment,\n\t\ttrailing_comment: state.uses_ts ? trailing_comment : cleaned_comment_trailing\n\t};\n}\n\n// Ensure modifiers are applied in the same order as Svelte 4\nconst modifier_order = [\n\t'preventDefault',\n\t'stopPropagation',\n\t'stopImmediatePropagation',\n\t'self',\n\t'trusted',\n\t'once'\n];\n\n/**\n * @param {AST.RegularElement | AST.SvelteElement | AST.SvelteWindow | AST.SvelteDocument | AST.SvelteBody} element\n * @param {State} state\n */\nfunction handle_events(element, state) {\n\t/** @type {Map<string, AST.OnDirective[]>} */\n\tconst handlers = new Map();\n\tfor (const attribute of element.attributes) {\n\t\tif (attribute.type !== 'OnDirective') continue;\n\n\t\tlet name = `on${attribute.name}`;\n\t\tif (attribute.modifiers.includes('capture')) {\n\t\t\tname += 'capture';\n\t\t}\n\n\t\tconst nodes = handlers.get(name) || [];\n\t\tnodes.push(attribute);\n\t\thandlers.set(name, nodes);\n\t}\n\n\tfor (const [name, nodes] of handlers) {\n\t\tconst handlers = [];\n\n\t\tlet first = null;\n\n\t\tfor (const node of nodes) {\n\t\t\t/** @type {string} */\n\t\t\tlet body;\n\n\t\t\tif (node.expression) {\n\t\t\t\tbody = state.str.original.substring(\n\t\t\t\t\t/** @type {number} */ (node.expression.start),\n\t\t\t\t\t/** @type {number} */ (node.expression.end)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tbody = `${state.names.bubble}('${node.name}')`;\n\t\t\t\tstate.legacy_imports.add('createBubbler');\n\t\t\t\tstate.script_insertions.add(\n\t\t\t\t\t`const ${state.names.bubble} = ${state.names.createBubbler}();`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst has_passive = node.modifiers.includes('passive');\n\t\t\tconst has_nonpassive = node.modifiers.includes('nonpassive');\n\n\t\t\tconst modifiers = modifier_order.filter((modifier) => node.modifiers.includes(modifier));\n\n\t\t\tfor (const modifier of modifiers) {\n\t\t\t\tstate.legacy_imports.add(modifier);\n\t\t\t\tbody = `${state.names[modifier]}(${body})`;\n\t\t\t}\n\n\t\t\tif (has_passive || has_nonpassive) {\n\t\t\t\tconst action = has_passive ? 'passive' : 'nonpassive';\n\t\t\t\tstate.legacy_imports.add(action);\n\n\t\t\t\tstate.str.overwrite(\n\t\t\t\t\tnode.start,\n\t\t\t\t\tnode.end,\n\t\t\t\t\t`use:${state.names[action]}={['${node.name}', () => ${body}]}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (first) {\n\t\t\t\t\tlet start = node.start;\n\t\t\t\t\tlet end = node.end;\n\n\t\t\t\t\twhile (/[\\s\\n]/.test(state.str.original[start - 1])) start -= 1;\n\t\t\t\t\tstate.str.remove(start, end);\n\t\t\t\t} else {\n\t\t\t\t\tfirst = node;\n\t\t\t\t}\n\n\t\t\t\thandlers.push(body);\n\t\t\t}\n\t\t}\n\n\t\tif (first) {\n\t\t\t/** @type {string} */\n\t\t\tlet replacement;\n\n\t\t\tif (handlers.length > 1) {\n\t\t\t\tstate.legacy_imports.add('handlers');\n\t\t\t\treplacement = `${name}={${state.names.handlers}(${handlers.join(', ')})}`;\n\t\t\t} else {\n\t\t\t\tconst handler = handlers[0];\n\t\t\t\treplacement = handler === name ? `{${handler}}` : `${name}={${handler}}`;\n\t\t\t}\n\n\t\t\tstate.str.overwrite(first.start, first.end, replacement);\n\t\t}\n\t}\n}\n\n/**\n * Returns start and end of the node. If the start is preceeded with white-space-only before a line break,\n * the start will be the start of the line.\n * @param {string} source\n * @param {LabeledStatement} node\n */\nfunction get_node_range(source, node) {\n\tconst first_leading_comment = node.leadingComments?.[0];\n\tconst last_trailing_comment = node.trailingComments?.[node.trailingComments.length - 1];\n\n\t// @ts-expect-error the type of `Comment` seems to be wrong...the node actually contains\n\t// start and end but the type seems to only contain a `range` (which doesn't actually exists)\n\tlet start = /** @type {number} */ (first_leading_comment?.start ?? node.start);\n\t// @ts-expect-error the type of `Comment` seems to be wrong...the node actually contains\n\t// start and end but the type seems to only contain a `range` (which doesn't actually exists)\n\tlet end = /** @type {number} */ (last_trailing_comment?.end ?? node.end);\n\n\tlet idx = start;\n\twhile (source[idx - 1] !== '\\n' && source[idx - 1] !== '\\r') {\n\t\tidx--;\n\t\tif (source[idx] !== ' ' && source[idx] !== '\\t') {\n\t\t\tidx = start;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tstart = idx;\n\n\treturn { start, end };\n}\n\n/**\n * @param {Identifier} node\n * @param {State} state\n * @param {any[]} path\n */\nfunction handle_identifier(node, state, path) {\n\tconst parent = path.at(-1);\n\tif (parent?.type === 'MemberExpression' && parent.property === node) return;\n\n\tif (state.analysis.uses_props && node.name !== '$$slots') {\n\t\tif (node.name === '$$props' || node.name === '$$restProps') {\n\t\t\t// not 100% correct for $$restProps but it'll do\n\t\t\tstate.str.update(\n\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\t/** @type {number} */ (node.end),\n\t\t\t\tstate.names.props\n\t\t\t);\n\t\t} else {\n\t\t\tconst binding = state.scope.get(node.name);\n\t\t\tif (binding?.kind === 'bindable_prop' && binding.node !== node) {\n\t\t\t\tstate.str.prependLeft(/** @type {number} */ (node.start), `${state.names.props}.`);\n\t\t\t}\n\t\t}\n\t} else if (node.name === '$$restProps' && state.analysis.uses_rest_props) {\n\t\tstate.str.update(\n\t\t\t/** @type {number} */ (node.start),\n\t\t\t/** @type {number} */ (node.end),\n\t\t\tstate.names.rest\n\t\t);\n\t} else if (node.name === '$$slots' && state.analysis.uses_slots) {\n\t\tif (parent?.type === 'MemberExpression') {\n\t\t\tif (state.analysis.custom_element) return;\n\n\t\t\tlet name = parent.property.type === 'Literal' ? parent.property.value : parent.property.name;\n\t\t\tlet slot_name = name;\n\t\t\tconst existing_prop = state.props.find((prop) => prop.slot_name === name);\n\t\t\tif (existing_prop) {\n\t\t\t\tname = existing_prop.local;\n\t\t\t} else if (name !== 'default') {\n\t\t\t\tlet new_name = state.scope.generate(name);\n\t\t\t\tif (new_name !== name) {\n\t\t\t\t\tthrow new MigrationError(\n\t\t\t\t\t\t`This migration would change the name of a slot (${name} to ${new_name}) making the component unusable`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tname = name === 'default' ? 'children' : name;\n\n\t\t\tif (!existing_prop) {\n\t\t\t\tstate.props.push({\n\t\t\t\t\tlocal: name,\n\t\t\t\t\texported: name,\n\t\t\t\t\tinit: '',\n\t\t\t\t\tbindable: false,\n\t\t\t\t\toptional: true,\n\t\t\t\t\tslot_name,\n\t\t\t\t\t// if it's the first time we encounter this slot\n\t\t\t\t\t// we start with any and delegate to when the slot\n\t\t\t\t\t// is actually rendered (it might not happen in that case)\n\t\t\t\t\t// any is still a safe bet\n\t\t\t\t\ttype: `import('svelte').Snippet<[any]>`,\n\t\t\t\t\tneeds_refine_type: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstate.str.update(\n\t\t\t\t/** @type {number} */ (node.start),\n\t\t\t\tparent.property.start,\n\t\t\t\tstate.analysis.uses_props ? `${state.names.props}.` : ''\n\t\t\t);\n\t\t\tstate.str.update(parent.property.start, parent.end, name);\n\t\t}\n\t\t// else passed as identifier, we don't know what to do here, so let it error\n\t} else if (\n\t\tparent?.type === 'TSInterfaceDeclaration' ||\n\t\tparent?.type === 'TSTypeAliasDeclaration'\n\t) {\n\t\tconst members =\n\t\t\tparent.type === 'TSInterfaceDeclaration' ? parent.body.body : parent.typeAnnotation?.members;\n\t\tif (Array.isArray(members)) {\n\t\t\tif (node.name === '$$Props') {\n\t\t\t\tstate.has_type_or_fallback = true;\n\n\t\t\t\tfor (const member of members) {\n\t\t\t\t\tconst prop = state.props.find((prop) => prop.exported === member.key.name);\n\n\t\t\t\t\tconst type = state.str.original.substring(\n\t\t\t\t\t\tmember.typeAnnotation.typeAnnotation.start,\n\t\t\t\t\t\tmember.typeAnnotation.typeAnnotation.end\n\t\t\t\t\t);\n\n\t\t\t\t\tlet comment;\n\t\t\t\t\tconst comment_node = member.leadingComments?.at(-1);\n\t\t\t\t\tif (comment_node?.type === 'Block') {\n\t\t\t\t\t\tcomment = state.str.original.substring(comment_node.start, comment_node.end);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst trailing_comment = member.trailingComments?.at(0)?.value;\n\n\t\t\t\t\tif (prop) {\n\t\t\t\t\t\tprop.type = type;\n\t\t\t\t\t\tprop.optional = member.optional;\n\t\t\t\t\t\tprop.comment = comment ?? prop.comment;\n\t\t\t\t\t\tprop.trailing_comment = trailing_comment ?? prop.trailing_comment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.props.push({\n\t\t\t\t\t\t\tlocal: member.key.name,\n\t\t\t\t\t\t\texported: member.key.name,\n\t\t\t\t\t\t\tinit: '',\n\t\t\t\t\t\t\tbindable: false,\n\t\t\t\t\t\t\toptional: member.optional,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tcomment,\n\t\t\t\t\t\t\ttrailing_comment,\n\t\t\t\t\t\t\ttype_only: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.str.remove(parent.start, parent.end);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/** @param {string} content */\nfunction guess_indent(content) {\n\tconst lines = content.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn '\\t';\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst count = /^ +/.exec(current)?.[0].length ?? 0;\n\t\treturn Math.min(count, previous);\n\t}, Infinity);\n\n\treturn ' '.repeat(min);\n}\n", "/** @import { LegacyRoot } from './types/legacy-nodes.js' */\n/** @import { CompileOptions, CompileResult, ValidatedCompileOptions, ModuleCompileOptions } from '#compiler' */\n/** @import { AST } from './public.js' */\nimport { walk as zimmerframe_walk } from 'zimmerframe';\nimport { convert } from './legacy.js';\nimport { parse as parse_acorn } from './phases/1-parse/acorn.js';\nimport { parse as _parse } from './phases/1-parse/index.js';\nimport { remove_typescript_nodes } from './phases/1-parse/remove_typescript_nodes.js';\nimport { analyze_component, analyze_module } from './phases/2-analyze/index.js';\nimport { transform_component, transform_module } from './phases/3-transform/index.js';\nimport { validate_component_options, validate_module_options } from './validate-options.js';\nimport * as state from './state.js';\nexport { default as preprocess } from './preprocess/index.js';\n\n/**\n * `compile` converts your `.svelte` source code into a JavaScript module that exports a component\n *\n * @param {string} source The component source code\n * @param {CompileOptions} options The compiler options\n * @returns {CompileResult}\n */\nexport function compile(source, options) {\n\tsource = remove_bom(source);\n\tstate.reset_warning_filter(options.warningFilter);\n\tconst validated = validate_component_options(options, '');\n\tstate.reset(source, validated);\n\n\tlet parsed = _parse(source);\n\n\tconst { customElement: customElementOptions, ...parsed_options } = parsed.options || {};\n\n\t/** @type {ValidatedCompileOptions} */\n\tconst combined_options = {\n\t\t...validated,\n\t\t...parsed_options,\n\t\tcustomElementOptions\n\t};\n\n\tif (parsed.metadata.ts) {\n\t\tparsed = {\n\t\t\t...parsed,\n\t\t\tfragment: parsed.fragment && remove_typescript_nodes(parsed.fragment),\n\t\t\tinstance: parsed.instance && remove_typescript_nodes(parsed.instance),\n\t\t\tmodule: parsed.module && remove_typescript_nodes(parsed.module)\n\t\t};\n\t}\n\n\tconst analysis = analyze_component(parsed, source, combined_options);\n\tconst result = transform_component(analysis, source, combined_options);\n\tresult.ast = to_public_ast(source, parsed, options.modernAst);\n\treturn result;\n}\n\n/**\n * `compileModule` takes your JavaScript source code containing runes, and turns it into a JavaScript module.\n *\n * @param {string} source The component source code\n * @param {ModuleCompileOptions} options\n * @returns {CompileResult}\n */\nexport function compileModule(source, options) {\n\tsource = remove_bom(source);\n\tstate.reset_warning_filter(options.warningFilter);\n\tconst validated = validate_module_options(options, '');\n\tstate.reset(source, validated);\n\n\tconst analysis = analyze_module(parse_acorn(source, false), validated);\n\treturn transform_module(analysis, source, validated);\n}\n\n/**\n * The parse function parses a component, returning only its abstract syntax tree.\n *\n * The `modern` option (`false` by default in Svelte 5) makes the parser return a modern AST instead of the legacy AST.\n * `modern` will become `true` by default in Svelte 6, and the option will be removed in Svelte 7.\n *\n * @overload\n * @param {string} source\n * @param {{ filename?: string; modern: true; loose?: boolean }} options\n * @returns {AST.Root}\n */\n\n/**\n * The parse function parses a component, returning only its abstract syntax tree.\n *\n * The `modern` option (`false` by default in Svelte 5) makes the parser return a modern AST instead of the legacy AST.\n * `modern` will become `true` by default in Svelte 6, and the option will be removed in Svelte 7.\n *\n * @overload\n * @param {string} source\n * @param {{ filename?: string; modern?: false; loose?: boolean }} [options]\n * @returns {Record<string, any>}\n */\n\n/**\n * The parse function parses a component, returning only its abstract syntax tree.\n *\n * The `modern` option (`false` by default in Svelte 5) makes the parser return a modern AST instead of the legacy AST.\n * `modern` will become `true` by default in Svelte 6, and the option will be removed in Svelte 7.\n *\n * The `loose` option, available since 5.13.0, tries to always return an AST even if the input will not successfully compile.\n *\n * @param {string} source\n * @param {{ filename?: string; rootDir?: string; modern?: boolean; loose?: boolean }} [options]\n * @returns {AST.Root | LegacyRoot}\n */\nexport function parse(source, { filename, rootDir, modern, loose } = {}) {\n\tsource = remove_bom(source);\n\tstate.reset_warning_filter(() => false);\n\tstate.reset(source, { filename: filename ?? '(unknown)', rootDir });\n\n\tconst ast = _parse(source, loose);\n\treturn to_public_ast(source, ast, modern);\n}\n\n/**\n * @param {string} source\n * @param {AST.Root} ast\n * @param {boolean | undefined} modern\n */\nfunction to_public_ast(source, ast, modern) {\n\tif (modern) {\n\t\tconst clean = (/** @type {any} */ node) => {\n\t\t\tdelete node.metadata;\n\t\t};\n\n\t\tast.options?.attributes.forEach((attribute) => {\n\t\t\tclean(attribute);\n\t\t\tclean(attribute.value);\n\t\t\tif (Array.isArray(attribute.value)) {\n\t\t\t\tattribute.value.forEach(clean);\n\t\t\t}\n\t\t});\n\n\t\t// remove things that we don't want to treat as public API\n\t\treturn zimmerframe_walk(ast, null, {\n\t\t\t_(node, { next }) {\n\t\t\t\tclean(node);\n\t\t\t\tnext();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn convert(source, ast);\n}\n\n/**\n * Remove the byte order mark from a string if it's present since it would mess with our template generation logic\n * @param {string} source\n */\nfunction remove_bom(source) {\n\tif (source.charCodeAt(0) === 0xfeff) {\n\t\treturn source.slice(1);\n\t}\n\treturn source;\n}\n\n/**\n * @deprecated Replace this with `import { walk } from 'estree-walker'`\n * @returns {never}\n */\nexport function walk() {\n\tthrow new Error(\n\t\t`'svelte/compiler' no longer exports a \\`walk\\` utility — please import it directly from 'estree-walker' instead`\n\t);\n}\n\nexport { VERSION } from '../version.js';\nexport { migrate } from './migrate/index.js';\n"],
  "mappings": "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AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa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",
  "names": ["set", "i", "next", "_a", "codes", "source", "_a", "sequence", "element", "codes", "text", "match", "source", "next", "node", "_a", "start", "tag", "source", "block", "next", "comment", "list", "prop", "open", "string", "template", "close", "char", "init", "declaration", "id", "object", "key", "async", "update", "source", "object", "prop", "element", "next", "source", "close", "block", "next", "element", "type", "current", "start", "spread", "name", "read_attribute_value", "modifiers", "_a", "index", "template", "block", "template", "end", "context", "key", "id", "init", "_a", "tag", "name", "prop", "Parser", "template", "code", "_a", "parse", "_a", "next", "element", "_a", "id", "_a", "binary", "logical", "unary", "values", "e", "binding", "id", "scope", "state", "next", "SvelteFragment", "Component", "parent", "declarator", "node", "object", "_a", "w", "UNKNOWN", "set", "_a", "node", "context", "declaration", "child", "element", "_a", "is_global", "rest", "selector", "seen", "node", "fragment", "key", "visitors", "_a", "text", "id", "object", "parent", "_a", "element", "event_name", "binding", "_a", "_b", "object", "parent", "id", "key", "i", "_a", "_a", "_a", "_a", "_a", "id", "_a", "declarator", "id", "node", "declaration", "_a", "id", "quasi", "value", "init", "update", "get", "set", "seen", "node", "object", "_a", "id", "node", "next", "_a", "i", "parent", "source", "node", "parent", "id", "object", "_a", "roles_map", "_a", "get_static_value", "name", "a11y_distracting_elements", "value", "sequence", "role", "prop", "node", "next", "element", "list", "_a", "_a", "node", "_a", "_a", "valid", "node", "is_ignored", "id", "object", "_a", "init", "visitors", "next", "filename", "source", "_a", "template", "declaration", "init", "scope", "declarator", "node", "id", "binding", "scopes", "type", "assignment", "array", "string", "source", "filename", "remapping", "source", "visitors", "next", "is_in_global_block", "i", "_a", "build_assignment", "_a", "value", "assignment", "sequence", "AssignmentExpression", "object", "sequence", "quasi", "template", "build_getter", "AwaitBlock", "_a", "declaration", "id", "node", "tag", "first", "next", "text", "new_namespace", "RegularElement", "arg", "CallExpression", "ClassBody", "_a", "init", "member", "node", "prop", "value", "get", "set", "block", "Component", "ConstTag", "declaration", "id", "init", "DebugTag", "EachBlock", "open", "ExpressionStatement", "node", "HtmlTag", "Identifier", "build_getter", "IfBlock", "KeyBlock", "LabeledStatement", "MemberExpression", "element", "object", "hash", "expression", "RegularElement", "node", "id", "RenderTag", "SlotElement", "SnippetBlock", "SpreadAttribute", "SvelteComponent", "SvelteElement", "tag", "SvelteFragment", "SvelteHead", "block", "SvelteSelf", "TitleElement", "template", "UpdateExpression", "_a", "_a", "declarator", "init", "id", "node", "context", "binding", "prop", "value", "SvelteBoundary", "AssignmentExpression", "CallExpression", "ClassBody", "ExpressionStatement", "Identifier", "LabeledStatement", "MemberExpression", "UpdateExpression", "AwaitBlock", "Component", "ConstTag", "DebugTag", "EachBlock", "HtmlTag", "IfBlock", "KeyBlock", "RegularElement", "RenderTag", "SlotElement", "SnippetBlock", "SpreadAttribute", "SvelteComponent", "SvelteElement", "SvelteFragment", "SvelteHead", "SvelteSelf", "TitleElement", "SvelteBoundary", "template", "id", "rest", "hash", "visit_function", "ArrowFunctionExpression", "visit_function", "AssignmentExpression", "build_assignment", "object", "element", "attribute", "tag", "id", "call", "Attribute", "_a", "call", "AwaitBlock", "block", "id", "process_children", "sequence", "id", "update", "is_static_element", "RegularElement", "build_attribute_value", "get_attribute_name", "value", "metadata", "update", "node", "process_children", "element", "call", "assignment", "id", "element", "build_attribute_value", "value", "id", "call", "update", "get_attribute_name", "next", "BindDirective", "_a", "get", "set", "call", "build_attribute_value", "call", "CallExpression", "ClassBody", "_a", "init", "member", "_a", "prop", "id", "build_attribute_value", "value", "object", "get", "set", "assignment", "fn", "block", "node", "Component", "component", "ConstTag", "declaration", "node", "DebugTag", "object", "call", "EachBlock", "_a", "id", "object", "block", "array", "node", "sequence", "seen", "ExportNamedDeclaration", "ExpressionStatement", "Fragment", "close", "node", "template_name", "call", "element", "id", "process_children", "quasi", "template", "e", "FunctionDeclaration", "_a", "FunctionExpression", "visit_function", "HtmlTag", "is_svg", "is_mathml", "Identifier", "IfBlock", "ImportDeclaration", "KeyBlock", "key", "LabeledStatement", "sequence", "LetDirective", "node", "MemberExpression", "OnDirective", "id", "_", "key", "RenderTag", "thunk", "id", "SlotElement", "build_attribute_value", "value", "SnippetBlock", "_a", "declaration", "SpreadAttribute", "id", "SvelteBody", "SvelteComponent", "SvelteDocument", "SvelteElement", "build_attribute_value", "SvelteFragment", "SvelteBoundary", "init", "block", "SvelteHead", "SvelteSelf", "SvelteWindow", "TitleElement", "TransitionDirective", "UpdateExpression", "object", "update", "UseDirective", "VariableDeclaration", "_a", "declarator", "init", "seen", "args", "key", "id", "value", "binding", "create_state_declarators", "visitors", "set_scope", "next", "ArrowFunctionExpression", "AssignmentExpression", "Attribute", "AwaitBlock", "BindDirective", "CallExpression", "ClassBody", "Component", "ConstTag", "DebugTag", "EachBlock", "ExportNamedDeclaration", "ExpressionStatement", "Fragment", "FunctionDeclaration", "FunctionExpression", "HtmlTag", "Identifier", "IfBlock", "ImportDeclaration", "KeyBlock", "LabeledStatement", "LetDirective", "MemberExpression", "OnDirective", "RegularElement", "RenderTag", "SlotElement", "SnippetBlock", "SpreadAttribute", "SvelteBody", "SvelteComponent", "SvelteDocument", "SvelteElement", "SvelteFragment", "SvelteBoundary", "SvelteHead", "SvelteSelf", "SvelteWindow", "TitleElement", "TransitionDirective", "UpdateExpression", "UseDirective", "VariableDeclaration", "_a", "template", "key", "hash", "imports", "id", "prop_def", "source", "js", "throw_error", "object", "hash", "list", "validator", "key", "throw_error", "throw_error", "list", "input", "decode_mappings", "filename", "source", "replacements", "source", "filename", "key", "value", "string", "process", "preprocessor", "regex_style_tags", "_a", "is_global", "end", "source", "filename", "parse", "template", "prop", "id", "init", "e", "next", "declarator", "declaration", "assignment", "update", "labeled", "attr", "start", "attribute", "element", "handlers", "modifiers", "member", "source", "parse", "filename", "_a", "next", "walk"]
}
